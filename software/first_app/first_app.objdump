
first_app.elf:     file format elf32-littlenios2
first_app.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x020001b4

Program Header:
    LOAD off    0x00001000 vaddr 0x02000000 paddr 0x02000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x02000020 paddr 0x02000020 align 2**12
         filesz 0x00013f98 memsz 0x00013f98 flags r-x
    LOAD off    0x00014fb8 vaddr 0x02013fb8 paddr 0x02015ab0 align 2**12
         filesz 0x00001af8 memsz 0x00001af8 flags rw-
    LOAD off    0x000175a8 vaddr 0x020175a8 paddr 0x020175a8 align 2**12
         filesz 0x00000000 memsz 0x000003ec flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  02000000  02000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  02000020  02000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000135d8  020001b4  020001b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000082c  0201378c  0201378c  0001478c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af8  02013fb8  02015ab0  00014fb8  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000003ec  020175a8  020175a8  000175a8  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00016ab0  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00001178  00000000  00000000  00016ad8  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 00001a2a  00000000  00000000  00017c50  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00033908  00000000  00000000  0001967a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000b0d5  00000000  00000000  0004cf82  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001bf3e  00000000  00000000  00058057  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002228  00000000  00000000  00073f98  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00002e12  00000000  00000000  000761c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000124ca  00000000  00000000  00078fd2  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0008b49c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000ba0  00000000  00000000  0008b4b0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0008fae7  2**0
                  CONTENTS, READONLY
 18 .cpu          00000009  00000000  00000000  0008faea  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0008faf3  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0008faf4  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000009  00000000  00000000  0008faf5  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000009  00000000  00000000  0008fafe  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000009  00000000  00000000  0008fb07  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000010  00000000  00000000  0008fb10  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000019  00000000  00000000  0008fb20  2**0
                  CONTENTS, READONLY
 26 .sopcinfo     000391fc  00000000  00000000  0008fb39  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
02000000 l    d  .entry	00000000 .entry
02000020 l    d  .exceptions	00000000 .exceptions
020001b4 l    d  .text	00000000 .text
0201378c l    d  .rodata	00000000 .rodata
02013fb8 l    d  .rwdata	00000000 .rwdata
020175a8 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
020001ec l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
02000e48 l     F .text	00000058 std
02000f54 l     F .text	00000008 __fp_lock
02000f5c l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 impure.c
02013fb8 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
02002db4 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
02003198 l     F .text	00000058 __sprint_r
020138e4 l     O .rodata	00000010 blanks.3452
020138d4 l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 vfscanf.c
020138fc l     O .rodata	00000022 basefix.3357
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
02013a24 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
02006a84 l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
02015a3c l     O .rwdata	00000004 charset
02013bc4 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
02013d0c l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
0200a614 l     F .text	00000048 match
020147e0 l     O .rwdata	00000014 fpi.1950
02013d28 l     O .rodata	00000028 tinytens
020147cc l     O .rwdata	00000014 fpinan.1986
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0200cba4 l     F .text	00000024 htinit
0200cc30 l     F .text	000000b0 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0200d4dc l     F .text	0000004c L_shift
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
0200e76c l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0200f994 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
02010470 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
020104d0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
020105d4 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
020106f8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
020107d8 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
02010938 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
02010a44 l     F .text	000000f8 alt_file_locked
02010cc8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_read.c
02010e4c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
02015a58 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
02011104 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0201499c l     O .rwdata	00001060 jtag_uart
020159fc l     O .rwdata	00000028 altera_hostfs
020111f8 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
02011438 l     F .text	00000228 altera_avalon_jtag_uart_irq
02011660 l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_performance_counter.c
00000000 l    df *ABS*	00000000 altera_hostfs.c
02015a5c l     O .rwdata	00000004 hcinfo.2234
02015a68 l     O .rwdata	00000004 hcinfo.2276
02015a74 l     O .rwdata	00000004 hcinfo.2289
02015a80 l     O .rwdata	00000004 hcinfo.2311
02015a8c l     O .rwdata	00000004 hcinfo.2333
02015a98 l     O .rwdata	00000004 hcinfo.2368
00000000 l    df *ABS*	00000000 perf_print_formatted_report.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
020128c0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_fs_reg.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
02012fe4 l     F .text	000000d8 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
020134ec l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_exit.c
02013728 l     F .text	00000040 alt_sim_halt
02009060 g     F .text	00000094 _mprec_log10
0200914c g     F .text	00000088 __any_on
020087b8 g     F .text	00000070 _isatty_r
02013ce4 g     O .rodata	00000028 __mprec_tinytens
02010998 g     F .text	0000006c alt_main
02003098 g     F .text	0000008c strcpy
02002b3c g     F .text	000000a0 _puts_r
02017704 g     O .bss	00000100 alt_irq
02008918 g     F .text	00000078 _lseek_r
02015ab0 g       *ABS*	00000000 __flash_rwdata_start
0200827c g     F .text	000000a0 __sflags
0200f28c g     F .text	00000088 __eqdf2
02017994 g       *ABS*	00000000 __alt_heap_start
02002ac4 g     F .text	00000044 printf
02002ec4 g     F .text	00000068 __sseek
02000eb0 g     F .text	000000a4 __sinit
02011e44 g     F .text	00000024 alt_get_cpu_freq
02008878 g     F .text	00000084 _setlocale_r
02000fb0 g     F .text	0000009c __sfmoreglue
0200cac0 g     F .text	0000001c ungetc
02010a24 g     F .text	00000020 __malloc_unlock
02011e68 g     F .text	00000154 alt_hostfs_open
0200a65c g     F .text	000015cc _strtod_r
02008b74 g     F .text	000000e0 memmove
02012408 g     F .text	00000294 perf_print_formatted_report
02000fa0 g     F .text	00000010 _cleanup
020091d4 g     F .text	000000bc _Balloc
0200f39c g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
02000000 g     F .entry	0000000c __reset
02000020 g       *ABS*	00000000 __flash_exceptions_start
02001d38 g     F .text	00000074 _fstat_r
020175a8 g     O .bss	00000004 errno
02006760 g     F .text	00000024 __svfscanf
0200fcd0 g     F .text	0000002c __make_fp
020175c8 g     O .bss	00000004 alt_argv
0201da24 g       *ABS*	00000000 _gp
0201481c g     O .rwdata	00000180 alt_fd_list
02012150 g     F .text	000000a0 alt_hostfs_seek
020129e8 g     F .text	00000094 alt_find_dev
02002914 g     F .text	000000a0 memcpy
0200d528 g     F .text	00000248 __hexnan
02000f94 g     F .text	0000000c _cleanup_r
0200f5bc g     F .text	000000f8 __floatsidf
02012b9c g     F .text	00000090 alt_fs_reg
020130bc g     F .text	00000078 alt_io_redirect
0200f4ac g     F .text	00000088 __ltdf2
0201378c g       *ABS*	00000000 __DTOR_END__
02002bdc g     F .text	00000014 puts
02008a10 g     F .text	00000040 mbrtowc
02006784 g     F .text	00000068 _vfscanf_r
02008fb0 g     F .text	000000b0 __ratio
02011878 g     F .text	00000224 altera_avalon_jtag_uart_read
020021c0 g     F .text	00000014 malloc
02002b08 g     F .text	00000034 _printf_r
0200fad0 g     F .text	00000008 __udivsi3
02010634 g     F .text	000000c4 isatty
02008828 g     F .text	0000002c iswspace
02013bf4 g     O .rodata	000000c8 __mprec_tens
02008854 g     F .text	00000008 __locale_charset
0200d894 g     F .text	000000a4 __fixunsdfsi
020175ac g     O .bss	00000004 __malloc_top_pad
02011de0 g     F .text	00000040 perf_get_num_starts
0200c534 g     F .text	00000024 strtoul
02015a38 g     O .rwdata	00000004 __mb_cur_max
0200885c g     F .text	0000000c _localeconv_r
0200c558 g     F .text	000002f0 _strtoull_r
02009938 g     F .text	0000003c __i2b
0200831c g     F .text	0000049c __sfvwrite_r
02002dd0 g     F .text	00000070 _sbrk_r
02012010 g     F .text	000000a0 alt_hostfs_read
02009ce0 g     F .text	00000078 _read_r
020147c0 g     O .rwdata	0000000c __lc_ctype
02015a50 g     O .rwdata	00000004 alt_max_fd
02010010 g     F .text	00000138 __unpack_d
02000af4 g     F .text	00000110 _fclose_r
02000e14 g     F .text	00000034 fflush
020175b0 g     O .bss	00000004 __malloc_max_sbrked_mem
0200ebfc g     F .text	00000074 __adddf3
0200e604 g     F .text	00000078 __nesf2
02008e90 g     F .text	00000120 __b2d
0200dfa4 g     F .text	00000660 __umoddi3
02010844 g     F .text	000000f4 lseek
02015a28 g     O .rwdata	00000004 _global_impure_ptr
02009d58 g     F .text	000005f4 _realloc_r
02017994 g       *ABS*	00000000 __bss_end
02012eec g     F .text	000000f8 alt_iic_isr_register
020131cc g     F .text	0000010c alt_tick
02017604 g     O .bss	00000100 __hexdig
0200d938 g     F .text	0000066c __udivdi3
02013cbc g     O .rodata	00000028 __mprec_bigtens
02009bc0 g     F .text	00000120 __s2b
0200f800 g     F .text	00000194 __floatunsidf
02008db0 g     F .text	00000060 __mcmp
02015a34 g     O .rwdata	00000004 __ctype_ptr
02000f7c g     F .text	00000018 __fp_lock_all
02012ea4 g     F .text	00000048 alt_ic_irq_enabled
02013134 g     F .text	00000098 alt_alarm_stop
0200bfb8 g     F .text	00000024 strtol
020175d0 g     O .bss	00000004 alt_irq_active
02011fbc g     F .text	00000054 alt_hostfs_close
020000ec g     F .exceptions	000000c8 alt_irq_handler
020147f4 g     O .rwdata	00000028 alt_dev_null
0200fb60 g     F .text	000000c8 __unpack_f
020127f0 g     F .text	0000001c alt_dcache_flush_all
02008c7c g     F .text	00000070 __hi0bits
0200f6b4 g     F .text	000000d8 __fixdfsi
0200bd4c g     F .text	0000001c strtod
02015ab0 g       *ABS*	00000000 __ram_rwdata_end
02015a48 g     O .rwdata	00000008 alt_dev_list
02010fe0 g     F .text	00000124 write
0200e67c g     F .text	00000078 __gtsf2
02013fb8 g       *ABS*	00000000 __ram_rodata_end
020104fc g     F .text	000000d8 fstat
0200f534 g     F .text	00000088 __ledf2
02003008 g     F .text	00000090 strcat
02009aa0 g     F .text	00000120 __pow5mult
020175b8 g     O .bss	00000004 __nlocale_changed
0200fad8 g     F .text	00000008 __umodsi3
02002e40 g     F .text	00000034 _scanf_r
02017994 g       *ABS*	00000000 end
02010210 g     F .text	00000160 __pack_f
02001d14 g     F .text	00000024 fseek
02011378 g     F .text	000000c0 altera_avalon_jtag_uart_init
02013788 g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
0200fae0 g     F .text	00000080 __clzsi2
02011a9c g     F .text	00000240 altera_avalon_jtag_uart_write
02000ea0 g     F .text	00000004 __sfp_lock_acquire
02008a90 g     F .text	000000e4 memchr
020031f0 g     F .text	00001ec4 ___vfprintf_internal_r
0200a4f8 g     F .text	00000060 _sprintf_r
020015c4 g     F .text	00000314 _free_r
020134f0 g     F .text	000001b0 __call_exitprocs
020175bc g     O .bss	00000004 __mlocale_changed
02015a30 g     O .rwdata	00000004 __malloc_sbrk_base
020001b4 g     F .text	0000003c _start
020175d4 g     O .bss	00000004 _alt_tick_rate
0200bfdc g     F .text	00000318 _strtoll_r
020001f0 g     F .text	000000b4 generate_file_name
020136a0 g     F .text	00000088 __floatundidf
02009598 g     F .text	0000014c __lshift
020175d8 g     O .bss	00000004 _alt_nticks
02010d28 g     F .text	00000124 read
02011198 g     F .text	00000060 alt_sys_init
02002a4c g     F .text	00000078 _open_r
020133b8 g     F .text	00000134 __register_exitproc
020096e4 g     F .text	00000254 __multiply
02011710 g     F .text	00000074 altera_avalon_jtag_uart_close
02000abc g     F .text	00000038 __mulsi3
02013fb8 g       *ABS*	00000000 __ram_rwdata_start
0201378c g       *ABS*	00000000 __ram_rodata_start
020175dc g     O .bss	00000028 __malloc_current_mallinfo
02009290 g     F .text	0000017c __d2b
02011230 g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0200c2f4 g     F .text	00000240 _strtoul_r
02012c2c g     F .text	000000d0 alt_get_fd
02010148 g     F .text	000000c8 __fpcmp_parts_d
02006a14 g     F .text	00000070 _close_r
02011cdc g     F .text	000000b0 perf_get_section_time
02013344 g     F .text	00000074 memcmp
020112e0 g     F .text	00000048 altera_avalon_jtag_uart_close_fd
02017994 g       *ABS*	00000000 __alt_stack_base
02011328 g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
02001f2c g     F .text	000000ac _fwrite_r
020068d8 g     F .text	0000013c __swsetup_r
0200f034 g     F .text	00000258 __divdf3
0200104c g     F .text	000000f0 __sfp
020090f4 g     F .text	00000058 __copybits
02011d8c g     F .text	00000054 perf_get_total_time
020143b8 g     O .rwdata	00000408 __malloc_av_
02000eac g     F .text	00000004 __sinit_lock_release
0200ec70 g     F .text	000003c4 __muldf3
02002fa8 g     F .text	00000060 __sread
02001458 g     F .text	00000040 fread
02012a7c g     F .text	00000120 alt_find_file
0201280c g     F .text	000000b4 alt_dev_llist_insert
02010a04 g     F .text	00000020 __malloc_lock
02010f24 g     F .text	000000bc sbrk
02000c18 g     F .text	000001fc _fflush_r
0200cadc g     F .text	000000c8 _calloc_r
02001230 g     F .text	0000001c fopen
020175a8 g       *ABS*	00000000 __bss_start
020029b4 g     F .text	00000098 memset
020002a4 g     F .text	00000818 main
020175cc g     O .bss	00000004 alt_envp
020175b4 g     O .bss	00000004 __malloc_max_total_mem
02011288 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
0200e6f4 g     F .text	00000078 __ltsf2
0200124c g     F .text	0000020c _fread_r
02002ebc g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
02000c04 g     F .text	00000014 fclose
0200bd68 g     F .text	00000250 _strtol_r
0200f78c g     F .text	00000074 __truncdfsf2
02017804 g     O .bss	00000190 _atexit0
02006cc8 g     F .text	000015b4 _dtoa_r
020021d4 g     F .text	00000740 _malloc_r
02015a54 g     O .rwdata	00000004 alt_errno
0200c848 g     F .text	000000dc __submore
02001e74 g     F .text	000000b8 _fwalk
02008a50 g     F .text	00000040 _mbtowc_r
0200fa10 g     F .text	00000060 __divsi3
02013d6c g     O .rodata	00000014 __thenan_df
02001498 g     F .text	0000012c _malloc_trim_r
0201378c g       *ABS*	00000000 __CTOR_END__
0200a558 g     F .text	000000bc strcmp
0201378c g       *ABS*	00000000 __flash_rodata_start
0201378c g       *ABS*	00000000 __DTOR_LIST__
0200f314 g     F .text	00000088 __nedf2
02011164 g     F .text	00000034 alt_irq_init
02010eac g     F .text	00000078 alt_release_fd
0200a484 g     F .text	00000074 sprintf
02013d80 g     O .rodata	00000100 __clz_tab
020175c0 g     O .bss	00000004 _PathLocale
0200bc28 g     F .text	00000124 strtof
020132f8 g     F .text	00000014 atexit
02006860 g     F .text	00000078 _write_r
020088fc g     F .text	0000001c setlocale
02002e74 g     F .text	00000048 scanf
0200a47c g     F .text	00000008 nanf
02015a24 g     O .rwdata	00000004 _impure_ptr
020175c4 g     O .bss	00000004 alt_argc
02008990 g     F .text	00000080 _mbrtowc_r
02012984 g     F .text	00000064 _do_dtors
020018d8 g     F .text	0000043c _fseek_r
02002bf0 g     F .text	000001c4 __srefill_r
02000020 g       .exceptions	00000000 alt_irq_entry
02008e10 g     F .text	00000080 __ulp
0200a34c g     F .text	00000040 __isinfd
02000f64 g     F .text	00000018 __fp_unlock_all
02015a40 g     O .rwdata	00000008 alt_fs_list
020120b0 g     F .text	000000a0 alt_hostfs_write
02000020 g       *ABS*	00000000 __ram_exceptions_start
02008868 g     F .text	00000010 localeconv
02012d18 g     F .text	00000050 alt_ic_isr_register
02001fd8 g     F .text	00000040 fwrite
0200cbc8 g     F .text	00000068 __hexdig_init
02015ab0 g       *ABS*	00000000 _edata
02017994 g       *ABS*	00000000 _end
020001b4 g       *ABS*	00000000 __ram_exceptions_end
020067ec g     F .text	00000074 vfscanf
02011784 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
02012e04 g     F .text	000000a0 alt_ic_irq_disable
02002f2c g     F .text	0000007c __swrite
02015a2c g     O .rwdata	00000004 __malloc_trim_threshold
02011e20 g     F .text	00000024 alt_get_performance_counter_base
020132d8 g     F .text	00000020 altera_nios2_qsys_irq_init
0201330c g     F .text	00000038 exit
02001dac g     F .text	000000c8 _fwalk_reent
0200940c g     F .text	0000018c __mdiff
0200fa70 g     F .text	00000060 __modsi3
04000000 g       *ABS*	00000000 __alt_data_end
02000020 g     F .exceptions	00000000 alt_exception
02000ea4 g     F .text	00000004 __sfp_lock_release
02000000 g       *ABS*	00000000 __alt_mem_sdram
0200a3bc g     F .text	000000c0 __sccl
02013920 g     O .rodata	00000101 _ctype_
0200fc28 g     F .text	000000a8 __fpcmp_parts_f
0200113c g     F .text	000000f4 _fopen_r
02013768 g     F .text	00000020 _exit
0200a38c g     F .text	00000030 __isnand
0201269c g     F .text	00000154 alt_alarm_start
0200d770 g     F .text	00000124 __muldi3
02002018 g     F .text	00000194 __smakebuf_r
02003124 g     F .text	00000074 strlen
02010b3c g     F .text	0000018c open
0200f424 g     F .text	00000088 __gedf2
0200cce0 g     F .text	000007fc __gethex
02012cfc g     F .text	0000001c alt_icache_flush_all
02015aa4 g     O .rwdata	00000004 alt_priority_mask
02012d68 g     F .text	0000009c alt_ic_irq_enable
020050b4 g     F .text	00000024 __vfprintf_internal
0200eb7c g     F .text	00000080 __subdf3
02008cec g     F .text	000000c4 __lo0bits
020050d8 g     F .text	00001688 __svfscanf_r
02015aa8 g     O .rwdata	00000008 alt_alarm_list
0200c924 g     F .text	0000019c _ungetc_r
02012920 g     F .text	00000064 _do_ctors
02010370 g     F .text	00000100 close
02010758 g     F .text	00000080 alt_load
0200fcfc g     F .text	00000314 __pack_d
020021ac g     F .text	00000014 free
02000ea8 g     F .text	00000004 __sinit_lock_acquire
02009974 g     F .text	0000012c __multadd
02008c54 g     F .text	00000028 _Bfree
020121f0 g     F .text	00000218 alt_hostfs_fstat



Disassembly of section .entry:

02000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 2000000:	00408034 	movhi	at,512
    ori r1, r1, %lo(_start)
 2000004:	08406d14 	ori	at,at,436
    jmp r1
 2000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

02000020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
 2000020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
 2000024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
 2000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 200002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 2000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 2000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 2000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 200003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 2000040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
 2000044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
 2000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 200004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 2000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 2000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 2000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 200005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 2000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 2000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 2000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 200006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 2000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 2000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 2000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 200007c:	10000326 	beq	r2,zero,200008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 2000080:	20000226 	beq	r4,zero,200008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 2000084:	20000ec0 	call	20000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 2000088:	00000306 	br	2000098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 200008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 2000090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 2000094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 2000098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 200009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 20000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 20000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 20000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 20000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 20000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 20000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 20000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 20000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 20000c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
 20000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 20000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 20000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 20000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 20000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 20000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 20000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 20000e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
 20000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 20000e8:	ef80083a 	eret

020000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 20000ec:	defff904 	addi	sp,sp,-28
 20000f0:	dfc00615 	stw	ra,24(sp)
 20000f4:	df000515 	stw	fp,20(sp)
 20000f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 20000fc:	0005313a 	rdctl	r2,ipending
 2000100:	e0bffc15 	stw	r2,-16(fp)

  return active;
 2000104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 2000108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 200010c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 2000110:	00800044 	movi	r2,1
 2000114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 2000118:	e0ffff17 	ldw	r3,-4(fp)
 200011c:	e0bffe17 	ldw	r2,-8(fp)
 2000120:	1884703a 	and	r2,r3,r2
 2000124:	1005003a 	cmpeq	r2,r2,zero
 2000128:	1000161e 	bne	r2,zero,2000184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 200012c:	e0bffd17 	ldw	r2,-12(fp)
 2000130:	00c08074 	movhi	r3,513
 2000134:	18ddc104 	addi	r3,r3,30468
 2000138:	100490fa 	slli	r2,r2,3
 200013c:	10c5883a 	add	r2,r2,r3
 2000140:	11400017 	ldw	r5,0(r2)
 2000144:	e0bffd17 	ldw	r2,-12(fp)
 2000148:	00c08074 	movhi	r3,513
 200014c:	18ddc104 	addi	r3,r3,30468
 2000150:	100490fa 	slli	r2,r2,3
 2000154:	10c5883a 	add	r2,r2,r3
 2000158:	10800104 	addi	r2,r2,4
 200015c:	11000017 	ldw	r4,0(r2)
 2000160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 2000164:	0005313a 	rdctl	r2,ipending
 2000168:	e0bffb15 	stw	r2,-20(fp)

  return active;
 200016c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
 2000170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 2000174:	e0bfff17 	ldw	r2,-4(fp)
 2000178:	1004c03a 	cmpne	r2,r2,zero
 200017c:	103fe31e 	bne	r2,zero,200010c <alt_irq_handler+0x20>
 2000180:	00000706 	br	20001a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
 2000184:	e0bffe17 	ldw	r2,-8(fp)
 2000188:	1085883a 	add	r2,r2,r2
 200018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
 2000190:	e0bffd17 	ldw	r2,-12(fp)
 2000194:	10800044 	addi	r2,r2,1
 2000198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 200019c:	003fde06 	br	2000118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
 20001a0:	e037883a 	mov	sp,fp
 20001a4:	dfc00117 	ldw	ra,4(sp)
 20001a8:	df000017 	ldw	fp,0(sp)
 20001ac:	dec00204 	addi	sp,sp,8
 20001b0:	f800283a 	ret

Disassembly of section .text:

020001b4 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 20001b4:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
 20001b8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
 20001bc:	06808074 	movhi	gp,513
    ori gp, gp, %lo(_gp)
 20001c0:	d6b68914 	ori	gp,gp,55844
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 20001c4:	00808074 	movhi	r2,513
    ori r2, r2, %lo(__bss_start)
 20001c8:	109d6a14 	ori	r2,r2,30120

    movhi r3, %hi(__bss_end)
 20001cc:	00c08074 	movhi	r3,513
    ori r3, r3, %lo(__bss_end)
 20001d0:	18de6514 	ori	r3,r3,31124

    beq r2, r3, 1f
 20001d4:	10c00326 	beq	r2,r3,20001e4 <_start+0x30>

0:
    stw zero, (r2)
 20001d8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 20001dc:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 20001e0:	10fffd36 	bltu	r2,r3,20001d8 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 20001e4:	20107580 	call	2010758 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 20001e8:	20109980 	call	2010998 <alt_main>

020001ec <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 20001ec:	003fff06 	br	20001ec <alt_after_alt_main>

020001f0 <generate_file_name>:

#define FILTER_SIZE 7
#define FRACTION_BITS 6
#define PADDING_SIZE 3

void generate_file_name(char* file_name, const char *read_name) {
 20001f0:	defffc04 	addi	sp,sp,-16
 20001f4:	dfc00315 	stw	ra,12(sp)
 20001f8:	df000215 	stw	fp,8(sp)
 20001fc:	df000204 	addi	fp,sp,8
 2000200:	e13ffe15 	stw	r4,-8(fp)
 2000204:	e17fff15 	stw	r5,-4(fp)
	strcat(file_name, "/mnt/host/");
 2000208:	e13ffe17 	ldw	r4,-8(fp)
 200020c:	20031240 	call	2003124 <strlen>
 2000210:	1007883a 	mov	r3,r2
 2000214:	e0bffe17 	ldw	r2,-8(fp)
 2000218:	1885883a 	add	r2,r3,r2
 200021c:	1007883a 	mov	r3,r2
 2000220:	00800bc4 	movi	r2,47
 2000224:	18800005 	stb	r2,0(r3)
 2000228:	00801b44 	movi	r2,109
 200022c:	18800045 	stb	r2,1(r3)
 2000230:	00801b84 	movi	r2,110
 2000234:	18800085 	stb	r2,2(r3)
 2000238:	00801d04 	movi	r2,116
 200023c:	188000c5 	stb	r2,3(r3)
 2000240:	00800bc4 	movi	r2,47
 2000244:	18800105 	stb	r2,4(r3)
 2000248:	00801a04 	movi	r2,104
 200024c:	18800145 	stb	r2,5(r3)
 2000250:	00801bc4 	movi	r2,111
 2000254:	18800185 	stb	r2,6(r3)
 2000258:	00801cc4 	movi	r2,115
 200025c:	188001c5 	stb	r2,7(r3)
 2000260:	00801d04 	movi	r2,116
 2000264:	18800205 	stb	r2,8(r3)
 2000268:	00800bc4 	movi	r2,47
 200026c:	18800245 	stb	r2,9(r3)
 2000270:	18000285 	stb	zero,10(r3)
	strcat(file_name, read_name);
 2000274:	e13ffe17 	ldw	r4,-8(fp)
 2000278:	e17fff17 	ldw	r5,-4(fp)
 200027c:	20030080 	call	2003008 <strcat>
	strcat(file_name, ".bin");
 2000280:	e13ffe17 	ldw	r4,-8(fp)
 2000284:	01408074 	movhi	r5,513
 2000288:	294de304 	addi	r5,r5,14220
 200028c:	20030080 	call	2003008 <strcat>
}
 2000290:	e037883a 	mov	sp,fp
 2000294:	dfc00117 	ldw	ra,4(sp)
 2000298:	df000017 	ldw	fp,0(sp)
 200029c:	dec00204 	addi	sp,sp,8
 20002a0:	f800283a 	ret

020002a4 <main>:

int main() {
 20002a4:	deffd404 	addi	sp,sp,-176
 20002a8:	dfc02b15 	stw	ra,172(sp)
 20002ac:	df002a15 	stw	fp,168(sp)
 20002b0:	dc002915 	stw	r16,164(sp)
 20002b4:	df002904 	addi	fp,sp,164
	int tmp;

	while (1) {

		/* read filter */
		read_name[0] = '\0';
 20002b8:	e03fe705 	stb	zero,-100(fp)
		printf("Filter file name:");
 20002bc:	01008074 	movhi	r4,513
 20002c0:	210de504 	addi	r4,r4,14228
 20002c4:	2002ac40 	call	2002ac4 <printf>
		scanf("%s", filter_file_name);
 20002c8:	01008074 	movhi	r4,513
 20002cc:	210dea04 	addi	r4,r4,14248
 20002d0:	e17fda17 	ldw	r5,-152(fp)
 20002d4:	2002e740 	call	2002e74 <scanf>
		generate_file_name(read_name, filter_file_name);
 20002d8:	e13fe704 	addi	r4,fp,-100
 20002dc:	e17fda17 	ldw	r5,-152(fp)
 20002e0:	20001f00 	call	20001f0 <generate_file_name>
		file = fopen(read_name, "rb");
 20002e4:	e13fe704 	addi	r4,fp,-100
 20002e8:	01408074 	movhi	r5,513
 20002ec:	294deb04 	addi	r5,r5,14252
 20002f0:	20012300 	call	2001230 <fopen>
 20002f4:	e0bfe615 	stw	r2,-104(fp)

		filter = (int**) malloc(sizeof(int*) * FILTER_SIZE);
 20002f8:	01000704 	movi	r4,28
 20002fc:	20021c00 	call	20021c0 <malloc>
 2000300:	e0bfe015 	stw	r2,-128(fp)
		read_value_int = (short*) malloc(sizeof(short));
 2000304:	01000084 	movi	r4,2
 2000308:	20021c00 	call	20021c0 <malloc>
 200030c:	e0bfe115 	stw	r2,-124(fp)
		for (i = 0; i < FILTER_SIZE; i++) {
 2000310:	e03fe515 	stw	zero,-108(fp)
 2000314:	00002a06 	br	20003c0 <main+0x11c>
			filter[i] = (int*) malloc(sizeof(int) * FILTER_SIZE);
 2000318:	e0bfe517 	ldw	r2,-108(fp)
 200031c:	1085883a 	add	r2,r2,r2
 2000320:	1085883a 	add	r2,r2,r2
 2000324:	1007883a 	mov	r3,r2
 2000328:	e0bfe017 	ldw	r2,-128(fp)
 200032c:	18a1883a 	add	r16,r3,r2
 2000330:	01000704 	movi	r4,28
 2000334:	20021c00 	call	20021c0 <malloc>
 2000338:	80800015 	stw	r2,0(r16)
			for (j = 0; j < FILTER_SIZE; j++) {
 200033c:	e03fe415 	stw	zero,-112(fp)
 2000340:	00001906 	br	20003a8 <main+0x104>
				fread(read_value_int, 2, 1, file);
 2000344:	e13fe117 	ldw	r4,-124(fp)
 2000348:	01400084 	movi	r5,2
 200034c:	01800044 	movi	r6,1
 2000350:	e1ffe617 	ldw	r7,-104(fp)
 2000354:	20014580 	call	2001458 <fread>
				filter[i][j] = *read_value_int; // / pow(2, FILTER_FRACTIONAL_BITS);
 2000358:	e0bfe517 	ldw	r2,-108(fp)
 200035c:	1085883a 	add	r2,r2,r2
 2000360:	1085883a 	add	r2,r2,r2
 2000364:	1007883a 	mov	r3,r2
 2000368:	e0bfe017 	ldw	r2,-128(fp)
 200036c:	1885883a 	add	r2,r3,r2
 2000370:	10c00017 	ldw	r3,0(r2)
 2000374:	e0bfe417 	ldw	r2,-112(fp)
 2000378:	1085883a 	add	r2,r2,r2
 200037c:	1085883a 	add	r2,r2,r2
 2000380:	1887883a 	add	r3,r3,r2
 2000384:	e0bfe117 	ldw	r2,-124(fp)
 2000388:	1080000b 	ldhu	r2,0(r2)
 200038c:	10bfffcc 	andi	r2,r2,65535
 2000390:	10a0001c 	xori	r2,r2,32768
 2000394:	10a00004 	addi	r2,r2,-32768
 2000398:	18800015 	stw	r2,0(r3)

		filter = (int**) malloc(sizeof(int*) * FILTER_SIZE);
		read_value_int = (short*) malloc(sizeof(short));
		for (i = 0; i < FILTER_SIZE; i++) {
			filter[i] = (int*) malloc(sizeof(int) * FILTER_SIZE);
			for (j = 0; j < FILTER_SIZE; j++) {
 200039c:	e0bfe417 	ldw	r2,-112(fp)
 20003a0:	10800044 	addi	r2,r2,1
 20003a4:	e0bfe415 	stw	r2,-112(fp)
 20003a8:	e0bfe417 	ldw	r2,-112(fp)
 20003ac:	108001f0 	cmpltui	r2,r2,7
 20003b0:	103fe41e 	bne	r2,zero,2000344 <main+0xa0>
		generate_file_name(read_name, filter_file_name);
		file = fopen(read_name, "rb");

		filter = (int**) malloc(sizeof(int*) * FILTER_SIZE);
		read_value_int = (short*) malloc(sizeof(short));
		for (i = 0; i < FILTER_SIZE; i++) {
 20003b4:	e0bfe517 	ldw	r2,-108(fp)
 20003b8:	10800044 	addi	r2,r2,1
 20003bc:	e0bfe515 	stw	r2,-108(fp)
 20003c0:	e0bfe517 	ldw	r2,-108(fp)
 20003c4:	108001f0 	cmpltui	r2,r2,7
 20003c8:	103fd31e 	bne	r2,zero,2000318 <main+0x74>
				fread(read_value_int, 2, 1, file);
				filter[i][j] = *read_value_int; // / pow(2, FILTER_FRACTIONAL_BITS);
			}
		}

		fclose(file);
 20003cc:	e13fe617 	ldw	r4,-104(fp)
 20003d0:	2000c040 	call	2000c04 <fclose>

		PERF_RESET(PERFORMANCE_COUNTER_0_BASE);
 20003d4:	00c10034 	movhi	r3,1024
 20003d8:	18c40004 	addi	r3,r3,4096
 20003dc:	00800044 	movi	r2,1
 20003e0:	18800035 	stwio	r2,0(r3)
		PERF_START_MEASURING(PERFORMANCE_COUNTER_0_BASE);
 20003e4:	00810034 	movhi	r2,1024
 20003e8:	10840104 	addi	r2,r2,4100
 20003ec:	10000035 	stwio	zero,0(r2)

		/* read image */
		read_name[0] = '\0';
 20003f0:	e03fe705 	stb	zero,-100(fp)
		printf("Image file name:");
 20003f4:	01008074 	movhi	r4,513
 20003f8:	210dec04 	addi	r4,r4,14256
 20003fc:	2002ac40 	call	2002ac4 <printf>
		scanf("%s", image_file_name);
 2000400:	01008074 	movhi	r4,513
 2000404:	210dea04 	addi	r4,r4,14248
 2000408:	e17fd917 	ldw	r5,-156(fp)
 200040c:	2002e740 	call	2002e74 <scanf>
		generate_file_name(read_name, image_file_name);
 2000410:	e13fe704 	addi	r4,fp,-100
 2000414:	e17fd917 	ldw	r5,-156(fp)
 2000418:	20001f00 	call	20001f0 <generate_file_name>
		file = fopen(read_name, "rb");
 200041c:	e13fe704 	addi	r4,fp,-100
 2000420:	01408074 	movhi	r5,513
 2000424:	294deb04 	addi	r5,r5,14252
 2000428:	20012300 	call	2001230 <fopen>
 200042c:	e0bfe615 	stw	r2,-104(fp)

		width = (unsigned long*) malloc(4);
 2000430:	01000104 	movi	r4,4
 2000434:	20021c00 	call	20021c0 <malloc>
 2000438:	e0bfdf15 	stw	r2,-132(fp)
		fread(width, 4, 1, file);
 200043c:	e13fdf17 	ldw	r4,-132(fp)
 2000440:	01400104 	movi	r5,4
 2000444:	01800044 	movi	r6,1
 2000448:	e1ffe617 	ldw	r7,-104(fp)
 200044c:	20014580 	call	2001458 <fread>

		height = (unsigned long*) malloc(4);
 2000450:	01000104 	movi	r4,4
 2000454:	20021c00 	call	20021c0 <malloc>
 2000458:	e0bfde15 	stw	r2,-136(fp)
		fread(height, 4, 1, file);
 200045c:	e13fde17 	ldw	r4,-136(fp)
 2000460:	01400104 	movi	r5,4
 2000464:	01800044 	movi	r6,1
 2000468:	e1ffe617 	ldw	r7,-104(fp)
 200046c:	20014580 	call	2001458 <fread>

		input_buf = (unsigned char*) malloc(sizeof(unsigned char) * (*height) * (*width));
 2000470:	e0bfde17 	ldw	r2,-136(fp)
 2000474:	11000017 	ldw	r4,0(r2)
 2000478:	e0bfdf17 	ldw	r2,-132(fp)
 200047c:	11400017 	ldw	r5,0(r2)
 2000480:	2000abc0 	call	2000abc <__mulsi3>
 2000484:	1009883a 	mov	r4,r2
 2000488:	20021c00 	call	20021c0 <malloc>
 200048c:	e0bfdc15 	stw	r2,-144(fp)
		fread(input_buf, 1, (*height) * (*width), file);
 2000490:	e0bfde17 	ldw	r2,-136(fp)
 2000494:	11000017 	ldw	r4,0(r2)
 2000498:	e0bfdf17 	ldw	r2,-132(fp)
 200049c:	11400017 	ldw	r5,0(r2)
 20004a0:	2000abc0 	call	2000abc <__mulsi3>
 20004a4:	100d883a 	mov	r6,r2
 20004a8:	e13fdc17 	ldw	r4,-144(fp)
 20004ac:	01400044 	movi	r5,1
 20004b0:	e1ffe617 	ldw	r7,-104(fp)
 20004b4:	20014580 	call	2001458 <fread>

		fclose(file);
 20004b8:	e13fe617 	ldw	r4,-104(fp)
 20004bc:	2000c040 	call	2000c04 <fclose>
		printf("Image read!\n");
 20004c0:	01008074 	movhi	r4,513
 20004c4:	210df104 	addi	r4,r4,14276
 20004c8:	2002bdc0 	call	2002bdc <puts>


		image = (unsigned char**) malloc(sizeof(unsigned char*) * (*width + 2 * PADDING_SIZE));
 20004cc:	e0bfdf17 	ldw	r2,-132(fp)
 20004d0:	10800017 	ldw	r2,0(r2)
 20004d4:	1085883a 	add	r2,r2,r2
 20004d8:	1085883a 	add	r2,r2,r2
 20004dc:	11000604 	addi	r4,r2,24
 20004e0:	20021c00 	call	20021c0 <malloc>
 20004e4:	e0bfdd15 	stw	r2,-140(fp)
		for (i = 0; i < *width + 2 * PADDING_SIZE; i++) {
 20004e8:	e03fe515 	stw	zero,-108(fp)
 20004ec:	00000e06 	br	2000528 <main+0x284>
			image[i] = (unsigned char*) malloc(sizeof(unsigned char) * (*height + 2 * PADDING_SIZE));
 20004f0:	e0bfe517 	ldw	r2,-108(fp)
 20004f4:	1085883a 	add	r2,r2,r2
 20004f8:	1085883a 	add	r2,r2,r2
 20004fc:	1007883a 	mov	r3,r2
 2000500:	e0bfdd17 	ldw	r2,-140(fp)
 2000504:	18a1883a 	add	r16,r3,r2
 2000508:	e0bfde17 	ldw	r2,-136(fp)
 200050c:	10800017 	ldw	r2,0(r2)
 2000510:	11000184 	addi	r4,r2,6
 2000514:	20021c00 	call	20021c0 <malloc>
 2000518:	80800015 	stw	r2,0(r16)
		fclose(file);
		printf("Image read!\n");


		image = (unsigned char**) malloc(sizeof(unsigned char*) * (*width + 2 * PADDING_SIZE));
		for (i = 0; i < *width + 2 * PADDING_SIZE; i++) {
 200051c:	e0bfe517 	ldw	r2,-108(fp)
 2000520:	10800044 	addi	r2,r2,1
 2000524:	e0bfe515 	stw	r2,-108(fp)
 2000528:	e0bfdf17 	ldw	r2,-132(fp)
 200052c:	10800017 	ldw	r2,0(r2)
 2000530:	10c00184 	addi	r3,r2,6
 2000534:	e0bfe517 	ldw	r2,-108(fp)
 2000538:	10ffed36 	bltu	r2,r3,20004f0 <main+0x24c>
			image[i] = (unsigned char*) malloc(sizeof(unsigned char) * (*height + 2 * PADDING_SIZE));
		}

		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 1); // testing image padding
 200053c:	00810034 	movhi	r2,1024
 2000540:	10840504 	addi	r2,r2,4116
 2000544:	10000035 	stwio	zero,0(r2)
		for (i = PADDING_SIZE; i < *width + PADDING_SIZE; i++) {
 2000548:	008000c4 	movi	r2,3
 200054c:	e0bfe515 	stw	r2,-108(fp)
 2000550:	00005906 	br	20006b8 <main+0x414>
			for (j = 0; j < *height + 2 * PADDING_SIZE; j++) {
 2000554:	e03fe415 	stw	zero,-112(fp)
 2000558:	00004f06 	br	2000698 <main+0x3f4>
				if (j < PADDING_SIZE) {
 200055c:	e0bfe417 	ldw	r2,-112(fp)
 2000560:	108000e8 	cmpgeui	r2,r2,3
 2000564:	1000141e 	bne	r2,zero,20005b8 <main+0x314>
					image[i][j] = input_buf[(i - PADDING_SIZE) * (*width)];
 2000568:	e0bfe517 	ldw	r2,-108(fp)
 200056c:	1085883a 	add	r2,r2,r2
 2000570:	1085883a 	add	r2,r2,r2
 2000574:	1007883a 	mov	r3,r2
 2000578:	e0bfdd17 	ldw	r2,-140(fp)
 200057c:	1885883a 	add	r2,r3,r2
 2000580:	10c00017 	ldw	r3,0(r2)
 2000584:	e0bfe417 	ldw	r2,-112(fp)
 2000588:	18a1883a 	add	r16,r3,r2
 200058c:	e0bfe517 	ldw	r2,-108(fp)
 2000590:	113fff44 	addi	r4,r2,-3
 2000594:	e0bfdf17 	ldw	r2,-132(fp)
 2000598:	11400017 	ldw	r5,0(r2)
 200059c:	2000abc0 	call	2000abc <__mulsi3>
 20005a0:	1007883a 	mov	r3,r2
 20005a4:	e0bfdc17 	ldw	r2,-144(fp)
 20005a8:	1885883a 	add	r2,r3,r2
 20005ac:	10800003 	ldbu	r2,0(r2)
 20005b0:	80800005 	stb	r2,0(r16)
 20005b4:	00003506 	br	200068c <main+0x3e8>
				} else if (j >= *height + PADDING_SIZE) {
 20005b8:	e0bfde17 	ldw	r2,-136(fp)
 20005bc:	10800017 	ldw	r2,0(r2)
 20005c0:	10c000c4 	addi	r3,r2,3
 20005c4:	e0bfe417 	ldw	r2,-112(fp)
 20005c8:	10c01936 	bltu	r2,r3,2000630 <main+0x38c>
					image[i][j] = input_buf[(i - PADDING_SIZE) * (*width) + (*width - 1)];
 20005cc:	e0bfe517 	ldw	r2,-108(fp)
 20005d0:	1085883a 	add	r2,r2,r2
 20005d4:	1085883a 	add	r2,r2,r2
 20005d8:	1007883a 	mov	r3,r2
 20005dc:	e0bfdd17 	ldw	r2,-140(fp)
 20005e0:	1885883a 	add	r2,r3,r2
 20005e4:	10c00017 	ldw	r3,0(r2)
 20005e8:	e0bfe417 	ldw	r2,-112(fp)
 20005ec:	18a1883a 	add	r16,r3,r2
 20005f0:	e0bfe517 	ldw	r2,-108(fp)
 20005f4:	113fff44 	addi	r4,r2,-3
 20005f8:	e0bfdf17 	ldw	r2,-132(fp)
 20005fc:	11400017 	ldw	r5,0(r2)
 2000600:	2000abc0 	call	2000abc <__mulsi3>
 2000604:	1007883a 	mov	r3,r2
 2000608:	e0bfdf17 	ldw	r2,-132(fp)
 200060c:	10800017 	ldw	r2,0(r2)
 2000610:	1885883a 	add	r2,r3,r2
 2000614:	1007883a 	mov	r3,r2
 2000618:	e0bfdc17 	ldw	r2,-144(fp)
 200061c:	1885883a 	add	r2,r3,r2
 2000620:	10bfffc4 	addi	r2,r2,-1
 2000624:	10800003 	ldbu	r2,0(r2)
 2000628:	80800005 	stb	r2,0(r16)
 200062c:	00001706 	br	200068c <main+0x3e8>
				} else {
					image[i][j] = input_buf[(i - PADDING_SIZE) * (*width) + j - PADDING_SIZE];
 2000630:	e0bfe517 	ldw	r2,-108(fp)
 2000634:	1085883a 	add	r2,r2,r2
 2000638:	1085883a 	add	r2,r2,r2
 200063c:	1007883a 	mov	r3,r2
 2000640:	e0bfdd17 	ldw	r2,-140(fp)
 2000644:	1885883a 	add	r2,r3,r2
 2000648:	10c00017 	ldw	r3,0(r2)
 200064c:	e0bfe417 	ldw	r2,-112(fp)
 2000650:	18a1883a 	add	r16,r3,r2
 2000654:	e0bfe517 	ldw	r2,-108(fp)
 2000658:	113fff44 	addi	r4,r2,-3
 200065c:	e0bfdf17 	ldw	r2,-132(fp)
 2000660:	11400017 	ldw	r5,0(r2)
 2000664:	2000abc0 	call	2000abc <__mulsi3>
 2000668:	1007883a 	mov	r3,r2
 200066c:	e0bfe417 	ldw	r2,-112(fp)
 2000670:	1885883a 	add	r2,r3,r2
 2000674:	1007883a 	mov	r3,r2
 2000678:	e0bfdc17 	ldw	r2,-144(fp)
 200067c:	1885883a 	add	r2,r3,r2
 2000680:	10bfff44 	addi	r2,r2,-3
 2000684:	10800003 	ldbu	r2,0(r2)
 2000688:	80800005 	stb	r2,0(r16)
			image[i] = (unsigned char*) malloc(sizeof(unsigned char) * (*height + 2 * PADDING_SIZE));
		}

		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 1); // testing image padding
		for (i = PADDING_SIZE; i < *width + PADDING_SIZE; i++) {
			for (j = 0; j < *height + 2 * PADDING_SIZE; j++) {
 200068c:	e0bfe417 	ldw	r2,-112(fp)
 2000690:	10800044 	addi	r2,r2,1
 2000694:	e0bfe415 	stw	r2,-112(fp)
 2000698:	e0bfde17 	ldw	r2,-136(fp)
 200069c:	10800017 	ldw	r2,0(r2)
 20006a0:	10c00184 	addi	r3,r2,6
 20006a4:	e0bfe417 	ldw	r2,-112(fp)
 20006a8:	10ffac36 	bltu	r2,r3,200055c <main+0x2b8>
		for (i = 0; i < *width + 2 * PADDING_SIZE; i++) {
			image[i] = (unsigned char*) malloc(sizeof(unsigned char) * (*height + 2 * PADDING_SIZE));
		}

		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 1); // testing image padding
		for (i = PADDING_SIZE; i < *width + PADDING_SIZE; i++) {
 20006ac:	e0bfe517 	ldw	r2,-108(fp)
 20006b0:	10800044 	addi	r2,r2,1
 20006b4:	e0bfe515 	stw	r2,-108(fp)
 20006b8:	e0bfdf17 	ldw	r2,-132(fp)
 20006bc:	10800017 	ldw	r2,0(r2)
 20006c0:	10c000c4 	addi	r3,r2,3
 20006c4:	e0bfe517 	ldw	r2,-108(fp)
 20006c8:	10ffa236 	bltu	r2,r3,2000554 <main+0x2b0>
				} else {
					image[i][j] = input_buf[(i - PADDING_SIZE) * (*width) + j - PADDING_SIZE];
				}
			}
		}
		free(input_buf);
 20006cc:	e13fdc17 	ldw	r4,-144(fp)
 20006d0:	20021ac0 	call	20021ac <free>

		for (i = 0; i < PADDING_SIZE; i++) {
 20006d4:	e03fe515 	stw	zero,-108(fp)
 20006d8:	00003706 	br	20007b8 <main+0x514>
			for (j = 0; j < *height + 2 * PADDING_SIZE; j++) {
 20006dc:	e03fe415 	stw	zero,-112(fp)
 20006e0:	00002d06 	br	2000798 <main+0x4f4>
				image[i][j] = image[PADDING_SIZE][j];
 20006e4:	e0bfe517 	ldw	r2,-108(fp)
 20006e8:	1085883a 	add	r2,r2,r2
 20006ec:	1085883a 	add	r2,r2,r2
 20006f0:	1007883a 	mov	r3,r2
 20006f4:	e0bfdd17 	ldw	r2,-140(fp)
 20006f8:	1885883a 	add	r2,r3,r2
 20006fc:	10c00017 	ldw	r3,0(r2)
 2000700:	e0bfe417 	ldw	r2,-112(fp)
 2000704:	1889883a 	add	r4,r3,r2
 2000708:	e0bfdd17 	ldw	r2,-140(fp)
 200070c:	10800304 	addi	r2,r2,12
 2000710:	10c00017 	ldw	r3,0(r2)
 2000714:	e0bfe417 	ldw	r2,-112(fp)
 2000718:	1885883a 	add	r2,r3,r2
 200071c:	10800003 	ldbu	r2,0(r2)
 2000720:	20800005 	stb	r2,0(r4)
				image[*width + 2 * PADDING_SIZE - i - 1][j] = image[*width + PADDING_SIZE - 1][j];
 2000724:	e0bfdf17 	ldw	r2,-132(fp)
 2000728:	10c00017 	ldw	r3,0(r2)
 200072c:	e0bfe517 	ldw	r2,-108(fp)
 2000730:	1885c83a 	sub	r2,r3,r2
 2000734:	1085883a 	add	r2,r2,r2
 2000738:	1085883a 	add	r2,r2,r2
 200073c:	1007883a 	mov	r3,r2
 2000740:	e0bfdd17 	ldw	r2,-140(fp)
 2000744:	1885883a 	add	r2,r3,r2
 2000748:	10800504 	addi	r2,r2,20
 200074c:	10c00017 	ldw	r3,0(r2)
 2000750:	e0bfe417 	ldw	r2,-112(fp)
 2000754:	1889883a 	add	r4,r3,r2
 2000758:	e0bfdf17 	ldw	r2,-132(fp)
 200075c:	10800017 	ldw	r2,0(r2)
 2000760:	1085883a 	add	r2,r2,r2
 2000764:	1085883a 	add	r2,r2,r2
 2000768:	1007883a 	mov	r3,r2
 200076c:	e0bfdd17 	ldw	r2,-140(fp)
 2000770:	1885883a 	add	r2,r3,r2
 2000774:	10800204 	addi	r2,r2,8
 2000778:	10c00017 	ldw	r3,0(r2)
 200077c:	e0bfe417 	ldw	r2,-112(fp)
 2000780:	1885883a 	add	r2,r3,r2
 2000784:	10800003 	ldbu	r2,0(r2)
 2000788:	20800005 	stb	r2,0(r4)
			}
		}
		free(input_buf);

		for (i = 0; i < PADDING_SIZE; i++) {
			for (j = 0; j < *height + 2 * PADDING_SIZE; j++) {
 200078c:	e0bfe417 	ldw	r2,-112(fp)
 2000790:	10800044 	addi	r2,r2,1
 2000794:	e0bfe415 	stw	r2,-112(fp)
 2000798:	e0bfde17 	ldw	r2,-136(fp)
 200079c:	10800017 	ldw	r2,0(r2)
 20007a0:	10c00184 	addi	r3,r2,6
 20007a4:	e0bfe417 	ldw	r2,-112(fp)
 20007a8:	10ffce36 	bltu	r2,r3,20006e4 <main+0x440>
				}
			}
		}
		free(input_buf);

		for (i = 0; i < PADDING_SIZE; i++) {
 20007ac:	e0bfe517 	ldw	r2,-108(fp)
 20007b0:	10800044 	addi	r2,r2,1
 20007b4:	e0bfe515 	stw	r2,-108(fp)
 20007b8:	e0bfe517 	ldw	r2,-108(fp)
 20007bc:	108000f0 	cmpltui	r2,r2,3
 20007c0:	103fc61e 	bne	r2,zero,20006dc <main+0x438>
				image[i][j] = image[PADDING_SIZE][j];
				image[*width + 2 * PADDING_SIZE - i - 1][j] = image[*width + PADDING_SIZE - 1][j];
			}
		}

		printf("Image padded!\n");
 20007c4:	01008074 	movhi	r4,513
 20007c8:	210df404 	addi	r4,r4,14288
 20007cc:	2002bdc0 	call	2002bdc <puts>
		PERF_END(PERFORMANCE_COUNTER_0_BASE, 1); // end testing image padding
 20007d0:	00810034 	movhi	r2,1024
 20007d4:	10840404 	addi	r2,r2,4112
 20007d8:	10000035 	stwio	zero,0(r2)

		/* perform filtering */
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 2); // testing image filtering
 20007dc:	00810034 	movhi	r2,1024
 20007e0:	10840904 	addi	r2,r2,4132
 20007e4:	10000035 	stwio	zero,0(r2)
		output_buf = (short*) malloc(sizeof(short) * (*width) * (*height));
 20007e8:	e0bfdf17 	ldw	r2,-132(fp)
 20007ec:	11000017 	ldw	r4,0(r2)
 20007f0:	e0bfde17 	ldw	r2,-136(fp)
 20007f4:	11400017 	ldw	r5,0(r2)
 20007f8:	2000abc0 	call	2000abc <__mulsi3>
 20007fc:	1085883a 	add	r2,r2,r2
 2000800:	1009883a 	mov	r4,r2
 2000804:	20021c00 	call	20021c0 <malloc>
 2000808:	e0bfdb15 	stw	r2,-148(fp)
		for (i = 0; i < *height; i++) {
 200080c:	e03fe515 	stw	zero,-108(fp)
 2000810:	00005d06 	br	2000988 <main+0x6e4>
			for (j = 0; j < *width; j++) {
 2000814:	e03fe415 	stw	zero,-112(fp)
 2000818:	00005006 	br	200095c <main+0x6b8>
				tmp = 0;
 200081c:	e03fd815 	stw	zero,-160(fp)
				for (k = 0; k < FILTER_SIZE; k++) {
 2000820:	e03fe315 	stw	zero,-116(fp)
 2000824:	00002c06 	br	20008d8 <main+0x634>
					for (p = 0; p < FILTER_SIZE; p++) {
 2000828:	e03fe215 	stw	zero,-120(fp)
 200082c:	00002406 	br	20008c0 <main+0x61c>
						tmp += filter[k][p] * image[j + k][i + p];
 2000830:	e0bfe317 	ldw	r2,-116(fp)
 2000834:	1085883a 	add	r2,r2,r2
 2000838:	1085883a 	add	r2,r2,r2
 200083c:	1007883a 	mov	r3,r2
 2000840:	e0bfe017 	ldw	r2,-128(fp)
 2000844:	1885883a 	add	r2,r3,r2
 2000848:	10c00017 	ldw	r3,0(r2)
 200084c:	e0bfe217 	ldw	r2,-120(fp)
 2000850:	1085883a 	add	r2,r2,r2
 2000854:	1085883a 	add	r2,r2,r2
 2000858:	1885883a 	add	r2,r3,r2
 200085c:	11800017 	ldw	r6,0(r2)
 2000860:	e0ffe417 	ldw	r3,-112(fp)
 2000864:	e0bfe317 	ldw	r2,-116(fp)
 2000868:	1885883a 	add	r2,r3,r2
 200086c:	1085883a 	add	r2,r2,r2
 2000870:	1085883a 	add	r2,r2,r2
 2000874:	1007883a 	mov	r3,r2
 2000878:	e0bfdd17 	ldw	r2,-140(fp)
 200087c:	1885883a 	add	r2,r3,r2
 2000880:	11000017 	ldw	r4,0(r2)
 2000884:	e0ffe517 	ldw	r3,-108(fp)
 2000888:	e0bfe217 	ldw	r2,-120(fp)
 200088c:	1885883a 	add	r2,r3,r2
 2000890:	2085883a 	add	r2,r4,r2
 2000894:	10800003 	ldbu	r2,0(r2)
 2000898:	11403fcc 	andi	r5,r2,255
 200089c:	3009883a 	mov	r4,r6
 20008a0:	2000abc0 	call	2000abc <__mulsi3>
 20008a4:	1007883a 	mov	r3,r2
 20008a8:	e0bfd817 	ldw	r2,-160(fp)
 20008ac:	10c5883a 	add	r2,r2,r3
 20008b0:	e0bfd815 	stw	r2,-160(fp)
		output_buf = (short*) malloc(sizeof(short) * (*width) * (*height));
		for (i = 0; i < *height; i++) {
			for (j = 0; j < *width; j++) {
				tmp = 0;
				for (k = 0; k < FILTER_SIZE; k++) {
					for (p = 0; p < FILTER_SIZE; p++) {
 20008b4:	e0bfe217 	ldw	r2,-120(fp)
 20008b8:	10800044 	addi	r2,r2,1
 20008bc:	e0bfe215 	stw	r2,-120(fp)
 20008c0:	e0bfe217 	ldw	r2,-120(fp)
 20008c4:	108001f0 	cmpltui	r2,r2,7
 20008c8:	103fd91e 	bne	r2,zero,2000830 <main+0x58c>
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 2); // testing image filtering
		output_buf = (short*) malloc(sizeof(short) * (*width) * (*height));
		for (i = 0; i < *height; i++) {
			for (j = 0; j < *width; j++) {
				tmp = 0;
				for (k = 0; k < FILTER_SIZE; k++) {
 20008cc:	e0bfe317 	ldw	r2,-116(fp)
 20008d0:	10800044 	addi	r2,r2,1
 20008d4:	e0bfe315 	stw	r2,-116(fp)
 20008d8:	e0bfe317 	ldw	r2,-116(fp)
 20008dc:	108001f0 	cmpltui	r2,r2,7
 20008e0:	103fd11e 	bne	r2,zero,2000828 <main+0x584>
					for (p = 0; p < FILTER_SIZE; p++) {
						tmp += filter[k][p] * image[j + k][i + p];
					}
				}
				tmp = tmp >> FRACTION_BITS;
 20008e4:	e0bfd817 	ldw	r2,-160(fp)
 20008e8:	1005d1ba 	srai	r2,r2,6
 20008ec:	e0bfd815 	stw	r2,-160(fp)
				if (tmp > SHRT_MAX) {
 20008f0:	e0ffd817 	ldw	r3,-160(fp)
 20008f4:	009fffc4 	movi	r2,32767
 20008f8:	10c0030e 	bge	r2,r3,2000908 <main+0x664>
					tmp = SHRT_MAX;
 20008fc:	009fffc4 	movi	r2,32767
 2000900:	e0bfd815 	stw	r2,-160(fp)
 2000904:	00000506 	br	200091c <main+0x678>
				} else if (tmp < SHRT_MIN) {
 2000908:	e0bfd817 	ldw	r2,-160(fp)
 200090c:	10a00008 	cmpgei	r2,r2,-32768
 2000910:	1000021e 	bne	r2,zero,200091c <main+0x678>
					tmp = SHRT_MIN;
 2000914:	00a00004 	movi	r2,-32768
 2000918:	e0bfd815 	stw	r2,-160(fp)
				}
				output_buf[i * (*width) + j] = tmp;
 200091c:	e0bfdf17 	ldw	r2,-132(fp)
 2000920:	11000017 	ldw	r4,0(r2)
 2000924:	e17fe517 	ldw	r5,-108(fp)
 2000928:	2000abc0 	call	2000abc <__mulsi3>
 200092c:	1007883a 	mov	r3,r2
 2000930:	e0bfe417 	ldw	r2,-112(fp)
 2000934:	1885883a 	add	r2,r3,r2
 2000938:	1085883a 	add	r2,r2,r2
 200093c:	1007883a 	mov	r3,r2
 2000940:	e0bfdb17 	ldw	r2,-148(fp)
 2000944:	1887883a 	add	r3,r3,r2
 2000948:	e0bfd817 	ldw	r2,-160(fp)
 200094c:	1880000d 	sth	r2,0(r3)

		/* perform filtering */
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 2); // testing image filtering
		output_buf = (short*) malloc(sizeof(short) * (*width) * (*height));
		for (i = 0; i < *height; i++) {
			for (j = 0; j < *width; j++) {
 2000950:	e0bfe417 	ldw	r2,-112(fp)
 2000954:	10800044 	addi	r2,r2,1
 2000958:	e0bfe415 	stw	r2,-112(fp)
 200095c:	e0bfdf17 	ldw	r2,-132(fp)
 2000960:	10c00017 	ldw	r3,0(r2)
 2000964:	e0bfe417 	ldw	r2,-112(fp)
 2000968:	10ffac36 	bltu	r2,r3,200081c <main+0x578>
				} else if (tmp < SHRT_MIN) {
					tmp = SHRT_MIN;
				}
				output_buf[i * (*width) + j] = tmp;
			}
			printf("%d\n", i);
 200096c:	01008074 	movhi	r4,513
 2000970:	210df804 	addi	r4,r4,14304
 2000974:	e17fe517 	ldw	r5,-108(fp)
 2000978:	2002ac40 	call	2002ac4 <printf>
		PERF_END(PERFORMANCE_COUNTER_0_BASE, 1); // end testing image padding

		/* perform filtering */
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 2); // testing image filtering
		output_buf = (short*) malloc(sizeof(short) * (*width) * (*height));
		for (i = 0; i < *height; i++) {
 200097c:	e0bfe517 	ldw	r2,-108(fp)
 2000980:	10800044 	addi	r2,r2,1
 2000984:	e0bfe515 	stw	r2,-108(fp)
 2000988:	e0bfde17 	ldw	r2,-136(fp)
 200098c:	10c00017 	ldw	r3,0(r2)
 2000990:	e0bfe517 	ldw	r2,-108(fp)
 2000994:	10ff9f36 	bltu	r2,r3,2000814 <main+0x570>
				}
				output_buf[i * (*width) + j] = tmp;
			}
			printf("%d\n", i);
		}
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 2); // end testing image filtering
 2000998:	00810034 	movhi	r2,1024
 200099c:	10840904 	addi	r2,r2,4132
 20009a0:	10000035 	stwio	zero,0(r2)
		free(image);
 20009a4:	e13fdd17 	ldw	r4,-140(fp)
 20009a8:	20021ac0 	call	20021ac <free>
		printf("Applied filter!\n");
 20009ac:	01008074 	movhi	r4,513
 20009b0:	210df904 	addi	r4,r4,14308
 20009b4:	2002bdc0 	call	2002bdc <puts>

		read_name[0] = '\0';
 20009b8:	e03fe705 	stb	zero,-100(fp)
		generate_file_name(read_name, "output_image");
 20009bc:	e13fe704 	addi	r4,fp,-100
 20009c0:	01408074 	movhi	r5,513
 20009c4:	294dfd04 	addi	r5,r5,14324
 20009c8:	20001f00 	call	20001f0 <generate_file_name>
		file = fopen(read_name, "wb");
 20009cc:	e13fe704 	addi	r4,fp,-100
 20009d0:	01408074 	movhi	r5,513
 20009d4:	294e0104 	addi	r5,r5,14340
 20009d8:	20012300 	call	2001230 <fopen>
 20009dc:	e0bfe615 	stw	r2,-104(fp)
		fwrite(width, 4, 1, file);
 20009e0:	e13fdf17 	ldw	r4,-132(fp)
 20009e4:	01400104 	movi	r5,4
 20009e8:	01800044 	movi	r6,1
 20009ec:	e1ffe617 	ldw	r7,-104(fp)
 20009f0:	2001fd80 	call	2001fd8 <fwrite>
		fwrite(height, 4, 1, file);
 20009f4:	e13fde17 	ldw	r4,-136(fp)
 20009f8:	01400104 	movi	r5,4
 20009fc:	01800044 	movi	r6,1
 2000a00:	e1ffe617 	ldw	r7,-104(fp)
 2000a04:	2001fd80 	call	2001fd8 <fwrite>
		fwrite(output_buf, 2, (*width) * (*height), file);
 2000a08:	e0bfdf17 	ldw	r2,-132(fp)
 2000a0c:	11000017 	ldw	r4,0(r2)
 2000a10:	e0bfde17 	ldw	r2,-136(fp)
 2000a14:	11400017 	ldw	r5,0(r2)
 2000a18:	2000abc0 	call	2000abc <__mulsi3>
 2000a1c:	100d883a 	mov	r6,r2
 2000a20:	e13fdb17 	ldw	r4,-148(fp)
 2000a24:	01400084 	movi	r5,2
 2000a28:	e1ffe617 	ldw	r7,-104(fp)
 2000a2c:	2001fd80 	call	2001fd8 <fwrite>
		fclose(file);
 2000a30:	e13fe617 	ldw	r4,-104(fp)
 2000a34:	2000c040 	call	2000c04 <fclose>
		free(output_buf);
 2000a38:	e13fdb17 	ldw	r4,-148(fp)
 2000a3c:	20021ac0 	call	20021ac <free>

		printf("Output image saved as: %s\n", read_name);
 2000a40:	e17fe704 	addi	r5,fp,-100
 2000a44:	01008074 	movhi	r4,513
 2000a48:	210e0204 	addi	r4,r4,14344
 2000a4c:	2002ac40 	call	2002ac4 <printf>
		printf("Process completed");
 2000a50:	01008074 	movhi	r4,513
 2000a54:	210e0904 	addi	r4,r4,14372
 2000a58:	2002ac40 	call	2002ac4 <printf>
		perf_print_formatted_report(PERFORMANCE_COUNTER_0_BASE,
 2000a5c:	2011e440 	call	2011e44 <alt_get_cpu_freq>
 2000a60:	100b883a 	mov	r5,r2
 2000a64:	00808074 	movhi	r2,513
 2000a68:	108e1304 	addi	r2,r2,14412
 2000a6c:	d8800015 	stw	r2,0(sp)
 2000a70:	01010034 	movhi	r4,1024
 2000a74:	21040004 	addi	r4,r4,4096
 2000a78:	01800084 	movi	r6,2
 2000a7c:	01c08074 	movhi	r7,513
 2000a80:	39ce0e04 	addi	r7,r7,14392
 2000a84:	20124080 	call	2012408 <perf_print_formatted_report>
				alt_get_cpu_freq(),
				2,
				"Image zero padding",
				"Applying filter to the image");

		free(filter);
 2000a88:	e13fe017 	ldw	r4,-128(fp)
 2000a8c:	20021ac0 	call	20021ac <free>
		free(height);
 2000a90:	e13fde17 	ldw	r4,-136(fp)
 2000a94:	20021ac0 	call	20021ac <free>
		free(width);
 2000a98:	e13fdf17 	ldw	r4,-132(fp)
 2000a9c:	20021ac0 	call	20021ac <free>
		free(read_value_int);
 2000aa0:	e13fe117 	ldw	r4,-124(fp)
 2000aa4:	20021ac0 	call	20021ac <free>
		free(filter_file_name);
 2000aa8:	e13fda17 	ldw	r4,-152(fp)
 2000aac:	20021ac0 	call	20021ac <free>
		free(image_file_name);
 2000ab0:	e13fd917 	ldw	r4,-156(fp)
 2000ab4:	20021ac0 	call	20021ac <free>
	}
 2000ab8:	003dff06 	br	20002b8 <main+0x14>

02000abc <__mulsi3>:
 2000abc:	20000a26 	beq	r4,zero,2000ae8 <__mulsi3+0x2c>
 2000ac0:	0007883a 	mov	r3,zero
 2000ac4:	2080004c 	andi	r2,r4,1
 2000ac8:	1005003a 	cmpeq	r2,r2,zero
 2000acc:	2008d07a 	srli	r4,r4,1
 2000ad0:	1000011e 	bne	r2,zero,2000ad8 <__mulsi3+0x1c>
 2000ad4:	1947883a 	add	r3,r3,r5
 2000ad8:	294b883a 	add	r5,r5,r5
 2000adc:	203ff91e 	bne	r4,zero,2000ac4 <__mulsi3+0x8>
 2000ae0:	1805883a 	mov	r2,r3
 2000ae4:	f800283a 	ret
 2000ae8:	0007883a 	mov	r3,zero
 2000aec:	1805883a 	mov	r2,r3
 2000af0:	f800283a 	ret

02000af4 <_fclose_r>:
 2000af4:	defffc04 	addi	sp,sp,-16
 2000af8:	dc400115 	stw	r17,4(sp)
 2000afc:	dc000015 	stw	r16,0(sp)
 2000b00:	dfc00315 	stw	ra,12(sp)
 2000b04:	dc800215 	stw	r18,8(sp)
 2000b08:	2821883a 	mov	r16,r5
 2000b0c:	2023883a 	mov	r17,r4
 2000b10:	28002926 	beq	r5,zero,2000bb8 <_fclose_r+0xc4>
 2000b14:	2000ea00 	call	2000ea0 <__sfp_lock_acquire>
 2000b18:	88000226 	beq	r17,zero,2000b24 <_fclose_r+0x30>
 2000b1c:	88800e17 	ldw	r2,56(r17)
 2000b20:	10002d26 	beq	r2,zero,2000bd8 <_fclose_r+0xe4>
 2000b24:	8080030f 	ldh	r2,12(r16)
 2000b28:	10002226 	beq	r2,zero,2000bb4 <_fclose_r+0xc0>
 2000b2c:	8809883a 	mov	r4,r17
 2000b30:	800b883a 	mov	r5,r16
 2000b34:	2000c180 	call	2000c18 <_fflush_r>
 2000b38:	1025883a 	mov	r18,r2
 2000b3c:	80800b17 	ldw	r2,44(r16)
 2000b40:	10000426 	beq	r2,zero,2000b54 <_fclose_r+0x60>
 2000b44:	81400717 	ldw	r5,28(r16)
 2000b48:	8809883a 	mov	r4,r17
 2000b4c:	103ee83a 	callr	r2
 2000b50:	10002a16 	blt	r2,zero,2000bfc <_fclose_r+0x108>
 2000b54:	8080030b 	ldhu	r2,12(r16)
 2000b58:	1080200c 	andi	r2,r2,128
 2000b5c:	1000231e 	bne	r2,zero,2000bec <_fclose_r+0xf8>
 2000b60:	81400c17 	ldw	r5,48(r16)
 2000b64:	28000526 	beq	r5,zero,2000b7c <_fclose_r+0x88>
 2000b68:	80801004 	addi	r2,r16,64
 2000b6c:	28800226 	beq	r5,r2,2000b78 <_fclose_r+0x84>
 2000b70:	8809883a 	mov	r4,r17
 2000b74:	20015c40 	call	20015c4 <_free_r>
 2000b78:	80000c15 	stw	zero,48(r16)
 2000b7c:	81401117 	ldw	r5,68(r16)
 2000b80:	28000326 	beq	r5,zero,2000b90 <_fclose_r+0x9c>
 2000b84:	8809883a 	mov	r4,r17
 2000b88:	20015c40 	call	20015c4 <_free_r>
 2000b8c:	80001115 	stw	zero,68(r16)
 2000b90:	8000030d 	sth	zero,12(r16)
 2000b94:	2000ea40 	call	2000ea4 <__sfp_lock_release>
 2000b98:	9005883a 	mov	r2,r18
 2000b9c:	dfc00317 	ldw	ra,12(sp)
 2000ba0:	dc800217 	ldw	r18,8(sp)
 2000ba4:	dc400117 	ldw	r17,4(sp)
 2000ba8:	dc000017 	ldw	r16,0(sp)
 2000bac:	dec00404 	addi	sp,sp,16
 2000bb0:	f800283a 	ret
 2000bb4:	2000ea40 	call	2000ea4 <__sfp_lock_release>
 2000bb8:	0025883a 	mov	r18,zero
 2000bbc:	9005883a 	mov	r2,r18
 2000bc0:	dfc00317 	ldw	ra,12(sp)
 2000bc4:	dc800217 	ldw	r18,8(sp)
 2000bc8:	dc400117 	ldw	r17,4(sp)
 2000bcc:	dc000017 	ldw	r16,0(sp)
 2000bd0:	dec00404 	addi	sp,sp,16
 2000bd4:	f800283a 	ret
 2000bd8:	8809883a 	mov	r4,r17
 2000bdc:	2000eb00 	call	2000eb0 <__sinit>
 2000be0:	8080030f 	ldh	r2,12(r16)
 2000be4:	103fd11e 	bne	r2,zero,2000b2c <_fclose_r+0x38>
 2000be8:	003ff206 	br	2000bb4 <_fclose_r+0xc0>
 2000bec:	81400417 	ldw	r5,16(r16)
 2000bf0:	8809883a 	mov	r4,r17
 2000bf4:	20015c40 	call	20015c4 <_free_r>
 2000bf8:	003fd906 	br	2000b60 <_fclose_r+0x6c>
 2000bfc:	04bfffc4 	movi	r18,-1
 2000c00:	003fd406 	br	2000b54 <_fclose_r+0x60>

02000c04 <fclose>:
 2000c04:	00808074 	movhi	r2,513
 2000c08:	10968904 	addi	r2,r2,23076
 2000c0c:	200b883a 	mov	r5,r4
 2000c10:	11000017 	ldw	r4,0(r2)
 2000c14:	2000af41 	jmpi	2000af4 <_fclose_r>

02000c18 <_fflush_r>:
 2000c18:	defffb04 	addi	sp,sp,-20
 2000c1c:	dcc00315 	stw	r19,12(sp)
 2000c20:	dc800215 	stw	r18,8(sp)
 2000c24:	dfc00415 	stw	ra,16(sp)
 2000c28:	dc400115 	stw	r17,4(sp)
 2000c2c:	dc000015 	stw	r16,0(sp)
 2000c30:	2027883a 	mov	r19,r4
 2000c34:	2825883a 	mov	r18,r5
 2000c38:	20000226 	beq	r4,zero,2000c44 <_fflush_r+0x2c>
 2000c3c:	20800e17 	ldw	r2,56(r4)
 2000c40:	10005626 	beq	r2,zero,2000d9c <_fflush_r+0x184>
 2000c44:	9100030b 	ldhu	r4,12(r18)
 2000c48:	20ffffcc 	andi	r3,r4,65535
 2000c4c:	18e0001c 	xori	r3,r3,32768
 2000c50:	18e00004 	addi	r3,r3,-32768
 2000c54:	1880020c 	andi	r2,r3,8
 2000c58:	1000261e 	bne	r2,zero,2000cf4 <_fflush_r+0xdc>
 2000c5c:	90c00117 	ldw	r3,4(r18)
 2000c60:	20820014 	ori	r2,r4,2048
 2000c64:	9080030d 	sth	r2,12(r18)
 2000c68:	1009883a 	mov	r4,r2
 2000c6c:	00c0400e 	bge	zero,r3,2000d70 <_fflush_r+0x158>
 2000c70:	92000a17 	ldw	r8,40(r18)
 2000c74:	40004026 	beq	r8,zero,2000d78 <_fflush_r+0x160>
 2000c78:	2084000c 	andi	r2,r4,4096
 2000c7c:	10005326 	beq	r2,zero,2000dcc <_fflush_r+0x1b4>
 2000c80:	94001417 	ldw	r16,80(r18)
 2000c84:	9080030b 	ldhu	r2,12(r18)
 2000c88:	1080010c 	andi	r2,r2,4
 2000c8c:	1000481e 	bne	r2,zero,2000db0 <_fflush_r+0x198>
 2000c90:	91400717 	ldw	r5,28(r18)
 2000c94:	9809883a 	mov	r4,r19
 2000c98:	800d883a 	mov	r6,r16
 2000c9c:	000f883a 	mov	r7,zero
 2000ca0:	403ee83a 	callr	r8
 2000ca4:	8080261e 	bne	r16,r2,2000d40 <_fflush_r+0x128>
 2000ca8:	9080030b 	ldhu	r2,12(r18)
 2000cac:	91000417 	ldw	r4,16(r18)
 2000cb0:	90000115 	stw	zero,4(r18)
 2000cb4:	10bdffcc 	andi	r2,r2,63487
 2000cb8:	10ffffcc 	andi	r3,r2,65535
 2000cbc:	18c4000c 	andi	r3,r3,4096
 2000cc0:	9080030d 	sth	r2,12(r18)
 2000cc4:	91000015 	stw	r4,0(r18)
 2000cc8:	18002b26 	beq	r3,zero,2000d78 <_fflush_r+0x160>
 2000ccc:	0007883a 	mov	r3,zero
 2000cd0:	1805883a 	mov	r2,r3
 2000cd4:	94001415 	stw	r16,80(r18)
 2000cd8:	dfc00417 	ldw	ra,16(sp)
 2000cdc:	dcc00317 	ldw	r19,12(sp)
 2000ce0:	dc800217 	ldw	r18,8(sp)
 2000ce4:	dc400117 	ldw	r17,4(sp)
 2000ce8:	dc000017 	ldw	r16,0(sp)
 2000cec:	dec00504 	addi	sp,sp,20
 2000cf0:	f800283a 	ret
 2000cf4:	94400417 	ldw	r17,16(r18)
 2000cf8:	88001f26 	beq	r17,zero,2000d78 <_fflush_r+0x160>
 2000cfc:	90800017 	ldw	r2,0(r18)
 2000d00:	18c000cc 	andi	r3,r3,3
 2000d04:	94400015 	stw	r17,0(r18)
 2000d08:	1461c83a 	sub	r16,r2,r17
 2000d0c:	18002526 	beq	r3,zero,2000da4 <_fflush_r+0x18c>
 2000d10:	0005883a 	mov	r2,zero
 2000d14:	90800215 	stw	r2,8(r18)
 2000d18:	0400170e 	bge	zero,r16,2000d78 <_fflush_r+0x160>
 2000d1c:	90c00917 	ldw	r3,36(r18)
 2000d20:	91400717 	ldw	r5,28(r18)
 2000d24:	880d883a 	mov	r6,r17
 2000d28:	800f883a 	mov	r7,r16
 2000d2c:	9809883a 	mov	r4,r19
 2000d30:	183ee83a 	callr	r3
 2000d34:	88a3883a 	add	r17,r17,r2
 2000d38:	80a1c83a 	sub	r16,r16,r2
 2000d3c:	00bff616 	blt	zero,r2,2000d18 <_fflush_r+0x100>
 2000d40:	9080030b 	ldhu	r2,12(r18)
 2000d44:	00ffffc4 	movi	r3,-1
 2000d48:	10801014 	ori	r2,r2,64
 2000d4c:	9080030d 	sth	r2,12(r18)
 2000d50:	1805883a 	mov	r2,r3
 2000d54:	dfc00417 	ldw	ra,16(sp)
 2000d58:	dcc00317 	ldw	r19,12(sp)
 2000d5c:	dc800217 	ldw	r18,8(sp)
 2000d60:	dc400117 	ldw	r17,4(sp)
 2000d64:	dc000017 	ldw	r16,0(sp)
 2000d68:	dec00504 	addi	sp,sp,20
 2000d6c:	f800283a 	ret
 2000d70:	90800f17 	ldw	r2,60(r18)
 2000d74:	00bfbe16 	blt	zero,r2,2000c70 <_fflush_r+0x58>
 2000d78:	0007883a 	mov	r3,zero
 2000d7c:	1805883a 	mov	r2,r3
 2000d80:	dfc00417 	ldw	ra,16(sp)
 2000d84:	dcc00317 	ldw	r19,12(sp)
 2000d88:	dc800217 	ldw	r18,8(sp)
 2000d8c:	dc400117 	ldw	r17,4(sp)
 2000d90:	dc000017 	ldw	r16,0(sp)
 2000d94:	dec00504 	addi	sp,sp,20
 2000d98:	f800283a 	ret
 2000d9c:	2000eb00 	call	2000eb0 <__sinit>
 2000da0:	003fa806 	br	2000c44 <_fflush_r+0x2c>
 2000da4:	90800517 	ldw	r2,20(r18)
 2000da8:	90800215 	stw	r2,8(r18)
 2000dac:	003fda06 	br	2000d18 <_fflush_r+0x100>
 2000db0:	90800117 	ldw	r2,4(r18)
 2000db4:	90c00c17 	ldw	r3,48(r18)
 2000db8:	80a1c83a 	sub	r16,r16,r2
 2000dbc:	183fb426 	beq	r3,zero,2000c90 <_fflush_r+0x78>
 2000dc0:	90800f17 	ldw	r2,60(r18)
 2000dc4:	80a1c83a 	sub	r16,r16,r2
 2000dc8:	003fb106 	br	2000c90 <_fflush_r+0x78>
 2000dcc:	91400717 	ldw	r5,28(r18)
 2000dd0:	9809883a 	mov	r4,r19
 2000dd4:	000d883a 	mov	r6,zero
 2000dd8:	01c00044 	movi	r7,1
 2000ddc:	403ee83a 	callr	r8
 2000de0:	1021883a 	mov	r16,r2
 2000de4:	00bfffc4 	movi	r2,-1
 2000de8:	80800226 	beq	r16,r2,2000df4 <_fflush_r+0x1dc>
 2000dec:	92000a17 	ldw	r8,40(r18)
 2000df0:	003fa406 	br	2000c84 <_fflush_r+0x6c>
 2000df4:	98c00017 	ldw	r3,0(r19)
 2000df8:	00800744 	movi	r2,29
 2000dfc:	18bfde26 	beq	r3,r2,2000d78 <_fflush_r+0x160>
 2000e00:	9080030b 	ldhu	r2,12(r18)
 2000e04:	8007883a 	mov	r3,r16
 2000e08:	10801014 	ori	r2,r2,64
 2000e0c:	9080030d 	sth	r2,12(r18)
 2000e10:	003fcf06 	br	2000d50 <_fflush_r+0x138>

02000e14 <fflush>:
 2000e14:	01408034 	movhi	r5,512
 2000e18:	29430604 	addi	r5,r5,3096
 2000e1c:	2007883a 	mov	r3,r4
 2000e20:	20000526 	beq	r4,zero,2000e38 <fflush+0x24>
 2000e24:	00808074 	movhi	r2,513
 2000e28:	10968904 	addi	r2,r2,23076
 2000e2c:	11000017 	ldw	r4,0(r2)
 2000e30:	180b883a 	mov	r5,r3
 2000e34:	2000c181 	jmpi	2000c18 <_fflush_r>
 2000e38:	00808074 	movhi	r2,513
 2000e3c:	10968a04 	addi	r2,r2,23080
 2000e40:	11000017 	ldw	r4,0(r2)
 2000e44:	2001dac1 	jmpi	2001dac <_fwalk_reent>

02000e48 <std>:
 2000e48:	00808034 	movhi	r2,512
 2000e4c:	108baf04 	addi	r2,r2,11964
 2000e50:	20800b15 	stw	r2,44(r4)
 2000e54:	00808034 	movhi	r2,512
 2000e58:	108bea04 	addi	r2,r2,12200
 2000e5c:	20800815 	stw	r2,32(r4)
 2000e60:	00c08034 	movhi	r3,512
 2000e64:	18cbcb04 	addi	r3,r3,12076
 2000e68:	00808034 	movhi	r2,512
 2000e6c:	108bb104 	addi	r2,r2,11972
 2000e70:	2140030d 	sth	r5,12(r4)
 2000e74:	2180038d 	sth	r6,14(r4)
 2000e78:	20c00915 	stw	r3,36(r4)
 2000e7c:	20800a15 	stw	r2,40(r4)
 2000e80:	20000015 	stw	zero,0(r4)
 2000e84:	20000115 	stw	zero,4(r4)
 2000e88:	20000215 	stw	zero,8(r4)
 2000e8c:	20000415 	stw	zero,16(r4)
 2000e90:	20000515 	stw	zero,20(r4)
 2000e94:	20000615 	stw	zero,24(r4)
 2000e98:	21000715 	stw	r4,28(r4)
 2000e9c:	f800283a 	ret

02000ea0 <__sfp_lock_acquire>:
 2000ea0:	f800283a 	ret

02000ea4 <__sfp_lock_release>:
 2000ea4:	f800283a 	ret

02000ea8 <__sinit_lock_acquire>:
 2000ea8:	f800283a 	ret

02000eac <__sinit_lock_release>:
 2000eac:	f800283a 	ret

02000eb0 <__sinit>:
 2000eb0:	20800e17 	ldw	r2,56(r4)
 2000eb4:	defffd04 	addi	sp,sp,-12
 2000eb8:	dc400115 	stw	r17,4(sp)
 2000ebc:	dc000015 	stw	r16,0(sp)
 2000ec0:	dfc00215 	stw	ra,8(sp)
 2000ec4:	04400044 	movi	r17,1
 2000ec8:	01400104 	movi	r5,4
 2000ecc:	000d883a 	mov	r6,zero
 2000ed0:	2021883a 	mov	r16,r4
 2000ed4:	2200bb04 	addi	r8,r4,748
 2000ed8:	200f883a 	mov	r7,r4
 2000edc:	10000526 	beq	r2,zero,2000ef4 <__sinit+0x44>
 2000ee0:	dfc00217 	ldw	ra,8(sp)
 2000ee4:	dc400117 	ldw	r17,4(sp)
 2000ee8:	dc000017 	ldw	r16,0(sp)
 2000eec:	dec00304 	addi	sp,sp,12
 2000ef0:	f800283a 	ret
 2000ef4:	21000117 	ldw	r4,4(r4)
 2000ef8:	00808034 	movhi	r2,512
 2000efc:	1083e504 	addi	r2,r2,3988
 2000f00:	00c000c4 	movi	r3,3
 2000f04:	80800f15 	stw	r2,60(r16)
 2000f08:	80c0b915 	stw	r3,740(r16)
 2000f0c:	8200ba15 	stw	r8,744(r16)
 2000f10:	84400e15 	stw	r17,56(r16)
 2000f14:	8000b815 	stw	zero,736(r16)
 2000f18:	2000e480 	call	2000e48 <std>
 2000f1c:	81000217 	ldw	r4,8(r16)
 2000f20:	880d883a 	mov	r6,r17
 2000f24:	800f883a 	mov	r7,r16
 2000f28:	01400284 	movi	r5,10
 2000f2c:	2000e480 	call	2000e48 <std>
 2000f30:	81000317 	ldw	r4,12(r16)
 2000f34:	800f883a 	mov	r7,r16
 2000f38:	01400484 	movi	r5,18
 2000f3c:	01800084 	movi	r6,2
 2000f40:	dfc00217 	ldw	ra,8(sp)
 2000f44:	dc400117 	ldw	r17,4(sp)
 2000f48:	dc000017 	ldw	r16,0(sp)
 2000f4c:	dec00304 	addi	sp,sp,12
 2000f50:	2000e481 	jmpi	2000e48 <std>

02000f54 <__fp_lock>:
 2000f54:	0005883a 	mov	r2,zero
 2000f58:	f800283a 	ret

02000f5c <__fp_unlock>:
 2000f5c:	0005883a 	mov	r2,zero
 2000f60:	f800283a 	ret

02000f64 <__fp_unlock_all>:
 2000f64:	00808074 	movhi	r2,513
 2000f68:	10968904 	addi	r2,r2,23076
 2000f6c:	11000017 	ldw	r4,0(r2)
 2000f70:	01408034 	movhi	r5,512
 2000f74:	2943d704 	addi	r5,r5,3932
 2000f78:	2001e741 	jmpi	2001e74 <_fwalk>

02000f7c <__fp_lock_all>:
 2000f7c:	00808074 	movhi	r2,513
 2000f80:	10968904 	addi	r2,r2,23076
 2000f84:	11000017 	ldw	r4,0(r2)
 2000f88:	01408034 	movhi	r5,512
 2000f8c:	2943d504 	addi	r5,r5,3924
 2000f90:	2001e741 	jmpi	2001e74 <_fwalk>

02000f94 <_cleanup_r>:
 2000f94:	01408034 	movhi	r5,512
 2000f98:	29430104 	addi	r5,r5,3076
 2000f9c:	2001e741 	jmpi	2001e74 <_fwalk>

02000fa0 <_cleanup>:
 2000fa0:	00808074 	movhi	r2,513
 2000fa4:	10968a04 	addi	r2,r2,23080
 2000fa8:	11000017 	ldw	r4,0(r2)
 2000fac:	2000f941 	jmpi	2000f94 <_cleanup_r>

02000fb0 <__sfmoreglue>:
 2000fb0:	defffc04 	addi	sp,sp,-16
 2000fb4:	dc000015 	stw	r16,0(sp)
 2000fb8:	2821883a 	mov	r16,r5
 2000fbc:	dc400115 	stw	r17,4(sp)
 2000fc0:	01401704 	movi	r5,92
 2000fc4:	2023883a 	mov	r17,r4
 2000fc8:	8009883a 	mov	r4,r16
 2000fcc:	dfc00315 	stw	ra,12(sp)
 2000fd0:	dcc00215 	stw	r19,8(sp)
 2000fd4:	2000abc0 	call	2000abc <__mulsi3>
 2000fd8:	11400304 	addi	r5,r2,12
 2000fdc:	8809883a 	mov	r4,r17
 2000fe0:	1027883a 	mov	r19,r2
 2000fe4:	20021d40 	call	20021d4 <_malloc_r>
 2000fe8:	10c00304 	addi	r3,r2,12
 2000fec:	1023883a 	mov	r17,r2
 2000ff0:	1809883a 	mov	r4,r3
 2000ff4:	980d883a 	mov	r6,r19
 2000ff8:	000b883a 	mov	r5,zero
 2000ffc:	10000b26 	beq	r2,zero,200102c <__sfmoreglue+0x7c>
 2001000:	14000115 	stw	r16,4(r2)
 2001004:	10c00215 	stw	r3,8(r2)
 2001008:	10000015 	stw	zero,0(r2)
 200100c:	20029b40 	call	20029b4 <memset>
 2001010:	8805883a 	mov	r2,r17
 2001014:	dfc00317 	ldw	ra,12(sp)
 2001018:	dcc00217 	ldw	r19,8(sp)
 200101c:	dc400117 	ldw	r17,4(sp)
 2001020:	dc000017 	ldw	r16,0(sp)
 2001024:	dec00404 	addi	sp,sp,16
 2001028:	f800283a 	ret
 200102c:	0023883a 	mov	r17,zero
 2001030:	8805883a 	mov	r2,r17
 2001034:	dfc00317 	ldw	ra,12(sp)
 2001038:	dcc00217 	ldw	r19,8(sp)
 200103c:	dc400117 	ldw	r17,4(sp)
 2001040:	dc000017 	ldw	r16,0(sp)
 2001044:	dec00404 	addi	sp,sp,16
 2001048:	f800283a 	ret

0200104c <__sfp>:
 200104c:	defffd04 	addi	sp,sp,-12
 2001050:	00808074 	movhi	r2,513
 2001054:	10968a04 	addi	r2,r2,23080
 2001058:	dc000015 	stw	r16,0(sp)
 200105c:	14000017 	ldw	r16,0(r2)
 2001060:	dc400115 	stw	r17,4(sp)
 2001064:	dfc00215 	stw	ra,8(sp)
 2001068:	80800e17 	ldw	r2,56(r16)
 200106c:	2023883a 	mov	r17,r4
 2001070:	10002626 	beq	r2,zero,200110c <__sfp+0xc0>
 2001074:	8400b804 	addi	r16,r16,736
 2001078:	80800117 	ldw	r2,4(r16)
 200107c:	81000217 	ldw	r4,8(r16)
 2001080:	10ffffc4 	addi	r3,r2,-1
 2001084:	18000916 	blt	r3,zero,20010ac <__sfp+0x60>
 2001088:	2080030f 	ldh	r2,12(r4)
 200108c:	10000b26 	beq	r2,zero,20010bc <__sfp+0x70>
 2001090:	017fffc4 	movi	r5,-1
 2001094:	00000206 	br	20010a0 <__sfp+0x54>
 2001098:	2080030f 	ldh	r2,12(r4)
 200109c:	10000726 	beq	r2,zero,20010bc <__sfp+0x70>
 20010a0:	18ffffc4 	addi	r3,r3,-1
 20010a4:	21001704 	addi	r4,r4,92
 20010a8:	197ffb1e 	bne	r3,r5,2001098 <__sfp+0x4c>
 20010ac:	80800017 	ldw	r2,0(r16)
 20010b0:	10001926 	beq	r2,zero,2001118 <__sfp+0xcc>
 20010b4:	1021883a 	mov	r16,r2
 20010b8:	003fef06 	br	2001078 <__sfp+0x2c>
 20010bc:	00bfffc4 	movi	r2,-1
 20010c0:	00c00044 	movi	r3,1
 20010c4:	2080038d 	sth	r2,14(r4)
 20010c8:	20c0030d 	sth	r3,12(r4)
 20010cc:	20000015 	stw	zero,0(r4)
 20010d0:	20000215 	stw	zero,8(r4)
 20010d4:	20000115 	stw	zero,4(r4)
 20010d8:	20000415 	stw	zero,16(r4)
 20010dc:	20000515 	stw	zero,20(r4)
 20010e0:	20000615 	stw	zero,24(r4)
 20010e4:	20000c15 	stw	zero,48(r4)
 20010e8:	20000d15 	stw	zero,52(r4)
 20010ec:	20001115 	stw	zero,68(r4)
 20010f0:	20001215 	stw	zero,72(r4)
 20010f4:	2005883a 	mov	r2,r4
 20010f8:	dfc00217 	ldw	ra,8(sp)
 20010fc:	dc400117 	ldw	r17,4(sp)
 2001100:	dc000017 	ldw	r16,0(sp)
 2001104:	dec00304 	addi	sp,sp,12
 2001108:	f800283a 	ret
 200110c:	8009883a 	mov	r4,r16
 2001110:	2000eb00 	call	2000eb0 <__sinit>
 2001114:	003fd706 	br	2001074 <__sfp+0x28>
 2001118:	8809883a 	mov	r4,r17
 200111c:	01400104 	movi	r5,4
 2001120:	2000fb00 	call	2000fb0 <__sfmoreglue>
 2001124:	80800015 	stw	r2,0(r16)
 2001128:	103fe21e 	bne	r2,zero,20010b4 <__sfp+0x68>
 200112c:	00800304 	movi	r2,12
 2001130:	0009883a 	mov	r4,zero
 2001134:	88800015 	stw	r2,0(r17)
 2001138:	003fee06 	br	20010f4 <__sfp+0xa8>

0200113c <_fopen_r>:
 200113c:	defffa04 	addi	sp,sp,-24
 2001140:	dcc00415 	stw	r19,16(sp)
 2001144:	2827883a 	mov	r19,r5
 2001148:	300b883a 	mov	r5,r6
 200114c:	d80d883a 	mov	r6,sp
 2001150:	dc800315 	stw	r18,12(sp)
 2001154:	dc400215 	stw	r17,8(sp)
 2001158:	dc000115 	stw	r16,4(sp)
 200115c:	dfc00515 	stw	ra,20(sp)
 2001160:	2021883a 	mov	r16,r4
 2001164:	200827c0 	call	200827c <__sflags>
 2001168:	1025883a 	mov	r18,r2
 200116c:	8009883a 	mov	r4,r16
 2001170:	0023883a 	mov	r17,zero
 2001174:	1000081e 	bne	r2,zero,2001198 <_fopen_r+0x5c>
 2001178:	8805883a 	mov	r2,r17
 200117c:	dfc00517 	ldw	ra,20(sp)
 2001180:	dcc00417 	ldw	r19,16(sp)
 2001184:	dc800317 	ldw	r18,12(sp)
 2001188:	dc400217 	ldw	r17,8(sp)
 200118c:	dc000117 	ldw	r16,4(sp)
 2001190:	dec00604 	addi	sp,sp,24
 2001194:	f800283a 	ret
 2001198:	200104c0 	call	200104c <__sfp>
 200119c:	1023883a 	mov	r17,r2
 20011a0:	980b883a 	mov	r5,r19
 20011a4:	8009883a 	mov	r4,r16
 20011a8:	01c06d84 	movi	r7,438
 20011ac:	103ff226 	beq	r2,zero,2001178 <_fopen_r+0x3c>
 20011b0:	d9800017 	ldw	r6,0(sp)
 20011b4:	2002a4c0 	call	2002a4c <_open_r>
 20011b8:	10001816 	blt	r2,zero,200121c <_fopen_r+0xe0>
 20011bc:	00c08034 	movhi	r3,512
 20011c0:	18cbcb04 	addi	r3,r3,12076
 20011c4:	923fffcc 	andi	r8,r18,65535
 20011c8:	8880038d 	sth	r2,14(r17)
 20011cc:	00808034 	movhi	r2,512
 20011d0:	108bea04 	addi	r2,r2,12200
 20011d4:	88800815 	stw	r2,32(r17)
 20011d8:	88c00915 	stw	r3,36(r17)
 20011dc:	00808034 	movhi	r2,512
 20011e0:	108bb104 	addi	r2,r2,11972
 20011e4:	00c08034 	movhi	r3,512
 20011e8:	18cbaf04 	addi	r3,r3,11964
 20011ec:	4200400c 	andi	r8,r8,256
 20011f0:	8c80030d 	sth	r18,12(r17)
 20011f4:	8009883a 	mov	r4,r16
 20011f8:	880b883a 	mov	r5,r17
 20011fc:	000d883a 	mov	r6,zero
 2001200:	01c00084 	movi	r7,2
 2001204:	88800a15 	stw	r2,40(r17)
 2001208:	88c00b15 	stw	r3,44(r17)
 200120c:	8c400715 	stw	r17,28(r17)
 2001210:	403fd926 	beq	r8,zero,2001178 <_fopen_r+0x3c>
 2001214:	20018d80 	call	20018d8 <_fseek_r>
 2001218:	003fd706 	br	2001178 <_fopen_r+0x3c>
 200121c:	2000ea00 	call	2000ea0 <__sfp_lock_acquire>
 2001220:	8800030d 	sth	zero,12(r17)
 2001224:	2000ea40 	call	2000ea4 <__sfp_lock_release>
 2001228:	0023883a 	mov	r17,zero
 200122c:	003fd206 	br	2001178 <_fopen_r+0x3c>

02001230 <fopen>:
 2001230:	01808074 	movhi	r6,513
 2001234:	31968904 	addi	r6,r6,23076
 2001238:	2007883a 	mov	r3,r4
 200123c:	31000017 	ldw	r4,0(r6)
 2001240:	280d883a 	mov	r6,r5
 2001244:	180b883a 	mov	r5,r3
 2001248:	200113c1 	jmpi	200113c <_fopen_r>

0200124c <_fread_r>:
 200124c:	defff504 	addi	sp,sp,-44
 2001250:	dd800715 	stw	r22,28(sp)
 2001254:	dc000115 	stw	r16,4(sp)
 2001258:	202d883a 	mov	r22,r4
 200125c:	2821883a 	mov	r16,r5
 2001260:	3809883a 	mov	r4,r7
 2001264:	300b883a 	mov	r5,r6
 2001268:	df000915 	stw	fp,36(sp)
 200126c:	ddc00815 	stw	r23,32(sp)
 2001270:	dcc00415 	stw	r19,16(sp)
 2001274:	dfc00a15 	stw	ra,40(sp)
 2001278:	dd400615 	stw	r21,24(sp)
 200127c:	dd000515 	stw	r20,20(sp)
 2001280:	dc800315 	stw	r18,12(sp)
 2001284:	dc400215 	stw	r17,8(sp)
 2001288:	d9800015 	stw	r6,0(sp)
 200128c:	3839883a 	mov	fp,r7
 2001290:	2000abc0 	call	2000abc <__mulsi3>
 2001294:	102f883a 	mov	r23,r2
 2001298:	dcc00b17 	ldw	r19,44(sp)
 200129c:	10005926 	beq	r2,zero,2001404 <_fread_r+0x1b8>
 20012a0:	b0000226 	beq	r22,zero,20012ac <_fread_r+0x60>
 20012a4:	b0800e17 	ldw	r2,56(r22)
 20012a8:	10005826 	beq	r2,zero,200140c <_fread_r+0x1c0>
 20012ac:	9c400117 	ldw	r17,4(r19)
 20012b0:	88005a16 	blt	r17,zero,200141c <_fread_r+0x1d0>
 20012b4:	9880030b 	ldhu	r2,12(r19)
 20012b8:	8029883a 	mov	r20,r16
 20012bc:	1080008c 	andi	r2,r2,2
 20012c0:	1000221e 	bne	r2,zero,200134c <_fread_r+0x100>
 20012c4:	b825883a 	mov	r18,r23
 20012c8:	00000106 	br	20012d0 <_fread_r+0x84>
 20012cc:	9c400117 	ldw	r17,4(r19)
 20012d0:	a009883a 	mov	r4,r20
 20012d4:	880d883a 	mov	r6,r17
 20012d8:	8c80552e 	bgeu	r17,r18,2001430 <_fread_r+0x1e4>
 20012dc:	99400017 	ldw	r5,0(r19)
 20012e0:	a469883a 	add	r20,r20,r17
 20012e4:	9465c83a 	sub	r18,r18,r17
 20012e8:	20029140 	call	2002914 <memcpy>
 20012ec:	98800017 	ldw	r2,0(r19)
 20012f0:	b009883a 	mov	r4,r22
 20012f4:	980b883a 	mov	r5,r19
 20012f8:	1461883a 	add	r16,r2,r17
 20012fc:	9c000015 	stw	r16,0(r19)
 2001300:	2002bf00 	call	2002bf0 <__srefill_r>
 2001304:	103ff126 	beq	r2,zero,20012cc <_fread_r+0x80>
 2001308:	d9400017 	ldw	r5,0(sp)
 200130c:	bc89c83a 	sub	r4,r23,r18
 2001310:	200fad00 	call	200fad0 <__udivsi3>
 2001314:	1039883a 	mov	fp,r2
 2001318:	e005883a 	mov	r2,fp
 200131c:	dfc00a17 	ldw	ra,40(sp)
 2001320:	df000917 	ldw	fp,36(sp)
 2001324:	ddc00817 	ldw	r23,32(sp)
 2001328:	dd800717 	ldw	r22,28(sp)
 200132c:	dd400617 	ldw	r21,24(sp)
 2001330:	dd000517 	ldw	r20,20(sp)
 2001334:	dcc00417 	ldw	r19,16(sp)
 2001338:	dc800317 	ldw	r18,12(sp)
 200133c:	dc400217 	ldw	r17,8(sp)
 2001340:	dc000117 	ldw	r16,4(sp)
 2001344:	dec00b04 	addi	sp,sp,44
 2001348:	f800283a 	ret
 200134c:	b825883a 	mov	r18,r23
 2001350:	8dc03536 	bltu	r17,r23,2001428 <_fread_r+0x1dc>
 2001354:	99400017 	ldw	r5,0(r19)
 2001358:	a009883a 	mov	r4,r20
 200135c:	900d883a 	mov	r6,r18
 2001360:	20029140 	call	2002914 <memcpy>
 2001364:	9c000017 	ldw	r16,0(r19)
 2001368:	98800117 	ldw	r2,4(r19)
 200136c:	99400c17 	ldw	r5,48(r19)
 2001370:	84a1883a 	add	r16,r16,r18
 2001374:	14a3c83a 	sub	r17,r2,r18
 2001378:	a4ab883a 	add	r21,r20,r18
 200137c:	9c400115 	stw	r17,4(r19)
 2001380:	9c000015 	stw	r16,0(r19)
 2001384:	bca9c83a 	sub	r20,r23,r18
 2001388:	28000826 	beq	r5,zero,20013ac <_fread_r+0x160>
 200138c:	a03fe226 	beq	r20,zero,2001318 <_fread_r+0xcc>
 2001390:	98801004 	addi	r2,r19,64
 2001394:	28800326 	beq	r5,r2,20013a4 <_fread_r+0x158>
 2001398:	b009883a 	mov	r4,r22
 200139c:	20015c40 	call	20015c4 <_free_r>
 20013a0:	9c000017 	ldw	r16,0(r19)
 20013a4:	98000c15 	stw	zero,48(r19)
 20013a8:	00000106 	br	20013b0 <_fread_r+0x164>
 20013ac:	a03fda26 	beq	r20,zero,2001318 <_fread_r+0xcc>
 20013b0:	9c800417 	ldw	r18,16(r19)
 20013b4:	9c400517 	ldw	r17,20(r19)
 20013b8:	9d400015 	stw	r21,0(r19)
 20013bc:	9d400415 	stw	r21,16(r19)
 20013c0:	9d000515 	stw	r20,20(r19)
 20013c4:	b009883a 	mov	r4,r22
 20013c8:	980b883a 	mov	r5,r19
 20013cc:	2002bf00 	call	2002bf0 <__srefill_r>
 20013d0:	98c00117 	ldw	r3,4(r19)
 20013d4:	9c800415 	stw	r18,16(r19)
 20013d8:	9c400515 	stw	r17,20(r19)
 20013dc:	a8eb883a 	add	r21,r21,r3
 20013e0:	9c000015 	stw	r16,0(r19)
 20013e4:	a0e9c83a 	sub	r20,r20,r3
 20013e8:	98000115 	stw	zero,4(r19)
 20013ec:	103fef26 	beq	r2,zero,20013ac <_fread_r+0x160>
 20013f0:	d9400017 	ldw	r5,0(sp)
 20013f4:	bd09c83a 	sub	r4,r23,r20
 20013f8:	200fad00 	call	200fad0 <__udivsi3>
 20013fc:	1039883a 	mov	fp,r2
 2001400:	003fc506 	br	2001318 <_fread_r+0xcc>
 2001404:	0039883a 	mov	fp,zero
 2001408:	003fc306 	br	2001318 <_fread_r+0xcc>
 200140c:	b009883a 	mov	r4,r22
 2001410:	2000eb00 	call	2000eb0 <__sinit>
 2001414:	9c400117 	ldw	r17,4(r19)
 2001418:	883fa60e 	bge	r17,zero,20012b4 <_fread_r+0x68>
 200141c:	0023883a 	mov	r17,zero
 2001420:	98000115 	stw	zero,4(r19)
 2001424:	003fa306 	br	20012b4 <_fread_r+0x68>
 2001428:	8825883a 	mov	r18,r17
 200142c:	003fc906 	br	2001354 <_fread_r+0x108>
 2001430:	99400017 	ldw	r5,0(r19)
 2001434:	900d883a 	mov	r6,r18
 2001438:	20029140 	call	2002914 <memcpy>
 200143c:	98c00117 	ldw	r3,4(r19)
 2001440:	98800017 	ldw	r2,0(r19)
 2001444:	1c87c83a 	sub	r3,r3,r18
 2001448:	1485883a 	add	r2,r2,r18
 200144c:	98800015 	stw	r2,0(r19)
 2001450:	98c00115 	stw	r3,4(r19)
 2001454:	003fb006 	br	2001318 <_fread_r+0xcc>

02001458 <fread>:
 2001458:	00808074 	movhi	r2,513
 200145c:	10968904 	addi	r2,r2,23076
 2001460:	2017883a 	mov	r11,r4
 2001464:	11000017 	ldw	r4,0(r2)
 2001468:	defffe04 	addi	sp,sp,-8
 200146c:	3013883a 	mov	r9,r6
 2001470:	2805883a 	mov	r2,r5
 2001474:	d9c00015 	stw	r7,0(sp)
 2001478:	580b883a 	mov	r5,r11
 200147c:	100d883a 	mov	r6,r2
 2001480:	480f883a 	mov	r7,r9
 2001484:	dfc00115 	stw	ra,4(sp)
 2001488:	200124c0 	call	200124c <_fread_r>
 200148c:	dfc00117 	ldw	ra,4(sp)
 2001490:	dec00204 	addi	sp,sp,8
 2001494:	f800283a 	ret

02001498 <_malloc_trim_r>:
 2001498:	defffb04 	addi	sp,sp,-20
 200149c:	dcc00315 	stw	r19,12(sp)
 20014a0:	04c08074 	movhi	r19,513
 20014a4:	9cd0ee04 	addi	r19,r19,17336
 20014a8:	dc800215 	stw	r18,8(sp)
 20014ac:	dc400115 	stw	r17,4(sp)
 20014b0:	dc000015 	stw	r16,0(sp)
 20014b4:	2823883a 	mov	r17,r5
 20014b8:	2025883a 	mov	r18,r4
 20014bc:	dfc00415 	stw	ra,16(sp)
 20014c0:	2010a040 	call	2010a04 <__malloc_lock>
 20014c4:	98800217 	ldw	r2,8(r19)
 20014c8:	9009883a 	mov	r4,r18
 20014cc:	000b883a 	mov	r5,zero
 20014d0:	10c00117 	ldw	r3,4(r2)
 20014d4:	00bfff04 	movi	r2,-4
 20014d8:	18a0703a 	and	r16,r3,r2
 20014dc:	8463c83a 	sub	r17,r16,r17
 20014e0:	8c43fbc4 	addi	r17,r17,4079
 20014e4:	8822d33a 	srli	r17,r17,12
 20014e8:	0083ffc4 	movi	r2,4095
 20014ec:	8c7fffc4 	addi	r17,r17,-1
 20014f0:	8822933a 	slli	r17,r17,12
 20014f4:	1440060e 	bge	r2,r17,2001510 <_malloc_trim_r+0x78>
 20014f8:	2002dd00 	call	2002dd0 <_sbrk_r>
 20014fc:	98c00217 	ldw	r3,8(r19)
 2001500:	9009883a 	mov	r4,r18
 2001504:	044bc83a 	sub	r5,zero,r17
 2001508:	80c7883a 	add	r3,r16,r3
 200150c:	10c00926 	beq	r2,r3,2001534 <_malloc_trim_r+0x9c>
 2001510:	2010a240 	call	2010a24 <__malloc_unlock>
 2001514:	0005883a 	mov	r2,zero
 2001518:	dfc00417 	ldw	ra,16(sp)
 200151c:	dcc00317 	ldw	r19,12(sp)
 2001520:	dc800217 	ldw	r18,8(sp)
 2001524:	dc400117 	ldw	r17,4(sp)
 2001528:	dc000017 	ldw	r16,0(sp)
 200152c:	dec00504 	addi	sp,sp,20
 2001530:	f800283a 	ret
 2001534:	9009883a 	mov	r4,r18
 2001538:	2002dd00 	call	2002dd0 <_sbrk_r>
 200153c:	844dc83a 	sub	r6,r16,r17
 2001540:	00ffffc4 	movi	r3,-1
 2001544:	9009883a 	mov	r4,r18
 2001548:	000b883a 	mov	r5,zero
 200154c:	01c08074 	movhi	r7,513
 2001550:	39dd7704 	addi	r7,r7,30172
 2001554:	31800054 	ori	r6,r6,1
 2001558:	10c00926 	beq	r2,r3,2001580 <_malloc_trim_r+0xe8>
 200155c:	38800017 	ldw	r2,0(r7)
 2001560:	98c00217 	ldw	r3,8(r19)
 2001564:	9009883a 	mov	r4,r18
 2001568:	1445c83a 	sub	r2,r2,r17
 200156c:	38800015 	stw	r2,0(r7)
 2001570:	19800115 	stw	r6,4(r3)
 2001574:	2010a240 	call	2010a24 <__malloc_unlock>
 2001578:	00800044 	movi	r2,1
 200157c:	003fe606 	br	2001518 <_malloc_trim_r+0x80>
 2001580:	2002dd00 	call	2002dd0 <_sbrk_r>
 2001584:	99800217 	ldw	r6,8(r19)
 2001588:	100f883a 	mov	r7,r2
 200158c:	9009883a 	mov	r4,r18
 2001590:	1187c83a 	sub	r3,r2,r6
 2001594:	008003c4 	movi	r2,15
 2001598:	19400054 	ori	r5,r3,1
 200159c:	10ffdc0e 	bge	r2,r3,2001510 <_malloc_trim_r+0x78>
 20015a0:	00808074 	movhi	r2,513
 20015a4:	10968c04 	addi	r2,r2,23088
 20015a8:	10c00017 	ldw	r3,0(r2)
 20015ac:	00808074 	movhi	r2,513
 20015b0:	109d7704 	addi	r2,r2,30172
 20015b4:	31400115 	stw	r5,4(r6)
 20015b8:	38c7c83a 	sub	r3,r7,r3
 20015bc:	10c00015 	stw	r3,0(r2)
 20015c0:	003fd306 	br	2001510 <_malloc_trim_r+0x78>

020015c4 <_free_r>:
 20015c4:	defffd04 	addi	sp,sp,-12
 20015c8:	dc400115 	stw	r17,4(sp)
 20015cc:	dc000015 	stw	r16,0(sp)
 20015d0:	dfc00215 	stw	ra,8(sp)
 20015d4:	2821883a 	mov	r16,r5
 20015d8:	2023883a 	mov	r17,r4
 20015dc:	28005a26 	beq	r5,zero,2001748 <_free_r+0x184>
 20015e0:	2010a040 	call	2010a04 <__malloc_lock>
 20015e4:	823ffe04 	addi	r8,r16,-8
 20015e8:	41400117 	ldw	r5,4(r8)
 20015ec:	00bfff84 	movi	r2,-2
 20015f0:	02808074 	movhi	r10,513
 20015f4:	5290ee04 	addi	r10,r10,17336
 20015f8:	288e703a 	and	r7,r5,r2
 20015fc:	41cd883a 	add	r6,r8,r7
 2001600:	30c00117 	ldw	r3,4(r6)
 2001604:	51000217 	ldw	r4,8(r10)
 2001608:	00bfff04 	movi	r2,-4
 200160c:	1892703a 	and	r9,r3,r2
 2001610:	5017883a 	mov	r11,r10
 2001614:	31006726 	beq	r6,r4,20017b4 <_free_r+0x1f0>
 2001618:	2880004c 	andi	r2,r5,1
 200161c:	1005003a 	cmpeq	r2,r2,zero
 2001620:	32400115 	stw	r9,4(r6)
 2001624:	10001a1e 	bne	r2,zero,2001690 <_free_r+0xcc>
 2001628:	000b883a 	mov	r5,zero
 200162c:	3247883a 	add	r3,r6,r9
 2001630:	18800117 	ldw	r2,4(r3)
 2001634:	1080004c 	andi	r2,r2,1
 2001638:	1000231e 	bne	r2,zero,20016c8 <_free_r+0x104>
 200163c:	280ac03a 	cmpne	r5,r5,zero
 2001640:	3a4f883a 	add	r7,r7,r9
 2001644:	2800451e 	bne	r5,zero,200175c <_free_r+0x198>
 2001648:	31000217 	ldw	r4,8(r6)
 200164c:	00808074 	movhi	r2,513
 2001650:	1090f004 	addi	r2,r2,17344
 2001654:	20807b26 	beq	r4,r2,2001844 <_free_r+0x280>
 2001658:	30800317 	ldw	r2,12(r6)
 200165c:	3a07883a 	add	r3,r7,r8
 2001660:	19c00015 	stw	r7,0(r3)
 2001664:	11000215 	stw	r4,8(r2)
 2001668:	20800315 	stw	r2,12(r4)
 200166c:	38800054 	ori	r2,r7,1
 2001670:	40800115 	stw	r2,4(r8)
 2001674:	28001a26 	beq	r5,zero,20016e0 <_free_r+0x11c>
 2001678:	8809883a 	mov	r4,r17
 200167c:	dfc00217 	ldw	ra,8(sp)
 2001680:	dc400117 	ldw	r17,4(sp)
 2001684:	dc000017 	ldw	r16,0(sp)
 2001688:	dec00304 	addi	sp,sp,12
 200168c:	2010a241 	jmpi	2010a24 <__malloc_unlock>
 2001690:	80bffe17 	ldw	r2,-8(r16)
 2001694:	50c00204 	addi	r3,r10,8
 2001698:	4091c83a 	sub	r8,r8,r2
 200169c:	41000217 	ldw	r4,8(r8)
 20016a0:	388f883a 	add	r7,r7,r2
 20016a4:	20c06126 	beq	r4,r3,200182c <_free_r+0x268>
 20016a8:	40800317 	ldw	r2,12(r8)
 20016ac:	3247883a 	add	r3,r6,r9
 20016b0:	000b883a 	mov	r5,zero
 20016b4:	11000215 	stw	r4,8(r2)
 20016b8:	20800315 	stw	r2,12(r4)
 20016bc:	18800117 	ldw	r2,4(r3)
 20016c0:	1080004c 	andi	r2,r2,1
 20016c4:	103fdd26 	beq	r2,zero,200163c <_free_r+0x78>
 20016c8:	38800054 	ori	r2,r7,1
 20016cc:	3a07883a 	add	r3,r7,r8
 20016d0:	280ac03a 	cmpne	r5,r5,zero
 20016d4:	40800115 	stw	r2,4(r8)
 20016d8:	19c00015 	stw	r7,0(r3)
 20016dc:	283fe61e 	bne	r5,zero,2001678 <_free_r+0xb4>
 20016e0:	00807fc4 	movi	r2,511
 20016e4:	11c01f2e 	bgeu	r2,r7,2001764 <_free_r+0x1a0>
 20016e8:	3806d27a 	srli	r3,r7,9
 20016ec:	1800481e 	bne	r3,zero,2001810 <_free_r+0x24c>
 20016f0:	3804d0fa 	srli	r2,r7,3
 20016f4:	100690fa 	slli	r3,r2,3
 20016f8:	1acd883a 	add	r6,r3,r11
 20016fc:	31400217 	ldw	r5,8(r6)
 2001700:	31405926 	beq	r6,r5,2001868 <_free_r+0x2a4>
 2001704:	28800117 	ldw	r2,4(r5)
 2001708:	00ffff04 	movi	r3,-4
 200170c:	10c4703a 	and	r2,r2,r3
 2001710:	3880022e 	bgeu	r7,r2,200171c <_free_r+0x158>
 2001714:	29400217 	ldw	r5,8(r5)
 2001718:	317ffa1e 	bne	r6,r5,2001704 <_free_r+0x140>
 200171c:	29800317 	ldw	r6,12(r5)
 2001720:	41800315 	stw	r6,12(r8)
 2001724:	41400215 	stw	r5,8(r8)
 2001728:	8809883a 	mov	r4,r17
 200172c:	2a000315 	stw	r8,12(r5)
 2001730:	32000215 	stw	r8,8(r6)
 2001734:	dfc00217 	ldw	ra,8(sp)
 2001738:	dc400117 	ldw	r17,4(sp)
 200173c:	dc000017 	ldw	r16,0(sp)
 2001740:	dec00304 	addi	sp,sp,12
 2001744:	2010a241 	jmpi	2010a24 <__malloc_unlock>
 2001748:	dfc00217 	ldw	ra,8(sp)
 200174c:	dc400117 	ldw	r17,4(sp)
 2001750:	dc000017 	ldw	r16,0(sp)
 2001754:	dec00304 	addi	sp,sp,12
 2001758:	f800283a 	ret
 200175c:	31000217 	ldw	r4,8(r6)
 2001760:	003fbd06 	br	2001658 <_free_r+0x94>
 2001764:	3806d0fa 	srli	r3,r7,3
 2001768:	00800044 	movi	r2,1
 200176c:	51400117 	ldw	r5,4(r10)
 2001770:	180890fa 	slli	r4,r3,3
 2001774:	1807d0ba 	srai	r3,r3,2
 2001778:	22c9883a 	add	r4,r4,r11
 200177c:	21800217 	ldw	r6,8(r4)
 2001780:	10c4983a 	sll	r2,r2,r3
 2001784:	41000315 	stw	r4,12(r8)
 2001788:	41800215 	stw	r6,8(r8)
 200178c:	288ab03a 	or	r5,r5,r2
 2001790:	22000215 	stw	r8,8(r4)
 2001794:	8809883a 	mov	r4,r17
 2001798:	51400115 	stw	r5,4(r10)
 200179c:	32000315 	stw	r8,12(r6)
 20017a0:	dfc00217 	ldw	ra,8(sp)
 20017a4:	dc400117 	ldw	r17,4(sp)
 20017a8:	dc000017 	ldw	r16,0(sp)
 20017ac:	dec00304 	addi	sp,sp,12
 20017b0:	2010a241 	jmpi	2010a24 <__malloc_unlock>
 20017b4:	2880004c 	andi	r2,r5,1
 20017b8:	3a4d883a 	add	r6,r7,r9
 20017bc:	1000071e 	bne	r2,zero,20017dc <_free_r+0x218>
 20017c0:	80bffe17 	ldw	r2,-8(r16)
 20017c4:	4091c83a 	sub	r8,r8,r2
 20017c8:	41000317 	ldw	r4,12(r8)
 20017cc:	40c00217 	ldw	r3,8(r8)
 20017d0:	308d883a 	add	r6,r6,r2
 20017d4:	20c00215 	stw	r3,8(r4)
 20017d8:	19000315 	stw	r4,12(r3)
 20017dc:	00808074 	movhi	r2,513
 20017e0:	10968b04 	addi	r2,r2,23084
 20017e4:	11000017 	ldw	r4,0(r2)
 20017e8:	30c00054 	ori	r3,r6,1
 20017ec:	52000215 	stw	r8,8(r10)
 20017f0:	40c00115 	stw	r3,4(r8)
 20017f4:	313fa036 	bltu	r6,r4,2001678 <_free_r+0xb4>
 20017f8:	00808074 	movhi	r2,513
 20017fc:	109d6b04 	addi	r2,r2,30124
 2001800:	11400017 	ldw	r5,0(r2)
 2001804:	8809883a 	mov	r4,r17
 2001808:	20014980 	call	2001498 <_malloc_trim_r>
 200180c:	003f9a06 	br	2001678 <_free_r+0xb4>
 2001810:	00800104 	movi	r2,4
 2001814:	10c0072e 	bgeu	r2,r3,2001834 <_free_r+0x270>
 2001818:	00800504 	movi	r2,20
 200181c:	10c01936 	bltu	r2,r3,2001884 <_free_r+0x2c0>
 2001820:	188016c4 	addi	r2,r3,91
 2001824:	100690fa 	slli	r3,r2,3
 2001828:	003fb306 	br	20016f8 <_free_r+0x134>
 200182c:	01400044 	movi	r5,1
 2001830:	003f7e06 	br	200162c <_free_r+0x68>
 2001834:	3804d1ba 	srli	r2,r7,6
 2001838:	10800e04 	addi	r2,r2,56
 200183c:	100690fa 	slli	r3,r2,3
 2001840:	003fad06 	br	20016f8 <_free_r+0x134>
 2001844:	22000315 	stw	r8,12(r4)
 2001848:	22000215 	stw	r8,8(r4)
 200184c:	3a05883a 	add	r2,r7,r8
 2001850:	38c00054 	ori	r3,r7,1
 2001854:	11c00015 	stw	r7,0(r2)
 2001858:	41000215 	stw	r4,8(r8)
 200185c:	40c00115 	stw	r3,4(r8)
 2001860:	41000315 	stw	r4,12(r8)
 2001864:	003f8406 	br	2001678 <_free_r+0xb4>
 2001868:	1005d0ba 	srai	r2,r2,2
 200186c:	00c00044 	movi	r3,1
 2001870:	51000117 	ldw	r4,4(r10)
 2001874:	1886983a 	sll	r3,r3,r2
 2001878:	20c8b03a 	or	r4,r4,r3
 200187c:	51000115 	stw	r4,4(r10)
 2001880:	003fa706 	br	2001720 <_free_r+0x15c>
 2001884:	00801504 	movi	r2,84
 2001888:	10c00436 	bltu	r2,r3,200189c <_free_r+0x2d8>
 200188c:	3804d33a 	srli	r2,r7,12
 2001890:	10801b84 	addi	r2,r2,110
 2001894:	100690fa 	slli	r3,r2,3
 2001898:	003f9706 	br	20016f8 <_free_r+0x134>
 200189c:	00805504 	movi	r2,340
 20018a0:	10c00436 	bltu	r2,r3,20018b4 <_free_r+0x2f0>
 20018a4:	3804d3fa 	srli	r2,r7,15
 20018a8:	10801dc4 	addi	r2,r2,119
 20018ac:	100690fa 	slli	r3,r2,3
 20018b0:	003f9106 	br	20016f8 <_free_r+0x134>
 20018b4:	00815504 	movi	r2,1364
 20018b8:	10c0032e 	bgeu	r2,r3,20018c8 <_free_r+0x304>
 20018bc:	00801f84 	movi	r2,126
 20018c0:	00c0fc04 	movi	r3,1008
 20018c4:	003f8c06 	br	20016f8 <_free_r+0x134>
 20018c8:	3804d4ba 	srli	r2,r7,18
 20018cc:	10801f04 	addi	r2,r2,124
 20018d0:	100690fa 	slli	r3,r2,3
 20018d4:	003f8806 	br	20016f8 <_free_r+0x134>

020018d8 <_fseek_r>:
 20018d8:	deffe804 	addi	sp,sp,-96
 20018dc:	dd801515 	stw	r22,84(sp)
 20018e0:	dcc01215 	stw	r19,72(sp)
 20018e4:	dc801115 	stw	r18,68(sp)
 20018e8:	dc000f15 	stw	r16,60(sp)
 20018ec:	dfc01715 	stw	ra,92(sp)
 20018f0:	ddc01615 	stw	r23,88(sp)
 20018f4:	dd401415 	stw	r21,80(sp)
 20018f8:	dd001315 	stw	r20,76(sp)
 20018fc:	dc401015 	stw	r17,64(sp)
 2001900:	2025883a 	mov	r18,r4
 2001904:	2821883a 	mov	r16,r5
 2001908:	302d883a 	mov	r22,r6
 200190c:	3827883a 	mov	r19,r7
 2001910:	20000226 	beq	r4,zero,200191c <_fseek_r+0x44>
 2001914:	20800e17 	ldw	r2,56(r4)
 2001918:	10007826 	beq	r2,zero,2001afc <_fseek_r+0x224>
 200191c:	8080030b 	ldhu	r2,12(r16)
 2001920:	00c04204 	movi	r3,264
 2001924:	1080420c 	andi	r2,r2,264
 2001928:	10c07926 	beq	r2,r3,2001b10 <_fseek_r+0x238>
 200192c:	85400a17 	ldw	r21,40(r16)
 2001930:	a800ea26 	beq	r21,zero,2001cdc <_fseek_r+0x404>
 2001934:	00800044 	movi	r2,1
 2001938:	98805f26 	beq	r19,r2,2001ab8 <_fseek_r+0x1e0>
 200193c:	00800084 	movi	r2,2
 2001940:	98801026 	beq	r19,r2,2001984 <_fseek_r+0xac>
 2001944:	98000f26 	beq	r19,zero,2001984 <_fseek_r+0xac>
 2001948:	00800584 	movi	r2,22
 200194c:	013fffc4 	movi	r4,-1
 2001950:	90800015 	stw	r2,0(r18)
 2001954:	2005883a 	mov	r2,r4
 2001958:	dfc01717 	ldw	ra,92(sp)
 200195c:	ddc01617 	ldw	r23,88(sp)
 2001960:	dd801517 	ldw	r22,84(sp)
 2001964:	dd401417 	ldw	r21,80(sp)
 2001968:	dd001317 	ldw	r20,76(sp)
 200196c:	dcc01217 	ldw	r19,72(sp)
 2001970:	dc801117 	ldw	r18,68(sp)
 2001974:	dc401017 	ldw	r17,64(sp)
 2001978:	dc000f17 	ldw	r16,60(sp)
 200197c:	dec01804 	addi	sp,sp,96
 2001980:	f800283a 	ret
 2001984:	81800417 	ldw	r6,16(r16)
 2001988:	0023883a 	mov	r17,zero
 200198c:	002f883a 	mov	r23,zero
 2001990:	3000a626 	beq	r6,zero,2001c2c <_fseek_r+0x354>
 2001994:	8100030b 	ldhu	r4,12(r16)
 2001998:	2082068c 	andi	r2,r4,2074
 200199c:	1000081e 	bne	r2,zero,20019c0 <_fseek_r+0xe8>
 20019a0:	2081000c 	andi	r2,r4,1024
 20019a4:	10001b1e 	bne	r2,zero,2001a14 <_fseek_r+0x13c>
 20019a8:	00808034 	movhi	r2,512
 20019ac:	108bb104 	addi	r2,r2,11972
 20019b0:	a8800926 	beq	r21,r2,20019d8 <_fseek_r+0x100>
 20019b4:	8080030b 	ldhu	r2,12(r16)
 20019b8:	10820014 	ori	r2,r2,2048
 20019bc:	8080030d 	sth	r2,12(r16)
 20019c0:	9009883a 	mov	r4,r18
 20019c4:	800b883a 	mov	r5,r16
 20019c8:	2000c180 	call	2000c18 <_fflush_r>
 20019cc:	1000a326 	beq	r2,zero,2001c5c <_fseek_r+0x384>
 20019d0:	013fffc4 	movi	r4,-1
 20019d4:	003fdf06 	br	2001954 <_fseek_r+0x7c>
 20019d8:	8140038f 	ldh	r5,14(r16)
 20019dc:	283ff516 	blt	r5,zero,20019b4 <_fseek_r+0xdc>
 20019e0:	9009883a 	mov	r4,r18
 20019e4:	d80d883a 	mov	r6,sp
 20019e8:	2001d380 	call	2001d38 <_fstat_r>
 20019ec:	103ff11e 	bne	r2,zero,20019b4 <_fseek_r+0xdc>
 20019f0:	d8800117 	ldw	r2,4(sp)
 20019f4:	00e00014 	movui	r3,32768
 20019f8:	10bc000c 	andi	r2,r2,61440
 20019fc:	10ffed1e 	bne	r2,r3,20019b4 <_fseek_r+0xdc>
 2001a00:	80c0030b 	ldhu	r3,12(r16)
 2001a04:	00810004 	movi	r2,1024
 2001a08:	80801315 	stw	r2,76(r16)
 2001a0c:	1886b03a 	or	r3,r3,r2
 2001a10:	80c0030d 	sth	r3,12(r16)
 2001a14:	9800701e 	bne	r19,zero,2001bd8 <_fseek_r+0x300>
 2001a18:	b029883a 	mov	r20,r22
 2001a1c:	b804c03a 	cmpne	r2,r23,zero
 2001a20:	10003f1e 	bne	r2,zero,2001b20 <_fseek_r+0x248>
 2001a24:	8100030b 	ldhu	r4,12(r16)
 2001a28:	2084000c 	andi	r2,r4,4096
 2001a2c:	1000a126 	beq	r2,zero,2001cb4 <_fseek_r+0x3dc>
 2001a30:	81801417 	ldw	r6,80(r16)
 2001a34:	80c00117 	ldw	r3,4(r16)
 2001a38:	81400c17 	ldw	r5,48(r16)
 2001a3c:	30e3c83a 	sub	r17,r6,r3
 2001a40:	28008026 	beq	r5,zero,2001c44 <_fseek_r+0x36c>
 2001a44:	81c00f17 	ldw	r7,60(r16)
 2001a48:	89e3c83a 	sub	r17,r17,r7
 2001a4c:	80800e17 	ldw	r2,56(r16)
 2001a50:	81800417 	ldw	r6,16(r16)
 2001a54:	88c7883a 	add	r3,r17,r3
 2001a58:	1185c83a 	sub	r2,r2,r6
 2001a5c:	11cf883a 	add	r7,r2,r7
 2001a60:	1887c83a 	sub	r3,r3,r2
 2001a64:	2088000c 	andi	r2,r4,8192
 2001a68:	10003e1e 	bne	r2,zero,2001b64 <_fseek_r+0x28c>
 2001a6c:	a0c03d16 	blt	r20,r3,2001b64 <_fseek_r+0x28c>
 2001a70:	38c5883a 	add	r2,r7,r3
 2001a74:	a0803b2e 	bgeu	r20,r2,2001b64 <_fseek_r+0x28c>
 2001a78:	a0c5c83a 	sub	r2,r20,r3
 2001a7c:	3887c83a 	sub	r3,r7,r2
 2001a80:	3085883a 	add	r2,r6,r2
 2001a84:	80800015 	stw	r2,0(r16)
 2001a88:	80c00115 	stw	r3,4(r16)
 2001a8c:	28000526 	beq	r5,zero,2001aa4 <_fseek_r+0x1cc>
 2001a90:	80801004 	addi	r2,r16,64
 2001a94:	28800226 	beq	r5,r2,2001aa0 <_fseek_r+0x1c8>
 2001a98:	9009883a 	mov	r4,r18
 2001a9c:	20015c40 	call	20015c4 <_free_r>
 2001aa0:	80000c15 	stw	zero,48(r16)
 2001aa4:	8080030b 	ldhu	r2,12(r16)
 2001aa8:	0009883a 	mov	r4,zero
 2001aac:	10bff7cc 	andi	r2,r2,65503
 2001ab0:	8080030d 	sth	r2,12(r16)
 2001ab4:	003fa706 	br	2001954 <_fseek_r+0x7c>
 2001ab8:	9009883a 	mov	r4,r18
 2001abc:	800b883a 	mov	r5,r16
 2001ac0:	2000c180 	call	2000c18 <_fflush_r>
 2001ac4:	8100030b 	ldhu	r4,12(r16)
 2001ac8:	2084000c 	andi	r2,r4,4096
 2001acc:	10008726 	beq	r2,zero,2001cec <_fseek_r+0x414>
 2001ad0:	84401417 	ldw	r17,80(r16)
 2001ad4:	2080010c 	andi	r2,r4,4
 2001ad8:	1000171e 	bne	r2,zero,2001b38 <_fseek_r+0x260>
 2001adc:	2080020c 	andi	r2,r4,8
 2001ae0:	10003b26 	beq	r2,zero,2001bd0 <_fseek_r+0x2f8>
 2001ae4:	80800017 	ldw	r2,0(r16)
 2001ae8:	10003926 	beq	r2,zero,2001bd0 <_fseek_r+0x2f8>
 2001aec:	81800417 	ldw	r6,16(r16)
 2001af0:	1185c83a 	sub	r2,r2,r6
 2001af4:	88a3883a 	add	r17,r17,r2
 2001af8:	00001606 	br	2001b54 <_fseek_r+0x27c>
 2001afc:	2000eb00 	call	2000eb0 <__sinit>
 2001b00:	8080030b 	ldhu	r2,12(r16)
 2001b04:	00c04204 	movi	r3,264
 2001b08:	1080420c 	andi	r2,r2,264
 2001b0c:	10ff871e 	bne	r2,r3,200192c <_fseek_r+0x54>
 2001b10:	9009883a 	mov	r4,r18
 2001b14:	800b883a 	mov	r5,r16
 2001b18:	2000c180 	call	2000c18 <_fflush_r>
 2001b1c:	003f8306 	br	200192c <_fseek_r+0x54>
 2001b20:	81400c17 	ldw	r5,48(r16)
 2001b24:	28004526 	beq	r5,zero,2001c3c <_fseek_r+0x364>
 2001b28:	8100030b 	ldhu	r4,12(r16)
 2001b2c:	80c00117 	ldw	r3,4(r16)
 2001b30:	81c00f17 	ldw	r7,60(r16)
 2001b34:	003fc506 	br	2001a4c <_fseek_r+0x174>
 2001b38:	80c00117 	ldw	r3,4(r16)
 2001b3c:	80800c17 	ldw	r2,48(r16)
 2001b40:	88e3c83a 	sub	r17,r17,r3
 2001b44:	10002226 	beq	r2,zero,2001bd0 <_fseek_r+0x2f8>
 2001b48:	81c00f17 	ldw	r7,60(r16)
 2001b4c:	81800417 	ldw	r6,16(r16)
 2001b50:	89e3c83a 	sub	r17,r17,r7
 2001b54:	b46d883a 	add	r22,r22,r17
 2001b58:	0027883a 	mov	r19,zero
 2001b5c:	05c00044 	movi	r23,1
 2001b60:	003f8b06 	br	2001990 <_fseek_r+0xb8>
 2001b64:	80801317 	ldw	r2,76(r16)
 2001b68:	81400717 	ldw	r5,28(r16)
 2001b6c:	9009883a 	mov	r4,r18
 2001b70:	0085c83a 	sub	r2,zero,r2
 2001b74:	a0a2703a 	and	r17,r20,r2
 2001b78:	880d883a 	mov	r6,r17
 2001b7c:	000f883a 	mov	r7,zero
 2001b80:	a83ee83a 	callr	r21
 2001b84:	00ffffc4 	movi	r3,-1
 2001b88:	10ff8d26 	beq	r2,r3,20019c0 <_fseek_r+0xe8>
 2001b8c:	80800417 	ldw	r2,16(r16)
 2001b90:	81400c17 	ldw	r5,48(r16)
 2001b94:	80000115 	stw	zero,4(r16)
 2001b98:	80800015 	stw	r2,0(r16)
 2001b9c:	28000526 	beq	r5,zero,2001bb4 <_fseek_r+0x2dc>
 2001ba0:	80801004 	addi	r2,r16,64
 2001ba4:	28800226 	beq	r5,r2,2001bb0 <_fseek_r+0x2d8>
 2001ba8:	9009883a 	mov	r4,r18
 2001bac:	20015c40 	call	20015c4 <_free_r>
 2001bb0:	80000c15 	stw	zero,48(r16)
 2001bb4:	8080030b 	ldhu	r2,12(r16)
 2001bb8:	a463c83a 	sub	r17,r20,r17
 2001bbc:	10bff7cc 	andi	r2,r2,65503
 2001bc0:	8080030d 	sth	r2,12(r16)
 2001bc4:	88000c1e 	bne	r17,zero,2001bf8 <_fseek_r+0x320>
 2001bc8:	0009883a 	mov	r4,zero
 2001bcc:	003f6106 	br	2001954 <_fseek_r+0x7c>
 2001bd0:	81800417 	ldw	r6,16(r16)
 2001bd4:	003fdf06 	br	2001b54 <_fseek_r+0x27c>
 2001bd8:	8140038f 	ldh	r5,14(r16)
 2001bdc:	9009883a 	mov	r4,r18
 2001be0:	d80d883a 	mov	r6,sp
 2001be4:	2001d380 	call	2001d38 <_fstat_r>
 2001be8:	103f751e 	bne	r2,zero,20019c0 <_fseek_r+0xe8>
 2001bec:	d8800417 	ldw	r2,16(sp)
 2001bf0:	b0a9883a 	add	r20,r22,r2
 2001bf4:	003f8906 	br	2001a1c <_fseek_r+0x144>
 2001bf8:	9009883a 	mov	r4,r18
 2001bfc:	800b883a 	mov	r5,r16
 2001c00:	2002bf00 	call	2002bf0 <__srefill_r>
 2001c04:	103f6e1e 	bne	r2,zero,20019c0 <_fseek_r+0xe8>
 2001c08:	80c00117 	ldw	r3,4(r16)
 2001c0c:	1c7f6c36 	bltu	r3,r17,20019c0 <_fseek_r+0xe8>
 2001c10:	80800017 	ldw	r2,0(r16)
 2001c14:	1c47c83a 	sub	r3,r3,r17
 2001c18:	0009883a 	mov	r4,zero
 2001c1c:	1445883a 	add	r2,r2,r17
 2001c20:	80c00115 	stw	r3,4(r16)
 2001c24:	80800015 	stw	r2,0(r16)
 2001c28:	003f4a06 	br	2001954 <_fseek_r+0x7c>
 2001c2c:	9009883a 	mov	r4,r18
 2001c30:	800b883a 	mov	r5,r16
 2001c34:	20020180 	call	2002018 <__smakebuf_r>
 2001c38:	003f5606 	br	2001994 <_fseek_r+0xbc>
 2001c3c:	8100030b 	ldhu	r4,12(r16)
 2001c40:	80c00117 	ldw	r3,4(r16)
 2001c44:	80800017 	ldw	r2,0(r16)
 2001c48:	81800417 	ldw	r6,16(r16)
 2001c4c:	1185c83a 	sub	r2,r2,r6
 2001c50:	10cf883a 	add	r7,r2,r3
 2001c54:	8887c83a 	sub	r3,r17,r2
 2001c58:	003f8206 	br	2001a64 <_fseek_r+0x18c>
 2001c5c:	81400717 	ldw	r5,28(r16)
 2001c60:	b00d883a 	mov	r6,r22
 2001c64:	980f883a 	mov	r7,r19
 2001c68:	9009883a 	mov	r4,r18
 2001c6c:	a83ee83a 	callr	r21
 2001c70:	00ffffc4 	movi	r3,-1
 2001c74:	10ff5626 	beq	r2,r3,20019d0 <_fseek_r+0xf8>
 2001c78:	81400c17 	ldw	r5,48(r16)
 2001c7c:	28000526 	beq	r5,zero,2001c94 <_fseek_r+0x3bc>
 2001c80:	80801004 	addi	r2,r16,64
 2001c84:	28800226 	beq	r5,r2,2001c90 <_fseek_r+0x3b8>
 2001c88:	9009883a 	mov	r4,r18
 2001c8c:	20015c40 	call	20015c4 <_free_r>
 2001c90:	80000c15 	stw	zero,48(r16)
 2001c94:	8080030b 	ldhu	r2,12(r16)
 2001c98:	80c00417 	ldw	r3,16(r16)
 2001c9c:	0009883a 	mov	r4,zero
 2001ca0:	10bdf7cc 	andi	r2,r2,63455
 2001ca4:	8080030d 	sth	r2,12(r16)
 2001ca8:	80c00015 	stw	r3,0(r16)
 2001cac:	80000115 	stw	zero,4(r16)
 2001cb0:	003f2806 	br	2001954 <_fseek_r+0x7c>
 2001cb4:	81400717 	ldw	r5,28(r16)
 2001cb8:	000d883a 	mov	r6,zero
 2001cbc:	9009883a 	mov	r4,r18
 2001cc0:	01c00044 	movi	r7,1
 2001cc4:	a83ee83a 	callr	r21
 2001cc8:	100d883a 	mov	r6,r2
 2001ccc:	00bfffc4 	movi	r2,-1
 2001cd0:	30bf3b26 	beq	r6,r2,20019c0 <_fseek_r+0xe8>
 2001cd4:	8100030b 	ldhu	r4,12(r16)
 2001cd8:	003f5606 	br	2001a34 <_fseek_r+0x15c>
 2001cdc:	00800744 	movi	r2,29
 2001ce0:	013fffc4 	movi	r4,-1
 2001ce4:	90800015 	stw	r2,0(r18)
 2001ce8:	003f1a06 	br	2001954 <_fseek_r+0x7c>
 2001cec:	81400717 	ldw	r5,28(r16)
 2001cf0:	980f883a 	mov	r7,r19
 2001cf4:	9009883a 	mov	r4,r18
 2001cf8:	000d883a 	mov	r6,zero
 2001cfc:	a83ee83a 	callr	r21
 2001d00:	1023883a 	mov	r17,r2
 2001d04:	00bfffc4 	movi	r2,-1
 2001d08:	88bf3126 	beq	r17,r2,20019d0 <_fseek_r+0xf8>
 2001d0c:	8100030b 	ldhu	r4,12(r16)
 2001d10:	003f7006 	br	2001ad4 <_fseek_r+0x1fc>

02001d14 <fseek>:
 2001d14:	00808074 	movhi	r2,513
 2001d18:	10968904 	addi	r2,r2,23076
 2001d1c:	2013883a 	mov	r9,r4
 2001d20:	11000017 	ldw	r4,0(r2)
 2001d24:	2805883a 	mov	r2,r5
 2001d28:	300f883a 	mov	r7,r6
 2001d2c:	480b883a 	mov	r5,r9
 2001d30:	100d883a 	mov	r6,r2
 2001d34:	20018d81 	jmpi	20018d8 <_fseek_r>

02001d38 <_fstat_r>:
 2001d38:	defffd04 	addi	sp,sp,-12
 2001d3c:	dc000015 	stw	r16,0(sp)
 2001d40:	04008074 	movhi	r16,513
 2001d44:	841d6a04 	addi	r16,r16,30120
 2001d48:	dc400115 	stw	r17,4(sp)
 2001d4c:	80000015 	stw	zero,0(r16)
 2001d50:	2023883a 	mov	r17,r4
 2001d54:	2809883a 	mov	r4,r5
 2001d58:	300b883a 	mov	r5,r6
 2001d5c:	dfc00215 	stw	ra,8(sp)
 2001d60:	20104fc0 	call	20104fc <fstat>
 2001d64:	1007883a 	mov	r3,r2
 2001d68:	00bfffc4 	movi	r2,-1
 2001d6c:	18800626 	beq	r3,r2,2001d88 <_fstat_r+0x50>
 2001d70:	1805883a 	mov	r2,r3
 2001d74:	dfc00217 	ldw	ra,8(sp)
 2001d78:	dc400117 	ldw	r17,4(sp)
 2001d7c:	dc000017 	ldw	r16,0(sp)
 2001d80:	dec00304 	addi	sp,sp,12
 2001d84:	f800283a 	ret
 2001d88:	80800017 	ldw	r2,0(r16)
 2001d8c:	103ff826 	beq	r2,zero,2001d70 <_fstat_r+0x38>
 2001d90:	88800015 	stw	r2,0(r17)
 2001d94:	1805883a 	mov	r2,r3
 2001d98:	dfc00217 	ldw	ra,8(sp)
 2001d9c:	dc400117 	ldw	r17,4(sp)
 2001da0:	dc000017 	ldw	r16,0(sp)
 2001da4:	dec00304 	addi	sp,sp,12
 2001da8:	f800283a 	ret

02001dac <_fwalk_reent>:
 2001dac:	defff704 	addi	sp,sp,-36
 2001db0:	dcc00315 	stw	r19,12(sp)
 2001db4:	24c0b804 	addi	r19,r4,736
 2001db8:	dd800615 	stw	r22,24(sp)
 2001dbc:	dd400515 	stw	r21,20(sp)
 2001dc0:	dfc00815 	stw	ra,32(sp)
 2001dc4:	ddc00715 	stw	r23,28(sp)
 2001dc8:	dd000415 	stw	r20,16(sp)
 2001dcc:	dc800215 	stw	r18,8(sp)
 2001dd0:	dc400115 	stw	r17,4(sp)
 2001dd4:	dc000015 	stw	r16,0(sp)
 2001dd8:	202b883a 	mov	r21,r4
 2001ddc:	282d883a 	mov	r22,r5
 2001de0:	2000ea00 	call	2000ea0 <__sfp_lock_acquire>
 2001de4:	98002126 	beq	r19,zero,2001e6c <_fwalk_reent+0xc0>
 2001de8:	002f883a 	mov	r23,zero
 2001dec:	9c800117 	ldw	r18,4(r19)
 2001df0:	9c000217 	ldw	r16,8(r19)
 2001df4:	90bfffc4 	addi	r2,r18,-1
 2001df8:	10000d16 	blt	r2,zero,2001e30 <_fwalk_reent+0x84>
 2001dfc:	0023883a 	mov	r17,zero
 2001e00:	053fffc4 	movi	r20,-1
 2001e04:	8080030f 	ldh	r2,12(r16)
 2001e08:	8c400044 	addi	r17,r17,1
 2001e0c:	10000626 	beq	r2,zero,2001e28 <_fwalk_reent+0x7c>
 2001e10:	8080038f 	ldh	r2,14(r16)
 2001e14:	800b883a 	mov	r5,r16
 2001e18:	a809883a 	mov	r4,r21
 2001e1c:	15000226 	beq	r2,r20,2001e28 <_fwalk_reent+0x7c>
 2001e20:	b03ee83a 	callr	r22
 2001e24:	b8aeb03a 	or	r23,r23,r2
 2001e28:	84001704 	addi	r16,r16,92
 2001e2c:	947ff51e 	bne	r18,r17,2001e04 <_fwalk_reent+0x58>
 2001e30:	9cc00017 	ldw	r19,0(r19)
 2001e34:	983fed1e 	bne	r19,zero,2001dec <_fwalk_reent+0x40>
 2001e38:	2000ea40 	call	2000ea4 <__sfp_lock_release>
 2001e3c:	b805883a 	mov	r2,r23
 2001e40:	dfc00817 	ldw	ra,32(sp)
 2001e44:	ddc00717 	ldw	r23,28(sp)
 2001e48:	dd800617 	ldw	r22,24(sp)
 2001e4c:	dd400517 	ldw	r21,20(sp)
 2001e50:	dd000417 	ldw	r20,16(sp)
 2001e54:	dcc00317 	ldw	r19,12(sp)
 2001e58:	dc800217 	ldw	r18,8(sp)
 2001e5c:	dc400117 	ldw	r17,4(sp)
 2001e60:	dc000017 	ldw	r16,0(sp)
 2001e64:	dec00904 	addi	sp,sp,36
 2001e68:	f800283a 	ret
 2001e6c:	002f883a 	mov	r23,zero
 2001e70:	003ff106 	br	2001e38 <_fwalk_reent+0x8c>

02001e74 <_fwalk>:
 2001e74:	defff804 	addi	sp,sp,-32
 2001e78:	dcc00315 	stw	r19,12(sp)
 2001e7c:	24c0b804 	addi	r19,r4,736
 2001e80:	dd400515 	stw	r21,20(sp)
 2001e84:	dfc00715 	stw	ra,28(sp)
 2001e88:	dd800615 	stw	r22,24(sp)
 2001e8c:	dd000415 	stw	r20,16(sp)
 2001e90:	dc800215 	stw	r18,8(sp)
 2001e94:	dc400115 	stw	r17,4(sp)
 2001e98:	dc000015 	stw	r16,0(sp)
 2001e9c:	282b883a 	mov	r21,r5
 2001ea0:	2000ea00 	call	2000ea0 <__sfp_lock_acquire>
 2001ea4:	98001f26 	beq	r19,zero,2001f24 <_fwalk+0xb0>
 2001ea8:	002d883a 	mov	r22,zero
 2001eac:	9c800117 	ldw	r18,4(r19)
 2001eb0:	9c000217 	ldw	r16,8(r19)
 2001eb4:	90bfffc4 	addi	r2,r18,-1
 2001eb8:	10000c16 	blt	r2,zero,2001eec <_fwalk+0x78>
 2001ebc:	0023883a 	mov	r17,zero
 2001ec0:	053fffc4 	movi	r20,-1
 2001ec4:	8080030f 	ldh	r2,12(r16)
 2001ec8:	8c400044 	addi	r17,r17,1
 2001ecc:	10000526 	beq	r2,zero,2001ee4 <_fwalk+0x70>
 2001ed0:	8080038f 	ldh	r2,14(r16)
 2001ed4:	8009883a 	mov	r4,r16
 2001ed8:	15000226 	beq	r2,r20,2001ee4 <_fwalk+0x70>
 2001edc:	a83ee83a 	callr	r21
 2001ee0:	b0acb03a 	or	r22,r22,r2
 2001ee4:	84001704 	addi	r16,r16,92
 2001ee8:	947ff61e 	bne	r18,r17,2001ec4 <_fwalk+0x50>
 2001eec:	9cc00017 	ldw	r19,0(r19)
 2001ef0:	983fee1e 	bne	r19,zero,2001eac <_fwalk+0x38>
 2001ef4:	2000ea40 	call	2000ea4 <__sfp_lock_release>
 2001ef8:	b005883a 	mov	r2,r22
 2001efc:	dfc00717 	ldw	ra,28(sp)
 2001f00:	dd800617 	ldw	r22,24(sp)
 2001f04:	dd400517 	ldw	r21,20(sp)
 2001f08:	dd000417 	ldw	r20,16(sp)
 2001f0c:	dcc00317 	ldw	r19,12(sp)
 2001f10:	dc800217 	ldw	r18,8(sp)
 2001f14:	dc400117 	ldw	r17,4(sp)
 2001f18:	dc000017 	ldw	r16,0(sp)
 2001f1c:	dec00804 	addi	sp,sp,32
 2001f20:	f800283a 	ret
 2001f24:	002d883a 	mov	r22,zero
 2001f28:	003ff206 	br	2001ef4 <_fwalk+0x80>

02001f2c <_fwrite_r>:
 2001f2c:	defff604 	addi	sp,sp,-40
 2001f30:	dc000515 	stw	r16,20(sp)
 2001f34:	d9400015 	stw	r5,0(sp)
 2001f38:	2021883a 	mov	r16,r4
 2001f3c:	300b883a 	mov	r5,r6
 2001f40:	3809883a 	mov	r4,r7
 2001f44:	dcc00815 	stw	r19,32(sp)
 2001f48:	dc800715 	stw	r18,28(sp)
 2001f4c:	dc400615 	stw	r17,24(sp)
 2001f50:	dfc00915 	stw	ra,36(sp)
 2001f54:	3825883a 	mov	r18,r7
 2001f58:	3027883a 	mov	r19,r6
 2001f5c:	2000abc0 	call	2000abc <__mulsi3>
 2001f60:	1023883a 	mov	r17,r2
 2001f64:	00800044 	movi	r2,1
 2001f68:	d8800315 	stw	r2,12(sp)
 2001f6c:	dc400115 	stw	r17,4(sp)
 2001f70:	dc400415 	stw	r17,16(sp)
 2001f74:	dec00215 	stw	sp,8(sp)
 2001f78:	80000326 	beq	r16,zero,2001f88 <_fwrite_r+0x5c>
 2001f7c:	80800e17 	ldw	r2,56(r16)
 2001f80:	8009883a 	mov	r4,r16
 2001f84:	10001226 	beq	r2,zero,2001fd0 <_fwrite_r+0xa4>
 2001f88:	d9400a17 	ldw	r5,40(sp)
 2001f8c:	8009883a 	mov	r4,r16
 2001f90:	d9800204 	addi	r6,sp,8
 2001f94:	200831c0 	call	200831c <__sfvwrite_r>
 2001f98:	980b883a 	mov	r5,r19
 2001f9c:	10000426 	beq	r2,zero,2001fb0 <_fwrite_r+0x84>
 2001fa0:	d9000417 	ldw	r4,16(sp)
 2001fa4:	8909c83a 	sub	r4,r17,r4
 2001fa8:	200fad00 	call	200fad0 <__udivsi3>
 2001fac:	1025883a 	mov	r18,r2
 2001fb0:	9005883a 	mov	r2,r18
 2001fb4:	dfc00917 	ldw	ra,36(sp)
 2001fb8:	dcc00817 	ldw	r19,32(sp)
 2001fbc:	dc800717 	ldw	r18,28(sp)
 2001fc0:	dc400617 	ldw	r17,24(sp)
 2001fc4:	dc000517 	ldw	r16,20(sp)
 2001fc8:	dec00a04 	addi	sp,sp,40
 2001fcc:	f800283a 	ret
 2001fd0:	2000eb00 	call	2000eb0 <__sinit>
 2001fd4:	003fec06 	br	2001f88 <_fwrite_r+0x5c>

02001fd8 <fwrite>:
 2001fd8:	00808074 	movhi	r2,513
 2001fdc:	10968904 	addi	r2,r2,23076
 2001fe0:	2017883a 	mov	r11,r4
 2001fe4:	11000017 	ldw	r4,0(r2)
 2001fe8:	defffe04 	addi	sp,sp,-8
 2001fec:	3013883a 	mov	r9,r6
 2001ff0:	2805883a 	mov	r2,r5
 2001ff4:	d9c00015 	stw	r7,0(sp)
 2001ff8:	580b883a 	mov	r5,r11
 2001ffc:	100d883a 	mov	r6,r2
 2002000:	480f883a 	mov	r7,r9
 2002004:	dfc00115 	stw	ra,4(sp)
 2002008:	2001f2c0 	call	2001f2c <_fwrite_r>
 200200c:	dfc00117 	ldw	ra,4(sp)
 2002010:	dec00204 	addi	sp,sp,8
 2002014:	f800283a 	ret

02002018 <__smakebuf_r>:
 2002018:	2880030b 	ldhu	r2,12(r5)
 200201c:	deffed04 	addi	sp,sp,-76
 2002020:	dc401015 	stw	r17,64(sp)
 2002024:	1080008c 	andi	r2,r2,2
 2002028:	dc000f15 	stw	r16,60(sp)
 200202c:	dfc01215 	stw	ra,72(sp)
 2002030:	dc801115 	stw	r18,68(sp)
 2002034:	2821883a 	mov	r16,r5
 2002038:	2023883a 	mov	r17,r4
 200203c:	10000b26 	beq	r2,zero,200206c <__smakebuf_r+0x54>
 2002040:	28c010c4 	addi	r3,r5,67
 2002044:	00800044 	movi	r2,1
 2002048:	28800515 	stw	r2,20(r5)
 200204c:	28c00415 	stw	r3,16(r5)
 2002050:	28c00015 	stw	r3,0(r5)
 2002054:	dfc01217 	ldw	ra,72(sp)
 2002058:	dc801117 	ldw	r18,68(sp)
 200205c:	dc401017 	ldw	r17,64(sp)
 2002060:	dc000f17 	ldw	r16,60(sp)
 2002064:	dec01304 	addi	sp,sp,76
 2002068:	f800283a 	ret
 200206c:	2940038f 	ldh	r5,14(r5)
 2002070:	28002116 	blt	r5,zero,20020f8 <__smakebuf_r+0xe0>
 2002074:	d80d883a 	mov	r6,sp
 2002078:	2001d380 	call	2001d38 <_fstat_r>
 200207c:	10001e16 	blt	r2,zero,20020f8 <__smakebuf_r+0xe0>
 2002080:	d8800117 	ldw	r2,4(sp)
 2002084:	00e00014 	movui	r3,32768
 2002088:	113c000c 	andi	r4,r2,61440
 200208c:	20c03126 	beq	r4,r3,2002154 <__smakebuf_r+0x13c>
 2002090:	8080030b 	ldhu	r2,12(r16)
 2002094:	00c80004 	movi	r3,8192
 2002098:	10820014 	ori	r2,r2,2048
 200209c:	8080030d 	sth	r2,12(r16)
 20020a0:	20c01e26 	beq	r4,r3,200211c <__smakebuf_r+0x104>
 20020a4:	04810004 	movi	r18,1024
 20020a8:	8809883a 	mov	r4,r17
 20020ac:	900b883a 	mov	r5,r18
 20020b0:	20021d40 	call	20021d4 <_malloc_r>
 20020b4:	1009883a 	mov	r4,r2
 20020b8:	10003126 	beq	r2,zero,2002180 <__smakebuf_r+0x168>
 20020bc:	80c0030b 	ldhu	r3,12(r16)
 20020c0:	00808034 	movhi	r2,512
 20020c4:	1083e504 	addi	r2,r2,3988
 20020c8:	88800f15 	stw	r2,60(r17)
 20020cc:	18c02014 	ori	r3,r3,128
 20020d0:	84800515 	stw	r18,20(r16)
 20020d4:	80c0030d 	sth	r3,12(r16)
 20020d8:	81000415 	stw	r4,16(r16)
 20020dc:	81000015 	stw	r4,0(r16)
 20020e0:	dfc01217 	ldw	ra,72(sp)
 20020e4:	dc801117 	ldw	r18,68(sp)
 20020e8:	dc401017 	ldw	r17,64(sp)
 20020ec:	dc000f17 	ldw	r16,60(sp)
 20020f0:	dec01304 	addi	sp,sp,76
 20020f4:	f800283a 	ret
 20020f8:	80c0030b 	ldhu	r3,12(r16)
 20020fc:	1880200c 	andi	r2,r3,128
 2002100:	10000426 	beq	r2,zero,2002114 <__smakebuf_r+0xfc>
 2002104:	04801004 	movi	r18,64
 2002108:	18820014 	ori	r2,r3,2048
 200210c:	8080030d 	sth	r2,12(r16)
 2002110:	003fe506 	br	20020a8 <__smakebuf_r+0x90>
 2002114:	04810004 	movi	r18,1024
 2002118:	003ffb06 	br	2002108 <__smakebuf_r+0xf0>
 200211c:	8140038f 	ldh	r5,14(r16)
 2002120:	8809883a 	mov	r4,r17
 2002124:	20087b80 	call	20087b8 <_isatty_r>
 2002128:	103fde26 	beq	r2,zero,20020a4 <__smakebuf_r+0x8c>
 200212c:	8080030b 	ldhu	r2,12(r16)
 2002130:	80c010c4 	addi	r3,r16,67
 2002134:	04810004 	movi	r18,1024
 2002138:	10800054 	ori	r2,r2,1
 200213c:	8080030d 	sth	r2,12(r16)
 2002140:	00800044 	movi	r2,1
 2002144:	80c00415 	stw	r3,16(r16)
 2002148:	80800515 	stw	r2,20(r16)
 200214c:	80c00015 	stw	r3,0(r16)
 2002150:	003fd506 	br	20020a8 <__smakebuf_r+0x90>
 2002154:	80c00a17 	ldw	r3,40(r16)
 2002158:	00808034 	movhi	r2,512
 200215c:	108bb104 	addi	r2,r2,11972
 2002160:	18bfcb1e 	bne	r3,r2,2002090 <__smakebuf_r+0x78>
 2002164:	8080030b 	ldhu	r2,12(r16)
 2002168:	00c10004 	movi	r3,1024
 200216c:	1825883a 	mov	r18,r3
 2002170:	10c4b03a 	or	r2,r2,r3
 2002174:	8080030d 	sth	r2,12(r16)
 2002178:	80c01315 	stw	r3,76(r16)
 200217c:	003fca06 	br	20020a8 <__smakebuf_r+0x90>
 2002180:	8100030b 	ldhu	r4,12(r16)
 2002184:	2080800c 	andi	r2,r4,512
 2002188:	103fb21e 	bne	r2,zero,2002054 <__smakebuf_r+0x3c>
 200218c:	80c010c4 	addi	r3,r16,67
 2002190:	21000094 	ori	r4,r4,2
 2002194:	00800044 	movi	r2,1
 2002198:	80800515 	stw	r2,20(r16)
 200219c:	8100030d 	sth	r4,12(r16)
 20021a0:	80c00415 	stw	r3,16(r16)
 20021a4:	80c00015 	stw	r3,0(r16)
 20021a8:	003faa06 	br	2002054 <__smakebuf_r+0x3c>

020021ac <free>:
 20021ac:	00808074 	movhi	r2,513
 20021b0:	10968904 	addi	r2,r2,23076
 20021b4:	200b883a 	mov	r5,r4
 20021b8:	11000017 	ldw	r4,0(r2)
 20021bc:	20015c41 	jmpi	20015c4 <_free_r>

020021c0 <malloc>:
 20021c0:	00808074 	movhi	r2,513
 20021c4:	10968904 	addi	r2,r2,23076
 20021c8:	200b883a 	mov	r5,r4
 20021cc:	11000017 	ldw	r4,0(r2)
 20021d0:	20021d41 	jmpi	20021d4 <_malloc_r>

020021d4 <_malloc_r>:
 20021d4:	defff604 	addi	sp,sp,-40
 20021d8:	28c002c4 	addi	r3,r5,11
 20021dc:	00800584 	movi	r2,22
 20021e0:	dc800215 	stw	r18,8(sp)
 20021e4:	dfc00915 	stw	ra,36(sp)
 20021e8:	df000815 	stw	fp,32(sp)
 20021ec:	ddc00715 	stw	r23,28(sp)
 20021f0:	dd800615 	stw	r22,24(sp)
 20021f4:	dd400515 	stw	r21,20(sp)
 20021f8:	dd000415 	stw	r20,16(sp)
 20021fc:	dcc00315 	stw	r19,12(sp)
 2002200:	dc400115 	stw	r17,4(sp)
 2002204:	dc000015 	stw	r16,0(sp)
 2002208:	2025883a 	mov	r18,r4
 200220c:	10c01236 	bltu	r2,r3,2002258 <_malloc_r+0x84>
 2002210:	04400404 	movi	r17,16
 2002214:	8940142e 	bgeu	r17,r5,2002268 <_malloc_r+0x94>
 2002218:	00800304 	movi	r2,12
 200221c:	0007883a 	mov	r3,zero
 2002220:	90800015 	stw	r2,0(r18)
 2002224:	1805883a 	mov	r2,r3
 2002228:	dfc00917 	ldw	ra,36(sp)
 200222c:	df000817 	ldw	fp,32(sp)
 2002230:	ddc00717 	ldw	r23,28(sp)
 2002234:	dd800617 	ldw	r22,24(sp)
 2002238:	dd400517 	ldw	r21,20(sp)
 200223c:	dd000417 	ldw	r20,16(sp)
 2002240:	dcc00317 	ldw	r19,12(sp)
 2002244:	dc800217 	ldw	r18,8(sp)
 2002248:	dc400117 	ldw	r17,4(sp)
 200224c:	dc000017 	ldw	r16,0(sp)
 2002250:	dec00a04 	addi	sp,sp,40
 2002254:	f800283a 	ret
 2002258:	00bffe04 	movi	r2,-8
 200225c:	18a2703a 	and	r17,r3,r2
 2002260:	883fed16 	blt	r17,zero,2002218 <_malloc_r+0x44>
 2002264:	897fec36 	bltu	r17,r5,2002218 <_malloc_r+0x44>
 2002268:	9009883a 	mov	r4,r18
 200226c:	2010a040 	call	2010a04 <__malloc_lock>
 2002270:	00807dc4 	movi	r2,503
 2002274:	14402b2e 	bgeu	r2,r17,2002324 <_malloc_r+0x150>
 2002278:	8806d27a 	srli	r3,r17,9
 200227c:	18003f1e 	bne	r3,zero,200237c <_malloc_r+0x1a8>
 2002280:	880cd0fa 	srli	r6,r17,3
 2002284:	300490fa 	slli	r2,r6,3
 2002288:	02c08074 	movhi	r11,513
 200228c:	5ad0ee04 	addi	r11,r11,17336
 2002290:	12cb883a 	add	r5,r2,r11
 2002294:	2c000317 	ldw	r16,12(r5)
 2002298:	580f883a 	mov	r7,r11
 200229c:	2c00041e 	bne	r5,r16,20022b0 <_malloc_r+0xdc>
 20022a0:	00000a06 	br	20022cc <_malloc_r+0xf8>
 20022a4:	1800860e 	bge	r3,zero,20024c0 <_malloc_r+0x2ec>
 20022a8:	84000317 	ldw	r16,12(r16)
 20022ac:	2c000726 	beq	r5,r16,20022cc <_malloc_r+0xf8>
 20022b0:	80800117 	ldw	r2,4(r16)
 20022b4:	00ffff04 	movi	r3,-4
 20022b8:	10c8703a 	and	r4,r2,r3
 20022bc:	2447c83a 	sub	r3,r4,r17
 20022c0:	008003c4 	movi	r2,15
 20022c4:	10fff70e 	bge	r2,r3,20022a4 <_malloc_r+0xd0>
 20022c8:	31bfffc4 	addi	r6,r6,-1
 20022cc:	32400044 	addi	r9,r6,1
 20022d0:	02808074 	movhi	r10,513
 20022d4:	5290f004 	addi	r10,r10,17344
 20022d8:	54000217 	ldw	r16,8(r10)
 20022dc:	8280a026 	beq	r16,r10,2002560 <_malloc_r+0x38c>
 20022e0:	80800117 	ldw	r2,4(r16)
 20022e4:	00ffff04 	movi	r3,-4
 20022e8:	10ca703a 	and	r5,r2,r3
 20022ec:	2c4dc83a 	sub	r6,r5,r17
 20022f0:	008003c4 	movi	r2,15
 20022f4:	11808316 	blt	r2,r6,2002504 <_malloc_r+0x330>
 20022f8:	52800315 	stw	r10,12(r10)
 20022fc:	52800215 	stw	r10,8(r10)
 2002300:	30002916 	blt	r6,zero,20023a8 <_malloc_r+0x1d4>
 2002304:	8147883a 	add	r3,r16,r5
 2002308:	18800117 	ldw	r2,4(r3)
 200230c:	9009883a 	mov	r4,r18
 2002310:	10800054 	ori	r2,r2,1
 2002314:	18800115 	stw	r2,4(r3)
 2002318:	2010a240 	call	2010a24 <__malloc_unlock>
 200231c:	80c00204 	addi	r3,r16,8
 2002320:	003fc006 	br	2002224 <_malloc_r+0x50>
 2002324:	02c08074 	movhi	r11,513
 2002328:	5ad0ee04 	addi	r11,r11,17336
 200232c:	8ac5883a 	add	r2,r17,r11
 2002330:	14000317 	ldw	r16,12(r2)
 2002334:	580f883a 	mov	r7,r11
 2002338:	8806d0fa 	srli	r3,r17,3
 200233c:	14006c26 	beq	r2,r16,20024f0 <_malloc_r+0x31c>
 2002340:	80c00117 	ldw	r3,4(r16)
 2002344:	00bfff04 	movi	r2,-4
 2002348:	81800317 	ldw	r6,12(r16)
 200234c:	1886703a 	and	r3,r3,r2
 2002350:	80c7883a 	add	r3,r16,r3
 2002354:	18800117 	ldw	r2,4(r3)
 2002358:	81400217 	ldw	r5,8(r16)
 200235c:	9009883a 	mov	r4,r18
 2002360:	10800054 	ori	r2,r2,1
 2002364:	18800115 	stw	r2,4(r3)
 2002368:	31400215 	stw	r5,8(r6)
 200236c:	29800315 	stw	r6,12(r5)
 2002370:	2010a240 	call	2010a24 <__malloc_unlock>
 2002374:	80c00204 	addi	r3,r16,8
 2002378:	003faa06 	br	2002224 <_malloc_r+0x50>
 200237c:	00800104 	movi	r2,4
 2002380:	10c0052e 	bgeu	r2,r3,2002398 <_malloc_r+0x1c4>
 2002384:	00800504 	movi	r2,20
 2002388:	10c07836 	bltu	r2,r3,200256c <_malloc_r+0x398>
 200238c:	198016c4 	addi	r6,r3,91
 2002390:	300490fa 	slli	r2,r6,3
 2002394:	003fbc06 	br	2002288 <_malloc_r+0xb4>
 2002398:	8804d1ba 	srli	r2,r17,6
 200239c:	11800e04 	addi	r6,r2,56
 20023a0:	300490fa 	slli	r2,r6,3
 20023a4:	003fb806 	br	2002288 <_malloc_r+0xb4>
 20023a8:	00807fc4 	movi	r2,511
 20023ac:	1140bb36 	bltu	r2,r5,200269c <_malloc_r+0x4c8>
 20023b0:	2806d0fa 	srli	r3,r5,3
 20023b4:	573ffe04 	addi	fp,r10,-8
 20023b8:	00800044 	movi	r2,1
 20023bc:	180890fa 	slli	r4,r3,3
 20023c0:	1807d0ba 	srai	r3,r3,2
 20023c4:	e1c00117 	ldw	r7,4(fp)
 20023c8:	5909883a 	add	r4,r11,r4
 20023cc:	21400217 	ldw	r5,8(r4)
 20023d0:	10c4983a 	sll	r2,r2,r3
 20023d4:	81000315 	stw	r4,12(r16)
 20023d8:	81400215 	stw	r5,8(r16)
 20023dc:	388eb03a 	or	r7,r7,r2
 20023e0:	2c000315 	stw	r16,12(r5)
 20023e4:	24000215 	stw	r16,8(r4)
 20023e8:	e1c00115 	stw	r7,4(fp)
 20023ec:	4807883a 	mov	r3,r9
 20023f0:	4800cd16 	blt	r9,zero,2002728 <_malloc_r+0x554>
 20023f4:	1807d0ba 	srai	r3,r3,2
 20023f8:	00800044 	movi	r2,1
 20023fc:	10c8983a 	sll	r4,r2,r3
 2002400:	39004436 	bltu	r7,r4,2002514 <_malloc_r+0x340>
 2002404:	21c4703a 	and	r2,r4,r7
 2002408:	10000a1e 	bne	r2,zero,2002434 <_malloc_r+0x260>
 200240c:	2109883a 	add	r4,r4,r4
 2002410:	00bfff04 	movi	r2,-4
 2002414:	4884703a 	and	r2,r9,r2
 2002418:	3906703a 	and	r3,r7,r4
 200241c:	12400104 	addi	r9,r2,4
 2002420:	1800041e 	bne	r3,zero,2002434 <_malloc_r+0x260>
 2002424:	2109883a 	add	r4,r4,r4
 2002428:	3904703a 	and	r2,r7,r4
 200242c:	4a400104 	addi	r9,r9,4
 2002430:	103ffc26 	beq	r2,zero,2002424 <_malloc_r+0x250>
 2002434:	480490fa 	slli	r2,r9,3
 2002438:	4819883a 	mov	r12,r9
 200243c:	023fff04 	movi	r8,-4
 2002440:	589b883a 	add	r13,r11,r2
 2002444:	6807883a 	mov	r3,r13
 2002448:	014003c4 	movi	r5,15
 200244c:	1c000317 	ldw	r16,12(r3)
 2002450:	1c00041e 	bne	r3,r16,2002464 <_malloc_r+0x290>
 2002454:	0000a706 	br	20026f4 <_malloc_r+0x520>
 2002458:	3000ab0e 	bge	r6,zero,2002708 <_malloc_r+0x534>
 200245c:	84000317 	ldw	r16,12(r16)
 2002460:	1c00a426 	beq	r3,r16,20026f4 <_malloc_r+0x520>
 2002464:	80800117 	ldw	r2,4(r16)
 2002468:	1204703a 	and	r2,r2,r8
 200246c:	144dc83a 	sub	r6,r2,r17
 2002470:	29bff90e 	bge	r5,r6,2002458 <_malloc_r+0x284>
 2002474:	81000317 	ldw	r4,12(r16)
 2002478:	80c00217 	ldw	r3,8(r16)
 200247c:	89400054 	ori	r5,r17,1
 2002480:	8445883a 	add	r2,r16,r17
 2002484:	20c00215 	stw	r3,8(r4)
 2002488:	19000315 	stw	r4,12(r3)
 200248c:	81400115 	stw	r5,4(r16)
 2002490:	1187883a 	add	r3,r2,r6
 2002494:	31000054 	ori	r4,r6,1
 2002498:	50800315 	stw	r2,12(r10)
 200249c:	50800215 	stw	r2,8(r10)
 20024a0:	19800015 	stw	r6,0(r3)
 20024a4:	11000115 	stw	r4,4(r2)
 20024a8:	12800215 	stw	r10,8(r2)
 20024ac:	12800315 	stw	r10,12(r2)
 20024b0:	9009883a 	mov	r4,r18
 20024b4:	2010a240 	call	2010a24 <__malloc_unlock>
 20024b8:	80c00204 	addi	r3,r16,8
 20024bc:	003f5906 	br	2002224 <_malloc_r+0x50>
 20024c0:	8109883a 	add	r4,r16,r4
 20024c4:	20800117 	ldw	r2,4(r4)
 20024c8:	80c00217 	ldw	r3,8(r16)
 20024cc:	81400317 	ldw	r5,12(r16)
 20024d0:	10800054 	ori	r2,r2,1
 20024d4:	20800115 	stw	r2,4(r4)
 20024d8:	28c00215 	stw	r3,8(r5)
 20024dc:	19400315 	stw	r5,12(r3)
 20024e0:	9009883a 	mov	r4,r18
 20024e4:	2010a240 	call	2010a24 <__malloc_unlock>
 20024e8:	80c00204 	addi	r3,r16,8
 20024ec:	003f4d06 	br	2002224 <_malloc_r+0x50>
 20024f0:	80800204 	addi	r2,r16,8
 20024f4:	14000317 	ldw	r16,12(r2)
 20024f8:	143f911e 	bne	r2,r16,2002340 <_malloc_r+0x16c>
 20024fc:	1a400084 	addi	r9,r3,2
 2002500:	003f7306 	br	20022d0 <_malloc_r+0xfc>
 2002504:	88c00054 	ori	r3,r17,1
 2002508:	8445883a 	add	r2,r16,r17
 200250c:	80c00115 	stw	r3,4(r16)
 2002510:	003fdf06 	br	2002490 <_malloc_r+0x2bc>
 2002514:	e4000217 	ldw	r16,8(fp)
 2002518:	00bfff04 	movi	r2,-4
 200251c:	80c00117 	ldw	r3,4(r16)
 2002520:	802d883a 	mov	r22,r16
 2002524:	18aa703a 	and	r21,r3,r2
 2002528:	ac401636 	bltu	r21,r17,2002584 <_malloc_r+0x3b0>
 200252c:	ac49c83a 	sub	r4,r21,r17
 2002530:	008003c4 	movi	r2,15
 2002534:	1100130e 	bge	r2,r4,2002584 <_malloc_r+0x3b0>
 2002538:	88800054 	ori	r2,r17,1
 200253c:	8447883a 	add	r3,r16,r17
 2002540:	80800115 	stw	r2,4(r16)
 2002544:	20800054 	ori	r2,r4,1
 2002548:	18800115 	stw	r2,4(r3)
 200254c:	e0c00215 	stw	r3,8(fp)
 2002550:	9009883a 	mov	r4,r18
 2002554:	2010a240 	call	2010a24 <__malloc_unlock>
 2002558:	80c00204 	addi	r3,r16,8
 200255c:	003f3106 	br	2002224 <_malloc_r+0x50>
 2002560:	39c00117 	ldw	r7,4(r7)
 2002564:	573ffe04 	addi	fp,r10,-8
 2002568:	003fa006 	br	20023ec <_malloc_r+0x218>
 200256c:	00801504 	movi	r2,84
 2002570:	10c06736 	bltu	r2,r3,2002710 <_malloc_r+0x53c>
 2002574:	8804d33a 	srli	r2,r17,12
 2002578:	11801b84 	addi	r6,r2,110
 200257c:	300490fa 	slli	r2,r6,3
 2002580:	003f4106 	br	2002288 <_malloc_r+0xb4>
 2002584:	d0a6e217 	ldw	r2,-25720(gp)
 2002588:	d0e00317 	ldw	r3,-32756(gp)
 200258c:	053fffc4 	movi	r20,-1
 2002590:	10800404 	addi	r2,r2,16
 2002594:	88a7883a 	add	r19,r17,r2
 2002598:	1d000326 	beq	r3,r20,20025a8 <_malloc_r+0x3d4>
 200259c:	98c3ffc4 	addi	r3,r19,4095
 20025a0:	00bc0004 	movi	r2,-4096
 20025a4:	18a6703a 	and	r19,r3,r2
 20025a8:	9009883a 	mov	r4,r18
 20025ac:	980b883a 	mov	r5,r19
 20025b0:	2002dd00 	call	2002dd0 <_sbrk_r>
 20025b4:	1009883a 	mov	r4,r2
 20025b8:	15000426 	beq	r2,r20,20025cc <_malloc_r+0x3f8>
 20025bc:	854b883a 	add	r5,r16,r21
 20025c0:	1029883a 	mov	r20,r2
 20025c4:	11405a2e 	bgeu	r2,r5,2002730 <_malloc_r+0x55c>
 20025c8:	87000c26 	beq	r16,fp,20025fc <_malloc_r+0x428>
 20025cc:	e4000217 	ldw	r16,8(fp)
 20025d0:	80c00117 	ldw	r3,4(r16)
 20025d4:	00bfff04 	movi	r2,-4
 20025d8:	1884703a 	and	r2,r3,r2
 20025dc:	14400336 	bltu	r2,r17,20025ec <_malloc_r+0x418>
 20025e0:	1449c83a 	sub	r4,r2,r17
 20025e4:	008003c4 	movi	r2,15
 20025e8:	113fd316 	blt	r2,r4,2002538 <_malloc_r+0x364>
 20025ec:	9009883a 	mov	r4,r18
 20025f0:	2010a240 	call	2010a24 <__malloc_unlock>
 20025f4:	0007883a 	mov	r3,zero
 20025f8:	003f0a06 	br	2002224 <_malloc_r+0x50>
 20025fc:	05c08074 	movhi	r23,513
 2002600:	bddd7704 	addi	r23,r23,30172
 2002604:	b8800017 	ldw	r2,0(r23)
 2002608:	988d883a 	add	r6,r19,r2
 200260c:	b9800015 	stw	r6,0(r23)
 2002610:	d0e00317 	ldw	r3,-32756(gp)
 2002614:	00bfffc4 	movi	r2,-1
 2002618:	18808e26 	beq	r3,r2,2002854 <_malloc_r+0x680>
 200261c:	2145c83a 	sub	r2,r4,r5
 2002620:	3085883a 	add	r2,r6,r2
 2002624:	b8800015 	stw	r2,0(r23)
 2002628:	20c001cc 	andi	r3,r4,7
 200262c:	18005f1e 	bne	r3,zero,20027ac <_malloc_r+0x5d8>
 2002630:	000b883a 	mov	r5,zero
 2002634:	a4c5883a 	add	r2,r20,r19
 2002638:	1083ffcc 	andi	r2,r2,4095
 200263c:	00c40004 	movi	r3,4096
 2002640:	1887c83a 	sub	r3,r3,r2
 2002644:	28e7883a 	add	r19,r5,r3
 2002648:	9009883a 	mov	r4,r18
 200264c:	980b883a 	mov	r5,r19
 2002650:	2002dd00 	call	2002dd0 <_sbrk_r>
 2002654:	1007883a 	mov	r3,r2
 2002658:	00bfffc4 	movi	r2,-1
 200265c:	18807a26 	beq	r3,r2,2002848 <_malloc_r+0x674>
 2002660:	1d05c83a 	sub	r2,r3,r20
 2002664:	9885883a 	add	r2,r19,r2
 2002668:	10c00054 	ori	r3,r2,1
 200266c:	b8800017 	ldw	r2,0(r23)
 2002670:	a021883a 	mov	r16,r20
 2002674:	a0c00115 	stw	r3,4(r20)
 2002678:	9885883a 	add	r2,r19,r2
 200267c:	b8800015 	stw	r2,0(r23)
 2002680:	e5000215 	stw	r20,8(fp)
 2002684:	b7003626 	beq	r22,fp,2002760 <_malloc_r+0x58c>
 2002688:	018003c4 	movi	r6,15
 200268c:	35404b36 	bltu	r6,r21,20027bc <_malloc_r+0x5e8>
 2002690:	00800044 	movi	r2,1
 2002694:	a0800115 	stw	r2,4(r20)
 2002698:	003fcd06 	br	20025d0 <_malloc_r+0x3fc>
 200269c:	2808d27a 	srli	r4,r5,9
 20026a0:	2000371e 	bne	r4,zero,2002780 <_malloc_r+0x5ac>
 20026a4:	2808d0fa 	srli	r4,r5,3
 20026a8:	200690fa 	slli	r3,r4,3
 20026ac:	1ad1883a 	add	r8,r3,r11
 20026b0:	41800217 	ldw	r6,8(r8)
 20026b4:	41805b26 	beq	r8,r6,2002824 <_malloc_r+0x650>
 20026b8:	30800117 	ldw	r2,4(r6)
 20026bc:	00ffff04 	movi	r3,-4
 20026c0:	10c4703a 	and	r2,r2,r3
 20026c4:	2880022e 	bgeu	r5,r2,20026d0 <_malloc_r+0x4fc>
 20026c8:	31800217 	ldw	r6,8(r6)
 20026cc:	41bffa1e 	bne	r8,r6,20026b8 <_malloc_r+0x4e4>
 20026d0:	32000317 	ldw	r8,12(r6)
 20026d4:	39c00117 	ldw	r7,4(r7)
 20026d8:	82000315 	stw	r8,12(r16)
 20026dc:	81800215 	stw	r6,8(r16)
 20026e0:	07008074 	movhi	fp,513
 20026e4:	e710ee04 	addi	fp,fp,17336
 20026e8:	34000315 	stw	r16,12(r6)
 20026ec:	44000215 	stw	r16,8(r8)
 20026f0:	003f3e06 	br	20023ec <_malloc_r+0x218>
 20026f4:	63000044 	addi	r12,r12,1
 20026f8:	608000cc 	andi	r2,r12,3
 20026fc:	10005d26 	beq	r2,zero,2002874 <_malloc_r+0x6a0>
 2002700:	18c00204 	addi	r3,r3,8
 2002704:	003f5106 	br	200244c <_malloc_r+0x278>
 2002708:	8089883a 	add	r4,r16,r2
 200270c:	003f6d06 	br	20024c4 <_malloc_r+0x2f0>
 2002710:	00805504 	movi	r2,340
 2002714:	10c02036 	bltu	r2,r3,2002798 <_malloc_r+0x5c4>
 2002718:	8804d3fa 	srli	r2,r17,15
 200271c:	11801dc4 	addi	r6,r2,119
 2002720:	300490fa 	slli	r2,r6,3
 2002724:	003ed806 	br	2002288 <_malloc_r+0xb4>
 2002728:	48c000c4 	addi	r3,r9,3
 200272c:	003f3106 	br	20023f4 <_malloc_r+0x220>
 2002730:	05c08074 	movhi	r23,513
 2002734:	bddd7704 	addi	r23,r23,30172
 2002738:	b8800017 	ldw	r2,0(r23)
 200273c:	988d883a 	add	r6,r19,r2
 2002740:	b9800015 	stw	r6,0(r23)
 2002744:	293fb21e 	bne	r5,r4,2002610 <_malloc_r+0x43c>
 2002748:	2083ffcc 	andi	r2,r4,4095
 200274c:	103fb01e 	bne	r2,zero,2002610 <_malloc_r+0x43c>
 2002750:	e4000217 	ldw	r16,8(fp)
 2002754:	9d45883a 	add	r2,r19,r21
 2002758:	10800054 	ori	r2,r2,1
 200275c:	80800115 	stw	r2,4(r16)
 2002760:	b8c00017 	ldw	r3,0(r23)
 2002764:	d0a6e317 	ldw	r2,-25716(gp)
 2002768:	10c0012e 	bgeu	r2,r3,2002770 <_malloc_r+0x59c>
 200276c:	d0e6e315 	stw	r3,-25716(gp)
 2002770:	d0a6e417 	ldw	r2,-25712(gp)
 2002774:	10ff962e 	bgeu	r2,r3,20025d0 <_malloc_r+0x3fc>
 2002778:	d0e6e415 	stw	r3,-25712(gp)
 200277c:	003f9406 	br	20025d0 <_malloc_r+0x3fc>
 2002780:	00800104 	movi	r2,4
 2002784:	11001e36 	bltu	r2,r4,2002800 <_malloc_r+0x62c>
 2002788:	2804d1ba 	srli	r2,r5,6
 200278c:	11000e04 	addi	r4,r2,56
 2002790:	200690fa 	slli	r3,r4,3
 2002794:	003fc506 	br	20026ac <_malloc_r+0x4d8>
 2002798:	00815504 	movi	r2,1364
 200279c:	10c01d2e 	bgeu	r2,r3,2002814 <_malloc_r+0x640>
 20027a0:	01801f84 	movi	r6,126
 20027a4:	0080fc04 	movi	r2,1008
 20027a8:	003eb706 	br	2002288 <_malloc_r+0xb4>
 20027ac:	00800204 	movi	r2,8
 20027b0:	10cbc83a 	sub	r5,r2,r3
 20027b4:	2169883a 	add	r20,r4,r5
 20027b8:	003f9e06 	br	2002634 <_malloc_r+0x460>
 20027bc:	00bffe04 	movi	r2,-8
 20027c0:	a93ffd04 	addi	r4,r21,-12
 20027c4:	2088703a 	and	r4,r4,r2
 20027c8:	b10b883a 	add	r5,r22,r4
 20027cc:	00c00144 	movi	r3,5
 20027d0:	28c00215 	stw	r3,8(r5)
 20027d4:	28c00115 	stw	r3,4(r5)
 20027d8:	b0800117 	ldw	r2,4(r22)
 20027dc:	1080004c 	andi	r2,r2,1
 20027e0:	2084b03a 	or	r2,r4,r2
 20027e4:	b0800115 	stw	r2,4(r22)
 20027e8:	313fdd2e 	bgeu	r6,r4,2002760 <_malloc_r+0x58c>
 20027ec:	b1400204 	addi	r5,r22,8
 20027f0:	9009883a 	mov	r4,r18
 20027f4:	20015c40 	call	20015c4 <_free_r>
 20027f8:	e4000217 	ldw	r16,8(fp)
 20027fc:	003fd806 	br	2002760 <_malloc_r+0x58c>
 2002800:	00800504 	movi	r2,20
 2002804:	11001536 	bltu	r2,r4,200285c <_malloc_r+0x688>
 2002808:	210016c4 	addi	r4,r4,91
 200280c:	200690fa 	slli	r3,r4,3
 2002810:	003fa606 	br	20026ac <_malloc_r+0x4d8>
 2002814:	8804d4ba 	srli	r2,r17,18
 2002818:	11801f04 	addi	r6,r2,124
 200281c:	300490fa 	slli	r2,r6,3
 2002820:	003e9906 	br	2002288 <_malloc_r+0xb4>
 2002824:	2009d0ba 	srai	r4,r4,2
 2002828:	01408074 	movhi	r5,513
 200282c:	2950ee04 	addi	r5,r5,17336
 2002830:	00c00044 	movi	r3,1
 2002834:	28800117 	ldw	r2,4(r5)
 2002838:	1906983a 	sll	r3,r3,r4
 200283c:	10c4b03a 	or	r2,r2,r3
 2002840:	28800115 	stw	r2,4(r5)
 2002844:	003fa306 	br	20026d4 <_malloc_r+0x500>
 2002848:	0027883a 	mov	r19,zero
 200284c:	00c00044 	movi	r3,1
 2002850:	003f8606 	br	200266c <_malloc_r+0x498>
 2002854:	d1200315 	stw	r4,-32756(gp)
 2002858:	003f7306 	br	2002628 <_malloc_r+0x454>
 200285c:	00801504 	movi	r2,84
 2002860:	11001936 	bltu	r2,r4,20028c8 <_malloc_r+0x6f4>
 2002864:	2804d33a 	srli	r2,r5,12
 2002868:	11001b84 	addi	r4,r2,110
 200286c:	200690fa 	slli	r3,r4,3
 2002870:	003f8e06 	br	20026ac <_malloc_r+0x4d8>
 2002874:	480b883a 	mov	r5,r9
 2002878:	6807883a 	mov	r3,r13
 200287c:	288000cc 	andi	r2,r5,3
 2002880:	18fffe04 	addi	r3,r3,-8
 2002884:	297fffc4 	addi	r5,r5,-1
 2002888:	10001526 	beq	r2,zero,20028e0 <_malloc_r+0x70c>
 200288c:	18800217 	ldw	r2,8(r3)
 2002890:	10fffa26 	beq	r2,r3,200287c <_malloc_r+0x6a8>
 2002894:	2109883a 	add	r4,r4,r4
 2002898:	393f1e36 	bltu	r7,r4,2002514 <_malloc_r+0x340>
 200289c:	203f1d26 	beq	r4,zero,2002514 <_malloc_r+0x340>
 20028a0:	21c4703a 	and	r2,r4,r7
 20028a4:	10000226 	beq	r2,zero,20028b0 <_malloc_r+0x6dc>
 20028a8:	6013883a 	mov	r9,r12
 20028ac:	003ee106 	br	2002434 <_malloc_r+0x260>
 20028b0:	2109883a 	add	r4,r4,r4
 20028b4:	3904703a 	and	r2,r7,r4
 20028b8:	63000104 	addi	r12,r12,4
 20028bc:	103ffc26 	beq	r2,zero,20028b0 <_malloc_r+0x6dc>
 20028c0:	6013883a 	mov	r9,r12
 20028c4:	003edb06 	br	2002434 <_malloc_r+0x260>
 20028c8:	00805504 	movi	r2,340
 20028cc:	11000836 	bltu	r2,r4,20028f0 <_malloc_r+0x71c>
 20028d0:	2804d3fa 	srli	r2,r5,15
 20028d4:	11001dc4 	addi	r4,r2,119
 20028d8:	200690fa 	slli	r3,r4,3
 20028dc:	003f7306 	br	20026ac <_malloc_r+0x4d8>
 20028e0:	0104303a 	nor	r2,zero,r4
 20028e4:	388e703a 	and	r7,r7,r2
 20028e8:	e1c00115 	stw	r7,4(fp)
 20028ec:	003fe906 	br	2002894 <_malloc_r+0x6c0>
 20028f0:	00815504 	movi	r2,1364
 20028f4:	1100032e 	bgeu	r2,r4,2002904 <_malloc_r+0x730>
 20028f8:	01001f84 	movi	r4,126
 20028fc:	00c0fc04 	movi	r3,1008
 2002900:	003f6a06 	br	20026ac <_malloc_r+0x4d8>
 2002904:	2804d4ba 	srli	r2,r5,18
 2002908:	11001f04 	addi	r4,r2,124
 200290c:	200690fa 	slli	r3,r4,3
 2002910:	003f6606 	br	20026ac <_malloc_r+0x4d8>

02002914 <memcpy>:
 2002914:	01c003c4 	movi	r7,15
 2002918:	2007883a 	mov	r3,r4
 200291c:	3980032e 	bgeu	r7,r6,200292c <memcpy+0x18>
 2002920:	2904b03a 	or	r2,r5,r4
 2002924:	108000cc 	andi	r2,r2,3
 2002928:	10000926 	beq	r2,zero,2002950 <memcpy+0x3c>
 200292c:	30000626 	beq	r6,zero,2002948 <memcpy+0x34>
 2002930:	30cd883a 	add	r6,r6,r3
 2002934:	28800003 	ldbu	r2,0(r5)
 2002938:	29400044 	addi	r5,r5,1
 200293c:	18800005 	stb	r2,0(r3)
 2002940:	18c00044 	addi	r3,r3,1
 2002944:	30fffb1e 	bne	r6,r3,2002934 <memcpy+0x20>
 2002948:	2005883a 	mov	r2,r4
 200294c:	f800283a 	ret
 2002950:	3811883a 	mov	r8,r7
 2002954:	200f883a 	mov	r7,r4
 2002958:	28c00017 	ldw	r3,0(r5)
 200295c:	31bffc04 	addi	r6,r6,-16
 2002960:	38c00015 	stw	r3,0(r7)
 2002964:	28800117 	ldw	r2,4(r5)
 2002968:	38800115 	stw	r2,4(r7)
 200296c:	28c00217 	ldw	r3,8(r5)
 2002970:	38c00215 	stw	r3,8(r7)
 2002974:	28800317 	ldw	r2,12(r5)
 2002978:	29400404 	addi	r5,r5,16
 200297c:	38800315 	stw	r2,12(r7)
 2002980:	39c00404 	addi	r7,r7,16
 2002984:	41bff436 	bltu	r8,r6,2002958 <memcpy+0x44>
 2002988:	008000c4 	movi	r2,3
 200298c:	1180072e 	bgeu	r2,r6,20029ac <memcpy+0x98>
 2002990:	1007883a 	mov	r3,r2
 2002994:	28800017 	ldw	r2,0(r5)
 2002998:	31bfff04 	addi	r6,r6,-4
 200299c:	29400104 	addi	r5,r5,4
 20029a0:	38800015 	stw	r2,0(r7)
 20029a4:	39c00104 	addi	r7,r7,4
 20029a8:	19bffa36 	bltu	r3,r6,2002994 <memcpy+0x80>
 20029ac:	3807883a 	mov	r3,r7
 20029b0:	003fde06 	br	200292c <memcpy+0x18>

020029b4 <memset>:
 20029b4:	008000c4 	movi	r2,3
 20029b8:	29403fcc 	andi	r5,r5,255
 20029bc:	2007883a 	mov	r3,r4
 20029c0:	1180022e 	bgeu	r2,r6,20029cc <memset+0x18>
 20029c4:	2084703a 	and	r2,r4,r2
 20029c8:	10000826 	beq	r2,zero,20029ec <memset+0x38>
 20029cc:	30000526 	beq	r6,zero,20029e4 <memset+0x30>
 20029d0:	2805883a 	mov	r2,r5
 20029d4:	30cd883a 	add	r6,r6,r3
 20029d8:	18800005 	stb	r2,0(r3)
 20029dc:	18c00044 	addi	r3,r3,1
 20029e0:	19bffd1e 	bne	r3,r6,20029d8 <memset+0x24>
 20029e4:	2005883a 	mov	r2,r4
 20029e8:	f800283a 	ret
 20029ec:	2804923a 	slli	r2,r5,8
 20029f0:	020003c4 	movi	r8,15
 20029f4:	200f883a 	mov	r7,r4
 20029f8:	2884b03a 	or	r2,r5,r2
 20029fc:	1006943a 	slli	r3,r2,16
 2002a00:	10c6b03a 	or	r3,r2,r3
 2002a04:	41800a2e 	bgeu	r8,r6,2002a30 <memset+0x7c>
 2002a08:	4005883a 	mov	r2,r8
 2002a0c:	31bffc04 	addi	r6,r6,-16
 2002a10:	38c00015 	stw	r3,0(r7)
 2002a14:	38c00115 	stw	r3,4(r7)
 2002a18:	38c00215 	stw	r3,8(r7)
 2002a1c:	38c00315 	stw	r3,12(r7)
 2002a20:	39c00404 	addi	r7,r7,16
 2002a24:	11bff936 	bltu	r2,r6,2002a0c <memset+0x58>
 2002a28:	008000c4 	movi	r2,3
 2002a2c:	1180052e 	bgeu	r2,r6,2002a44 <memset+0x90>
 2002a30:	31bfff04 	addi	r6,r6,-4
 2002a34:	008000c4 	movi	r2,3
 2002a38:	38c00015 	stw	r3,0(r7)
 2002a3c:	39c00104 	addi	r7,r7,4
 2002a40:	11bffb36 	bltu	r2,r6,2002a30 <memset+0x7c>
 2002a44:	3807883a 	mov	r3,r7
 2002a48:	003fe006 	br	20029cc <memset+0x18>

02002a4c <_open_r>:
 2002a4c:	defffd04 	addi	sp,sp,-12
 2002a50:	dc000015 	stw	r16,0(sp)
 2002a54:	04008074 	movhi	r16,513
 2002a58:	841d6a04 	addi	r16,r16,30120
 2002a5c:	dc400115 	stw	r17,4(sp)
 2002a60:	80000015 	stw	zero,0(r16)
 2002a64:	2023883a 	mov	r17,r4
 2002a68:	2809883a 	mov	r4,r5
 2002a6c:	300b883a 	mov	r5,r6
 2002a70:	380d883a 	mov	r6,r7
 2002a74:	dfc00215 	stw	ra,8(sp)
 2002a78:	2010b3c0 	call	2010b3c <open>
 2002a7c:	1007883a 	mov	r3,r2
 2002a80:	00bfffc4 	movi	r2,-1
 2002a84:	18800626 	beq	r3,r2,2002aa0 <_open_r+0x54>
 2002a88:	1805883a 	mov	r2,r3
 2002a8c:	dfc00217 	ldw	ra,8(sp)
 2002a90:	dc400117 	ldw	r17,4(sp)
 2002a94:	dc000017 	ldw	r16,0(sp)
 2002a98:	dec00304 	addi	sp,sp,12
 2002a9c:	f800283a 	ret
 2002aa0:	80800017 	ldw	r2,0(r16)
 2002aa4:	103ff826 	beq	r2,zero,2002a88 <_open_r+0x3c>
 2002aa8:	88800015 	stw	r2,0(r17)
 2002aac:	1805883a 	mov	r2,r3
 2002ab0:	dfc00217 	ldw	ra,8(sp)
 2002ab4:	dc400117 	ldw	r17,4(sp)
 2002ab8:	dc000017 	ldw	r16,0(sp)
 2002abc:	dec00304 	addi	sp,sp,12
 2002ac0:	f800283a 	ret

02002ac4 <printf>:
 2002ac4:	defffb04 	addi	sp,sp,-20
 2002ac8:	dfc00115 	stw	ra,4(sp)
 2002acc:	d9400215 	stw	r5,8(sp)
 2002ad0:	d9800315 	stw	r6,12(sp)
 2002ad4:	d9c00415 	stw	r7,16(sp)
 2002ad8:	00808074 	movhi	r2,513
 2002adc:	10968904 	addi	r2,r2,23076
 2002ae0:	10c00017 	ldw	r3,0(r2)
 2002ae4:	200b883a 	mov	r5,r4
 2002ae8:	d8800204 	addi	r2,sp,8
 2002aec:	19000217 	ldw	r4,8(r3)
 2002af0:	100d883a 	mov	r6,r2
 2002af4:	d8800015 	stw	r2,0(sp)
 2002af8:	20050b40 	call	20050b4 <__vfprintf_internal>
 2002afc:	dfc00117 	ldw	ra,4(sp)
 2002b00:	dec00504 	addi	sp,sp,20
 2002b04:	f800283a 	ret

02002b08 <_printf_r>:
 2002b08:	defffc04 	addi	sp,sp,-16
 2002b0c:	dfc00115 	stw	ra,4(sp)
 2002b10:	d9800215 	stw	r6,8(sp)
 2002b14:	d9c00315 	stw	r7,12(sp)
 2002b18:	280d883a 	mov	r6,r5
 2002b1c:	21400217 	ldw	r5,8(r4)
 2002b20:	d8c00204 	addi	r3,sp,8
 2002b24:	180f883a 	mov	r7,r3
 2002b28:	d8c00015 	stw	r3,0(sp)
 2002b2c:	20031f00 	call	20031f0 <___vfprintf_internal_r>
 2002b30:	dfc00117 	ldw	ra,4(sp)
 2002b34:	dec00404 	addi	sp,sp,16
 2002b38:	f800283a 	ret

02002b3c <_puts_r>:
 2002b3c:	defff604 	addi	sp,sp,-40
 2002b40:	dc400715 	stw	r17,28(sp)
 2002b44:	2023883a 	mov	r17,r4
 2002b48:	2809883a 	mov	r4,r5
 2002b4c:	dfc00915 	stw	ra,36(sp)
 2002b50:	dcc00815 	stw	r19,32(sp)
 2002b54:	2827883a 	mov	r19,r5
 2002b58:	20031240 	call	2003124 <strlen>
 2002b5c:	89400217 	ldw	r5,8(r17)
 2002b60:	00c08074 	movhi	r3,513
 2002b64:	18ce1c04 	addi	r3,r3,14448
 2002b68:	01c00044 	movi	r7,1
 2002b6c:	12000044 	addi	r8,r2,1
 2002b70:	d8c00515 	stw	r3,20(sp)
 2002b74:	d9c00615 	stw	r7,24(sp)
 2002b78:	d8c00304 	addi	r3,sp,12
 2002b7c:	01c00084 	movi	r7,2
 2002b80:	8809883a 	mov	r4,r17
 2002b84:	d80d883a 	mov	r6,sp
 2002b88:	d8c00015 	stw	r3,0(sp)
 2002b8c:	dcc00315 	stw	r19,12(sp)
 2002b90:	da000215 	stw	r8,8(sp)
 2002b94:	d9c00115 	stw	r7,4(sp)
 2002b98:	d8800415 	stw	r2,16(sp)
 2002b9c:	200831c0 	call	200831c <__sfvwrite_r>
 2002ba0:	00ffffc4 	movi	r3,-1
 2002ba4:	10000626 	beq	r2,zero,2002bc0 <_puts_r+0x84>
 2002ba8:	1805883a 	mov	r2,r3
 2002bac:	dfc00917 	ldw	ra,36(sp)
 2002bb0:	dcc00817 	ldw	r19,32(sp)
 2002bb4:	dc400717 	ldw	r17,28(sp)
 2002bb8:	dec00a04 	addi	sp,sp,40
 2002bbc:	f800283a 	ret
 2002bc0:	00c00284 	movi	r3,10
 2002bc4:	1805883a 	mov	r2,r3
 2002bc8:	dfc00917 	ldw	ra,36(sp)
 2002bcc:	dcc00817 	ldw	r19,32(sp)
 2002bd0:	dc400717 	ldw	r17,28(sp)
 2002bd4:	dec00a04 	addi	sp,sp,40
 2002bd8:	f800283a 	ret

02002bdc <puts>:
 2002bdc:	00808074 	movhi	r2,513
 2002be0:	10968904 	addi	r2,r2,23076
 2002be4:	200b883a 	mov	r5,r4
 2002be8:	11000017 	ldw	r4,0(r2)
 2002bec:	2002b3c1 	jmpi	2002b3c <_puts_r>

02002bf0 <__srefill_r>:
 2002bf0:	defffd04 	addi	sp,sp,-12
 2002bf4:	dc400115 	stw	r17,4(sp)
 2002bf8:	dc000015 	stw	r16,0(sp)
 2002bfc:	dfc00215 	stw	ra,8(sp)
 2002c00:	2023883a 	mov	r17,r4
 2002c04:	2821883a 	mov	r16,r5
 2002c08:	20000226 	beq	r4,zero,2002c14 <__srefill_r+0x24>
 2002c0c:	20800e17 	ldw	r2,56(r4)
 2002c10:	10004126 	beq	r2,zero,2002d18 <__srefill_r+0x128>
 2002c14:	80c0030b 	ldhu	r3,12(r16)
 2002c18:	80000115 	stw	zero,4(r16)
 2002c1c:	1880080c 	andi	r2,r3,32
 2002c20:	1000361e 	bne	r2,zero,2002cfc <__srefill_r+0x10c>
 2002c24:	1880010c 	andi	r2,r3,4
 2002c28:	1000211e 	bne	r2,zero,2002cb0 <__srefill_r+0xc0>
 2002c2c:	1880040c 	andi	r2,r3,16
 2002c30:	10005026 	beq	r2,zero,2002d74 <__srefill_r+0x184>
 2002c34:	1880020c 	andi	r2,r3,8
 2002c38:	1000541e 	bne	r2,zero,2002d8c <__srefill_r+0x19c>
 2002c3c:	8080030b 	ldhu	r2,12(r16)
 2002c40:	10800114 	ori	r2,r2,4
 2002c44:	8080030d 	sth	r2,12(r16)
 2002c48:	80800417 	ldw	r2,16(r16)
 2002c4c:	10004526 	beq	r2,zero,2002d64 <__srefill_r+0x174>
 2002c50:	8080030b 	ldhu	r2,12(r16)
 2002c54:	108000cc 	andi	r2,r2,3
 2002c58:	1000361e 	bne	r2,zero,2002d34 <__srefill_r+0x144>
 2002c5c:	81800417 	ldw	r6,16(r16)
 2002c60:	80c00817 	ldw	r3,32(r16)
 2002c64:	81400717 	ldw	r5,28(r16)
 2002c68:	81c00517 	ldw	r7,20(r16)
 2002c6c:	8809883a 	mov	r4,r17
 2002c70:	81800015 	stw	r6,0(r16)
 2002c74:	183ee83a 	callr	r3
 2002c78:	80c0030b 	ldhu	r3,12(r16)
 2002c7c:	1009883a 	mov	r4,r2
 2002c80:	80800115 	stw	r2,4(r16)
 2002c84:	00b7ffc4 	movi	r2,-8193
 2002c88:	1884703a 	and	r2,r3,r2
 2002c8c:	8080030d 	sth	r2,12(r16)
 2002c90:	0100230e 	bge	zero,r4,2002d20 <__srefill_r+0x130>
 2002c94:	0009883a 	mov	r4,zero
 2002c98:	2005883a 	mov	r2,r4
 2002c9c:	dfc00217 	ldw	ra,8(sp)
 2002ca0:	dc400117 	ldw	r17,4(sp)
 2002ca4:	dc000017 	ldw	r16,0(sp)
 2002ca8:	dec00304 	addi	sp,sp,12
 2002cac:	f800283a 	ret
 2002cb0:	81400c17 	ldw	r5,48(r16)
 2002cb4:	283fe426 	beq	r5,zero,2002c48 <__srefill_r+0x58>
 2002cb8:	80801004 	addi	r2,r16,64
 2002cbc:	28800226 	beq	r5,r2,2002cc8 <__srefill_r+0xd8>
 2002cc0:	8809883a 	mov	r4,r17
 2002cc4:	20015c40 	call	20015c4 <_free_r>
 2002cc8:	80800f17 	ldw	r2,60(r16)
 2002ccc:	80000c15 	stw	zero,48(r16)
 2002cd0:	80800115 	stw	r2,4(r16)
 2002cd4:	103fdc26 	beq	r2,zero,2002c48 <__srefill_r+0x58>
 2002cd8:	80800e17 	ldw	r2,56(r16)
 2002cdc:	0009883a 	mov	r4,zero
 2002ce0:	80800015 	stw	r2,0(r16)
 2002ce4:	2005883a 	mov	r2,r4
 2002ce8:	dfc00217 	ldw	ra,8(sp)
 2002cec:	dc400117 	ldw	r17,4(sp)
 2002cf0:	dc000017 	ldw	r16,0(sp)
 2002cf4:	dec00304 	addi	sp,sp,12
 2002cf8:	f800283a 	ret
 2002cfc:	013fffc4 	movi	r4,-1
 2002d00:	2005883a 	mov	r2,r4
 2002d04:	dfc00217 	ldw	ra,8(sp)
 2002d08:	dc400117 	ldw	r17,4(sp)
 2002d0c:	dc000017 	ldw	r16,0(sp)
 2002d10:	dec00304 	addi	sp,sp,12
 2002d14:	f800283a 	ret
 2002d18:	2000eb00 	call	2000eb0 <__sinit>
 2002d1c:	003fbd06 	br	2002c14 <__srefill_r+0x24>
 2002d20:	20000b1e 	bne	r4,zero,2002d50 <__srefill_r+0x160>
 2002d24:	10800814 	ori	r2,r2,32
 2002d28:	013fffc4 	movi	r4,-1
 2002d2c:	8080030d 	sth	r2,12(r16)
 2002d30:	003fd906 	br	2002c98 <__srefill_r+0xa8>
 2002d34:	00808074 	movhi	r2,513
 2002d38:	10968a04 	addi	r2,r2,23080
 2002d3c:	11000017 	ldw	r4,0(r2)
 2002d40:	01408034 	movhi	r5,512
 2002d44:	294b6d04 	addi	r5,r5,11700
 2002d48:	2001e740 	call	2001e74 <_fwalk>
 2002d4c:	003fc306 	br	2002c5c <__srefill_r+0x6c>
 2002d50:	10801014 	ori	r2,r2,64
 2002d54:	013fffc4 	movi	r4,-1
 2002d58:	8080030d 	sth	r2,12(r16)
 2002d5c:	80000115 	stw	zero,4(r16)
 2002d60:	003fcd06 	br	2002c98 <__srefill_r+0xa8>
 2002d64:	8809883a 	mov	r4,r17
 2002d68:	800b883a 	mov	r5,r16
 2002d6c:	20020180 	call	2002018 <__smakebuf_r>
 2002d70:	003fb706 	br	2002c50 <__srefill_r+0x60>
 2002d74:	18c01014 	ori	r3,r3,64
 2002d78:	00800244 	movi	r2,9
 2002d7c:	013fffc4 	movi	r4,-1
 2002d80:	88800015 	stw	r2,0(r17)
 2002d84:	80c0030d 	sth	r3,12(r16)
 2002d88:	003fc306 	br	2002c98 <__srefill_r+0xa8>
 2002d8c:	8809883a 	mov	r4,r17
 2002d90:	800b883a 	mov	r5,r16
 2002d94:	2000c180 	call	2000c18 <_fflush_r>
 2002d98:	103fd81e 	bne	r2,zero,2002cfc <__srefill_r+0x10c>
 2002d9c:	8080030b 	ldhu	r2,12(r16)
 2002da0:	80000215 	stw	zero,8(r16)
 2002da4:	80000615 	stw	zero,24(r16)
 2002da8:	10bffdcc 	andi	r2,r2,65527
 2002dac:	8080030d 	sth	r2,12(r16)
 2002db0:	003fa206 	br	2002c3c <__srefill_r+0x4c>

02002db4 <lflush>:
 2002db4:	20c0030b 	ldhu	r3,12(r4)
 2002db8:	01400244 	movi	r5,9
 2002dbc:	0005883a 	mov	r2,zero
 2002dc0:	18c0024c 	andi	r3,r3,9
 2002dc4:	19400126 	beq	r3,r5,2002dcc <lflush+0x18>
 2002dc8:	f800283a 	ret
 2002dcc:	2000e141 	jmpi	2000e14 <fflush>

02002dd0 <_sbrk_r>:
 2002dd0:	defffd04 	addi	sp,sp,-12
 2002dd4:	dc000015 	stw	r16,0(sp)
 2002dd8:	04008074 	movhi	r16,513
 2002ddc:	841d6a04 	addi	r16,r16,30120
 2002de0:	dc400115 	stw	r17,4(sp)
 2002de4:	80000015 	stw	zero,0(r16)
 2002de8:	2023883a 	mov	r17,r4
 2002dec:	2809883a 	mov	r4,r5
 2002df0:	dfc00215 	stw	ra,8(sp)
 2002df4:	2010f240 	call	2010f24 <sbrk>
 2002df8:	1007883a 	mov	r3,r2
 2002dfc:	00bfffc4 	movi	r2,-1
 2002e00:	18800626 	beq	r3,r2,2002e1c <_sbrk_r+0x4c>
 2002e04:	1805883a 	mov	r2,r3
 2002e08:	dfc00217 	ldw	ra,8(sp)
 2002e0c:	dc400117 	ldw	r17,4(sp)
 2002e10:	dc000017 	ldw	r16,0(sp)
 2002e14:	dec00304 	addi	sp,sp,12
 2002e18:	f800283a 	ret
 2002e1c:	80800017 	ldw	r2,0(r16)
 2002e20:	103ff826 	beq	r2,zero,2002e04 <_sbrk_r+0x34>
 2002e24:	88800015 	stw	r2,0(r17)
 2002e28:	1805883a 	mov	r2,r3
 2002e2c:	dfc00217 	ldw	ra,8(sp)
 2002e30:	dc400117 	ldw	r17,4(sp)
 2002e34:	dc000017 	ldw	r16,0(sp)
 2002e38:	dec00304 	addi	sp,sp,12
 2002e3c:	f800283a 	ret

02002e40 <_scanf_r>:
 2002e40:	defffc04 	addi	sp,sp,-16
 2002e44:	dfc00115 	stw	ra,4(sp)
 2002e48:	d9800215 	stw	r6,8(sp)
 2002e4c:	d9c00315 	stw	r7,12(sp)
 2002e50:	280d883a 	mov	r6,r5
 2002e54:	21400117 	ldw	r5,4(r4)
 2002e58:	d8c00204 	addi	r3,sp,8
 2002e5c:	180f883a 	mov	r7,r3
 2002e60:	d8c00015 	stw	r3,0(sp)
 2002e64:	20050d80 	call	20050d8 <__svfscanf_r>
 2002e68:	dfc00117 	ldw	ra,4(sp)
 2002e6c:	dec00404 	addi	sp,sp,16
 2002e70:	f800283a 	ret

02002e74 <scanf>:
 2002e74:	defffb04 	addi	sp,sp,-20
 2002e78:	dfc00115 	stw	ra,4(sp)
 2002e7c:	d9400215 	stw	r5,8(sp)
 2002e80:	d9800315 	stw	r6,12(sp)
 2002e84:	d9c00415 	stw	r7,16(sp)
 2002e88:	00808074 	movhi	r2,513
 2002e8c:	10968904 	addi	r2,r2,23076
 2002e90:	11400017 	ldw	r5,0(r2)
 2002e94:	200d883a 	mov	r6,r4
 2002e98:	d8800204 	addi	r2,sp,8
 2002e9c:	2809883a 	mov	r4,r5
 2002ea0:	29400117 	ldw	r5,4(r5)
 2002ea4:	100f883a 	mov	r7,r2
 2002ea8:	d8800015 	stw	r2,0(sp)
 2002eac:	20050d80 	call	20050d8 <__svfscanf_r>
 2002eb0:	dfc00117 	ldw	ra,4(sp)
 2002eb4:	dec00504 	addi	sp,sp,20
 2002eb8:	f800283a 	ret

02002ebc <__sclose>:
 2002ebc:	2940038f 	ldh	r5,14(r5)
 2002ec0:	2006a141 	jmpi	2006a14 <_close_r>

02002ec4 <__sseek>:
 2002ec4:	defffe04 	addi	sp,sp,-8
 2002ec8:	dc000015 	stw	r16,0(sp)
 2002ecc:	2821883a 	mov	r16,r5
 2002ed0:	2940038f 	ldh	r5,14(r5)
 2002ed4:	dfc00115 	stw	ra,4(sp)
 2002ed8:	20089180 	call	2008918 <_lseek_r>
 2002edc:	1007883a 	mov	r3,r2
 2002ee0:	00bfffc4 	movi	r2,-1
 2002ee4:	18800926 	beq	r3,r2,2002f0c <__sseek+0x48>
 2002ee8:	8080030b 	ldhu	r2,12(r16)
 2002eec:	80c01415 	stw	r3,80(r16)
 2002ef0:	10840014 	ori	r2,r2,4096
 2002ef4:	8080030d 	sth	r2,12(r16)
 2002ef8:	1805883a 	mov	r2,r3
 2002efc:	dfc00117 	ldw	ra,4(sp)
 2002f00:	dc000017 	ldw	r16,0(sp)
 2002f04:	dec00204 	addi	sp,sp,8
 2002f08:	f800283a 	ret
 2002f0c:	8080030b 	ldhu	r2,12(r16)
 2002f10:	10bbffcc 	andi	r2,r2,61439
 2002f14:	8080030d 	sth	r2,12(r16)
 2002f18:	1805883a 	mov	r2,r3
 2002f1c:	dfc00117 	ldw	ra,4(sp)
 2002f20:	dc000017 	ldw	r16,0(sp)
 2002f24:	dec00204 	addi	sp,sp,8
 2002f28:	f800283a 	ret

02002f2c <__swrite>:
 2002f2c:	2880030b 	ldhu	r2,12(r5)
 2002f30:	defffb04 	addi	sp,sp,-20
 2002f34:	dcc00315 	stw	r19,12(sp)
 2002f38:	1080400c 	andi	r2,r2,256
 2002f3c:	dc800215 	stw	r18,8(sp)
 2002f40:	dc400115 	stw	r17,4(sp)
 2002f44:	dc000015 	stw	r16,0(sp)
 2002f48:	3027883a 	mov	r19,r6
 2002f4c:	3825883a 	mov	r18,r7
 2002f50:	dfc00415 	stw	ra,16(sp)
 2002f54:	2821883a 	mov	r16,r5
 2002f58:	000d883a 	mov	r6,zero
 2002f5c:	01c00084 	movi	r7,2
 2002f60:	2023883a 	mov	r17,r4
 2002f64:	10000226 	beq	r2,zero,2002f70 <__swrite+0x44>
 2002f68:	2940038f 	ldh	r5,14(r5)
 2002f6c:	20089180 	call	2008918 <_lseek_r>
 2002f70:	8080030b 	ldhu	r2,12(r16)
 2002f74:	8140038f 	ldh	r5,14(r16)
 2002f78:	8809883a 	mov	r4,r17
 2002f7c:	10bbffcc 	andi	r2,r2,61439
 2002f80:	980d883a 	mov	r6,r19
 2002f84:	900f883a 	mov	r7,r18
 2002f88:	8080030d 	sth	r2,12(r16)
 2002f8c:	dfc00417 	ldw	ra,16(sp)
 2002f90:	dcc00317 	ldw	r19,12(sp)
 2002f94:	dc800217 	ldw	r18,8(sp)
 2002f98:	dc400117 	ldw	r17,4(sp)
 2002f9c:	dc000017 	ldw	r16,0(sp)
 2002fa0:	dec00504 	addi	sp,sp,20
 2002fa4:	20068601 	jmpi	2006860 <_write_r>

02002fa8 <__sread>:
 2002fa8:	defffe04 	addi	sp,sp,-8
 2002fac:	dc000015 	stw	r16,0(sp)
 2002fb0:	2821883a 	mov	r16,r5
 2002fb4:	2940038f 	ldh	r5,14(r5)
 2002fb8:	dfc00115 	stw	ra,4(sp)
 2002fbc:	2009ce00 	call	2009ce0 <_read_r>
 2002fc0:	1007883a 	mov	r3,r2
 2002fc4:	10000816 	blt	r2,zero,2002fe8 <__sread+0x40>
 2002fc8:	80801417 	ldw	r2,80(r16)
 2002fcc:	10c5883a 	add	r2,r2,r3
 2002fd0:	80801415 	stw	r2,80(r16)
 2002fd4:	1805883a 	mov	r2,r3
 2002fd8:	dfc00117 	ldw	ra,4(sp)
 2002fdc:	dc000017 	ldw	r16,0(sp)
 2002fe0:	dec00204 	addi	sp,sp,8
 2002fe4:	f800283a 	ret
 2002fe8:	8080030b 	ldhu	r2,12(r16)
 2002fec:	10bbffcc 	andi	r2,r2,61439
 2002ff0:	8080030d 	sth	r2,12(r16)
 2002ff4:	1805883a 	mov	r2,r3
 2002ff8:	dfc00117 	ldw	ra,4(sp)
 2002ffc:	dc000017 	ldw	r16,0(sp)
 2003000:	dec00204 	addi	sp,sp,8
 2003004:	f800283a 	ret

02003008 <strcat>:
 2003008:	defffe04 	addi	sp,sp,-8
 200300c:	208000cc 	andi	r2,r4,3
 2003010:	dc000015 	stw	r16,0(sp)
 2003014:	dfc00115 	stw	ra,4(sp)
 2003018:	2021883a 	mov	r16,r4
 200301c:	1000161e 	bne	r2,zero,2003078 <strcat+0x70>
 2003020:	20c00017 	ldw	r3,0(r4)
 2003024:	01bfbff4 	movhi	r6,65279
 2003028:	31bfbfc4 	addi	r6,r6,-257
 200302c:	02202074 	movhi	r8,32897
 2003030:	42202004 	addi	r8,r8,-32640
 2003034:	1985883a 	add	r2,r3,r6
 2003038:	1204703a 	and	r2,r2,r8
 200303c:	00c6303a 	nor	r3,zero,r3
 2003040:	1886703a 	and	r3,r3,r2
 2003044:	18000c1e 	bne	r3,zero,2003078 <strcat+0x70>
 2003048:	300f883a 	mov	r7,r6
 200304c:	400d883a 	mov	r6,r8
 2003050:	21000104 	addi	r4,r4,4
 2003054:	20800017 	ldw	r2,0(r4)
 2003058:	11c7883a 	add	r3,r2,r7
 200305c:	1986703a 	and	r3,r3,r6
 2003060:	0084303a 	nor	r2,zero,r2
 2003064:	10c4703a 	and	r2,r2,r3
 2003068:	103ff926 	beq	r2,zero,2003050 <strcat+0x48>
 200306c:	20800007 	ldb	r2,0(r4)
 2003070:	10000326 	beq	r2,zero,2003080 <strcat+0x78>
 2003074:	21000044 	addi	r4,r4,1
 2003078:	20800007 	ldb	r2,0(r4)
 200307c:	103ffd1e 	bne	r2,zero,2003074 <strcat+0x6c>
 2003080:	20030980 	call	2003098 <strcpy>
 2003084:	8005883a 	mov	r2,r16
 2003088:	dfc00117 	ldw	ra,4(sp)
 200308c:	dc000017 	ldw	r16,0(sp)
 2003090:	dec00204 	addi	sp,sp,8
 2003094:	f800283a 	ret

02003098 <strcpy>:
 2003098:	2904b03a 	or	r2,r5,r4
 200309c:	108000cc 	andi	r2,r2,3
 20030a0:	10000826 	beq	r2,zero,20030c4 <strcpy+0x2c>
 20030a4:	2007883a 	mov	r3,r4
 20030a8:	28800003 	ldbu	r2,0(r5)
 20030ac:	29400044 	addi	r5,r5,1
 20030b0:	18800005 	stb	r2,0(r3)
 20030b4:	18c00044 	addi	r3,r3,1
 20030b8:	103ffb1e 	bne	r2,zero,20030a8 <strcpy+0x10>
 20030bc:	2005883a 	mov	r2,r4
 20030c0:	f800283a 	ret
 20030c4:	29800017 	ldw	r6,0(r5)
 20030c8:	023fbff4 	movhi	r8,65279
 20030cc:	423fbfc4 	addi	r8,r8,-257
 20030d0:	02a02074 	movhi	r10,32897
 20030d4:	52a02004 	addi	r10,r10,-32640
 20030d8:	3205883a 	add	r2,r6,r8
 20030dc:	0186303a 	nor	r3,zero,r6
 20030e0:	10c4703a 	and	r2,r2,r3
 20030e4:	1284703a 	and	r2,r2,r10
 20030e8:	200f883a 	mov	r7,r4
 20030ec:	10000b1e 	bne	r2,zero,200311c <strcpy+0x84>
 20030f0:	4013883a 	mov	r9,r8
 20030f4:	5011883a 	mov	r8,r10
 20030f8:	39800015 	stw	r6,0(r7)
 20030fc:	29400104 	addi	r5,r5,4
 2003100:	29800017 	ldw	r6,0(r5)
 2003104:	39c00104 	addi	r7,r7,4
 2003108:	3245883a 	add	r2,r6,r9
 200310c:	0186303a 	nor	r3,zero,r6
 2003110:	10c4703a 	and	r2,r2,r3
 2003114:	1204703a 	and	r2,r2,r8
 2003118:	103ff726 	beq	r2,zero,20030f8 <strcpy+0x60>
 200311c:	3807883a 	mov	r3,r7
 2003120:	003fe106 	br	20030a8 <strcpy+0x10>

02003124 <strlen>:
 2003124:	208000cc 	andi	r2,r4,3
 2003128:	2011883a 	mov	r8,r4
 200312c:	1000161e 	bne	r2,zero,2003188 <strlen+0x64>
 2003130:	20c00017 	ldw	r3,0(r4)
 2003134:	017fbff4 	movhi	r5,65279
 2003138:	297fbfc4 	addi	r5,r5,-257
 200313c:	01e02074 	movhi	r7,32897
 2003140:	39e02004 	addi	r7,r7,-32640
 2003144:	1945883a 	add	r2,r3,r5
 2003148:	11c4703a 	and	r2,r2,r7
 200314c:	00c6303a 	nor	r3,zero,r3
 2003150:	1886703a 	and	r3,r3,r2
 2003154:	18000c1e 	bne	r3,zero,2003188 <strlen+0x64>
 2003158:	280d883a 	mov	r6,r5
 200315c:	380b883a 	mov	r5,r7
 2003160:	21000104 	addi	r4,r4,4
 2003164:	20800017 	ldw	r2,0(r4)
 2003168:	1187883a 	add	r3,r2,r6
 200316c:	1946703a 	and	r3,r3,r5
 2003170:	0084303a 	nor	r2,zero,r2
 2003174:	10c4703a 	and	r2,r2,r3
 2003178:	103ff926 	beq	r2,zero,2003160 <strlen+0x3c>
 200317c:	20800007 	ldb	r2,0(r4)
 2003180:	10000326 	beq	r2,zero,2003190 <strlen+0x6c>
 2003184:	21000044 	addi	r4,r4,1
 2003188:	20800007 	ldb	r2,0(r4)
 200318c:	103ffd1e 	bne	r2,zero,2003184 <strlen+0x60>
 2003190:	2205c83a 	sub	r2,r4,r8
 2003194:	f800283a 	ret

02003198 <__sprint_r>:
 2003198:	30800217 	ldw	r2,8(r6)
 200319c:	defffe04 	addi	sp,sp,-8
 20031a0:	dc000015 	stw	r16,0(sp)
 20031a4:	dfc00115 	stw	ra,4(sp)
 20031a8:	3021883a 	mov	r16,r6
 20031ac:	0007883a 	mov	r3,zero
 20031b0:	1000061e 	bne	r2,zero,20031cc <__sprint_r+0x34>
 20031b4:	1805883a 	mov	r2,r3
 20031b8:	30000115 	stw	zero,4(r6)
 20031bc:	dfc00117 	ldw	ra,4(sp)
 20031c0:	dc000017 	ldw	r16,0(sp)
 20031c4:	dec00204 	addi	sp,sp,8
 20031c8:	f800283a 	ret
 20031cc:	200831c0 	call	200831c <__sfvwrite_r>
 20031d0:	1007883a 	mov	r3,r2
 20031d4:	1805883a 	mov	r2,r3
 20031d8:	80000115 	stw	zero,4(r16)
 20031dc:	80000215 	stw	zero,8(r16)
 20031e0:	dfc00117 	ldw	ra,4(sp)
 20031e4:	dc000017 	ldw	r16,0(sp)
 20031e8:	dec00204 	addi	sp,sp,8
 20031ec:	f800283a 	ret

020031f0 <___vfprintf_internal_r>:
 20031f0:	defea304 	addi	sp,sp,-1396
 20031f4:	dd815915 	stw	r22,1380(sp)
 20031f8:	dc015315 	stw	r16,1356(sp)
 20031fc:	d9c15215 	stw	r7,1352(sp)
 2003200:	dfc15c15 	stw	ra,1392(sp)
 2003204:	df015b15 	stw	fp,1388(sp)
 2003208:	ddc15a15 	stw	r23,1384(sp)
 200320c:	dd415815 	stw	r21,1376(sp)
 2003210:	dd015715 	stw	r20,1372(sp)
 2003214:	dcc15615 	stw	r19,1368(sp)
 2003218:	dc815515 	stw	r18,1364(sp)
 200321c:	dc415415 	stw	r17,1360(sp)
 2003220:	282d883a 	mov	r22,r5
 2003224:	3021883a 	mov	r16,r6
 2003228:	d9015015 	stw	r4,1344(sp)
 200322c:	200885c0 	call	200885c <_localeconv_r>
 2003230:	10800017 	ldw	r2,0(r2)
 2003234:	d9c15217 	ldw	r7,1352(sp)
 2003238:	d8814a15 	stw	r2,1320(sp)
 200323c:	d8815017 	ldw	r2,1344(sp)
 2003240:	10000226 	beq	r2,zero,200324c <___vfprintf_internal_r+0x5c>
 2003244:	10800e17 	ldw	r2,56(r2)
 2003248:	10020d26 	beq	r2,zero,2003a80 <___vfprintf_internal_r+0x890>
 200324c:	b080030b 	ldhu	r2,12(r22)
 2003250:	1080020c 	andi	r2,r2,8
 2003254:	10020e26 	beq	r2,zero,2003a90 <___vfprintf_internal_r+0x8a0>
 2003258:	b0800417 	ldw	r2,16(r22)
 200325c:	10020c26 	beq	r2,zero,2003a90 <___vfprintf_internal_r+0x8a0>
 2003260:	b200030b 	ldhu	r8,12(r22)
 2003264:	00800284 	movi	r2,10
 2003268:	40c0068c 	andi	r3,r8,26
 200326c:	18802f1e 	bne	r3,r2,200332c <___vfprintf_internal_r+0x13c>
 2003270:	b080038f 	ldh	r2,14(r22)
 2003274:	10002d16 	blt	r2,zero,200332c <___vfprintf_internal_r+0x13c>
 2003278:	b240038b 	ldhu	r9,14(r22)
 200327c:	b2800717 	ldw	r10,28(r22)
 2003280:	b2c00917 	ldw	r11,36(r22)
 2003284:	d9015017 	ldw	r4,1344(sp)
 2003288:	dc402a04 	addi	r17,sp,168
 200328c:	d8804104 	addi	r2,sp,260
 2003290:	00c10004 	movi	r3,1024
 2003294:	423fff4c 	andi	r8,r8,65533
 2003298:	800d883a 	mov	r6,r16
 200329c:	880b883a 	mov	r5,r17
 20032a0:	da002d0d 	sth	r8,180(sp)
 20032a4:	da402d8d 	sth	r9,182(sp)
 20032a8:	da803115 	stw	r10,196(sp)
 20032ac:	dac03315 	stw	r11,204(sp)
 20032b0:	d8802e15 	stw	r2,184(sp)
 20032b4:	d8c02f15 	stw	r3,188(sp)
 20032b8:	d8802a15 	stw	r2,168(sp)
 20032bc:	d8c02c15 	stw	r3,176(sp)
 20032c0:	d8003015 	stw	zero,192(sp)
 20032c4:	20031f00 	call	20031f0 <___vfprintf_internal_r>
 20032c8:	d8814c15 	stw	r2,1328(sp)
 20032cc:	10000416 	blt	r2,zero,20032e0 <___vfprintf_internal_r+0xf0>
 20032d0:	d9015017 	ldw	r4,1344(sp)
 20032d4:	880b883a 	mov	r5,r17
 20032d8:	2000c180 	call	2000c18 <_fflush_r>
 20032dc:	1002321e 	bne	r2,zero,2003ba8 <___vfprintf_internal_r+0x9b8>
 20032e0:	d8802d0b 	ldhu	r2,180(sp)
 20032e4:	1080100c 	andi	r2,r2,64
 20032e8:	10000326 	beq	r2,zero,20032f8 <___vfprintf_internal_r+0x108>
 20032ec:	b080030b 	ldhu	r2,12(r22)
 20032f0:	10801014 	ori	r2,r2,64
 20032f4:	b080030d 	sth	r2,12(r22)
 20032f8:	d8814c17 	ldw	r2,1328(sp)
 20032fc:	dfc15c17 	ldw	ra,1392(sp)
 2003300:	df015b17 	ldw	fp,1388(sp)
 2003304:	ddc15a17 	ldw	r23,1384(sp)
 2003308:	dd815917 	ldw	r22,1380(sp)
 200330c:	dd415817 	ldw	r21,1376(sp)
 2003310:	dd015717 	ldw	r20,1372(sp)
 2003314:	dcc15617 	ldw	r19,1368(sp)
 2003318:	dc815517 	ldw	r18,1364(sp)
 200331c:	dc415417 	ldw	r17,1360(sp)
 2003320:	dc015317 	ldw	r16,1356(sp)
 2003324:	dec15d04 	addi	sp,sp,1396
 2003328:	f800283a 	ret
 200332c:	0005883a 	mov	r2,zero
 2003330:	0007883a 	mov	r3,zero
 2003334:	dd401a04 	addi	r21,sp,104
 2003338:	d8814315 	stw	r2,1292(sp)
 200333c:	802f883a 	mov	r23,r16
 2003340:	d8c14415 	stw	r3,1296(sp)
 2003344:	d8014c15 	stw	zero,1328(sp)
 2003348:	d8014915 	stw	zero,1316(sp)
 200334c:	d8014515 	stw	zero,1300(sp)
 2003350:	d8014815 	stw	zero,1312(sp)
 2003354:	dd400d15 	stw	r21,52(sp)
 2003358:	d8000f15 	stw	zero,60(sp)
 200335c:	d8000e15 	stw	zero,56(sp)
 2003360:	b8800007 	ldb	r2,0(r23)
 2003364:	10001926 	beq	r2,zero,20033cc <___vfprintf_internal_r+0x1dc>
 2003368:	00c00944 	movi	r3,37
 200336c:	10c01726 	beq	r2,r3,20033cc <___vfprintf_internal_r+0x1dc>
 2003370:	b821883a 	mov	r16,r23
 2003374:	00000106 	br	200337c <___vfprintf_internal_r+0x18c>
 2003378:	10c00326 	beq	r2,r3,2003388 <___vfprintf_internal_r+0x198>
 200337c:	84000044 	addi	r16,r16,1
 2003380:	80800007 	ldb	r2,0(r16)
 2003384:	103ffc1e 	bne	r2,zero,2003378 <___vfprintf_internal_r+0x188>
 2003388:	85e7c83a 	sub	r19,r16,r23
 200338c:	98000e26 	beq	r19,zero,20033c8 <___vfprintf_internal_r+0x1d8>
 2003390:	dc800f17 	ldw	r18,60(sp)
 2003394:	dc400e17 	ldw	r17,56(sp)
 2003398:	008001c4 	movi	r2,7
 200339c:	94e5883a 	add	r18,r18,r19
 20033a0:	8c400044 	addi	r17,r17,1
 20033a4:	adc00015 	stw	r23,0(r21)
 20033a8:	dc800f15 	stw	r18,60(sp)
 20033ac:	acc00115 	stw	r19,4(r21)
 20033b0:	dc400e15 	stw	r17,56(sp)
 20033b4:	14428b16 	blt	r2,r17,2003de4 <___vfprintf_internal_r+0xbf4>
 20033b8:	ad400204 	addi	r21,r21,8
 20033bc:	d9014c17 	ldw	r4,1328(sp)
 20033c0:	24c9883a 	add	r4,r4,r19
 20033c4:	d9014c15 	stw	r4,1328(sp)
 20033c8:	802f883a 	mov	r23,r16
 20033cc:	b8800007 	ldb	r2,0(r23)
 20033d0:	10013c26 	beq	r2,zero,20038c4 <___vfprintf_internal_r+0x6d4>
 20033d4:	bdc00044 	addi	r23,r23,1
 20033d8:	d8000405 	stb	zero,16(sp)
 20033dc:	b8c00007 	ldb	r3,0(r23)
 20033e0:	04ffffc4 	movi	r19,-1
 20033e4:	d8014d15 	stw	zero,1332(sp)
 20033e8:	d8014b15 	stw	zero,1324(sp)
 20033ec:	d8c14e15 	stw	r3,1336(sp)
 20033f0:	bdc00044 	addi	r23,r23,1
 20033f4:	d9414e17 	ldw	r5,1336(sp)
 20033f8:	00801604 	movi	r2,88
 20033fc:	28fff804 	addi	r3,r5,-32
 2003400:	10c06036 	bltu	r2,r3,2003584 <___vfprintf_internal_r+0x394>
 2003404:	18c5883a 	add	r2,r3,r3
 2003408:	1085883a 	add	r2,r2,r2
 200340c:	00c08034 	movhi	r3,512
 2003410:	18cd0804 	addi	r3,r3,13344
 2003414:	10c5883a 	add	r2,r2,r3
 2003418:	11000017 	ldw	r4,0(r2)
 200341c:	2000683a 	jmp	r4
 2003420:	02004394 	movui	r8,270
 2003424:	02003584 	movi	r8,214
 2003428:	02003584 	movi	r8,214
 200342c:	02004380 	call	200438 <__alt_mem_sdram-0x1dffbc8>
 2003430:	02003584 	movi	r8,214
 2003434:	02003584 	movi	r8,214
 2003438:	02003584 	movi	r8,214
 200343c:	02003584 	movi	r8,214
 2003440:	02003584 	movi	r8,214
 2003444:	02003584 	movi	r8,214
 2003448:	02004160 	cmpeqi	r8,zero,261
 200344c:	02004370 	cmpltui	r8,zero,269
 2003450:	02003584 	movi	r8,214
 2003454:	02004178 	rdprs	r8,zero,261
 2003458:	02004418 	cmpnei	r8,zero,272
 200345c:	02003584 	movi	r8,214
 2003460:	02004404 	movi	r8,272
 2003464:	020043c0 	call	20043c <__alt_mem_sdram-0x1dffbc4>
 2003468:	020043c0 	call	20043c <__alt_mem_sdram-0x1dffbc4>
 200346c:	020043c0 	call	20043c <__alt_mem_sdram-0x1dffbc4>
 2003470:	020043c0 	call	20043c <__alt_mem_sdram-0x1dffbc4>
 2003474:	020043c0 	call	20043c <__alt_mem_sdram-0x1dffbc4>
 2003478:	020043c0 	call	20043c <__alt_mem_sdram-0x1dffbc4>
 200347c:	020043c0 	call	20043c <__alt_mem_sdram-0x1dffbc4>
 2003480:	020043c0 	call	20043c <__alt_mem_sdram-0x1dffbc4>
 2003484:	020043c0 	call	20043c <__alt_mem_sdram-0x1dffbc4>
 2003488:	02003584 	movi	r8,214
 200348c:	02003584 	movi	r8,214
 2003490:	02003584 	movi	r8,214
 2003494:	02003584 	movi	r8,214
 2003498:	02003584 	movi	r8,214
 200349c:	02003584 	movi	r8,214
 20034a0:	02003584 	movi	r8,214
 20034a4:	02003584 	movi	r8,214
 20034a8:	02003584 	movi	r8,214
 20034ac:	02003584 	movi	r8,214
 20034b0:	02003bdc 	xori	r8,zero,239
 20034b4:	02004248 	cmpgei	r8,zero,265
 20034b8:	02003584 	movi	r8,214
 20034bc:	02004248 	cmpgei	r8,zero,265
 20034c0:	02003584 	movi	r8,214
 20034c4:	02003584 	movi	r8,214
 20034c8:	02003584 	movi	r8,214
 20034cc:	02003584 	movi	r8,214
 20034d0:	020043ac 	andhi	r8,zero,270
 20034d4:	02003584 	movi	r8,214
 20034d8:	02003584 	movi	r8,214
 20034dc:	02003c90 	cmplti	r8,zero,242
 20034e0:	02003584 	movi	r8,214
 20034e4:	02003584 	movi	r8,214
 20034e8:	02003584 	movi	r8,214
 20034ec:	02003584 	movi	r8,214
 20034f0:	02003584 	movi	r8,214
 20034f4:	02003cdc 	xori	r8,zero,243
 20034f8:	02003584 	movi	r8,214
 20034fc:	02003584 	movi	r8,214
 2003500:	020042fc 	xorhi	r8,zero,267
 2003504:	02003584 	movi	r8,214
 2003508:	02003584 	movi	r8,214
 200350c:	02003584 	movi	r8,214
 2003510:	02003584 	movi	r8,214
 2003514:	02003584 	movi	r8,214
 2003518:	02003584 	movi	r8,214
 200351c:	02003584 	movi	r8,214
 2003520:	02003584 	movi	r8,214
 2003524:	02003584 	movi	r8,214
 2003528:	02003584 	movi	r8,214
 200352c:	020042d0 	cmplti	r8,zero,267
 2003530:	02003be8 	cmpgeui	r8,zero,239
 2003534:	02004248 	cmpgei	r8,zero,265
 2003538:	02004248 	cmpgei	r8,zero,265
 200353c:	02004248 	cmpgei	r8,zero,265
 2003540:	02004234 	movhi	r8,264
 2003544:	02003be8 	cmpgeui	r8,zero,239
 2003548:	02003584 	movi	r8,214
 200354c:	02003584 	movi	r8,214
 2003550:	020041bc 	xorhi	r8,zero,262
 2003554:	02003584 	movi	r8,214
 2003558:	0200418c 	andi	r8,zero,262
 200355c:	02003c9c 	xori	r8,zero,242
 2003560:	020041ec 	andhi	r8,zero,263
 2003564:	020041d8 	cmpnei	r8,zero,263
 2003568:	02003584 	movi	r8,214
 200356c:	02004480 	call	200448 <__alt_mem_sdram-0x1dffbb8>
 2003570:	02003584 	movi	r8,214
 2003574:	02003ce8 	cmpgeui	r8,zero,243
 2003578:	02003584 	movi	r8,214
 200357c:	02003584 	movi	r8,214
 2003580:	02004360 	cmpeqi	r8,zero,269
 2003584:	d9014e17 	ldw	r4,1336(sp)
 2003588:	2000ce26 	beq	r4,zero,20038c4 <___vfprintf_internal_r+0x6d4>
 200358c:	01400044 	movi	r5,1
 2003590:	d9801004 	addi	r6,sp,64
 2003594:	d9c14115 	stw	r7,1284(sp)
 2003598:	d9414615 	stw	r5,1304(sp)
 200359c:	d9814215 	stw	r6,1288(sp)
 20035a0:	280f883a 	mov	r7,r5
 20035a4:	d9001005 	stb	r4,64(sp)
 20035a8:	d8000405 	stb	zero,16(sp)
 20035ac:	d8014715 	stw	zero,1308(sp)
 20035b0:	d8c14d17 	ldw	r3,1332(sp)
 20035b4:	1880008c 	andi	r2,r3,2
 20035b8:	1005003a 	cmpeq	r2,r2,zero
 20035bc:	d8815115 	stw	r2,1348(sp)
 20035c0:	1000031e 	bne	r2,zero,20035d0 <___vfprintf_internal_r+0x3e0>
 20035c4:	d9014617 	ldw	r4,1304(sp)
 20035c8:	21000084 	addi	r4,r4,2
 20035cc:	d9014615 	stw	r4,1304(sp)
 20035d0:	d9414d17 	ldw	r5,1332(sp)
 20035d4:	2940210c 	andi	r5,r5,132
 20035d8:	d9414f15 	stw	r5,1340(sp)
 20035dc:	28002d1e 	bne	r5,zero,2003694 <___vfprintf_internal_r+0x4a4>
 20035e0:	d9814b17 	ldw	r6,1324(sp)
 20035e4:	d8814617 	ldw	r2,1304(sp)
 20035e8:	30a1c83a 	sub	r16,r6,r2
 20035ec:	0400290e 	bge	zero,r16,2003694 <___vfprintf_internal_r+0x4a4>
 20035f0:	00800404 	movi	r2,16
 20035f4:	14045e0e 	bge	r2,r16,2004770 <___vfprintf_internal_r+0x1580>
 20035f8:	dc800f17 	ldw	r18,60(sp)
 20035fc:	dc400e17 	ldw	r17,56(sp)
 2003600:	1027883a 	mov	r19,r2
 2003604:	07008074 	movhi	fp,513
 2003608:	e70e3904 	addi	fp,fp,14564
 200360c:	050001c4 	movi	r20,7
 2003610:	00000306 	br	2003620 <___vfprintf_internal_r+0x430>
 2003614:	843ffc04 	addi	r16,r16,-16
 2003618:	ad400204 	addi	r21,r21,8
 200361c:	9c00130e 	bge	r19,r16,200366c <___vfprintf_internal_r+0x47c>
 2003620:	94800404 	addi	r18,r18,16
 2003624:	8c400044 	addi	r17,r17,1
 2003628:	af000015 	stw	fp,0(r21)
 200362c:	acc00115 	stw	r19,4(r21)
 2003630:	dc800f15 	stw	r18,60(sp)
 2003634:	dc400e15 	stw	r17,56(sp)
 2003638:	a47ff60e 	bge	r20,r17,2003614 <___vfprintf_internal_r+0x424>
 200363c:	d9015017 	ldw	r4,1344(sp)
 2003640:	b00b883a 	mov	r5,r22
 2003644:	d9800d04 	addi	r6,sp,52
 2003648:	d9c15215 	stw	r7,1352(sp)
 200364c:	20031980 	call	2003198 <__sprint_r>
 2003650:	d9c15217 	ldw	r7,1352(sp)
 2003654:	10009e1e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003658:	843ffc04 	addi	r16,r16,-16
 200365c:	dc800f17 	ldw	r18,60(sp)
 2003660:	dc400e17 	ldw	r17,56(sp)
 2003664:	dd401a04 	addi	r21,sp,104
 2003668:	9c3fed16 	blt	r19,r16,2003620 <___vfprintf_internal_r+0x430>
 200366c:	9425883a 	add	r18,r18,r16
 2003670:	8c400044 	addi	r17,r17,1
 2003674:	008001c4 	movi	r2,7
 2003678:	af000015 	stw	fp,0(r21)
 200367c:	ac000115 	stw	r16,4(r21)
 2003680:	dc800f15 	stw	r18,60(sp)
 2003684:	dc400e15 	stw	r17,56(sp)
 2003688:	1441f516 	blt	r2,r17,2003e60 <___vfprintf_internal_r+0xc70>
 200368c:	ad400204 	addi	r21,r21,8
 2003690:	00000206 	br	200369c <___vfprintf_internal_r+0x4ac>
 2003694:	dc800f17 	ldw	r18,60(sp)
 2003698:	dc400e17 	ldw	r17,56(sp)
 200369c:	d8800407 	ldb	r2,16(sp)
 20036a0:	10000b26 	beq	r2,zero,20036d0 <___vfprintf_internal_r+0x4e0>
 20036a4:	00800044 	movi	r2,1
 20036a8:	94800044 	addi	r18,r18,1
 20036ac:	8c400044 	addi	r17,r17,1
 20036b0:	a8800115 	stw	r2,4(r21)
 20036b4:	d8c00404 	addi	r3,sp,16
 20036b8:	008001c4 	movi	r2,7
 20036bc:	a8c00015 	stw	r3,0(r21)
 20036c0:	dc800f15 	stw	r18,60(sp)
 20036c4:	dc400e15 	stw	r17,56(sp)
 20036c8:	1441da16 	blt	r2,r17,2003e34 <___vfprintf_internal_r+0xc44>
 20036cc:	ad400204 	addi	r21,r21,8
 20036d0:	d9015117 	ldw	r4,1348(sp)
 20036d4:	20000b1e 	bne	r4,zero,2003704 <___vfprintf_internal_r+0x514>
 20036d8:	d8800504 	addi	r2,sp,20
 20036dc:	94800084 	addi	r18,r18,2
 20036e0:	8c400044 	addi	r17,r17,1
 20036e4:	a8800015 	stw	r2,0(r21)
 20036e8:	00c00084 	movi	r3,2
 20036ec:	008001c4 	movi	r2,7
 20036f0:	a8c00115 	stw	r3,4(r21)
 20036f4:	dc800f15 	stw	r18,60(sp)
 20036f8:	dc400e15 	stw	r17,56(sp)
 20036fc:	1441c216 	blt	r2,r17,2003e08 <___vfprintf_internal_r+0xc18>
 2003700:	ad400204 	addi	r21,r21,8
 2003704:	d9414f17 	ldw	r5,1340(sp)
 2003708:	00802004 	movi	r2,128
 200370c:	2880b126 	beq	r5,r2,20039d4 <___vfprintf_internal_r+0x7e4>
 2003710:	d8c14717 	ldw	r3,1308(sp)
 2003714:	19e1c83a 	sub	r16,r3,r7
 2003718:	0400260e 	bge	zero,r16,20037b4 <___vfprintf_internal_r+0x5c4>
 200371c:	00800404 	movi	r2,16
 2003720:	1403cf0e 	bge	r2,r16,2004660 <___vfprintf_internal_r+0x1470>
 2003724:	1027883a 	mov	r19,r2
 2003728:	07008074 	movhi	fp,513
 200372c:	e70e3504 	addi	fp,fp,14548
 2003730:	050001c4 	movi	r20,7
 2003734:	00000306 	br	2003744 <___vfprintf_internal_r+0x554>
 2003738:	843ffc04 	addi	r16,r16,-16
 200373c:	ad400204 	addi	r21,r21,8
 2003740:	9c00130e 	bge	r19,r16,2003790 <___vfprintf_internal_r+0x5a0>
 2003744:	94800404 	addi	r18,r18,16
 2003748:	8c400044 	addi	r17,r17,1
 200374c:	af000015 	stw	fp,0(r21)
 2003750:	acc00115 	stw	r19,4(r21)
 2003754:	dc800f15 	stw	r18,60(sp)
 2003758:	dc400e15 	stw	r17,56(sp)
 200375c:	a47ff60e 	bge	r20,r17,2003738 <___vfprintf_internal_r+0x548>
 2003760:	d9015017 	ldw	r4,1344(sp)
 2003764:	b00b883a 	mov	r5,r22
 2003768:	d9800d04 	addi	r6,sp,52
 200376c:	d9c15215 	stw	r7,1352(sp)
 2003770:	20031980 	call	2003198 <__sprint_r>
 2003774:	d9c15217 	ldw	r7,1352(sp)
 2003778:	1000551e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 200377c:	843ffc04 	addi	r16,r16,-16
 2003780:	dc800f17 	ldw	r18,60(sp)
 2003784:	dc400e17 	ldw	r17,56(sp)
 2003788:	dd401a04 	addi	r21,sp,104
 200378c:	9c3fed16 	blt	r19,r16,2003744 <___vfprintf_internal_r+0x554>
 2003790:	9425883a 	add	r18,r18,r16
 2003794:	8c400044 	addi	r17,r17,1
 2003798:	008001c4 	movi	r2,7
 200379c:	af000015 	stw	fp,0(r21)
 20037a0:	ac000115 	stw	r16,4(r21)
 20037a4:	dc800f15 	stw	r18,60(sp)
 20037a8:	dc400e15 	stw	r17,56(sp)
 20037ac:	14418216 	blt	r2,r17,2003db8 <___vfprintf_internal_r+0xbc8>
 20037b0:	ad400204 	addi	r21,r21,8
 20037b4:	d9014d17 	ldw	r4,1332(sp)
 20037b8:	2080400c 	andi	r2,r4,256
 20037bc:	10004a1e 	bne	r2,zero,20038e8 <___vfprintf_internal_r+0x6f8>
 20037c0:	d9414217 	ldw	r5,1288(sp)
 20037c4:	91e5883a 	add	r18,r18,r7
 20037c8:	8c400044 	addi	r17,r17,1
 20037cc:	008001c4 	movi	r2,7
 20037d0:	a9400015 	stw	r5,0(r21)
 20037d4:	a9c00115 	stw	r7,4(r21)
 20037d8:	dc800f15 	stw	r18,60(sp)
 20037dc:	dc400e15 	stw	r17,56(sp)
 20037e0:	14416716 	blt	r2,r17,2003d80 <___vfprintf_internal_r+0xb90>
 20037e4:	a8c00204 	addi	r3,r21,8
 20037e8:	d9814d17 	ldw	r6,1332(sp)
 20037ec:	3080010c 	andi	r2,r6,4
 20037f0:	10002826 	beq	r2,zero,2003894 <___vfprintf_internal_r+0x6a4>
 20037f4:	d8814b17 	ldw	r2,1324(sp)
 20037f8:	d9014617 	ldw	r4,1304(sp)
 20037fc:	1121c83a 	sub	r16,r2,r4
 2003800:	0400240e 	bge	zero,r16,2003894 <___vfprintf_internal_r+0x6a4>
 2003804:	00800404 	movi	r2,16
 2003808:	1404550e 	bge	r2,r16,2004960 <___vfprintf_internal_r+0x1770>
 200380c:	dc400e17 	ldw	r17,56(sp)
 2003810:	1027883a 	mov	r19,r2
 2003814:	07008074 	movhi	fp,513
 2003818:	e70e3904 	addi	fp,fp,14564
 200381c:	050001c4 	movi	r20,7
 2003820:	00000306 	br	2003830 <___vfprintf_internal_r+0x640>
 2003824:	843ffc04 	addi	r16,r16,-16
 2003828:	18c00204 	addi	r3,r3,8
 200382c:	9c00110e 	bge	r19,r16,2003874 <___vfprintf_internal_r+0x684>
 2003830:	94800404 	addi	r18,r18,16
 2003834:	8c400044 	addi	r17,r17,1
 2003838:	1f000015 	stw	fp,0(r3)
 200383c:	1cc00115 	stw	r19,4(r3)
 2003840:	dc800f15 	stw	r18,60(sp)
 2003844:	dc400e15 	stw	r17,56(sp)
 2003848:	a47ff60e 	bge	r20,r17,2003824 <___vfprintf_internal_r+0x634>
 200384c:	d9015017 	ldw	r4,1344(sp)
 2003850:	b00b883a 	mov	r5,r22
 2003854:	d9800d04 	addi	r6,sp,52
 2003858:	20031980 	call	2003198 <__sprint_r>
 200385c:	10001c1e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003860:	843ffc04 	addi	r16,r16,-16
 2003864:	dc800f17 	ldw	r18,60(sp)
 2003868:	dc400e17 	ldw	r17,56(sp)
 200386c:	d8c01a04 	addi	r3,sp,104
 2003870:	9c3fef16 	blt	r19,r16,2003830 <___vfprintf_internal_r+0x640>
 2003874:	9425883a 	add	r18,r18,r16
 2003878:	8c400044 	addi	r17,r17,1
 200387c:	008001c4 	movi	r2,7
 2003880:	1f000015 	stw	fp,0(r3)
 2003884:	1c000115 	stw	r16,4(r3)
 2003888:	dc800f15 	stw	r18,60(sp)
 200388c:	dc400e15 	stw	r17,56(sp)
 2003890:	1440cb16 	blt	r2,r17,2003bc0 <___vfprintf_internal_r+0x9d0>
 2003894:	d8814b17 	ldw	r2,1324(sp)
 2003898:	d9414617 	ldw	r5,1304(sp)
 200389c:	1140010e 	bge	r2,r5,20038a4 <___vfprintf_internal_r+0x6b4>
 20038a0:	2805883a 	mov	r2,r5
 20038a4:	d9814c17 	ldw	r6,1328(sp)
 20038a8:	308d883a 	add	r6,r6,r2
 20038ac:	d9814c15 	stw	r6,1328(sp)
 20038b0:	90013b1e 	bne	r18,zero,2003da0 <___vfprintf_internal_r+0xbb0>
 20038b4:	d9c14117 	ldw	r7,1284(sp)
 20038b8:	dd401a04 	addi	r21,sp,104
 20038bc:	d8000e15 	stw	zero,56(sp)
 20038c0:	003ea706 	br	2003360 <___vfprintf_internal_r+0x170>
 20038c4:	d8800f17 	ldw	r2,60(sp)
 20038c8:	1005451e 	bne	r2,zero,2004de0 <___vfprintf_internal_r+0x1bf0>
 20038cc:	d8000e15 	stw	zero,56(sp)
 20038d0:	b080030b 	ldhu	r2,12(r22)
 20038d4:	1080100c 	andi	r2,r2,64
 20038d8:	103e8726 	beq	r2,zero,20032f8 <___vfprintf_internal_r+0x108>
 20038dc:	00bfffc4 	movi	r2,-1
 20038e0:	d8814c15 	stw	r2,1328(sp)
 20038e4:	003e8406 	br	20032f8 <___vfprintf_internal_r+0x108>
 20038e8:	d9814e17 	ldw	r6,1336(sp)
 20038ec:	00801944 	movi	r2,101
 20038f0:	11806e16 	blt	r2,r6,2003aac <___vfprintf_internal_r+0x8bc>
 20038f4:	d9414817 	ldw	r5,1312(sp)
 20038f8:	00c00044 	movi	r3,1
 20038fc:	1943490e 	bge	r3,r5,2004624 <___vfprintf_internal_r+0x1434>
 2003900:	d8814217 	ldw	r2,1288(sp)
 2003904:	94800044 	addi	r18,r18,1
 2003908:	8c400044 	addi	r17,r17,1
 200390c:	a8800015 	stw	r2,0(r21)
 2003910:	008001c4 	movi	r2,7
 2003914:	a8c00115 	stw	r3,4(r21)
 2003918:	dc800f15 	stw	r18,60(sp)
 200391c:	dc400e15 	stw	r17,56(sp)
 2003920:	1441ca16 	blt	r2,r17,200404c <___vfprintf_internal_r+0xe5c>
 2003924:	a8c00204 	addi	r3,r21,8
 2003928:	d9014a17 	ldw	r4,1320(sp)
 200392c:	00800044 	movi	r2,1
 2003930:	94800044 	addi	r18,r18,1
 2003934:	8c400044 	addi	r17,r17,1
 2003938:	18800115 	stw	r2,4(r3)
 200393c:	008001c4 	movi	r2,7
 2003940:	19000015 	stw	r4,0(r3)
 2003944:	dc800f15 	stw	r18,60(sp)
 2003948:	dc400e15 	stw	r17,56(sp)
 200394c:	1441b616 	blt	r2,r17,2004028 <___vfprintf_internal_r+0xe38>
 2003950:	1cc00204 	addi	r19,r3,8
 2003954:	d9014317 	ldw	r4,1292(sp)
 2003958:	d9414417 	ldw	r5,1296(sp)
 200395c:	000d883a 	mov	r6,zero
 2003960:	000f883a 	mov	r7,zero
 2003964:	200f3140 	call	200f314 <__nedf2>
 2003968:	10017426 	beq	r2,zero,2003f3c <___vfprintf_internal_r+0xd4c>
 200396c:	d9414817 	ldw	r5,1312(sp)
 2003970:	d9814217 	ldw	r6,1288(sp)
 2003974:	8c400044 	addi	r17,r17,1
 2003978:	2c85883a 	add	r2,r5,r18
 200397c:	14bfffc4 	addi	r18,r2,-1
 2003980:	28bfffc4 	addi	r2,r5,-1
 2003984:	30c00044 	addi	r3,r6,1
 2003988:	98800115 	stw	r2,4(r19)
 200398c:	008001c4 	movi	r2,7
 2003990:	98c00015 	stw	r3,0(r19)
 2003994:	dc800f15 	stw	r18,60(sp)
 2003998:	dc400e15 	stw	r17,56(sp)
 200399c:	14418e16 	blt	r2,r17,2003fd8 <___vfprintf_internal_r+0xde8>
 20039a0:	9cc00204 	addi	r19,r19,8
 20039a4:	d9414917 	ldw	r5,1316(sp)
 20039a8:	d8800904 	addi	r2,sp,36
 20039ac:	8c400044 	addi	r17,r17,1
 20039b0:	9165883a 	add	r18,r18,r5
 20039b4:	98800015 	stw	r2,0(r19)
 20039b8:	008001c4 	movi	r2,7
 20039bc:	99400115 	stw	r5,4(r19)
 20039c0:	dc800f15 	stw	r18,60(sp)
 20039c4:	dc400e15 	stw	r17,56(sp)
 20039c8:	1440ed16 	blt	r2,r17,2003d80 <___vfprintf_internal_r+0xb90>
 20039cc:	98c00204 	addi	r3,r19,8
 20039d0:	003f8506 	br	20037e8 <___vfprintf_internal_r+0x5f8>
 20039d4:	d9814b17 	ldw	r6,1324(sp)
 20039d8:	d8814617 	ldw	r2,1304(sp)
 20039dc:	30a1c83a 	sub	r16,r6,r2
 20039e0:	043f4b0e 	bge	zero,r16,2003710 <___vfprintf_internal_r+0x520>
 20039e4:	00800404 	movi	r2,16
 20039e8:	14043a0e 	bge	r2,r16,2004ad4 <___vfprintf_internal_r+0x18e4>
 20039ec:	1027883a 	mov	r19,r2
 20039f0:	07008074 	movhi	fp,513
 20039f4:	e70e3504 	addi	fp,fp,14548
 20039f8:	050001c4 	movi	r20,7
 20039fc:	00000306 	br	2003a0c <___vfprintf_internal_r+0x81c>
 2003a00:	843ffc04 	addi	r16,r16,-16
 2003a04:	ad400204 	addi	r21,r21,8
 2003a08:	9c00130e 	bge	r19,r16,2003a58 <___vfprintf_internal_r+0x868>
 2003a0c:	94800404 	addi	r18,r18,16
 2003a10:	8c400044 	addi	r17,r17,1
 2003a14:	af000015 	stw	fp,0(r21)
 2003a18:	acc00115 	stw	r19,4(r21)
 2003a1c:	dc800f15 	stw	r18,60(sp)
 2003a20:	dc400e15 	stw	r17,56(sp)
 2003a24:	a47ff60e 	bge	r20,r17,2003a00 <___vfprintf_internal_r+0x810>
 2003a28:	d9015017 	ldw	r4,1344(sp)
 2003a2c:	b00b883a 	mov	r5,r22
 2003a30:	d9800d04 	addi	r6,sp,52
 2003a34:	d9c15215 	stw	r7,1352(sp)
 2003a38:	20031980 	call	2003198 <__sprint_r>
 2003a3c:	d9c15217 	ldw	r7,1352(sp)
 2003a40:	103fa31e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003a44:	843ffc04 	addi	r16,r16,-16
 2003a48:	dc800f17 	ldw	r18,60(sp)
 2003a4c:	dc400e17 	ldw	r17,56(sp)
 2003a50:	dd401a04 	addi	r21,sp,104
 2003a54:	9c3fed16 	blt	r19,r16,2003a0c <___vfprintf_internal_r+0x81c>
 2003a58:	9425883a 	add	r18,r18,r16
 2003a5c:	8c400044 	addi	r17,r17,1
 2003a60:	008001c4 	movi	r2,7
 2003a64:	af000015 	stw	fp,0(r21)
 2003a68:	ac000115 	stw	r16,4(r21)
 2003a6c:	dc800f15 	stw	r18,60(sp)
 2003a70:	dc400e15 	stw	r17,56(sp)
 2003a74:	14416116 	blt	r2,r17,2003ffc <___vfprintf_internal_r+0xe0c>
 2003a78:	ad400204 	addi	r21,r21,8
 2003a7c:	003f2406 	br	2003710 <___vfprintf_internal_r+0x520>
 2003a80:	d9015017 	ldw	r4,1344(sp)
 2003a84:	2000eb00 	call	2000eb0 <__sinit>
 2003a88:	d9c15217 	ldw	r7,1352(sp)
 2003a8c:	003def06 	br	200324c <___vfprintf_internal_r+0x5c>
 2003a90:	d9015017 	ldw	r4,1344(sp)
 2003a94:	b00b883a 	mov	r5,r22
 2003a98:	d9c15215 	stw	r7,1352(sp)
 2003a9c:	20068d80 	call	20068d8 <__swsetup_r>
 2003aa0:	d9c15217 	ldw	r7,1352(sp)
 2003aa4:	103dee26 	beq	r2,zero,2003260 <___vfprintf_internal_r+0x70>
 2003aa8:	003f8c06 	br	20038dc <___vfprintf_internal_r+0x6ec>
 2003aac:	d9014317 	ldw	r4,1292(sp)
 2003ab0:	d9414417 	ldw	r5,1296(sp)
 2003ab4:	000d883a 	mov	r6,zero
 2003ab8:	000f883a 	mov	r7,zero
 2003abc:	200f28c0 	call	200f28c <__eqdf2>
 2003ac0:	1000f21e 	bne	r2,zero,2003e8c <___vfprintf_internal_r+0xc9c>
 2003ac4:	00808074 	movhi	r2,513
 2003ac8:	108e3404 	addi	r2,r2,14544
 2003acc:	94800044 	addi	r18,r18,1
 2003ad0:	8c400044 	addi	r17,r17,1
 2003ad4:	a8800015 	stw	r2,0(r21)
 2003ad8:	00c00044 	movi	r3,1
 2003adc:	008001c4 	movi	r2,7
 2003ae0:	a8c00115 	stw	r3,4(r21)
 2003ae4:	dc800f15 	stw	r18,60(sp)
 2003ae8:	dc400e15 	stw	r17,56(sp)
 2003aec:	14430016 	blt	r2,r17,20046f0 <___vfprintf_internal_r+0x1500>
 2003af0:	a8c00204 	addi	r3,r21,8
 2003af4:	d8800617 	ldw	r2,24(sp)
 2003af8:	d9014817 	ldw	r4,1312(sp)
 2003afc:	11015c0e 	bge	r2,r4,2004070 <___vfprintf_internal_r+0xe80>
 2003b00:	dc400e17 	ldw	r17,56(sp)
 2003b04:	d9814a17 	ldw	r6,1320(sp)
 2003b08:	00800044 	movi	r2,1
 2003b0c:	94800044 	addi	r18,r18,1
 2003b10:	8c400044 	addi	r17,r17,1
 2003b14:	18800115 	stw	r2,4(r3)
 2003b18:	008001c4 	movi	r2,7
 2003b1c:	19800015 	stw	r6,0(r3)
 2003b20:	dc800f15 	stw	r18,60(sp)
 2003b24:	dc400e15 	stw	r17,56(sp)
 2003b28:	14431616 	blt	r2,r17,2004784 <___vfprintf_internal_r+0x1594>
 2003b2c:	18c00204 	addi	r3,r3,8
 2003b30:	d8814817 	ldw	r2,1312(sp)
 2003b34:	143fffc4 	addi	r16,r2,-1
 2003b38:	043f2b0e 	bge	zero,r16,20037e8 <___vfprintf_internal_r+0x5f8>
 2003b3c:	00800404 	movi	r2,16
 2003b40:	1402a80e 	bge	r2,r16,20045e4 <___vfprintf_internal_r+0x13f4>
 2003b44:	dc400e17 	ldw	r17,56(sp)
 2003b48:	1027883a 	mov	r19,r2
 2003b4c:	07008074 	movhi	fp,513
 2003b50:	e70e3504 	addi	fp,fp,14548
 2003b54:	050001c4 	movi	r20,7
 2003b58:	00000306 	br	2003b68 <___vfprintf_internal_r+0x978>
 2003b5c:	18c00204 	addi	r3,r3,8
 2003b60:	843ffc04 	addi	r16,r16,-16
 2003b64:	9c02a20e 	bge	r19,r16,20045f0 <___vfprintf_internal_r+0x1400>
 2003b68:	94800404 	addi	r18,r18,16
 2003b6c:	8c400044 	addi	r17,r17,1
 2003b70:	1f000015 	stw	fp,0(r3)
 2003b74:	1cc00115 	stw	r19,4(r3)
 2003b78:	dc800f15 	stw	r18,60(sp)
 2003b7c:	dc400e15 	stw	r17,56(sp)
 2003b80:	a47ff60e 	bge	r20,r17,2003b5c <___vfprintf_internal_r+0x96c>
 2003b84:	d9015017 	ldw	r4,1344(sp)
 2003b88:	b00b883a 	mov	r5,r22
 2003b8c:	d9800d04 	addi	r6,sp,52
 2003b90:	20031980 	call	2003198 <__sprint_r>
 2003b94:	103f4e1e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003b98:	dc800f17 	ldw	r18,60(sp)
 2003b9c:	dc400e17 	ldw	r17,56(sp)
 2003ba0:	d8c01a04 	addi	r3,sp,104
 2003ba4:	003fee06 	br	2003b60 <___vfprintf_internal_r+0x970>
 2003ba8:	d8802d0b 	ldhu	r2,180(sp)
 2003bac:	00ffffc4 	movi	r3,-1
 2003bb0:	d8c14c15 	stw	r3,1328(sp)
 2003bb4:	1080100c 	andi	r2,r2,64
 2003bb8:	103dcc1e 	bne	r2,zero,20032ec <___vfprintf_internal_r+0xfc>
 2003bbc:	003dce06 	br	20032f8 <___vfprintf_internal_r+0x108>
 2003bc0:	d9015017 	ldw	r4,1344(sp)
 2003bc4:	b00b883a 	mov	r5,r22
 2003bc8:	d9800d04 	addi	r6,sp,52
 2003bcc:	20031980 	call	2003198 <__sprint_r>
 2003bd0:	103f3f1e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003bd4:	dc800f17 	ldw	r18,60(sp)
 2003bd8:	003f2e06 	br	2003894 <___vfprintf_internal_r+0x6a4>
 2003bdc:	d9414d17 	ldw	r5,1332(sp)
 2003be0:	29400414 	ori	r5,r5,16
 2003be4:	d9414d15 	stw	r5,1332(sp)
 2003be8:	d9814d17 	ldw	r6,1332(sp)
 2003bec:	3080080c 	andi	r2,r6,32
 2003bf0:	10014f1e 	bne	r2,zero,2004130 <___vfprintf_internal_r+0xf40>
 2003bf4:	d8c14d17 	ldw	r3,1332(sp)
 2003bf8:	1880040c 	andi	r2,r3,16
 2003bfc:	1002f01e 	bne	r2,zero,20047c0 <___vfprintf_internal_r+0x15d0>
 2003c00:	d9014d17 	ldw	r4,1332(sp)
 2003c04:	2080100c 	andi	r2,r4,64
 2003c08:	1002ed26 	beq	r2,zero,20047c0 <___vfprintf_internal_r+0x15d0>
 2003c0c:	3880000f 	ldh	r2,0(r7)
 2003c10:	39c00104 	addi	r7,r7,4
 2003c14:	d9c14115 	stw	r7,1284(sp)
 2003c18:	1023d7fa 	srai	r17,r2,31
 2003c1c:	1021883a 	mov	r16,r2
 2003c20:	88037816 	blt	r17,zero,2004a04 <___vfprintf_internal_r+0x1814>
 2003c24:	01000044 	movi	r4,1
 2003c28:	98000416 	blt	r19,zero,2003c3c <___vfprintf_internal_r+0xa4c>
 2003c2c:	d8c14d17 	ldw	r3,1332(sp)
 2003c30:	00bfdfc4 	movi	r2,-129
 2003c34:	1886703a 	and	r3,r3,r2
 2003c38:	d8c14d15 	stw	r3,1332(sp)
 2003c3c:	8444b03a 	or	r2,r16,r17
 2003c40:	10022c1e 	bne	r2,zero,20044f4 <___vfprintf_internal_r+0x1304>
 2003c44:	98022b1e 	bne	r19,zero,20044f4 <___vfprintf_internal_r+0x1304>
 2003c48:	20803fcc 	andi	r2,r4,255
 2003c4c:	1002a126 	beq	r2,zero,20046d4 <___vfprintf_internal_r+0x14e4>
 2003c50:	d8c01a04 	addi	r3,sp,104
 2003c54:	dd001004 	addi	r20,sp,64
 2003c58:	d8c14215 	stw	r3,1288(sp)
 2003c5c:	d8c14217 	ldw	r3,1288(sp)
 2003c60:	dcc14615 	stw	r19,1304(sp)
 2003c64:	a0c5c83a 	sub	r2,r20,r3
 2003c68:	11c00a04 	addi	r7,r2,40
 2003c6c:	99c0010e 	bge	r19,r7,2003c74 <___vfprintf_internal_r+0xa84>
 2003c70:	d9c14615 	stw	r7,1304(sp)
 2003c74:	dcc14715 	stw	r19,1308(sp)
 2003c78:	d8800407 	ldb	r2,16(sp)
 2003c7c:	103e4c26 	beq	r2,zero,20035b0 <___vfprintf_internal_r+0x3c0>
 2003c80:	d8814617 	ldw	r2,1304(sp)
 2003c84:	10800044 	addi	r2,r2,1
 2003c88:	d8814615 	stw	r2,1304(sp)
 2003c8c:	003e4806 	br	20035b0 <___vfprintf_internal_r+0x3c0>
 2003c90:	d9814d17 	ldw	r6,1332(sp)
 2003c94:	31800414 	ori	r6,r6,16
 2003c98:	d9814d15 	stw	r6,1332(sp)
 2003c9c:	d8c14d17 	ldw	r3,1332(sp)
 2003ca0:	1880080c 	andi	r2,r3,32
 2003ca4:	1001271e 	bne	r2,zero,2004144 <___vfprintf_internal_r+0xf54>
 2003ca8:	d9414d17 	ldw	r5,1332(sp)
 2003cac:	2880040c 	andi	r2,r5,16
 2003cb0:	1002bc1e 	bne	r2,zero,20047a4 <___vfprintf_internal_r+0x15b4>
 2003cb4:	d9814d17 	ldw	r6,1332(sp)
 2003cb8:	3080100c 	andi	r2,r6,64
 2003cbc:	1002b926 	beq	r2,zero,20047a4 <___vfprintf_internal_r+0x15b4>
 2003cc0:	3c00000b 	ldhu	r16,0(r7)
 2003cc4:	0009883a 	mov	r4,zero
 2003cc8:	39c00104 	addi	r7,r7,4
 2003ccc:	0023883a 	mov	r17,zero
 2003cd0:	d9c14115 	stw	r7,1284(sp)
 2003cd4:	d8000405 	stb	zero,16(sp)
 2003cd8:	003fd306 	br	2003c28 <___vfprintf_internal_r+0xa38>
 2003cdc:	d9014d17 	ldw	r4,1332(sp)
 2003ce0:	21000414 	ori	r4,r4,16
 2003ce4:	d9014d15 	stw	r4,1332(sp)
 2003ce8:	d9414d17 	ldw	r5,1332(sp)
 2003cec:	2880080c 	andi	r2,r5,32
 2003cf0:	1001081e 	bne	r2,zero,2004114 <___vfprintf_internal_r+0xf24>
 2003cf4:	d8c14d17 	ldw	r3,1332(sp)
 2003cf8:	1880040c 	andi	r2,r3,16
 2003cfc:	1002b61e 	bne	r2,zero,20047d8 <___vfprintf_internal_r+0x15e8>
 2003d00:	d9014d17 	ldw	r4,1332(sp)
 2003d04:	2080100c 	andi	r2,r4,64
 2003d08:	1002b326 	beq	r2,zero,20047d8 <___vfprintf_internal_r+0x15e8>
 2003d0c:	3c00000b 	ldhu	r16,0(r7)
 2003d10:	01000044 	movi	r4,1
 2003d14:	39c00104 	addi	r7,r7,4
 2003d18:	0023883a 	mov	r17,zero
 2003d1c:	d9c14115 	stw	r7,1284(sp)
 2003d20:	d8000405 	stb	zero,16(sp)
 2003d24:	003fc006 	br	2003c28 <___vfprintf_internal_r+0xa38>
 2003d28:	d9015017 	ldw	r4,1344(sp)
 2003d2c:	b00b883a 	mov	r5,r22
 2003d30:	d9800d04 	addi	r6,sp,52
 2003d34:	20031980 	call	2003198 <__sprint_r>
 2003d38:	103ee51e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003d3c:	dc800f17 	ldw	r18,60(sp)
 2003d40:	d8c01a04 	addi	r3,sp,104
 2003d44:	d9814d17 	ldw	r6,1332(sp)
 2003d48:	3080004c 	andi	r2,r6,1
 2003d4c:	1005003a 	cmpeq	r2,r2,zero
 2003d50:	103ea51e 	bne	r2,zero,20037e8 <___vfprintf_internal_r+0x5f8>
 2003d54:	00800044 	movi	r2,1
 2003d58:	dc400e17 	ldw	r17,56(sp)
 2003d5c:	18800115 	stw	r2,4(r3)
 2003d60:	d8814a17 	ldw	r2,1320(sp)
 2003d64:	94800044 	addi	r18,r18,1
 2003d68:	8c400044 	addi	r17,r17,1
 2003d6c:	18800015 	stw	r2,0(r3)
 2003d70:	008001c4 	movi	r2,7
 2003d74:	dc800f15 	stw	r18,60(sp)
 2003d78:	dc400e15 	stw	r17,56(sp)
 2003d7c:	1442240e 	bge	r2,r17,2004610 <___vfprintf_internal_r+0x1420>
 2003d80:	d9015017 	ldw	r4,1344(sp)
 2003d84:	b00b883a 	mov	r5,r22
 2003d88:	d9800d04 	addi	r6,sp,52
 2003d8c:	20031980 	call	2003198 <__sprint_r>
 2003d90:	103ecf1e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003d94:	dc800f17 	ldw	r18,60(sp)
 2003d98:	d8c01a04 	addi	r3,sp,104
 2003d9c:	003e9206 	br	20037e8 <___vfprintf_internal_r+0x5f8>
 2003da0:	d9015017 	ldw	r4,1344(sp)
 2003da4:	b00b883a 	mov	r5,r22
 2003da8:	d9800d04 	addi	r6,sp,52
 2003dac:	20031980 	call	2003198 <__sprint_r>
 2003db0:	103ec026 	beq	r2,zero,20038b4 <___vfprintf_internal_r+0x6c4>
 2003db4:	003ec606 	br	20038d0 <___vfprintf_internal_r+0x6e0>
 2003db8:	d9015017 	ldw	r4,1344(sp)
 2003dbc:	b00b883a 	mov	r5,r22
 2003dc0:	d9800d04 	addi	r6,sp,52
 2003dc4:	d9c15215 	stw	r7,1352(sp)
 2003dc8:	20031980 	call	2003198 <__sprint_r>
 2003dcc:	d9c15217 	ldw	r7,1352(sp)
 2003dd0:	103ebf1e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003dd4:	dc800f17 	ldw	r18,60(sp)
 2003dd8:	dc400e17 	ldw	r17,56(sp)
 2003ddc:	dd401a04 	addi	r21,sp,104
 2003de0:	003e7406 	br	20037b4 <___vfprintf_internal_r+0x5c4>
 2003de4:	d9015017 	ldw	r4,1344(sp)
 2003de8:	b00b883a 	mov	r5,r22
 2003dec:	d9800d04 	addi	r6,sp,52
 2003df0:	d9c15215 	stw	r7,1352(sp)
 2003df4:	20031980 	call	2003198 <__sprint_r>
 2003df8:	d9c15217 	ldw	r7,1352(sp)
 2003dfc:	103eb41e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003e00:	dd401a04 	addi	r21,sp,104
 2003e04:	003d6d06 	br	20033bc <___vfprintf_internal_r+0x1cc>
 2003e08:	d9015017 	ldw	r4,1344(sp)
 2003e0c:	b00b883a 	mov	r5,r22
 2003e10:	d9800d04 	addi	r6,sp,52
 2003e14:	d9c15215 	stw	r7,1352(sp)
 2003e18:	20031980 	call	2003198 <__sprint_r>
 2003e1c:	d9c15217 	ldw	r7,1352(sp)
 2003e20:	103eab1e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003e24:	dc800f17 	ldw	r18,60(sp)
 2003e28:	dc400e17 	ldw	r17,56(sp)
 2003e2c:	dd401a04 	addi	r21,sp,104
 2003e30:	003e3406 	br	2003704 <___vfprintf_internal_r+0x514>
 2003e34:	d9015017 	ldw	r4,1344(sp)
 2003e38:	b00b883a 	mov	r5,r22
 2003e3c:	d9800d04 	addi	r6,sp,52
 2003e40:	d9c15215 	stw	r7,1352(sp)
 2003e44:	20031980 	call	2003198 <__sprint_r>
 2003e48:	d9c15217 	ldw	r7,1352(sp)
 2003e4c:	103ea01e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003e50:	dc800f17 	ldw	r18,60(sp)
 2003e54:	dc400e17 	ldw	r17,56(sp)
 2003e58:	dd401a04 	addi	r21,sp,104
 2003e5c:	003e1c06 	br	20036d0 <___vfprintf_internal_r+0x4e0>
 2003e60:	d9015017 	ldw	r4,1344(sp)
 2003e64:	b00b883a 	mov	r5,r22
 2003e68:	d9800d04 	addi	r6,sp,52
 2003e6c:	d9c15215 	stw	r7,1352(sp)
 2003e70:	20031980 	call	2003198 <__sprint_r>
 2003e74:	d9c15217 	ldw	r7,1352(sp)
 2003e78:	103e951e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003e7c:	dc800f17 	ldw	r18,60(sp)
 2003e80:	dc400e17 	ldw	r17,56(sp)
 2003e84:	dd401a04 	addi	r21,sp,104
 2003e88:	003e0406 	br	200369c <___vfprintf_internal_r+0x4ac>
 2003e8c:	d9000617 	ldw	r4,24(sp)
 2003e90:	0102580e 	bge	zero,r4,20047f4 <___vfprintf_internal_r+0x1604>
 2003e94:	d9814817 	ldw	r6,1312(sp)
 2003e98:	21807a16 	blt	r4,r6,2004084 <___vfprintf_internal_r+0xe94>
 2003e9c:	d8814217 	ldw	r2,1288(sp)
 2003ea0:	91a5883a 	add	r18,r18,r6
 2003ea4:	8c400044 	addi	r17,r17,1
 2003ea8:	a8800015 	stw	r2,0(r21)
 2003eac:	008001c4 	movi	r2,7
 2003eb0:	a9800115 	stw	r6,4(r21)
 2003eb4:	dc800f15 	stw	r18,60(sp)
 2003eb8:	dc400e15 	stw	r17,56(sp)
 2003ebc:	1442fc16 	blt	r2,r17,2004ab0 <___vfprintf_internal_r+0x18c0>
 2003ec0:	a8c00204 	addi	r3,r21,8
 2003ec4:	d9414817 	ldw	r5,1312(sp)
 2003ec8:	2161c83a 	sub	r16,r4,r5
 2003ecc:	043f9d0e 	bge	zero,r16,2003d44 <___vfprintf_internal_r+0xb54>
 2003ed0:	00800404 	movi	r2,16
 2003ed4:	1402190e 	bge	r2,r16,200473c <___vfprintf_internal_r+0x154c>
 2003ed8:	dc400e17 	ldw	r17,56(sp)
 2003edc:	1027883a 	mov	r19,r2
 2003ee0:	07008074 	movhi	fp,513
 2003ee4:	e70e3504 	addi	fp,fp,14548
 2003ee8:	050001c4 	movi	r20,7
 2003eec:	00000306 	br	2003efc <___vfprintf_internal_r+0xd0c>
 2003ef0:	18c00204 	addi	r3,r3,8
 2003ef4:	843ffc04 	addi	r16,r16,-16
 2003ef8:	9c02130e 	bge	r19,r16,2004748 <___vfprintf_internal_r+0x1558>
 2003efc:	94800404 	addi	r18,r18,16
 2003f00:	8c400044 	addi	r17,r17,1
 2003f04:	1f000015 	stw	fp,0(r3)
 2003f08:	1cc00115 	stw	r19,4(r3)
 2003f0c:	dc800f15 	stw	r18,60(sp)
 2003f10:	dc400e15 	stw	r17,56(sp)
 2003f14:	a47ff60e 	bge	r20,r17,2003ef0 <___vfprintf_internal_r+0xd00>
 2003f18:	d9015017 	ldw	r4,1344(sp)
 2003f1c:	b00b883a 	mov	r5,r22
 2003f20:	d9800d04 	addi	r6,sp,52
 2003f24:	20031980 	call	2003198 <__sprint_r>
 2003f28:	103e691e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003f2c:	dc800f17 	ldw	r18,60(sp)
 2003f30:	dc400e17 	ldw	r17,56(sp)
 2003f34:	d8c01a04 	addi	r3,sp,104
 2003f38:	003fee06 	br	2003ef4 <___vfprintf_internal_r+0xd04>
 2003f3c:	d8814817 	ldw	r2,1312(sp)
 2003f40:	143fffc4 	addi	r16,r2,-1
 2003f44:	043e970e 	bge	zero,r16,20039a4 <___vfprintf_internal_r+0x7b4>
 2003f48:	00800404 	movi	r2,16
 2003f4c:	1400180e 	bge	r2,r16,2003fb0 <___vfprintf_internal_r+0xdc0>
 2003f50:	1029883a 	mov	r20,r2
 2003f54:	07008074 	movhi	fp,513
 2003f58:	e70e3504 	addi	fp,fp,14548
 2003f5c:	054001c4 	movi	r21,7
 2003f60:	00000306 	br	2003f70 <___vfprintf_internal_r+0xd80>
 2003f64:	9cc00204 	addi	r19,r19,8
 2003f68:	843ffc04 	addi	r16,r16,-16
 2003f6c:	a400120e 	bge	r20,r16,2003fb8 <___vfprintf_internal_r+0xdc8>
 2003f70:	94800404 	addi	r18,r18,16
 2003f74:	8c400044 	addi	r17,r17,1
 2003f78:	9f000015 	stw	fp,0(r19)
 2003f7c:	9d000115 	stw	r20,4(r19)
 2003f80:	dc800f15 	stw	r18,60(sp)
 2003f84:	dc400e15 	stw	r17,56(sp)
 2003f88:	ac7ff60e 	bge	r21,r17,2003f64 <___vfprintf_internal_r+0xd74>
 2003f8c:	d9015017 	ldw	r4,1344(sp)
 2003f90:	b00b883a 	mov	r5,r22
 2003f94:	d9800d04 	addi	r6,sp,52
 2003f98:	20031980 	call	2003198 <__sprint_r>
 2003f9c:	103e4c1e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003fa0:	dc800f17 	ldw	r18,60(sp)
 2003fa4:	dc400e17 	ldw	r17,56(sp)
 2003fa8:	dcc01a04 	addi	r19,sp,104
 2003fac:	003fee06 	br	2003f68 <___vfprintf_internal_r+0xd78>
 2003fb0:	07008074 	movhi	fp,513
 2003fb4:	e70e3504 	addi	fp,fp,14548
 2003fb8:	9425883a 	add	r18,r18,r16
 2003fbc:	8c400044 	addi	r17,r17,1
 2003fc0:	008001c4 	movi	r2,7
 2003fc4:	9f000015 	stw	fp,0(r19)
 2003fc8:	9c000115 	stw	r16,4(r19)
 2003fcc:	dc800f15 	stw	r18,60(sp)
 2003fd0:	dc400e15 	stw	r17,56(sp)
 2003fd4:	147e720e 	bge	r2,r17,20039a0 <___vfprintf_internal_r+0x7b0>
 2003fd8:	d9015017 	ldw	r4,1344(sp)
 2003fdc:	b00b883a 	mov	r5,r22
 2003fe0:	d9800d04 	addi	r6,sp,52
 2003fe4:	20031980 	call	2003198 <__sprint_r>
 2003fe8:	103e391e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2003fec:	dc800f17 	ldw	r18,60(sp)
 2003ff0:	dc400e17 	ldw	r17,56(sp)
 2003ff4:	dcc01a04 	addi	r19,sp,104
 2003ff8:	003e6a06 	br	20039a4 <___vfprintf_internal_r+0x7b4>
 2003ffc:	d9015017 	ldw	r4,1344(sp)
 2004000:	b00b883a 	mov	r5,r22
 2004004:	d9800d04 	addi	r6,sp,52
 2004008:	d9c15215 	stw	r7,1352(sp)
 200400c:	20031980 	call	2003198 <__sprint_r>
 2004010:	d9c15217 	ldw	r7,1352(sp)
 2004014:	103e2e1e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2004018:	dc800f17 	ldw	r18,60(sp)
 200401c:	dc400e17 	ldw	r17,56(sp)
 2004020:	dd401a04 	addi	r21,sp,104
 2004024:	003dba06 	br	2003710 <___vfprintf_internal_r+0x520>
 2004028:	d9015017 	ldw	r4,1344(sp)
 200402c:	b00b883a 	mov	r5,r22
 2004030:	d9800d04 	addi	r6,sp,52
 2004034:	20031980 	call	2003198 <__sprint_r>
 2004038:	103e251e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 200403c:	dc800f17 	ldw	r18,60(sp)
 2004040:	dc400e17 	ldw	r17,56(sp)
 2004044:	dcc01a04 	addi	r19,sp,104
 2004048:	003e4206 	br	2003954 <___vfprintf_internal_r+0x764>
 200404c:	d9015017 	ldw	r4,1344(sp)
 2004050:	b00b883a 	mov	r5,r22
 2004054:	d9800d04 	addi	r6,sp,52
 2004058:	20031980 	call	2003198 <__sprint_r>
 200405c:	103e1c1e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2004060:	dc800f17 	ldw	r18,60(sp)
 2004064:	dc400e17 	ldw	r17,56(sp)
 2004068:	d8c01a04 	addi	r3,sp,104
 200406c:	003e2e06 	br	2003928 <___vfprintf_internal_r+0x738>
 2004070:	d9414d17 	ldw	r5,1332(sp)
 2004074:	2880004c 	andi	r2,r5,1
 2004078:	1005003a 	cmpeq	r2,r2,zero
 200407c:	103dda1e 	bne	r2,zero,20037e8 <___vfprintf_internal_r+0x5f8>
 2004080:	003e9f06 	br	2003b00 <___vfprintf_internal_r+0x910>
 2004084:	d8c14217 	ldw	r3,1288(sp)
 2004088:	9125883a 	add	r18,r18,r4
 200408c:	8c400044 	addi	r17,r17,1
 2004090:	008001c4 	movi	r2,7
 2004094:	a8c00015 	stw	r3,0(r21)
 2004098:	a9000115 	stw	r4,4(r21)
 200409c:	dc800f15 	stw	r18,60(sp)
 20040a0:	dc400e15 	stw	r17,56(sp)
 20040a4:	14426c16 	blt	r2,r17,2004a58 <___vfprintf_internal_r+0x1868>
 20040a8:	a8c00204 	addi	r3,r21,8
 20040ac:	d9414a17 	ldw	r5,1320(sp)
 20040b0:	00800044 	movi	r2,1
 20040b4:	94800044 	addi	r18,r18,1
 20040b8:	8c400044 	addi	r17,r17,1
 20040bc:	18800115 	stw	r2,4(r3)
 20040c0:	008001c4 	movi	r2,7
 20040c4:	19400015 	stw	r5,0(r3)
 20040c8:	dc800f15 	stw	r18,60(sp)
 20040cc:	dc400e15 	stw	r17,56(sp)
 20040d0:	2021883a 	mov	r16,r4
 20040d4:	14425616 	blt	r2,r17,2004a30 <___vfprintf_internal_r+0x1840>
 20040d8:	19400204 	addi	r5,r3,8
 20040dc:	d9814817 	ldw	r6,1312(sp)
 20040e0:	8c400044 	addi	r17,r17,1
 20040e4:	dc400e15 	stw	r17,56(sp)
 20040e8:	3107c83a 	sub	r3,r6,r4
 20040ec:	d9014217 	ldw	r4,1288(sp)
 20040f0:	90e5883a 	add	r18,r18,r3
 20040f4:	28c00115 	stw	r3,4(r5)
 20040f8:	8105883a 	add	r2,r16,r4
 20040fc:	28800015 	stw	r2,0(r5)
 2004100:	008001c4 	movi	r2,7
 2004104:	dc800f15 	stw	r18,60(sp)
 2004108:	147f1d16 	blt	r2,r17,2003d80 <___vfprintf_internal_r+0xb90>
 200410c:	28c00204 	addi	r3,r5,8
 2004110:	003db506 	br	20037e8 <___vfprintf_internal_r+0x5f8>
 2004114:	3c000017 	ldw	r16,0(r7)
 2004118:	3c400117 	ldw	r17,4(r7)
 200411c:	39800204 	addi	r6,r7,8
 2004120:	01000044 	movi	r4,1
 2004124:	d9814115 	stw	r6,1284(sp)
 2004128:	d8000405 	stb	zero,16(sp)
 200412c:	003ebe06 	br	2003c28 <___vfprintf_internal_r+0xa38>
 2004130:	3c000017 	ldw	r16,0(r7)
 2004134:	3c400117 	ldw	r17,4(r7)
 2004138:	38800204 	addi	r2,r7,8
 200413c:	d8814115 	stw	r2,1284(sp)
 2004140:	003eb706 	br	2003c20 <___vfprintf_internal_r+0xa30>
 2004144:	3c000017 	ldw	r16,0(r7)
 2004148:	3c400117 	ldw	r17,4(r7)
 200414c:	39000204 	addi	r4,r7,8
 2004150:	d9014115 	stw	r4,1284(sp)
 2004154:	0009883a 	mov	r4,zero
 2004158:	d8000405 	stb	zero,16(sp)
 200415c:	003eb206 	br	2003c28 <___vfprintf_internal_r+0xa38>
 2004160:	38c00017 	ldw	r3,0(r7)
 2004164:	39c00104 	addi	r7,r7,4
 2004168:	d8c14b15 	stw	r3,1324(sp)
 200416c:	1800d70e 	bge	r3,zero,20044cc <___vfprintf_internal_r+0x12dc>
 2004170:	00c7c83a 	sub	r3,zero,r3
 2004174:	d8c14b15 	stw	r3,1324(sp)
 2004178:	d9014d17 	ldw	r4,1332(sp)
 200417c:	b8c00007 	ldb	r3,0(r23)
 2004180:	21000114 	ori	r4,r4,4
 2004184:	d9014d15 	stw	r4,1332(sp)
 2004188:	003c9806 	br	20033ec <___vfprintf_internal_r+0x1fc>
 200418c:	d9814d17 	ldw	r6,1332(sp)
 2004190:	3080080c 	andi	r2,r6,32
 2004194:	1001f626 	beq	r2,zero,2004970 <___vfprintf_internal_r+0x1780>
 2004198:	d9014c17 	ldw	r4,1328(sp)
 200419c:	38800017 	ldw	r2,0(r7)
 20041a0:	39c00104 	addi	r7,r7,4
 20041a4:	d9c14115 	stw	r7,1284(sp)
 20041a8:	2007d7fa 	srai	r3,r4,31
 20041ac:	d9c14117 	ldw	r7,1284(sp)
 20041b0:	11000015 	stw	r4,0(r2)
 20041b4:	10c00115 	stw	r3,4(r2)
 20041b8:	003c6906 	br	2003360 <___vfprintf_internal_r+0x170>
 20041bc:	b8c00007 	ldb	r3,0(r23)
 20041c0:	00801b04 	movi	r2,108
 20041c4:	18825526 	beq	r3,r2,2004b1c <___vfprintf_internal_r+0x192c>
 20041c8:	d9414d17 	ldw	r5,1332(sp)
 20041cc:	29400414 	ori	r5,r5,16
 20041d0:	d9414d15 	stw	r5,1332(sp)
 20041d4:	003c8506 	br	20033ec <___vfprintf_internal_r+0x1fc>
 20041d8:	d9814d17 	ldw	r6,1332(sp)
 20041dc:	b8c00007 	ldb	r3,0(r23)
 20041e0:	31800814 	ori	r6,r6,32
 20041e4:	d9814d15 	stw	r6,1332(sp)
 20041e8:	003c8006 	br	20033ec <___vfprintf_internal_r+0x1fc>
 20041ec:	d8814d17 	ldw	r2,1332(sp)
 20041f0:	3c000017 	ldw	r16,0(r7)
 20041f4:	00c01e04 	movi	r3,120
 20041f8:	10800094 	ori	r2,r2,2
 20041fc:	d8814d15 	stw	r2,1332(sp)
 2004200:	39c00104 	addi	r7,r7,4
 2004204:	01408074 	movhi	r5,513
 2004208:	294e1d04 	addi	r5,r5,14452
 200420c:	00800c04 	movi	r2,48
 2004210:	0023883a 	mov	r17,zero
 2004214:	01000084 	movi	r4,2
 2004218:	d9c14115 	stw	r7,1284(sp)
 200421c:	d8c14e15 	stw	r3,1336(sp)
 2004220:	d9414515 	stw	r5,1300(sp)
 2004224:	d8800505 	stb	r2,20(sp)
 2004228:	d8c00545 	stb	r3,21(sp)
 200422c:	d8000405 	stb	zero,16(sp)
 2004230:	003e7d06 	br	2003c28 <___vfprintf_internal_r+0xa38>
 2004234:	d8814d17 	ldw	r2,1332(sp)
 2004238:	b8c00007 	ldb	r3,0(r23)
 200423c:	10801014 	ori	r2,r2,64
 2004240:	d8814d15 	stw	r2,1332(sp)
 2004244:	003c6906 	br	20033ec <___vfprintf_internal_r+0x1fc>
 2004248:	d9414d17 	ldw	r5,1332(sp)
 200424c:	2880020c 	andi	r2,r5,8
 2004250:	1001e526 	beq	r2,zero,20049e8 <___vfprintf_internal_r+0x17f8>
 2004254:	39800017 	ldw	r6,0(r7)
 2004258:	38800204 	addi	r2,r7,8
 200425c:	d8814115 	stw	r2,1284(sp)
 2004260:	d9814315 	stw	r6,1292(sp)
 2004264:	39c00117 	ldw	r7,4(r7)
 2004268:	d9c14415 	stw	r7,1296(sp)
 200426c:	d9014317 	ldw	r4,1292(sp)
 2004270:	d9414417 	ldw	r5,1296(sp)
 2004274:	200a34c0 	call	200a34c <__isinfd>
 2004278:	10021d26 	beq	r2,zero,2004af0 <___vfprintf_internal_r+0x1900>
 200427c:	d9014317 	ldw	r4,1292(sp)
 2004280:	d9414417 	ldw	r5,1296(sp)
 2004284:	000d883a 	mov	r6,zero
 2004288:	000f883a 	mov	r7,zero
 200428c:	200f4ac0 	call	200f4ac <__ltdf2>
 2004290:	1002d016 	blt	r2,zero,2004dd4 <___vfprintf_internal_r+0x1be4>
 2004294:	d9414e17 	ldw	r5,1336(sp)
 2004298:	008011c4 	movi	r2,71
 200429c:	11421016 	blt	r2,r5,2004ae0 <___vfprintf_internal_r+0x18f0>
 20042a0:	01808074 	movhi	r6,513
 20042a4:	318e2204 	addi	r6,r6,14472
 20042a8:	d9814215 	stw	r6,1288(sp)
 20042ac:	d9014d17 	ldw	r4,1332(sp)
 20042b0:	00c000c4 	movi	r3,3
 20042b4:	00bfdfc4 	movi	r2,-129
 20042b8:	2088703a 	and	r4,r4,r2
 20042bc:	180f883a 	mov	r7,r3
 20042c0:	d8c14615 	stw	r3,1304(sp)
 20042c4:	d9014d15 	stw	r4,1332(sp)
 20042c8:	d8014715 	stw	zero,1308(sp)
 20042cc:	003e6a06 	br	2003c78 <___vfprintf_internal_r+0xa88>
 20042d0:	38800017 	ldw	r2,0(r7)
 20042d4:	00c00044 	movi	r3,1
 20042d8:	39c00104 	addi	r7,r7,4
 20042dc:	d9c14115 	stw	r7,1284(sp)
 20042e0:	d9001004 	addi	r4,sp,64
 20042e4:	180f883a 	mov	r7,r3
 20042e8:	d8c14615 	stw	r3,1304(sp)
 20042ec:	d9014215 	stw	r4,1288(sp)
 20042f0:	d8801005 	stb	r2,64(sp)
 20042f4:	d8000405 	stb	zero,16(sp)
 20042f8:	003cac06 	br	20035ac <___vfprintf_internal_r+0x3bc>
 20042fc:	01408074 	movhi	r5,513
 2004300:	294e2804 	addi	r5,r5,14496
 2004304:	d9414515 	stw	r5,1300(sp)
 2004308:	d9814d17 	ldw	r6,1332(sp)
 200430c:	3080080c 	andi	r2,r6,32
 2004310:	1000ff26 	beq	r2,zero,2004710 <___vfprintf_internal_r+0x1520>
 2004314:	3c000017 	ldw	r16,0(r7)
 2004318:	3c400117 	ldw	r17,4(r7)
 200431c:	38800204 	addi	r2,r7,8
 2004320:	d8814115 	stw	r2,1284(sp)
 2004324:	d9414d17 	ldw	r5,1332(sp)
 2004328:	2880004c 	andi	r2,r5,1
 200432c:	1005003a 	cmpeq	r2,r2,zero
 2004330:	1000b91e 	bne	r2,zero,2004618 <___vfprintf_internal_r+0x1428>
 2004334:	8444b03a 	or	r2,r16,r17
 2004338:	1000b726 	beq	r2,zero,2004618 <___vfprintf_internal_r+0x1428>
 200433c:	d9814e17 	ldw	r6,1336(sp)
 2004340:	29400094 	ori	r5,r5,2
 2004344:	00800c04 	movi	r2,48
 2004348:	01000084 	movi	r4,2
 200434c:	d9414d15 	stw	r5,1332(sp)
 2004350:	d8800505 	stb	r2,20(sp)
 2004354:	d9800545 	stb	r6,21(sp)
 2004358:	d8000405 	stb	zero,16(sp)
 200435c:	003e3206 	br	2003c28 <___vfprintf_internal_r+0xa38>
 2004360:	01808074 	movhi	r6,513
 2004364:	318e1d04 	addi	r6,r6,14452
 2004368:	d9814515 	stw	r6,1300(sp)
 200436c:	003fe606 	br	2004308 <___vfprintf_internal_r+0x1118>
 2004370:	00800ac4 	movi	r2,43
 2004374:	d8800405 	stb	r2,16(sp)
 2004378:	b8c00007 	ldb	r3,0(r23)
 200437c:	003c1b06 	br	20033ec <___vfprintf_internal_r+0x1fc>
 2004380:	d8814d17 	ldw	r2,1332(sp)
 2004384:	b8c00007 	ldb	r3,0(r23)
 2004388:	10800054 	ori	r2,r2,1
 200438c:	d8814d15 	stw	r2,1332(sp)
 2004390:	003c1606 	br	20033ec <___vfprintf_internal_r+0x1fc>
 2004394:	d8800407 	ldb	r2,16(sp)
 2004398:	10004c1e 	bne	r2,zero,20044cc <___vfprintf_internal_r+0x12dc>
 200439c:	00800804 	movi	r2,32
 20043a0:	d8800405 	stb	r2,16(sp)
 20043a4:	b8c00007 	ldb	r3,0(r23)
 20043a8:	003c1006 	br	20033ec <___vfprintf_internal_r+0x1fc>
 20043ac:	d9814d17 	ldw	r6,1332(sp)
 20043b0:	b8c00007 	ldb	r3,0(r23)
 20043b4:	31800214 	ori	r6,r6,8
 20043b8:	d9814d15 	stw	r6,1332(sp)
 20043bc:	003c0b06 	br	20033ec <___vfprintf_internal_r+0x1fc>
 20043c0:	0009883a 	mov	r4,zero
 20043c4:	04000244 	movi	r16,9
 20043c8:	01400284 	movi	r5,10
 20043cc:	d9c15215 	stw	r7,1352(sp)
 20043d0:	2000abc0 	call	2000abc <__mulsi3>
 20043d4:	b9000007 	ldb	r4,0(r23)
 20043d8:	d8c14e17 	ldw	r3,1336(sp)
 20043dc:	bdc00044 	addi	r23,r23,1
 20043e0:	d9014e15 	stw	r4,1336(sp)
 20043e4:	d9414e17 	ldw	r5,1336(sp)
 20043e8:	1885883a 	add	r2,r3,r2
 20043ec:	113ff404 	addi	r4,r2,-48
 20043f0:	28bff404 	addi	r2,r5,-48
 20043f4:	d9c15217 	ldw	r7,1352(sp)
 20043f8:	80bff32e 	bgeu	r16,r2,20043c8 <___vfprintf_internal_r+0x11d8>
 20043fc:	d9014b15 	stw	r4,1324(sp)
 2004400:	003bfc06 	br	20033f4 <___vfprintf_internal_r+0x204>
 2004404:	d8814d17 	ldw	r2,1332(sp)
 2004408:	b8c00007 	ldb	r3,0(r23)
 200440c:	10802014 	ori	r2,r2,128
 2004410:	d8814d15 	stw	r2,1332(sp)
 2004414:	003bf506 	br	20033ec <___vfprintf_internal_r+0x1fc>
 2004418:	b8c00007 	ldb	r3,0(r23)
 200441c:	00800a84 	movi	r2,42
 2004420:	bdc00044 	addi	r23,r23,1
 2004424:	18831826 	beq	r3,r2,2005088 <___vfprintf_internal_r+0x1e98>
 2004428:	d8c14e15 	stw	r3,1336(sp)
 200442c:	18bff404 	addi	r2,r3,-48
 2004430:	00c00244 	movi	r3,9
 2004434:	18827b36 	bltu	r3,r2,2004e24 <___vfprintf_internal_r+0x1c34>
 2004438:	1821883a 	mov	r16,r3
 200443c:	0009883a 	mov	r4,zero
 2004440:	01400284 	movi	r5,10
 2004444:	d9c15215 	stw	r7,1352(sp)
 2004448:	2000abc0 	call	2000abc <__mulsi3>
 200444c:	d9414e17 	ldw	r5,1336(sp)
 2004450:	b9800007 	ldb	r6,0(r23)
 2004454:	d9c15217 	ldw	r7,1352(sp)
 2004458:	1145883a 	add	r2,r2,r5
 200445c:	113ff404 	addi	r4,r2,-48
 2004460:	30bff404 	addi	r2,r6,-48
 2004464:	d9814e15 	stw	r6,1336(sp)
 2004468:	bdc00044 	addi	r23,r23,1
 200446c:	80bff42e 	bgeu	r16,r2,2004440 <___vfprintf_internal_r+0x1250>
 2004470:	2027883a 	mov	r19,r4
 2004474:	203bdf0e 	bge	r4,zero,20033f4 <___vfprintf_internal_r+0x204>
 2004478:	04ffffc4 	movi	r19,-1
 200447c:	003bdd06 	br	20033f4 <___vfprintf_internal_r+0x204>
 2004480:	d8000405 	stb	zero,16(sp)
 2004484:	39800017 	ldw	r6,0(r7)
 2004488:	39c00104 	addi	r7,r7,4
 200448c:	d9c14115 	stw	r7,1284(sp)
 2004490:	d9814215 	stw	r6,1288(sp)
 2004494:	3001c926 	beq	r6,zero,2004bbc <___vfprintf_internal_r+0x19cc>
 2004498:	98000e16 	blt	r19,zero,20044d4 <___vfprintf_internal_r+0x12e4>
 200449c:	d9014217 	ldw	r4,1288(sp)
 20044a0:	000b883a 	mov	r5,zero
 20044a4:	980d883a 	mov	r6,r19
 20044a8:	2008a900 	call	2008a90 <memchr>
 20044ac:	10025926 	beq	r2,zero,2004e14 <___vfprintf_internal_r+0x1c24>
 20044b0:	d8c14217 	ldw	r3,1288(sp)
 20044b4:	10cfc83a 	sub	r7,r2,r3
 20044b8:	99c19e16 	blt	r19,r7,2004b34 <___vfprintf_internal_r+0x1944>
 20044bc:	d9c14615 	stw	r7,1304(sp)
 20044c0:	38000916 	blt	r7,zero,20044e8 <___vfprintf_internal_r+0x12f8>
 20044c4:	d8014715 	stw	zero,1308(sp)
 20044c8:	003deb06 	br	2003c78 <___vfprintf_internal_r+0xa88>
 20044cc:	b8c00007 	ldb	r3,0(r23)
 20044d0:	003bc606 	br	20033ec <___vfprintf_internal_r+0x1fc>
 20044d4:	d9014217 	ldw	r4,1288(sp)
 20044d8:	20031240 	call	2003124 <strlen>
 20044dc:	d8814615 	stw	r2,1304(sp)
 20044e0:	100f883a 	mov	r7,r2
 20044e4:	103ff70e 	bge	r2,zero,20044c4 <___vfprintf_internal_r+0x12d4>
 20044e8:	d8014615 	stw	zero,1304(sp)
 20044ec:	d8014715 	stw	zero,1308(sp)
 20044f0:	003de106 	br	2003c78 <___vfprintf_internal_r+0xa88>
 20044f4:	20c03fcc 	andi	r3,r4,255
 20044f8:	00800044 	movi	r2,1
 20044fc:	18802d26 	beq	r3,r2,20045b4 <___vfprintf_internal_r+0x13c4>
 2004500:	18800e36 	bltu	r3,r2,200453c <___vfprintf_internal_r+0x134c>
 2004504:	00800084 	movi	r2,2
 2004508:	1880fa26 	beq	r3,r2,20048f4 <___vfprintf_internal_r+0x1704>
 200450c:	01008074 	movhi	r4,513
 2004510:	210e2d04 	addi	r4,r4,14516
 2004514:	20031240 	call	2003124 <strlen>
 2004518:	100f883a 	mov	r7,r2
 200451c:	dcc14615 	stw	r19,1304(sp)
 2004520:	9880010e 	bge	r19,r2,2004528 <___vfprintf_internal_r+0x1338>
 2004524:	d8814615 	stw	r2,1304(sp)
 2004528:	00808074 	movhi	r2,513
 200452c:	108e2d04 	addi	r2,r2,14516
 2004530:	dcc14715 	stw	r19,1308(sp)
 2004534:	d8814215 	stw	r2,1288(sp)
 2004538:	003dcf06 	br	2003c78 <___vfprintf_internal_r+0xa88>
 200453c:	d9401a04 	addi	r5,sp,104
 2004540:	dd001004 	addi	r20,sp,64
 2004544:	d9414215 	stw	r5,1288(sp)
 2004548:	880a977a 	slli	r5,r17,29
 200454c:	d9814217 	ldw	r6,1288(sp)
 2004550:	8004d0fa 	srli	r2,r16,3
 2004554:	8806d0fa 	srli	r3,r17,3
 2004558:	810001cc 	andi	r4,r16,7
 200455c:	2884b03a 	or	r2,r5,r2
 2004560:	31bfffc4 	addi	r6,r6,-1
 2004564:	21000c04 	addi	r4,r4,48
 2004568:	d9814215 	stw	r6,1288(sp)
 200456c:	10cab03a 	or	r5,r2,r3
 2004570:	31000005 	stb	r4,0(r6)
 2004574:	1021883a 	mov	r16,r2
 2004578:	1823883a 	mov	r17,r3
 200457c:	283ff21e 	bne	r5,zero,2004548 <___vfprintf_internal_r+0x1358>
 2004580:	d8c14d17 	ldw	r3,1332(sp)
 2004584:	1880004c 	andi	r2,r3,1
 2004588:	1005003a 	cmpeq	r2,r2,zero
 200458c:	103db31e 	bne	r2,zero,2003c5c <___vfprintf_internal_r+0xa6c>
 2004590:	20803fcc 	andi	r2,r4,255
 2004594:	1080201c 	xori	r2,r2,128
 2004598:	10bfe004 	addi	r2,r2,-128
 200459c:	00c00c04 	movi	r3,48
 20045a0:	10fdae26 	beq	r2,r3,2003c5c <___vfprintf_internal_r+0xa6c>
 20045a4:	31bfffc4 	addi	r6,r6,-1
 20045a8:	d9814215 	stw	r6,1288(sp)
 20045ac:	30c00005 	stb	r3,0(r6)
 20045b0:	003daa06 	br	2003c5c <___vfprintf_internal_r+0xa6c>
 20045b4:	88800068 	cmpgeui	r2,r17,1
 20045b8:	10002c1e 	bne	r2,zero,200466c <___vfprintf_internal_r+0x147c>
 20045bc:	8800021e 	bne	r17,zero,20045c8 <___vfprintf_internal_r+0x13d8>
 20045c0:	00800244 	movi	r2,9
 20045c4:	14002936 	bltu	r2,r16,200466c <___vfprintf_internal_r+0x147c>
 20045c8:	d90019c4 	addi	r4,sp,103
 20045cc:	dd001004 	addi	r20,sp,64
 20045d0:	d9014215 	stw	r4,1288(sp)
 20045d4:	d9014217 	ldw	r4,1288(sp)
 20045d8:	80800c04 	addi	r2,r16,48
 20045dc:	20800005 	stb	r2,0(r4)
 20045e0:	003d9e06 	br	2003c5c <___vfprintf_internal_r+0xa6c>
 20045e4:	dc400e17 	ldw	r17,56(sp)
 20045e8:	07008074 	movhi	fp,513
 20045ec:	e70e3504 	addi	fp,fp,14548
 20045f0:	9425883a 	add	r18,r18,r16
 20045f4:	8c400044 	addi	r17,r17,1
 20045f8:	008001c4 	movi	r2,7
 20045fc:	1f000015 	stw	fp,0(r3)
 2004600:	1c000115 	stw	r16,4(r3)
 2004604:	dc800f15 	stw	r18,60(sp)
 2004608:	dc400e15 	stw	r17,56(sp)
 200460c:	147ddc16 	blt	r2,r17,2003d80 <___vfprintf_internal_r+0xb90>
 2004610:	18c00204 	addi	r3,r3,8
 2004614:	003c7406 	br	20037e8 <___vfprintf_internal_r+0x5f8>
 2004618:	01000084 	movi	r4,2
 200461c:	d8000405 	stb	zero,16(sp)
 2004620:	003d8106 	br	2003c28 <___vfprintf_internal_r+0xa38>
 2004624:	d9814d17 	ldw	r6,1332(sp)
 2004628:	30c4703a 	and	r2,r6,r3
 200462c:	1005003a 	cmpeq	r2,r2,zero
 2004630:	103cb326 	beq	r2,zero,2003900 <___vfprintf_internal_r+0x710>
 2004634:	d9014217 	ldw	r4,1288(sp)
 2004638:	94800044 	addi	r18,r18,1
 200463c:	8c400044 	addi	r17,r17,1
 2004640:	008001c4 	movi	r2,7
 2004644:	a9000015 	stw	r4,0(r21)
 2004648:	a8c00115 	stw	r3,4(r21)
 200464c:	dc800f15 	stw	r18,60(sp)
 2004650:	dc400e15 	stw	r17,56(sp)
 2004654:	147e6016 	blt	r2,r17,2003fd8 <___vfprintf_internal_r+0xde8>
 2004658:	acc00204 	addi	r19,r21,8
 200465c:	003cd106 	br	20039a4 <___vfprintf_internal_r+0x7b4>
 2004660:	07008074 	movhi	fp,513
 2004664:	e70e3504 	addi	fp,fp,14548
 2004668:	003c4906 	br	2003790 <___vfprintf_internal_r+0x5a0>
 200466c:	dd001004 	addi	r20,sp,64
 2004670:	dc801a04 	addi	r18,sp,104
 2004674:	8009883a 	mov	r4,r16
 2004678:	880b883a 	mov	r5,r17
 200467c:	01800284 	movi	r6,10
 2004680:	000f883a 	mov	r7,zero
 2004684:	200dfa40 	call	200dfa4 <__umoddi3>
 2004688:	12000c04 	addi	r8,r2,48
 200468c:	94bfffc4 	addi	r18,r18,-1
 2004690:	8009883a 	mov	r4,r16
 2004694:	880b883a 	mov	r5,r17
 2004698:	01800284 	movi	r6,10
 200469c:	000f883a 	mov	r7,zero
 20046a0:	92000005 	stb	r8,0(r18)
 20046a4:	200d9380 	call	200d938 <__udivdi3>
 20046a8:	1009883a 	mov	r4,r2
 20046ac:	1021883a 	mov	r16,r2
 20046b0:	18800068 	cmpgeui	r2,r3,1
 20046b4:	1823883a 	mov	r17,r3
 20046b8:	103fee1e 	bne	r2,zero,2004674 <___vfprintf_internal_r+0x1484>
 20046bc:	1800021e 	bne	r3,zero,20046c8 <___vfprintf_internal_r+0x14d8>
 20046c0:	00800244 	movi	r2,9
 20046c4:	113feb36 	bltu	r2,r4,2004674 <___vfprintf_internal_r+0x1484>
 20046c8:	94bfffc4 	addi	r18,r18,-1
 20046cc:	dc814215 	stw	r18,1288(sp)
 20046d0:	003fc006 	br	20045d4 <___vfprintf_internal_r+0x13e4>
 20046d4:	d9014d17 	ldw	r4,1332(sp)
 20046d8:	2080004c 	andi	r2,r4,1
 20046dc:	10009a1e 	bne	r2,zero,2004948 <___vfprintf_internal_r+0x1758>
 20046e0:	d9401a04 	addi	r5,sp,104
 20046e4:	dd001004 	addi	r20,sp,64
 20046e8:	d9414215 	stw	r5,1288(sp)
 20046ec:	003d5b06 	br	2003c5c <___vfprintf_internal_r+0xa6c>
 20046f0:	d9015017 	ldw	r4,1344(sp)
 20046f4:	b00b883a 	mov	r5,r22
 20046f8:	d9800d04 	addi	r6,sp,52
 20046fc:	20031980 	call	2003198 <__sprint_r>
 2004700:	103c731e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2004704:	dc800f17 	ldw	r18,60(sp)
 2004708:	d8c01a04 	addi	r3,sp,104
 200470c:	003cf906 	br	2003af4 <___vfprintf_internal_r+0x904>
 2004710:	d8c14d17 	ldw	r3,1332(sp)
 2004714:	1880040c 	andi	r2,r3,16
 2004718:	1000711e 	bne	r2,zero,20048e0 <___vfprintf_internal_r+0x16f0>
 200471c:	d9014d17 	ldw	r4,1332(sp)
 2004720:	2080100c 	andi	r2,r4,64
 2004724:	10006e26 	beq	r2,zero,20048e0 <___vfprintf_internal_r+0x16f0>
 2004728:	3c00000b 	ldhu	r16,0(r7)
 200472c:	0023883a 	mov	r17,zero
 2004730:	39c00104 	addi	r7,r7,4
 2004734:	d9c14115 	stw	r7,1284(sp)
 2004738:	003efa06 	br	2004324 <___vfprintf_internal_r+0x1134>
 200473c:	dc400e17 	ldw	r17,56(sp)
 2004740:	07008074 	movhi	fp,513
 2004744:	e70e3504 	addi	fp,fp,14548
 2004748:	9425883a 	add	r18,r18,r16
 200474c:	8c400044 	addi	r17,r17,1
 2004750:	008001c4 	movi	r2,7
 2004754:	1f000015 	stw	fp,0(r3)
 2004758:	1c000115 	stw	r16,4(r3)
 200475c:	dc800f15 	stw	r18,60(sp)
 2004760:	dc400e15 	stw	r17,56(sp)
 2004764:	147d7016 	blt	r2,r17,2003d28 <___vfprintf_internal_r+0xb38>
 2004768:	18c00204 	addi	r3,r3,8
 200476c:	003d7506 	br	2003d44 <___vfprintf_internal_r+0xb54>
 2004770:	dc800f17 	ldw	r18,60(sp)
 2004774:	dc400e17 	ldw	r17,56(sp)
 2004778:	07008074 	movhi	fp,513
 200477c:	e70e3904 	addi	fp,fp,14564
 2004780:	003bba06 	br	200366c <___vfprintf_internal_r+0x47c>
 2004784:	d9015017 	ldw	r4,1344(sp)
 2004788:	b00b883a 	mov	r5,r22
 200478c:	d9800d04 	addi	r6,sp,52
 2004790:	20031980 	call	2003198 <__sprint_r>
 2004794:	103c4e1e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2004798:	dc800f17 	ldw	r18,60(sp)
 200479c:	d8c01a04 	addi	r3,sp,104
 20047a0:	003ce306 	br	2003b30 <___vfprintf_internal_r+0x940>
 20047a4:	3c000017 	ldw	r16,0(r7)
 20047a8:	0009883a 	mov	r4,zero
 20047ac:	39c00104 	addi	r7,r7,4
 20047b0:	0023883a 	mov	r17,zero
 20047b4:	d9c14115 	stw	r7,1284(sp)
 20047b8:	d8000405 	stb	zero,16(sp)
 20047bc:	003d1a06 	br	2003c28 <___vfprintf_internal_r+0xa38>
 20047c0:	38800017 	ldw	r2,0(r7)
 20047c4:	39c00104 	addi	r7,r7,4
 20047c8:	d9c14115 	stw	r7,1284(sp)
 20047cc:	1023d7fa 	srai	r17,r2,31
 20047d0:	1021883a 	mov	r16,r2
 20047d4:	003d1206 	br	2003c20 <___vfprintf_internal_r+0xa30>
 20047d8:	3c000017 	ldw	r16,0(r7)
 20047dc:	01000044 	movi	r4,1
 20047e0:	39c00104 	addi	r7,r7,4
 20047e4:	0023883a 	mov	r17,zero
 20047e8:	d9c14115 	stw	r7,1284(sp)
 20047ec:	d8000405 	stb	zero,16(sp)
 20047f0:	003d0d06 	br	2003c28 <___vfprintf_internal_r+0xa38>
 20047f4:	00808074 	movhi	r2,513
 20047f8:	108e3404 	addi	r2,r2,14544
 20047fc:	94800044 	addi	r18,r18,1
 2004800:	8c400044 	addi	r17,r17,1
 2004804:	a8800015 	stw	r2,0(r21)
 2004808:	00c00044 	movi	r3,1
 200480c:	008001c4 	movi	r2,7
 2004810:	a8c00115 	stw	r3,4(r21)
 2004814:	dc800f15 	stw	r18,60(sp)
 2004818:	dc400e15 	stw	r17,56(sp)
 200481c:	1440ca16 	blt	r2,r17,2004b48 <___vfprintf_internal_r+0x1958>
 2004820:	a8c00204 	addi	r3,r21,8
 2004824:	2000061e 	bne	r4,zero,2004840 <___vfprintf_internal_r+0x1650>
 2004828:	d9414817 	ldw	r5,1312(sp)
 200482c:	2800041e 	bne	r5,zero,2004840 <___vfprintf_internal_r+0x1650>
 2004830:	d9814d17 	ldw	r6,1332(sp)
 2004834:	3080004c 	andi	r2,r6,1
 2004838:	1005003a 	cmpeq	r2,r2,zero
 200483c:	103bea1e 	bne	r2,zero,20037e8 <___vfprintf_internal_r+0x5f8>
 2004840:	00800044 	movi	r2,1
 2004844:	dc400e17 	ldw	r17,56(sp)
 2004848:	18800115 	stw	r2,4(r3)
 200484c:	d8814a17 	ldw	r2,1320(sp)
 2004850:	94800044 	addi	r18,r18,1
 2004854:	8c400044 	addi	r17,r17,1
 2004858:	18800015 	stw	r2,0(r3)
 200485c:	008001c4 	movi	r2,7
 2004860:	dc800f15 	stw	r18,60(sp)
 2004864:	dc400e15 	stw	r17,56(sp)
 2004868:	1440ca16 	blt	r2,r17,2004b94 <___vfprintf_internal_r+0x19a4>
 200486c:	18c00204 	addi	r3,r3,8
 2004870:	0121c83a 	sub	r16,zero,r4
 2004874:	0400500e 	bge	zero,r16,20049b8 <___vfprintf_internal_r+0x17c8>
 2004878:	00800404 	movi	r2,16
 200487c:	1400800e 	bge	r2,r16,2004a80 <___vfprintf_internal_r+0x1890>
 2004880:	1027883a 	mov	r19,r2
 2004884:	07008074 	movhi	fp,513
 2004888:	e70e3504 	addi	fp,fp,14548
 200488c:	050001c4 	movi	r20,7
 2004890:	00000306 	br	20048a0 <___vfprintf_internal_r+0x16b0>
 2004894:	18c00204 	addi	r3,r3,8
 2004898:	843ffc04 	addi	r16,r16,-16
 200489c:	9c007a0e 	bge	r19,r16,2004a88 <___vfprintf_internal_r+0x1898>
 20048a0:	94800404 	addi	r18,r18,16
 20048a4:	8c400044 	addi	r17,r17,1
 20048a8:	1f000015 	stw	fp,0(r3)
 20048ac:	1cc00115 	stw	r19,4(r3)
 20048b0:	dc800f15 	stw	r18,60(sp)
 20048b4:	dc400e15 	stw	r17,56(sp)
 20048b8:	a47ff60e 	bge	r20,r17,2004894 <___vfprintf_internal_r+0x16a4>
 20048bc:	d9015017 	ldw	r4,1344(sp)
 20048c0:	b00b883a 	mov	r5,r22
 20048c4:	d9800d04 	addi	r6,sp,52
 20048c8:	20031980 	call	2003198 <__sprint_r>
 20048cc:	103c001e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 20048d0:	dc800f17 	ldw	r18,60(sp)
 20048d4:	dc400e17 	ldw	r17,56(sp)
 20048d8:	d8c01a04 	addi	r3,sp,104
 20048dc:	003fee06 	br	2004898 <___vfprintf_internal_r+0x16a8>
 20048e0:	3c000017 	ldw	r16,0(r7)
 20048e4:	0023883a 	mov	r17,zero
 20048e8:	39c00104 	addi	r7,r7,4
 20048ec:	d9c14115 	stw	r7,1284(sp)
 20048f0:	003e8c06 	br	2004324 <___vfprintf_internal_r+0x1134>
 20048f4:	d9401a04 	addi	r5,sp,104
 20048f8:	dd001004 	addi	r20,sp,64
 20048fc:	d9414215 	stw	r5,1288(sp)
 2004900:	d9814517 	ldw	r6,1300(sp)
 2004904:	880a973a 	slli	r5,r17,28
 2004908:	8004d13a 	srli	r2,r16,4
 200490c:	810003cc 	andi	r4,r16,15
 2004910:	3109883a 	add	r4,r6,r4
 2004914:	2884b03a 	or	r2,r5,r2
 2004918:	21400003 	ldbu	r5,0(r4)
 200491c:	d9014217 	ldw	r4,1288(sp)
 2004920:	8806d13a 	srli	r3,r17,4
 2004924:	1021883a 	mov	r16,r2
 2004928:	213fffc4 	addi	r4,r4,-1
 200492c:	d9014215 	stw	r4,1288(sp)
 2004930:	d9814217 	ldw	r6,1288(sp)
 2004934:	10c8b03a 	or	r4,r2,r3
 2004938:	1823883a 	mov	r17,r3
 200493c:	31400005 	stb	r5,0(r6)
 2004940:	203fef1e 	bne	r4,zero,2004900 <___vfprintf_internal_r+0x1710>
 2004944:	003cc506 	br	2003c5c <___vfprintf_internal_r+0xa6c>
 2004948:	00800c04 	movi	r2,48
 200494c:	d98019c4 	addi	r6,sp,103
 2004950:	dd001004 	addi	r20,sp,64
 2004954:	d88019c5 	stb	r2,103(sp)
 2004958:	d9814215 	stw	r6,1288(sp)
 200495c:	003cbf06 	br	2003c5c <___vfprintf_internal_r+0xa6c>
 2004960:	dc400e17 	ldw	r17,56(sp)
 2004964:	07008074 	movhi	fp,513
 2004968:	e70e3904 	addi	fp,fp,14564
 200496c:	003bc106 	br	2003874 <___vfprintf_internal_r+0x684>
 2004970:	d9414d17 	ldw	r5,1332(sp)
 2004974:	2880040c 	andi	r2,r5,16
 2004978:	10007c26 	beq	r2,zero,2004b6c <___vfprintf_internal_r+0x197c>
 200497c:	38800017 	ldw	r2,0(r7)
 2004980:	39c00104 	addi	r7,r7,4
 2004984:	d9c14115 	stw	r7,1284(sp)
 2004988:	d9814c17 	ldw	r6,1328(sp)
 200498c:	d9c14117 	ldw	r7,1284(sp)
 2004990:	11800015 	stw	r6,0(r2)
 2004994:	003a7206 	br	2003360 <___vfprintf_internal_r+0x170>
 2004998:	d9015017 	ldw	r4,1344(sp)
 200499c:	b00b883a 	mov	r5,r22
 20049a0:	d9800d04 	addi	r6,sp,52
 20049a4:	20031980 	call	2003198 <__sprint_r>
 20049a8:	103bc91e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 20049ac:	dc800f17 	ldw	r18,60(sp)
 20049b0:	dc400e17 	ldw	r17,56(sp)
 20049b4:	d8c01a04 	addi	r3,sp,104
 20049b8:	d9014817 	ldw	r4,1312(sp)
 20049bc:	d9414217 	ldw	r5,1288(sp)
 20049c0:	8c400044 	addi	r17,r17,1
 20049c4:	9125883a 	add	r18,r18,r4
 20049c8:	008001c4 	movi	r2,7
 20049cc:	19400015 	stw	r5,0(r3)
 20049d0:	19000115 	stw	r4,4(r3)
 20049d4:	dc800f15 	stw	r18,60(sp)
 20049d8:	dc400e15 	stw	r17,56(sp)
 20049dc:	147ce816 	blt	r2,r17,2003d80 <___vfprintf_internal_r+0xb90>
 20049e0:	18c00204 	addi	r3,r3,8
 20049e4:	003b8006 	br	20037e8 <___vfprintf_internal_r+0x5f8>
 20049e8:	38c00017 	ldw	r3,0(r7)
 20049ec:	39000204 	addi	r4,r7,8
 20049f0:	d9014115 	stw	r4,1284(sp)
 20049f4:	d8c14315 	stw	r3,1292(sp)
 20049f8:	39c00117 	ldw	r7,4(r7)
 20049fc:	d9c14415 	stw	r7,1296(sp)
 2004a00:	003e1a06 	br	200426c <___vfprintf_internal_r+0x107c>
 2004a04:	0005883a 	mov	r2,zero
 2004a08:	1409c83a 	sub	r4,r2,r16
 2004a0c:	1105803a 	cmpltu	r2,r2,r4
 2004a10:	044bc83a 	sub	r5,zero,r17
 2004a14:	2885c83a 	sub	r2,r5,r2
 2004a18:	2021883a 	mov	r16,r4
 2004a1c:	1023883a 	mov	r17,r2
 2004a20:	01000044 	movi	r4,1
 2004a24:	00800b44 	movi	r2,45
 2004a28:	d8800405 	stb	r2,16(sp)
 2004a2c:	003c7e06 	br	2003c28 <___vfprintf_internal_r+0xa38>
 2004a30:	d9015017 	ldw	r4,1344(sp)
 2004a34:	b00b883a 	mov	r5,r22
 2004a38:	d9800d04 	addi	r6,sp,52
 2004a3c:	20031980 	call	2003198 <__sprint_r>
 2004a40:	103ba31e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2004a44:	dc800f17 	ldw	r18,60(sp)
 2004a48:	dc400e17 	ldw	r17,56(sp)
 2004a4c:	d9000617 	ldw	r4,24(sp)
 2004a50:	d9401a04 	addi	r5,sp,104
 2004a54:	003da106 	br	20040dc <___vfprintf_internal_r+0xeec>
 2004a58:	d9015017 	ldw	r4,1344(sp)
 2004a5c:	b00b883a 	mov	r5,r22
 2004a60:	d9800d04 	addi	r6,sp,52
 2004a64:	20031980 	call	2003198 <__sprint_r>
 2004a68:	103b991e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2004a6c:	dc800f17 	ldw	r18,60(sp)
 2004a70:	dc400e17 	ldw	r17,56(sp)
 2004a74:	d9000617 	ldw	r4,24(sp)
 2004a78:	d8c01a04 	addi	r3,sp,104
 2004a7c:	003d8b06 	br	20040ac <___vfprintf_internal_r+0xebc>
 2004a80:	07008074 	movhi	fp,513
 2004a84:	e70e3504 	addi	fp,fp,14548
 2004a88:	9425883a 	add	r18,r18,r16
 2004a8c:	8c400044 	addi	r17,r17,1
 2004a90:	008001c4 	movi	r2,7
 2004a94:	1f000015 	stw	fp,0(r3)
 2004a98:	1c000115 	stw	r16,4(r3)
 2004a9c:	dc800f15 	stw	r18,60(sp)
 2004aa0:	dc400e15 	stw	r17,56(sp)
 2004aa4:	147fbc16 	blt	r2,r17,2004998 <___vfprintf_internal_r+0x17a8>
 2004aa8:	18c00204 	addi	r3,r3,8
 2004aac:	003fc206 	br	20049b8 <___vfprintf_internal_r+0x17c8>
 2004ab0:	d9015017 	ldw	r4,1344(sp)
 2004ab4:	b00b883a 	mov	r5,r22
 2004ab8:	d9800d04 	addi	r6,sp,52
 2004abc:	20031980 	call	2003198 <__sprint_r>
 2004ac0:	103b831e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2004ac4:	dc800f17 	ldw	r18,60(sp)
 2004ac8:	d9000617 	ldw	r4,24(sp)
 2004acc:	d8c01a04 	addi	r3,sp,104
 2004ad0:	003cfc06 	br	2003ec4 <___vfprintf_internal_r+0xcd4>
 2004ad4:	07008074 	movhi	fp,513
 2004ad8:	e70e3504 	addi	fp,fp,14548
 2004adc:	003bde06 	br	2003a58 <___vfprintf_internal_r+0x868>
 2004ae0:	00808074 	movhi	r2,513
 2004ae4:	108e2304 	addi	r2,r2,14476
 2004ae8:	d8814215 	stw	r2,1288(sp)
 2004aec:	003def06 	br	20042ac <___vfprintf_internal_r+0x10bc>
 2004af0:	d9014317 	ldw	r4,1292(sp)
 2004af4:	d9414417 	ldw	r5,1296(sp)
 2004af8:	200a38c0 	call	200a38c <__isnand>
 2004afc:	10003926 	beq	r2,zero,2004be4 <___vfprintf_internal_r+0x19f4>
 2004b00:	d9414e17 	ldw	r5,1336(sp)
 2004b04:	008011c4 	movi	r2,71
 2004b08:	1140ce16 	blt	r2,r5,2004e44 <___vfprintf_internal_r+0x1c54>
 2004b0c:	01808074 	movhi	r6,513
 2004b10:	318e2404 	addi	r6,r6,14480
 2004b14:	d9814215 	stw	r6,1288(sp)
 2004b18:	003de406 	br	20042ac <___vfprintf_internal_r+0x10bc>
 2004b1c:	d9014d17 	ldw	r4,1332(sp)
 2004b20:	bdc00044 	addi	r23,r23,1
 2004b24:	b8c00007 	ldb	r3,0(r23)
 2004b28:	21000814 	ori	r4,r4,32
 2004b2c:	d9014d15 	stw	r4,1332(sp)
 2004b30:	003a2e06 	br	20033ec <___vfprintf_internal_r+0x1fc>
 2004b34:	dcc14615 	stw	r19,1304(sp)
 2004b38:	98011016 	blt	r19,zero,2004f7c <___vfprintf_internal_r+0x1d8c>
 2004b3c:	980f883a 	mov	r7,r19
 2004b40:	d8014715 	stw	zero,1308(sp)
 2004b44:	003c4c06 	br	2003c78 <___vfprintf_internal_r+0xa88>
 2004b48:	d9015017 	ldw	r4,1344(sp)
 2004b4c:	b00b883a 	mov	r5,r22
 2004b50:	d9800d04 	addi	r6,sp,52
 2004b54:	20031980 	call	2003198 <__sprint_r>
 2004b58:	103b5d1e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2004b5c:	dc800f17 	ldw	r18,60(sp)
 2004b60:	d9000617 	ldw	r4,24(sp)
 2004b64:	d8c01a04 	addi	r3,sp,104
 2004b68:	003f2e06 	br	2004824 <___vfprintf_internal_r+0x1634>
 2004b6c:	d8c14d17 	ldw	r3,1332(sp)
 2004b70:	1880100c 	andi	r2,r3,64
 2004b74:	1000a026 	beq	r2,zero,2004df8 <___vfprintf_internal_r+0x1c08>
 2004b78:	38800017 	ldw	r2,0(r7)
 2004b7c:	39c00104 	addi	r7,r7,4
 2004b80:	d9c14115 	stw	r7,1284(sp)
 2004b84:	d9014c17 	ldw	r4,1328(sp)
 2004b88:	d9c14117 	ldw	r7,1284(sp)
 2004b8c:	1100000d 	sth	r4,0(r2)
 2004b90:	0039f306 	br	2003360 <___vfprintf_internal_r+0x170>
 2004b94:	d9015017 	ldw	r4,1344(sp)
 2004b98:	b00b883a 	mov	r5,r22
 2004b9c:	d9800d04 	addi	r6,sp,52
 2004ba0:	20031980 	call	2003198 <__sprint_r>
 2004ba4:	103b4a1e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2004ba8:	dc800f17 	ldw	r18,60(sp)
 2004bac:	dc400e17 	ldw	r17,56(sp)
 2004bb0:	d9000617 	ldw	r4,24(sp)
 2004bb4:	d8c01a04 	addi	r3,sp,104
 2004bb8:	003f2d06 	br	2004870 <___vfprintf_internal_r+0x1680>
 2004bbc:	00800184 	movi	r2,6
 2004bc0:	14c09a36 	bltu	r2,r19,2004e2c <___vfprintf_internal_r+0x1c3c>
 2004bc4:	dcc14615 	stw	r19,1304(sp)
 2004bc8:	9800010e 	bge	r19,zero,2004bd0 <___vfprintf_internal_r+0x19e0>
 2004bcc:	d8014615 	stw	zero,1304(sp)
 2004bd0:	00808074 	movhi	r2,513
 2004bd4:	108e2604 	addi	r2,r2,14488
 2004bd8:	980f883a 	mov	r7,r19
 2004bdc:	d8814215 	stw	r2,1288(sp)
 2004be0:	003a7206 	br	20035ac <___vfprintf_internal_r+0x3bc>
 2004be4:	00bfffc4 	movi	r2,-1
 2004be8:	9880e226 	beq	r19,r2,2004f74 <___vfprintf_internal_r+0x1d84>
 2004bec:	d9414e17 	ldw	r5,1336(sp)
 2004bf0:	008019c4 	movi	r2,103
 2004bf4:	2880dc26 	beq	r5,r2,2004f68 <___vfprintf_internal_r+0x1d78>
 2004bf8:	008011c4 	movi	r2,71
 2004bfc:	2880da26 	beq	r5,r2,2004f68 <___vfprintf_internal_r+0x1d78>
 2004c00:	d9414d17 	ldw	r5,1332(sp)
 2004c04:	d9014417 	ldw	r4,1296(sp)
 2004c08:	d9814317 	ldw	r6,1292(sp)
 2004c0c:	29404014 	ori	r5,r5,256
 2004c10:	d9414d15 	stw	r5,1332(sp)
 2004c14:	2000cc16 	blt	r4,zero,2004f48 <___vfprintf_internal_r+0x1d58>
 2004c18:	3021883a 	mov	r16,r6
 2004c1c:	2023883a 	mov	r17,r4
 2004c20:	0039883a 	mov	fp,zero
 2004c24:	d9414e17 	ldw	r5,1336(sp)
 2004c28:	00801984 	movi	r2,102
 2004c2c:	2880b726 	beq	r5,r2,2004f0c <___vfprintf_internal_r+0x1d1c>
 2004c30:	00801184 	movi	r2,70
 2004c34:	2880b526 	beq	r5,r2,2004f0c <___vfprintf_internal_r+0x1d1c>
 2004c38:	00801944 	movi	r2,101
 2004c3c:	2880c826 	beq	r5,r2,2004f60 <___vfprintf_internal_r+0x1d70>
 2004c40:	00801144 	movi	r2,69
 2004c44:	2880c626 	beq	r5,r2,2004f60 <___vfprintf_internal_r+0x1d70>
 2004c48:	9829883a 	mov	r20,r19
 2004c4c:	d9015017 	ldw	r4,1344(sp)
 2004c50:	d8800604 	addi	r2,sp,24
 2004c54:	880d883a 	mov	r6,r17
 2004c58:	d8800115 	stw	r2,4(sp)
 2004c5c:	d8c00704 	addi	r3,sp,28
 2004c60:	d8800804 	addi	r2,sp,32
 2004c64:	800b883a 	mov	r5,r16
 2004c68:	01c00084 	movi	r7,2
 2004c6c:	d8c00215 	stw	r3,8(sp)
 2004c70:	d8800315 	stw	r2,12(sp)
 2004c74:	dd000015 	stw	r20,0(sp)
 2004c78:	2006cc80 	call	2006cc8 <_dtoa_r>
 2004c7c:	d9814e17 	ldw	r6,1336(sp)
 2004c80:	d8814215 	stw	r2,1288(sp)
 2004c84:	008019c4 	movi	r2,103
 2004c88:	30809526 	beq	r6,r2,2004ee0 <___vfprintf_internal_r+0x1cf0>
 2004c8c:	d8c14e17 	ldw	r3,1336(sp)
 2004c90:	008011c4 	movi	r2,71
 2004c94:	18809226 	beq	r3,r2,2004ee0 <___vfprintf_internal_r+0x1cf0>
 2004c98:	d9414217 	ldw	r5,1288(sp)
 2004c9c:	d9814e17 	ldw	r6,1336(sp)
 2004ca0:	00801984 	movi	r2,102
 2004ca4:	2d25883a 	add	r18,r5,r20
 2004ca8:	30808626 	beq	r6,r2,2004ec4 <___vfprintf_internal_r+0x1cd4>
 2004cac:	00801184 	movi	r2,70
 2004cb0:	30808426 	beq	r6,r2,2004ec4 <___vfprintf_internal_r+0x1cd4>
 2004cb4:	000d883a 	mov	r6,zero
 2004cb8:	000f883a 	mov	r7,zero
 2004cbc:	880b883a 	mov	r5,r17
 2004cc0:	8009883a 	mov	r4,r16
 2004cc4:	200f28c0 	call	200f28c <__eqdf2>
 2004cc8:	1000751e 	bne	r2,zero,2004ea0 <___vfprintf_internal_r+0x1cb0>
 2004ccc:	9005883a 	mov	r2,r18
 2004cd0:	dc800815 	stw	r18,32(sp)
 2004cd4:	d9014217 	ldw	r4,1288(sp)
 2004cd8:	d9414e17 	ldw	r5,1336(sp)
 2004cdc:	00c019c4 	movi	r3,103
 2004ce0:	1125c83a 	sub	r18,r2,r4
 2004ce4:	28c06826 	beq	r5,r3,2004e88 <___vfprintf_internal_r+0x1c98>
 2004ce8:	008011c4 	movi	r2,71
 2004cec:	28806626 	beq	r5,r2,2004e88 <___vfprintf_internal_r+0x1c98>
 2004cf0:	d9000617 	ldw	r4,24(sp)
 2004cf4:	d8c14e17 	ldw	r3,1336(sp)
 2004cf8:	00801944 	movi	r2,101
 2004cfc:	10c05516 	blt	r2,r3,2004e54 <___vfprintf_internal_r+0x1c64>
 2004d00:	213fffc4 	addi	r4,r4,-1
 2004d04:	d9000615 	stw	r4,24(sp)
 2004d08:	d8c00905 	stb	r3,36(sp)
 2004d0c:	2021883a 	mov	r16,r4
 2004d10:	2000c116 	blt	r4,zero,2005018 <___vfprintf_internal_r+0x1e28>
 2004d14:	00800ac4 	movi	r2,43
 2004d18:	d8800945 	stb	r2,37(sp)
 2004d1c:	00800244 	movi	r2,9
 2004d20:	1400af0e 	bge	r2,r16,2004fe0 <___vfprintf_internal_r+0x1df0>
 2004d24:	1027883a 	mov	r19,r2
 2004d28:	dc400cc4 	addi	r17,sp,51
 2004d2c:	8009883a 	mov	r4,r16
 2004d30:	01400284 	movi	r5,10
 2004d34:	200fa700 	call	200fa70 <__modsi3>
 2004d38:	10800c04 	addi	r2,r2,48
 2004d3c:	8c7fffc4 	addi	r17,r17,-1
 2004d40:	8009883a 	mov	r4,r16
 2004d44:	01400284 	movi	r5,10
 2004d48:	88800005 	stb	r2,0(r17)
 2004d4c:	200fa100 	call	200fa10 <__divsi3>
 2004d50:	1021883a 	mov	r16,r2
 2004d54:	98bff516 	blt	r19,r2,2004d2c <___vfprintf_internal_r+0x1b3c>
 2004d58:	10c00c04 	addi	r3,r2,48
 2004d5c:	d8800b04 	addi	r2,sp,44
 2004d60:	108001c4 	addi	r2,r2,7
 2004d64:	897fffc4 	addi	r5,r17,-1
 2004d68:	88ffffc5 	stb	r3,-1(r17)
 2004d6c:	2880a72e 	bgeu	r5,r2,200500c <___vfprintf_internal_r+0x1e1c>
 2004d70:	1009883a 	mov	r4,r2
 2004d74:	d9800904 	addi	r6,sp,36
 2004d78:	d8c00984 	addi	r3,sp,38
 2004d7c:	28800003 	ldbu	r2,0(r5)
 2004d80:	29400044 	addi	r5,r5,1
 2004d84:	18800005 	stb	r2,0(r3)
 2004d88:	18c00044 	addi	r3,r3,1
 2004d8c:	293ffb36 	bltu	r5,r4,2004d7c <___vfprintf_internal_r+0x1b8c>
 2004d90:	1987c83a 	sub	r3,r3,r6
 2004d94:	00800044 	movi	r2,1
 2004d98:	d8c14915 	stw	r3,1316(sp)
 2004d9c:	90cf883a 	add	r7,r18,r3
 2004da0:	1480960e 	bge	r2,r18,2004ffc <___vfprintf_internal_r+0x1e0c>
 2004da4:	39c00044 	addi	r7,r7,1
 2004da8:	d9c14615 	stw	r7,1304(sp)
 2004dac:	38003416 	blt	r7,zero,2004e80 <___vfprintf_internal_r+0x1c90>
 2004db0:	e0803fcc 	andi	r2,fp,255
 2004db4:	1080201c 	xori	r2,r2,128
 2004db8:	10bfe004 	addi	r2,r2,-128
 2004dbc:	10004e26 	beq	r2,zero,2004ef8 <___vfprintf_internal_r+0x1d08>
 2004dc0:	00800b44 	movi	r2,45
 2004dc4:	dc814815 	stw	r18,1312(sp)
 2004dc8:	d8014715 	stw	zero,1308(sp)
 2004dcc:	d8800405 	stb	r2,16(sp)
 2004dd0:	003bab06 	br	2003c80 <___vfprintf_internal_r+0xa90>
 2004dd4:	00800b44 	movi	r2,45
 2004dd8:	d8800405 	stb	r2,16(sp)
 2004ddc:	003d2d06 	br	2004294 <___vfprintf_internal_r+0x10a4>
 2004de0:	d9015017 	ldw	r4,1344(sp)
 2004de4:	b00b883a 	mov	r5,r22
 2004de8:	d9800d04 	addi	r6,sp,52
 2004dec:	20031980 	call	2003198 <__sprint_r>
 2004df0:	103ab71e 	bne	r2,zero,20038d0 <___vfprintf_internal_r+0x6e0>
 2004df4:	003ab506 	br	20038cc <___vfprintf_internal_r+0x6dc>
 2004df8:	38800017 	ldw	r2,0(r7)
 2004dfc:	39c00104 	addi	r7,r7,4
 2004e00:	d9c14115 	stw	r7,1284(sp)
 2004e04:	d9414c17 	ldw	r5,1328(sp)
 2004e08:	d9c14117 	ldw	r7,1284(sp)
 2004e0c:	11400015 	stw	r5,0(r2)
 2004e10:	00395306 	br	2003360 <___vfprintf_internal_r+0x170>
 2004e14:	980f883a 	mov	r7,r19
 2004e18:	dcc14615 	stw	r19,1304(sp)
 2004e1c:	d8014715 	stw	zero,1308(sp)
 2004e20:	003b9506 	br	2003c78 <___vfprintf_internal_r+0xa88>
 2004e24:	0027883a 	mov	r19,zero
 2004e28:	00397206 	br	20033f4 <___vfprintf_internal_r+0x204>
 2004e2c:	00c08074 	movhi	r3,513
 2004e30:	18ce2604 	addi	r3,r3,14488
 2004e34:	100f883a 	mov	r7,r2
 2004e38:	d8814615 	stw	r2,1304(sp)
 2004e3c:	d8c14215 	stw	r3,1288(sp)
 2004e40:	0039da06 	br	20035ac <___vfprintf_internal_r+0x3bc>
 2004e44:	00808074 	movhi	r2,513
 2004e48:	108e2504 	addi	r2,r2,14484
 2004e4c:	d8814215 	stw	r2,1288(sp)
 2004e50:	003d1606 	br	20042ac <___vfprintf_internal_r+0x10bc>
 2004e54:	d9414e17 	ldw	r5,1336(sp)
 2004e58:	00801984 	movi	r2,102
 2004e5c:	28804926 	beq	r5,r2,2004f84 <___vfprintf_internal_r+0x1d94>
 2004e60:	200f883a 	mov	r7,r4
 2004e64:	24805716 	blt	r4,r18,2004fc4 <___vfprintf_internal_r+0x1dd4>
 2004e68:	d9414d17 	ldw	r5,1332(sp)
 2004e6c:	2880004c 	andi	r2,r5,1
 2004e70:	10000126 	beq	r2,zero,2004e78 <___vfprintf_internal_r+0x1c88>
 2004e74:	21c00044 	addi	r7,r4,1
 2004e78:	d9c14615 	stw	r7,1304(sp)
 2004e7c:	383fcc0e 	bge	r7,zero,2004db0 <___vfprintf_internal_r+0x1bc0>
 2004e80:	d8014615 	stw	zero,1304(sp)
 2004e84:	003fca06 	br	2004db0 <___vfprintf_internal_r+0x1bc0>
 2004e88:	d9000617 	ldw	r4,24(sp)
 2004e8c:	00bfff04 	movi	r2,-4
 2004e90:	1100480e 	bge	r2,r4,2004fb4 <___vfprintf_internal_r+0x1dc4>
 2004e94:	99004716 	blt	r19,r4,2004fb4 <___vfprintf_internal_r+0x1dc4>
 2004e98:	d8c14e15 	stw	r3,1336(sp)
 2004e9c:	003ff006 	br	2004e60 <___vfprintf_internal_r+0x1c70>
 2004ea0:	d8800817 	ldw	r2,32(sp)
 2004ea4:	14bf8b2e 	bgeu	r2,r18,2004cd4 <___vfprintf_internal_r+0x1ae4>
 2004ea8:	9007883a 	mov	r3,r18
 2004eac:	01000c04 	movi	r4,48
 2004eb0:	11000005 	stb	r4,0(r2)
 2004eb4:	10800044 	addi	r2,r2,1
 2004eb8:	d8800815 	stw	r2,32(sp)
 2004ebc:	18bffc1e 	bne	r3,r2,2004eb0 <___vfprintf_internal_r+0x1cc0>
 2004ec0:	003f8406 	br	2004cd4 <___vfprintf_internal_r+0x1ae4>
 2004ec4:	d8814217 	ldw	r2,1288(sp)
 2004ec8:	10c00007 	ldb	r3,0(r2)
 2004ecc:	00800c04 	movi	r2,48
 2004ed0:	18805b26 	beq	r3,r2,2005040 <___vfprintf_internal_r+0x1e50>
 2004ed4:	d9000617 	ldw	r4,24(sp)
 2004ed8:	9125883a 	add	r18,r18,r4
 2004edc:	003f7506 	br	2004cb4 <___vfprintf_internal_r+0x1ac4>
 2004ee0:	d9014d17 	ldw	r4,1332(sp)
 2004ee4:	2080004c 	andi	r2,r4,1
 2004ee8:	1005003a 	cmpeq	r2,r2,zero
 2004eec:	103f6a26 	beq	r2,zero,2004c98 <___vfprintf_internal_r+0x1aa8>
 2004ef0:	d8800817 	ldw	r2,32(sp)
 2004ef4:	003f7706 	br	2004cd4 <___vfprintf_internal_r+0x1ae4>
 2004ef8:	d9c14615 	stw	r7,1304(sp)
 2004efc:	38004d16 	blt	r7,zero,2005034 <___vfprintf_internal_r+0x1e44>
 2004f00:	dc814815 	stw	r18,1312(sp)
 2004f04:	d8014715 	stw	zero,1308(sp)
 2004f08:	003b5b06 	br	2003c78 <___vfprintf_internal_r+0xa88>
 2004f0c:	d9015017 	ldw	r4,1344(sp)
 2004f10:	d8800604 	addi	r2,sp,24
 2004f14:	d8800115 	stw	r2,4(sp)
 2004f18:	d8c00704 	addi	r3,sp,28
 2004f1c:	d8800804 	addi	r2,sp,32
 2004f20:	800b883a 	mov	r5,r16
 2004f24:	880d883a 	mov	r6,r17
 2004f28:	01c000c4 	movi	r7,3
 2004f2c:	d8c00215 	stw	r3,8(sp)
 2004f30:	d8800315 	stw	r2,12(sp)
 2004f34:	dcc00015 	stw	r19,0(sp)
 2004f38:	9829883a 	mov	r20,r19
 2004f3c:	2006cc80 	call	2006cc8 <_dtoa_r>
 2004f40:	d8814215 	stw	r2,1288(sp)
 2004f44:	003f5106 	br	2004c8c <___vfprintf_internal_r+0x1a9c>
 2004f48:	d8c14317 	ldw	r3,1292(sp)
 2004f4c:	d9014417 	ldw	r4,1296(sp)
 2004f50:	07000b44 	movi	fp,45
 2004f54:	1821883a 	mov	r16,r3
 2004f58:	2460003c 	xorhi	r17,r4,32768
 2004f5c:	003f3106 	br	2004c24 <___vfprintf_internal_r+0x1a34>
 2004f60:	9d000044 	addi	r20,r19,1
 2004f64:	003f3906 	br	2004c4c <___vfprintf_internal_r+0x1a5c>
 2004f68:	983f251e 	bne	r19,zero,2004c00 <___vfprintf_internal_r+0x1a10>
 2004f6c:	04c00044 	movi	r19,1
 2004f70:	003f2306 	br	2004c00 <___vfprintf_internal_r+0x1a10>
 2004f74:	04c00184 	movi	r19,6
 2004f78:	003f2106 	br	2004c00 <___vfprintf_internal_r+0x1a10>
 2004f7c:	d8014615 	stw	zero,1304(sp)
 2004f80:	003eee06 	br	2004b3c <___vfprintf_internal_r+0x194c>
 2004f84:	200f883a 	mov	r7,r4
 2004f88:	0100370e 	bge	zero,r4,2005068 <___vfprintf_internal_r+0x1e78>
 2004f8c:	9800031e 	bne	r19,zero,2004f9c <___vfprintf_internal_r+0x1dac>
 2004f90:	d9814d17 	ldw	r6,1332(sp)
 2004f94:	3080004c 	andi	r2,r6,1
 2004f98:	103fb726 	beq	r2,zero,2004e78 <___vfprintf_internal_r+0x1c88>
 2004f9c:	20800044 	addi	r2,r4,1
 2004fa0:	98a7883a 	add	r19,r19,r2
 2004fa4:	dcc14615 	stw	r19,1304(sp)
 2004fa8:	980f883a 	mov	r7,r19
 2004fac:	983f800e 	bge	r19,zero,2004db0 <___vfprintf_internal_r+0x1bc0>
 2004fb0:	003fb306 	br	2004e80 <___vfprintf_internal_r+0x1c90>
 2004fb4:	d9814e17 	ldw	r6,1336(sp)
 2004fb8:	31bfff84 	addi	r6,r6,-2
 2004fbc:	d9814e15 	stw	r6,1336(sp)
 2004fc0:	003f4c06 	br	2004cf4 <___vfprintf_internal_r+0x1b04>
 2004fc4:	0100180e 	bge	zero,r4,2005028 <___vfprintf_internal_r+0x1e38>
 2004fc8:	00800044 	movi	r2,1
 2004fcc:	1485883a 	add	r2,r2,r18
 2004fd0:	d8814615 	stw	r2,1304(sp)
 2004fd4:	100f883a 	mov	r7,r2
 2004fd8:	103f750e 	bge	r2,zero,2004db0 <___vfprintf_internal_r+0x1bc0>
 2004fdc:	003fa806 	br	2004e80 <___vfprintf_internal_r+0x1c90>
 2004fe0:	80c00c04 	addi	r3,r16,48
 2004fe4:	00800c04 	movi	r2,48
 2004fe8:	d8c009c5 	stb	r3,39(sp)
 2004fec:	d9800904 	addi	r6,sp,36
 2004ff0:	d8c00a04 	addi	r3,sp,40
 2004ff4:	d8800985 	stb	r2,38(sp)
 2004ff8:	003f6506 	br	2004d90 <___vfprintf_internal_r+0x1ba0>
 2004ffc:	d9014d17 	ldw	r4,1332(sp)
 2005000:	2084703a 	and	r2,r4,r2
 2005004:	103f9c26 	beq	r2,zero,2004e78 <___vfprintf_internal_r+0x1c88>
 2005008:	003f6606 	br	2004da4 <___vfprintf_internal_r+0x1bb4>
 200500c:	d9800904 	addi	r6,sp,36
 2005010:	d8c00984 	addi	r3,sp,38
 2005014:	003f5e06 	br	2004d90 <___vfprintf_internal_r+0x1ba0>
 2005018:	00800b44 	movi	r2,45
 200501c:	0121c83a 	sub	r16,zero,r4
 2005020:	d8800945 	stb	r2,37(sp)
 2005024:	003f3d06 	br	2004d1c <___vfprintf_internal_r+0x1b2c>
 2005028:	00800084 	movi	r2,2
 200502c:	1105c83a 	sub	r2,r2,r4
 2005030:	003fe606 	br	2004fcc <___vfprintf_internal_r+0x1ddc>
 2005034:	d8014615 	stw	zero,1304(sp)
 2005038:	dc814815 	stw	r18,1312(sp)
 200503c:	003fb106 	br	2004f04 <___vfprintf_internal_r+0x1d14>
 2005040:	000d883a 	mov	r6,zero
 2005044:	000f883a 	mov	r7,zero
 2005048:	8009883a 	mov	r4,r16
 200504c:	880b883a 	mov	r5,r17
 2005050:	200f3140 	call	200f314 <__nedf2>
 2005054:	103f9f26 	beq	r2,zero,2004ed4 <___vfprintf_internal_r+0x1ce4>
 2005058:	00800044 	movi	r2,1
 200505c:	1509c83a 	sub	r4,r2,r20
 2005060:	d9000615 	stw	r4,24(sp)
 2005064:	003f9b06 	br	2004ed4 <___vfprintf_internal_r+0x1ce4>
 2005068:	98000d1e 	bne	r19,zero,20050a0 <___vfprintf_internal_r+0x1eb0>
 200506c:	d8c14d17 	ldw	r3,1332(sp)
 2005070:	1880004c 	andi	r2,r3,1
 2005074:	10000a1e 	bne	r2,zero,20050a0 <___vfprintf_internal_r+0x1eb0>
 2005078:	01000044 	movi	r4,1
 200507c:	200f883a 	mov	r7,r4
 2005080:	d9014615 	stw	r4,1304(sp)
 2005084:	003f4a06 	br	2004db0 <___vfprintf_internal_r+0x1bc0>
 2005088:	3cc00017 	ldw	r19,0(r7)
 200508c:	39c00104 	addi	r7,r7,4
 2005090:	983d0e0e 	bge	r19,zero,20044cc <___vfprintf_internal_r+0x12dc>
 2005094:	b8c00007 	ldb	r3,0(r23)
 2005098:	04ffffc4 	movi	r19,-1
 200509c:	0038d306 	br	20033ec <___vfprintf_internal_r+0x1fc>
 20050a0:	9cc00084 	addi	r19,r19,2
 20050a4:	dcc14615 	stw	r19,1304(sp)
 20050a8:	980f883a 	mov	r7,r19
 20050ac:	983f400e 	bge	r19,zero,2004db0 <___vfprintf_internal_r+0x1bc0>
 20050b0:	003f7306 	br	2004e80 <___vfprintf_internal_r+0x1c90>

020050b4 <__vfprintf_internal>:
 20050b4:	00808074 	movhi	r2,513
 20050b8:	10968904 	addi	r2,r2,23076
 20050bc:	2013883a 	mov	r9,r4
 20050c0:	11000017 	ldw	r4,0(r2)
 20050c4:	2805883a 	mov	r2,r5
 20050c8:	300f883a 	mov	r7,r6
 20050cc:	480b883a 	mov	r5,r9
 20050d0:	100d883a 	mov	r6,r2
 20050d4:	20031f01 	jmpi	20031f0 <___vfprintf_internal_r>

020050d8 <__svfscanf_r>:
 20050d8:	deff4e04 	addi	sp,sp,-712
 20050dc:	dd80ae15 	stw	r22,696(sp)
 20050e0:	dd00ac15 	stw	r20,688(sp)
 20050e4:	dc40a915 	stw	r17,676(sp)
 20050e8:	dc00a815 	stw	r16,672(sp)
 20050ec:	dfc0b115 	stw	ra,708(sp)
 20050f0:	df00b015 	stw	fp,704(sp)
 20050f4:	ddc0af15 	stw	r23,700(sp)
 20050f8:	dd40ad15 	stw	r21,692(sp)
 20050fc:	dcc0ab15 	stw	r19,684(sp)
 2005100:	dc80aa15 	stw	r18,680(sp)
 2005104:	202d883a 	mov	r22,r4
 2005108:	2821883a 	mov	r16,r5
 200510c:	d9c0a415 	stw	r7,656(sp)
 2005110:	3029883a 	mov	r20,r6
 2005114:	d800a215 	stw	zero,648(sp)
 2005118:	0023883a 	mov	r17,zero
 200511c:	d800a115 	stw	zero,644(sp)
 2005120:	d800a015 	stw	zero,640(sp)
 2005124:	a1000007 	ldb	r4,0(r20)
 2005128:	d9000115 	stw	r4,4(sp)
 200512c:	20001f26 	beq	r4,zero,20051ac <__svfscanf_r+0xd4>
 2005130:	04c08074 	movhi	r19,513
 2005134:	9cd68d04 	addi	r19,r19,23092
 2005138:	9c800017 	ldw	r18,0(r19)
 200513c:	a5000044 	addi	r20,r20,1
 2005140:	9107883a 	add	r3,r18,r4
 2005144:	18800003 	ldbu	r2,0(r3)
 2005148:	1080020c 	andi	r2,r2,8
 200514c:	10002426 	beq	r2,zero,20051e0 <__svfscanf_r+0x108>
 2005150:	80c00117 	ldw	r3,4(r16)
 2005154:	00c00e0e 	bge	zero,r3,2005190 <__svfscanf_r+0xb8>
 2005158:	81400017 	ldw	r5,0(r16)
 200515c:	98800017 	ldw	r2,0(r19)
 2005160:	28c00003 	ldbu	r3,0(r5)
 2005164:	1887883a 	add	r3,r3,r2
 2005168:	19000003 	ldbu	r4,0(r3)
 200516c:	2100020c 	andi	r4,r4,8
 2005170:	203fec26 	beq	r4,zero,2005124 <__svfscanf_r+0x4c>
 2005174:	80c00117 	ldw	r3,4(r16)
 2005178:	29800044 	addi	r6,r5,1
 200517c:	8c400044 	addi	r17,r17,1
 2005180:	18ffffc4 	addi	r3,r3,-1
 2005184:	81800015 	stw	r6,0(r16)
 2005188:	80c00115 	stw	r3,4(r16)
 200518c:	00fff216 	blt	zero,r3,2005158 <__svfscanf_r+0x80>
 2005190:	b009883a 	mov	r4,r22
 2005194:	800b883a 	mov	r5,r16
 2005198:	2002bf00 	call	2002bf0 <__srefill_r>
 200519c:	103fee26 	beq	r2,zero,2005158 <__svfscanf_r+0x80>
 20051a0:	a1000007 	ldb	r4,0(r20)
 20051a4:	d9000115 	stw	r4,4(sp)
 20051a8:	203fe11e 	bne	r4,zero,2005130 <__svfscanf_r+0x58>
 20051ac:	d880a217 	ldw	r2,648(sp)
 20051b0:	dfc0b117 	ldw	ra,708(sp)
 20051b4:	df00b017 	ldw	fp,704(sp)
 20051b8:	ddc0af17 	ldw	r23,700(sp)
 20051bc:	dd80ae17 	ldw	r22,696(sp)
 20051c0:	dd40ad17 	ldw	r21,692(sp)
 20051c4:	dd00ac17 	ldw	r20,688(sp)
 20051c8:	dcc0ab17 	ldw	r19,684(sp)
 20051cc:	dc80aa17 	ldw	r18,680(sp)
 20051d0:	dc40a917 	ldw	r17,676(sp)
 20051d4:	dc00a817 	ldw	r16,672(sp)
 20051d8:	dec0b204 	addi	sp,sp,712
 20051dc:	f800283a 	ret
 20051e0:	00800944 	movi	r2,37
 20051e4:	20801626 	beq	r4,r2,2005240 <__svfscanf_r+0x168>
 20051e8:	80800117 	ldw	r2,4(r16)
 20051ec:	00800b0e 	bge	zero,r2,200521c <__svfscanf_r+0x144>
 20051f0:	81000017 	ldw	r4,0(r16)
 20051f4:	a0ffffc7 	ldb	r3,-1(r20)
 20051f8:	20800003 	ldbu	r2,0(r4)
 20051fc:	10ffeb1e 	bne	r2,r3,20051ac <__svfscanf_r+0xd4>
 2005200:	80c00117 	ldw	r3,4(r16)
 2005204:	21800044 	addi	r6,r4,1
 2005208:	8c400044 	addi	r17,r17,1
 200520c:	18ffffc4 	addi	r3,r3,-1
 2005210:	80c00115 	stw	r3,4(r16)
 2005214:	81800015 	stw	r6,0(r16)
 2005218:	003fc206 	br	2005124 <__svfscanf_r+0x4c>
 200521c:	b009883a 	mov	r4,r22
 2005220:	800b883a 	mov	r5,r16
 2005224:	2002bf00 	call	2002bf0 <__srefill_r>
 2005228:	103ff126 	beq	r2,zero,20051f0 <__svfscanf_r+0x118>
 200522c:	d900a217 	ldw	r4,648(sp)
 2005230:	2004981e 	bne	r4,zero,2006494 <__svfscanf_r+0x13bc>
 2005234:	00bfffc4 	movi	r2,-1
 2005238:	d880a215 	stw	r2,648(sp)
 200523c:	003fdb06 	br	20051ac <__svfscanf_r+0xd4>
 2005240:	d800a315 	stw	zero,652(sp)
 2005244:	002b883a 	mov	r21,zero
 2005248:	a0c00003 	ldbu	r3,0(r20)
 200524c:	00801e04 	movi	r2,120
 2005250:	a5000044 	addi	r20,r20,1
 2005254:	1dc03fcc 	andi	r23,r3,255
 2005258:	bdc0201c 	xori	r23,r23,128
 200525c:	bdffe004 	addi	r23,r23,-128
 2005260:	10c08036 	bltu	r2,r3,2005464 <__svfscanf_r+0x38c>
 2005264:	18c5883a 	add	r2,r3,r3
 2005268:	1085883a 	add	r2,r2,r2
 200526c:	00c08034 	movhi	r3,512
 2005270:	18d4a004 	addi	r3,r3,21120
 2005274:	10c5883a 	add	r2,r2,r3
 2005278:	11000017 	ldw	r4,0(r2)
 200527c:	2000683a 	jmp	r4
 2005280:	02005234 	movhi	r8,328
 2005284:	02005464 	muli	r8,zero,337
 2005288:	02005464 	muli	r8,zero,337
 200528c:	02005464 	muli	r8,zero,337
 2005290:	02005464 	muli	r8,zero,337
 2005294:	02005464 	muli	r8,zero,337
 2005298:	02005464 	muli	r8,zero,337
 200529c:	02005464 	muli	r8,zero,337
 20052a0:	02005464 	muli	r8,zero,337
 20052a4:	02005464 	muli	r8,zero,337
 20052a8:	02005464 	muli	r8,zero,337
 20052ac:	02005464 	muli	r8,zero,337
 20052b0:	02005464 	muli	r8,zero,337
 20052b4:	02005464 	muli	r8,zero,337
 20052b8:	02005464 	muli	r8,zero,337
 20052bc:	02005464 	muli	r8,zero,337
 20052c0:	02005464 	muli	r8,zero,337
 20052c4:	02005464 	muli	r8,zero,337
 20052c8:	02005464 	muli	r8,zero,337
 20052cc:	02005464 	muli	r8,zero,337
 20052d0:	02005464 	muli	r8,zero,337
 20052d4:	02005464 	muli	r8,zero,337
 20052d8:	02005464 	muli	r8,zero,337
 20052dc:	02005464 	muli	r8,zero,337
 20052e0:	02005464 	muli	r8,zero,337
 20052e4:	02005464 	muli	r8,zero,337
 20052e8:	02005464 	muli	r8,zero,337
 20052ec:	02005464 	muli	r8,zero,337
 20052f0:	02005464 	muli	r8,zero,337
 20052f4:	02005464 	muli	r8,zero,337
 20052f8:	02005464 	muli	r8,zero,337
 20052fc:	02005464 	muli	r8,zero,337
 2005300:	02005464 	muli	r8,zero,337
 2005304:	02005464 	muli	r8,zero,337
 2005308:	02005464 	muli	r8,zero,337
 200530c:	02005464 	muli	r8,zero,337
 2005310:	02005464 	muli	r8,zero,337
 2005314:	020051e8 	cmpgeui	r8,zero,327
 2005318:	02005464 	muli	r8,zero,337
 200531c:	02005464 	muli	r8,zero,337
 2005320:	02005464 	muli	r8,zero,337
 2005324:	02005464 	muli	r8,zero,337
 2005328:	02006304 	movi	r8,396
 200532c:	02005464 	muli	r8,zero,337
 2005330:	02005464 	muli	r8,zero,337
 2005334:	02005464 	muli	r8,zero,337
 2005338:	02005464 	muli	r8,zero,337
 200533c:	02005464 	muli	r8,zero,337
 2005340:	020062e8 	cmpgeui	r8,zero,395
 2005344:	020062e8 	cmpgeui	r8,zero,395
 2005348:	020062e8 	cmpgeui	r8,zero,395
 200534c:	020062e8 	cmpgeui	r8,zero,395
 2005350:	020062e8 	cmpgeui	r8,zero,395
 2005354:	020062e8 	cmpgeui	r8,zero,395
 2005358:	020062e8 	cmpgeui	r8,zero,395
 200535c:	020062e8 	cmpgeui	r8,zero,395
 2005360:	020062e8 	cmpgeui	r8,zero,395
 2005364:	020062e8 	cmpgeui	r8,zero,395
 2005368:	02005464 	muli	r8,zero,337
 200536c:	02005464 	muli	r8,zero,337
 2005370:	02005464 	muli	r8,zero,337
 2005374:	02005464 	muli	r8,zero,337
 2005378:	02005464 	muli	r8,zero,337
 200537c:	02005464 	muli	r8,zero,337
 2005380:	02005464 	muli	r8,zero,337
 2005384:	02005464 	muli	r8,zero,337
 2005388:	02005464 	muli	r8,zero,337
 200538c:	02005464 	muli	r8,zero,337
 2005390:	02005478 	rdprs	r8,zero,337
 2005394:	020063ec 	andhi	r8,zero,399
 2005398:	02005464 	muli	r8,zero,337
 200539c:	020063ec 	andhi	r8,zero,399
 20053a0:	02005464 	muli	r8,zero,337
 20053a4:	02005464 	muli	r8,zero,337
 20053a8:	02005464 	muli	r8,zero,337
 20053ac:	02005464 	muli	r8,zero,337
 20053b0:	020062e0 	cmpeqi	r8,zero,395
 20053b4:	02005464 	muli	r8,zero,337
 20053b8:	02005464 	muli	r8,zero,337
 20053bc:	020062c0 	call	20062c <__alt_mem_sdram-0x1dff9d4>
 20053c0:	02005464 	muli	r8,zero,337
 20053c4:	02005464 	muli	r8,zero,337
 20053c8:	02005464 	muli	r8,zero,337
 20053cc:	02005464 	muli	r8,zero,337
 20053d0:	02005464 	muli	r8,zero,337
 20053d4:	02005464 	muli	r8,zero,337
 20053d8:	02005464 	muli	r8,zero,337
 20053dc:	02005464 	muli	r8,zero,337
 20053e0:	0200630c 	andi	r8,zero,396
 20053e4:	02005464 	muli	r8,zero,337
 20053e8:	02005464 	muli	r8,zero,337
 20053ec:	020062a4 	muli	r8,zero,394
 20053f0:	02005464 	muli	r8,zero,337
 20053f4:	02005464 	muli	r8,zero,337
 20053f8:	02005464 	muli	r8,zero,337
 20053fc:	02005464 	muli	r8,zero,337
 2005400:	02005464 	muli	r8,zero,337
 2005404:	02005464 	muli	r8,zero,337
 2005408:	02005464 	muli	r8,zero,337
 200540c:	020063f4 	movhi	r8,399
 2005410:	0200547c 	xorhi	r8,zero,337
 2005414:	020063ec 	andhi	r8,zero,399
 2005418:	020063ec 	andhi	r8,zero,399
 200541c:	020063ec 	andhi	r8,zero,399
 2005420:	02006400 	call	200640 <__alt_mem_sdram-0x1dff9c0>
 2005424:	02006348 	cmpgei	r8,zero,397
 2005428:	02005464 	muli	r8,zero,337
 200542c:	02005464 	muli	r8,zero,337
 2005430:	02005a10 	cmplti	r8,zero,360
 2005434:	02005464 	muli	r8,zero,337
 2005438:	020064fc 	xorhi	r8,zero,403
 200543c:	020064b8 	rdprs	r8,zero,402
 2005440:	020064dc 	xori	r8,zero,403
 2005444:	02005464 	muli	r8,zero,337
 2005448:	02005464 	muli	r8,zero,337
 200544c:	020064d4 	movui	r8,403
 2005450:	02005464 	muli	r8,zero,337
 2005454:	0200632c 	andhi	r8,zero,396
 2005458:	02005464 	muli	r8,zero,337
 200545c:	02005464 	muli	r8,zero,337
 2005460:	0200630c 	andi	r8,zero,396
 2005464:	bc87883a 	add	r3,r23,r18
 2005468:	18800003 	ldbu	r2,0(r3)
 200546c:	1080004c 	andi	r2,r2,1
 2005470:	1005003a 	cmpeq	r2,r2,zero
 2005474:	1000011e 	bne	r2,zero,200547c <__svfscanf_r+0x3a4>
 2005478:	ad400054 	ori	r21,r21,1
 200547c:	01008074 	movhi	r4,513
 2005480:	212f5a04 	addi	r4,r4,-17048
 2005484:	00800284 	movi	r2,10
 2005488:	d900a015 	stw	r4,640(sp)
 200548c:	048000c4 	movi	r18,3
 2005490:	d880a115 	stw	r2,644(sp)
 2005494:	80c00117 	ldw	r3,4(r16)
 2005498:	00c13f0e 	bge	zero,r3,2005998 <__svfscanf_r+0x8c0>
 200549c:	a880100c 	andi	r2,r21,64
 20054a0:	10001326 	beq	r2,zero,20054f0 <__svfscanf_r+0x418>
 20054a4:	00800104 	movi	r2,4
 20054a8:	14bf1e36 	bltu	r2,r18,2005124 <__svfscanf_r+0x4c>
 20054ac:	9485883a 	add	r2,r18,r18
 20054b0:	1085883a 	add	r2,r2,r2
 20054b4:	00c08034 	movhi	r3,512
 20054b8:	18d53204 	addi	r3,r3,21704
 20054bc:	10c5883a 	add	r2,r2,r3
 20054c0:	11000017 	ldw	r4,0(r2)
 20054c4:	2000683a 	jmp	r4
 20054c8:	0200552c 	andhi	r8,zero,340
 20054cc:	0200562c 	andhi	r8,zero,344
 20054d0:	0200583c 	xorhi	r8,zero,352
 20054d4:	020056a0 	cmpeqi	r8,zero,346
 20054d8:	02005974 	movhi	r8,357
 20054dc:	b009883a 	mov	r4,r22
 20054e0:	800b883a 	mov	r5,r16
 20054e4:	2002bf00 	call	2002bf0 <__srefill_r>
 20054e8:	103f501e 	bne	r2,zero,200522c <__svfscanf_r+0x154>
 20054ec:	8c400044 	addi	r17,r17,1
 20054f0:	81400017 	ldw	r5,0(r16)
 20054f4:	98800017 	ldw	r2,0(r19)
 20054f8:	28c00003 	ldbu	r3,0(r5)
 20054fc:	1887883a 	add	r3,r3,r2
 2005500:	19000003 	ldbu	r4,0(r3)
 2005504:	2100020c 	andi	r4,r4,8
 2005508:	203fe626 	beq	r4,zero,20054a4 <__svfscanf_r+0x3cc>
 200550c:	80c00117 	ldw	r3,4(r16)
 2005510:	18ffffc4 	addi	r3,r3,-1
 2005514:	80c00115 	stw	r3,4(r16)
 2005518:	00fff00e 	bge	zero,r3,20054dc <__svfscanf_r+0x404>
 200551c:	29800044 	addi	r6,r5,1
 2005520:	8c400044 	addi	r17,r17,1
 2005524:	81800015 	stw	r6,0(r16)
 2005528:	003ff106 	br	20054f0 <__svfscanf_r+0x418>
 200552c:	d8c0a317 	ldw	r3,652(sp)
 2005530:	1800021e 	bne	r3,zero,200553c <__svfscanf_r+0x464>
 2005534:	01000044 	movi	r4,1
 2005538:	d900a315 	stw	r4,652(sp)
 200553c:	a880004c 	andi	r2,r21,1
 2005540:	1005003a 	cmpeq	r2,r2,zero
 2005544:	1002811e 	bne	r2,zero,2005f4c <__svfscanf_r+0xe74>
 2005548:	ad40040c 	andi	r21,r21,16
 200554c:	a805003a 	cmpeq	r2,r21,zero
 2005550:	d880a615 	stw	r2,664(sp)
 2005554:	1003d31e 	bne	r2,zero,20064a4 <__svfscanf_r+0x13cc>
 2005558:	0027883a 	mov	r19,zero
 200555c:	d900a317 	ldw	r4,652(sp)
 2005560:	2003c726 	beq	r4,zero,2006480 <__svfscanf_r+0x13a8>
 2005564:	07008074 	movhi	fp,513
 2005568:	e7168e04 	addi	fp,fp,23096
 200556c:	e0800017 	ldw	r2,0(fp)
 2005570:	103f2e26 	beq	r2,zero,200522c <__svfscanf_r+0x154>
 2005574:	d8804404 	addi	r2,sp,272
 2005578:	0025883a 	mov	r18,zero
 200557c:	d880a515 	stw	r2,660(sp)
 2005580:	05ffffc4 	movi	r23,-1
 2005584:	80800017 	ldw	r2,0(r16)
 2005588:	80c00117 	ldw	r3,4(r16)
 200558c:	d900a517 	ldw	r4,660(sp)
 2005590:	12000003 	ldbu	r8,0(r2)
 2005594:	18ffffc4 	addi	r3,r3,-1
 2005598:	11800044 	addi	r6,r2,1
 200559c:	248f883a 	add	r7,r4,r18
 20055a0:	80c00115 	stw	r3,4(r16)
 20055a4:	81800015 	stw	r6,0(r16)
 20055a8:	3a000005 	stb	r8,0(r7)
 20055ac:	d9000204 	addi	r4,sp,8
 20055b0:	000b883a 	mov	r5,zero
 20055b4:	01800204 	movi	r6,8
 20055b8:	20029b40 	call	20029b4 <memset>
 20055bc:	d980a517 	ldw	r6,660(sp)
 20055c0:	94800044 	addi	r18,r18,1
 20055c4:	d8800204 	addi	r2,sp,8
 20055c8:	b009883a 	mov	r4,r22
 20055cc:	980b883a 	mov	r5,r19
 20055d0:	900f883a 	mov	r7,r18
 20055d4:	d8800015 	stw	r2,0(sp)
 20055d8:	20089900 	call	2008990 <_mbrtowc_r>
 20055dc:	1007883a 	mov	r3,r2
 20055e0:	15ff1226 	beq	r2,r23,200522c <__svfscanf_r+0x154>
 20055e4:	10039e1e 	bne	r2,zero,2006460 <__svfscanf_r+0x1388>
 20055e8:	a800011e 	bne	r21,zero,20055f0 <__svfscanf_r+0x518>
 20055ec:	98000015 	stw	zero,0(r19)
 20055f0:	d8c0a317 	ldw	r3,652(sp)
 20055f4:	d900a617 	ldw	r4,664(sp)
 20055f8:	8ca3883a 	add	r17,r17,r18
 20055fc:	18ffffc4 	addi	r3,r3,-1
 2005600:	d8c0a315 	stw	r3,652(sp)
 2005604:	20000126 	beq	r4,zero,200560c <__svfscanf_r+0x534>
 2005608:	9cc00104 	addi	r19,r19,4
 200560c:	0025883a 	mov	r18,zero
 2005610:	80c00117 	ldw	r3,4(r16)
 2005614:	00c3950e 	bge	zero,r3,200646c <__svfscanf_r+0x1394>
 2005618:	d880a317 	ldw	r2,652(sp)
 200561c:	10039826 	beq	r2,zero,2006480 <__svfscanf_r+0x13a8>
 2005620:	e0800017 	ldw	r2,0(fp)
 2005624:	90bfd71e 	bne	r18,r2,2005584 <__svfscanf_r+0x4ac>
 2005628:	003f0006 	br	200522c <__svfscanf_r+0x154>
 200562c:	d880a317 	ldw	r2,652(sp)
 2005630:	1000021e 	bne	r2,zero,200563c <__svfscanf_r+0x564>
 2005634:	00ffffc4 	movi	r3,-1
 2005638:	d8c0a315 	stw	r3,652(sp)
 200563c:	a880040c 	andi	r2,r21,16
 2005640:	1003b826 	beq	r2,zero,2006524 <__svfscanf_r+0x144c>
 2005644:	0027883a 	mov	r19,zero
 2005648:	dd400404 	addi	r21,sp,16
 200564c:	81000017 	ldw	r4,0(r16)
 2005650:	20800003 	ldbu	r2,0(r4)
 2005654:	a885883a 	add	r2,r21,r2
 2005658:	10c00007 	ldb	r3,0(r2)
 200565c:	18037d26 	beq	r3,zero,2006454 <__svfscanf_r+0x137c>
 2005660:	80c00117 	ldw	r3,4(r16)
 2005664:	21800044 	addi	r6,r4,1
 2005668:	d900a317 	ldw	r4,652(sp)
 200566c:	18ffffc4 	addi	r3,r3,-1
 2005670:	9cc00044 	addi	r19,r19,1
 2005674:	81800015 	stw	r6,0(r16)
 2005678:	80c00115 	stw	r3,4(r16)
 200567c:	24c37526 	beq	r4,r19,2006454 <__svfscanf_r+0x137c>
 2005680:	00fff216 	blt	zero,r3,200564c <__svfscanf_r+0x574>
 2005684:	b009883a 	mov	r4,r22
 2005688:	800b883a 	mov	r5,r16
 200568c:	2002bf00 	call	2002bf0 <__srefill_r>
 2005690:	103fee26 	beq	r2,zero,200564c <__svfscanf_r+0x574>
 2005694:	983ee526 	beq	r19,zero,200522c <__svfscanf_r+0x154>
 2005698:	8ce3883a 	add	r17,r17,r19
 200569c:	003ea106 	br	2005124 <__svfscanf_r+0x4c>
 20056a0:	d900a317 	ldw	r4,652(sp)
 20056a4:	00805704 	movi	r2,348
 20056a8:	20ffffc4 	addi	r3,r4,-1
 20056ac:	10c0bf2e 	bgeu	r2,r3,20059ac <__svfscanf_r+0x8d4>
 20056b0:	00805744 	movi	r2,349
 20056b4:	24ffa8c4 	addi	r19,r4,-349
 20056b8:	ac836014 	ori	r18,r21,3456
 20056bc:	d880a315 	stw	r2,652(sp)
 20056c0:	d8c04404 	addi	r3,sp,272
 20056c4:	d8c0a515 	stw	r3,660(sp)
 20056c8:	002f883a 	mov	r23,zero
 20056cc:	182b883a 	mov	r21,r3
 20056d0:	81800017 	ldw	r6,0(r16)
 20056d4:	00c01344 	movi	r3,77
 20056d8:	31400003 	ldbu	r5,0(r6)
 20056dc:	28bff544 	addi	r2,r5,-43
 20056e0:	10803fcc 	andi	r2,r2,255
 20056e4:	1880b836 	bltu	r3,r2,20059c8 <__svfscanf_r+0x8f0>
 20056e8:	1085883a 	add	r2,r2,r2
 20056ec:	1085883a 	add	r2,r2,r2
 20056f0:	00c08034 	movhi	r3,512
 20056f4:	18d5c104 	addi	r3,r3,22276
 20056f8:	10c5883a 	add	r2,r2,r3
 20056fc:	11000017 	ldw	r4,0(r2)
 2005700:	2000683a 	jmp	r4
 2005704:	02005b18 	cmpnei	r8,zero,364
 2005708:	020059c8 	cmpgei	r8,zero,359
 200570c:	02005b18 	cmpnei	r8,zero,364
 2005710:	020059c8 	cmpgei	r8,zero,359
 2005714:	020059c8 	cmpgei	r8,zero,359
 2005718:	02005b5c 	xori	r8,zero,365
 200571c:	02006360 	cmpeqi	r8,zero,397
 2005720:	02006360 	cmpeqi	r8,zero,397
 2005724:	02006360 	cmpeqi	r8,zero,397
 2005728:	02006360 	cmpeqi	r8,zero,397
 200572c:	02006360 	cmpeqi	r8,zero,397
 2005730:	02006360 	cmpeqi	r8,zero,397
 2005734:	02006360 	cmpeqi	r8,zero,397
 2005738:	02006388 	cmpgei	r8,zero,398
 200573c:	02006388 	cmpgei	r8,zero,398
 2005740:	020059c8 	cmpgei	r8,zero,359
 2005744:	020059c8 	cmpgei	r8,zero,359
 2005748:	020059c8 	cmpgei	r8,zero,359
 200574c:	020059c8 	cmpgei	r8,zero,359
 2005750:	020059c8 	cmpgei	r8,zero,359
 2005754:	020059c8 	cmpgei	r8,zero,359
 2005758:	020059c8 	cmpgei	r8,zero,359
 200575c:	020063b8 	rdprs	r8,zero,398
 2005760:	020063b8 	rdprs	r8,zero,398
 2005764:	020063b8 	rdprs	r8,zero,398
 2005768:	020063b8 	rdprs	r8,zero,398
 200576c:	020063b8 	rdprs	r8,zero,398
 2005770:	020063b8 	rdprs	r8,zero,398
 2005774:	020059c8 	cmpgei	r8,zero,359
 2005778:	020059c8 	cmpgei	r8,zero,359
 200577c:	020059c8 	cmpgei	r8,zero,359
 2005780:	020059c8 	cmpgei	r8,zero,359
 2005784:	020059c8 	cmpgei	r8,zero,359
 2005788:	020059c8 	cmpgei	r8,zero,359
 200578c:	020059c8 	cmpgei	r8,zero,359
 2005790:	020059c8 	cmpgei	r8,zero,359
 2005794:	020059c8 	cmpgei	r8,zero,359
 2005798:	020059c8 	cmpgei	r8,zero,359
 200579c:	020059c8 	cmpgei	r8,zero,359
 20057a0:	020059c8 	cmpgei	r8,zero,359
 20057a4:	020059c8 	cmpgei	r8,zero,359
 20057a8:	020059c8 	cmpgei	r8,zero,359
 20057ac:	020059c8 	cmpgei	r8,zero,359
 20057b0:	020059c8 	cmpgei	r8,zero,359
 20057b4:	020059c8 	cmpgei	r8,zero,359
 20057b8:	020063c8 	cmpgei	r8,zero,399
 20057bc:	020059c8 	cmpgei	r8,zero,359
 20057c0:	020059c8 	cmpgei	r8,zero,359
 20057c4:	020059c8 	cmpgei	r8,zero,359
 20057c8:	020059c8 	cmpgei	r8,zero,359
 20057cc:	020059c8 	cmpgei	r8,zero,359
 20057d0:	020059c8 	cmpgei	r8,zero,359
 20057d4:	020059c8 	cmpgei	r8,zero,359
 20057d8:	020059c8 	cmpgei	r8,zero,359
 20057dc:	020063b8 	rdprs	r8,zero,398
 20057e0:	020063b8 	rdprs	r8,zero,398
 20057e4:	020063b8 	rdprs	r8,zero,398
 20057e8:	020063b8 	rdprs	r8,zero,398
 20057ec:	020063b8 	rdprs	r8,zero,398
 20057f0:	020063b8 	rdprs	r8,zero,398
 20057f4:	020059c8 	cmpgei	r8,zero,359
 20057f8:	020059c8 	cmpgei	r8,zero,359
 20057fc:	020059c8 	cmpgei	r8,zero,359
 2005800:	020059c8 	cmpgei	r8,zero,359
 2005804:	020059c8 	cmpgei	r8,zero,359
 2005808:	020059c8 	cmpgei	r8,zero,359
 200580c:	020059c8 	cmpgei	r8,zero,359
 2005810:	020059c8 	cmpgei	r8,zero,359
 2005814:	020059c8 	cmpgei	r8,zero,359
 2005818:	020059c8 	cmpgei	r8,zero,359
 200581c:	020059c8 	cmpgei	r8,zero,359
 2005820:	020059c8 	cmpgei	r8,zero,359
 2005824:	020059c8 	cmpgei	r8,zero,359
 2005828:	020059c8 	cmpgei	r8,zero,359
 200582c:	020059c8 	cmpgei	r8,zero,359
 2005830:	020059c8 	cmpgei	r8,zero,359
 2005834:	020059c8 	cmpgei	r8,zero,359
 2005838:	020063c8 	cmpgei	r8,zero,399
 200583c:	d900a317 	ldw	r4,652(sp)
 2005840:	2000021e 	bne	r4,zero,200584c <__svfscanf_r+0x774>
 2005844:	00bfffc4 	movi	r2,-1
 2005848:	d880a315 	stw	r2,652(sp)
 200584c:	a880004c 	andi	r2,r21,1
 2005850:	1005003a 	cmpeq	r2,r2,zero
 2005854:	1003651e 	bne	r2,zero,20065ec <__svfscanf_r+0x1514>
 2005858:	adc0040c 	andi	r23,r21,16
 200585c:	b807003a 	cmpeq	r3,r23,zero
 2005860:	d8c0a715 	stw	r3,668(sp)
 2005864:	1802f61e 	bne	r3,zero,2006440 <__svfscanf_r+0x1368>
 2005868:	dd400104 	addi	r21,sp,4
 200586c:	0025883a 	mov	r18,zero
 2005870:	073fffc4 	movi	fp,-1
 2005874:	81400017 	ldw	r5,0(r16)
 2005878:	98800017 	ldw	r2,0(r19)
 200587c:	29c00003 	ldbu	r7,0(r5)
 2005880:	38c03fcc 	andi	r3,r7,255
 2005884:	1887883a 	add	r3,r3,r2
 2005888:	19000003 	ldbu	r4,0(r3)
 200588c:	2100020c 	andi	r4,r4,8
 2005890:	2000321e 	bne	r4,zero,200595c <__svfscanf_r+0x884>
 2005894:	d8c0a317 	ldw	r3,652(sp)
 2005898:	18003026 	beq	r3,zero,200595c <__svfscanf_r+0x884>
 200589c:	00808074 	movhi	r2,513
 20058a0:	10968e04 	addi	r2,r2,23096
 20058a4:	10c00017 	ldw	r3,0(r2)
 20058a8:	90fe6026 	beq	r18,r3,200522c <__svfscanf_r+0x154>
 20058ac:	d8c04404 	addi	r3,sp,272
 20058b0:	80800117 	ldw	r2,4(r16)
 20058b4:	d8c0a515 	stw	r3,660(sp)
 20058b8:	d900a517 	ldw	r4,660(sp)
 20058bc:	10ffffc4 	addi	r3,r2,-1
 20058c0:	29800044 	addi	r6,r5,1
 20058c4:	80c00115 	stw	r3,4(r16)
 20058c8:	2485883a 	add	r2,r4,r18
 20058cc:	81800015 	stw	r6,0(r16)
 20058d0:	d9000204 	addi	r4,sp,8
 20058d4:	000b883a 	mov	r5,zero
 20058d8:	01800204 	movi	r6,8
 20058dc:	11c00005 	stb	r7,0(r2)
 20058e0:	20029b40 	call	20029b4 <memset>
 20058e4:	d980a517 	ldw	r6,660(sp)
 20058e8:	94800044 	addi	r18,r18,1
 20058ec:	d8800204 	addi	r2,sp,8
 20058f0:	b009883a 	mov	r4,r22
 20058f4:	a80b883a 	mov	r5,r21
 20058f8:	900f883a 	mov	r7,r18
 20058fc:	d8800015 	stw	r2,0(sp)
 2005900:	20089900 	call	2008990 <_mbrtowc_r>
 2005904:	1007883a 	mov	r3,r2
 2005908:	173e4826 	beq	r2,fp,200522c <__svfscanf_r+0x154>
 200590c:	1002c91e 	bne	r2,zero,2006434 <__svfscanf_r+0x135c>
 2005910:	a8000015 	stw	zero,0(r21)
 2005914:	a9000017 	ldw	r4,0(r21)
 2005918:	20088280 	call	2008828 <iswspace>
 200591c:	1002bc1e 	bne	r2,zero,2006410 <__svfscanf_r+0x1338>
 2005920:	d900a317 	ldw	r4,652(sp)
 2005924:	d880a717 	ldw	r2,668(sp)
 2005928:	8ca3883a 	add	r17,r17,r18
 200592c:	213fffc4 	addi	r4,r4,-1
 2005930:	d900a315 	stw	r4,652(sp)
 2005934:	10000126 	beq	r2,zero,200593c <__svfscanf_r+0x864>
 2005938:	ad400104 	addi	r21,r21,4
 200593c:	0025883a 	mov	r18,zero
 2005940:	80c00117 	ldw	r3,4(r16)
 2005944:	00ffcb16 	blt	zero,r3,2005874 <__svfscanf_r+0x79c>
 2005948:	b009883a 	mov	r4,r22
 200594c:	800b883a 	mov	r5,r16
 2005950:	2002bf00 	call	2002bf0 <__srefill_r>
 2005954:	103fc726 	beq	r2,zero,2005874 <__svfscanf_r+0x79c>
 2005958:	903e341e 	bne	r18,zero,200522c <__svfscanf_r+0x154>
 200595c:	b83df11e 	bne	r23,zero,2005124 <__svfscanf_r+0x4c>
 2005960:	d900a217 	ldw	r4,648(sp)
 2005964:	a8000015 	stw	zero,0(r21)
 2005968:	21000044 	addi	r4,r4,1
 200596c:	d900a215 	stw	r4,648(sp)
 2005970:	003dec06 	br	2005124 <__svfscanf_r+0x4c>
 2005974:	d900a317 	ldw	r4,652(sp)
 2005978:	00805704 	movi	r2,348
 200597c:	20ffffc4 	addi	r3,r4,-1
 2005980:	10c0902e 	bgeu	r2,r3,2005bc4 <__svfscanf_r+0xaec>
 2005984:	00805744 	movi	r2,349
 2005988:	24ffa8c4 	addi	r19,r4,-349
 200598c:	ad41e014 	ori	r21,r21,1920
 2005990:	d880a315 	stw	r2,652(sp)
 2005994:	00010806 	br	2005db8 <__svfscanf_r+0xce0>
 2005998:	b009883a 	mov	r4,r22
 200599c:	800b883a 	mov	r5,r16
 20059a0:	2002bf00 	call	2002bf0 <__srefill_r>
 20059a4:	103ebd26 	beq	r2,zero,200549c <__svfscanf_r+0x3c4>
 20059a8:	003e2006 	br	200522c <__svfscanf_r+0x154>
 20059ac:	d900a317 	ldw	r4,652(sp)
 20059b0:	ac836014 	ori	r18,r21,3456
 20059b4:	2002941e 	bne	r4,zero,2006408 <__svfscanf_r+0x1330>
 20059b8:	d8804404 	addi	r2,sp,272
 20059bc:	d880a515 	stw	r2,660(sp)
 20059c0:	002f883a 	mov	r23,zero
 20059c4:	102b883a 	mov	r21,r2
 20059c8:	9080400c 	andi	r2,r18,256
 20059cc:	10000926 	beq	r2,zero,20059f4 <__svfscanf_r+0x91c>
 20059d0:	d8c0a517 	ldw	r3,660(sp)
 20059d4:	1d40052e 	bgeu	r3,r21,20059ec <__svfscanf_r+0x914>
 20059d8:	ad7fffc4 	addi	r21,r21,-1
 20059dc:	a9400007 	ldb	r5,0(r21)
 20059e0:	b009883a 	mov	r4,r22
 20059e4:	800d883a 	mov	r6,r16
 20059e8:	200c9240 	call	200c924 <_ungetc_r>
 20059ec:	d900a517 	ldw	r4,660(sp)
 20059f0:	257dee26 	beq	r4,r21,20051ac <__svfscanf_r+0xd4>
 20059f4:	9080040c 	andi	r2,r18,16
 20059f8:	10000a26 	beq	r2,zero,2005a24 <__svfscanf_r+0x94c>
 20059fc:	d8c0a517 	ldw	r3,660(sp)
 2005a00:	a8c5c83a 	sub	r2,r21,r3
 2005a04:	b885883a 	add	r2,r23,r2
 2005a08:	88a3883a 	add	r17,r17,r2
 2005a0c:	003dc506 	br	2005124 <__svfscanf_r+0x4c>
 2005a10:	a0c00007 	ldb	r3,0(r20)
 2005a14:	00801b04 	movi	r2,108
 2005a18:	18801726 	beq	r3,r2,2005a78 <__svfscanf_r+0x9a0>
 2005a1c:	ad400054 	ori	r21,r21,1
 2005a20:	003e0906 	br	2005248 <__svfscanf_r+0x170>
 2005a24:	a8000005 	stb	zero,0(r21)
 2005a28:	d8c0a017 	ldw	r3,640(sp)
 2005a2c:	d940a517 	ldw	r5,660(sp)
 2005a30:	d9c0a117 	ldw	r7,644(sp)
 2005a34:	b009883a 	mov	r4,r22
 2005a38:	000d883a 	mov	r6,zero
 2005a3c:	183ee83a 	callr	r3
 2005a40:	1007883a 	mov	r3,r2
 2005a44:	9080080c 	andi	r2,r18,32
 2005a48:	1000251e 	bne	r2,zero,2005ae0 <__svfscanf_r+0xa08>
 2005a4c:	9080010c 	andi	r2,r18,4
 2005a50:	10000c26 	beq	r2,zero,2005a84 <__svfscanf_r+0x9ac>
 2005a54:	d900a417 	ldw	r4,656(sp)
 2005a58:	20800017 	ldw	r2,0(r4)
 2005a5c:	21000104 	addi	r4,r4,4
 2005a60:	d900a415 	stw	r4,656(sp)
 2005a64:	10c0000d 	sth	r3,0(r2)
 2005a68:	d880a217 	ldw	r2,648(sp)
 2005a6c:	10800044 	addi	r2,r2,1
 2005a70:	d880a215 	stw	r2,648(sp)
 2005a74:	003fe106 	br	20059fc <__svfscanf_r+0x924>
 2005a78:	a5000044 	addi	r20,r20,1
 2005a7c:	ad400094 	ori	r21,r21,2
 2005a80:	003df106 	br	2005248 <__svfscanf_r+0x170>
 2005a84:	9080004c 	andi	r2,r18,1
 2005a88:	1005003a 	cmpeq	r2,r2,zero
 2005a8c:	10001426 	beq	r2,zero,2005ae0 <__svfscanf_r+0xa08>
 2005a90:	9080008c 	andi	r2,r18,2
 2005a94:	10001226 	beq	r2,zero,2005ae0 <__svfscanf_r+0xa08>
 2005a98:	d8c0a017 	ldw	r3,640(sp)
 2005a9c:	00808074 	movhi	r2,513
 2005aa0:	10b0bd04 	addi	r2,r2,-15628
 2005aa4:	18801426 	beq	r3,r2,2005af8 <__svfscanf_r+0xa20>
 2005aa8:	d9c0a117 	ldw	r7,644(sp)
 2005aac:	d940a517 	ldw	r5,660(sp)
 2005ab0:	000d883a 	mov	r6,zero
 2005ab4:	b009883a 	mov	r4,r22
 2005ab8:	200bfdc0 	call	200bfdc <_strtoll_r>
 2005abc:	100d883a 	mov	r6,r2
 2005ac0:	180f883a 	mov	r7,r3
 2005ac4:	d900a417 	ldw	r4,656(sp)
 2005ac8:	20800017 	ldw	r2,0(r4)
 2005acc:	21000104 	addi	r4,r4,4
 2005ad0:	d900a415 	stw	r4,656(sp)
 2005ad4:	11c00115 	stw	r7,4(r2)
 2005ad8:	11800015 	stw	r6,0(r2)
 2005adc:	003fe206 	br	2005a68 <__svfscanf_r+0x990>
 2005ae0:	d900a417 	ldw	r4,656(sp)
 2005ae4:	20800017 	ldw	r2,0(r4)
 2005ae8:	21000104 	addi	r4,r4,4
 2005aec:	d900a415 	stw	r4,656(sp)
 2005af0:	10c00015 	stw	r3,0(r2)
 2005af4:	003fdc06 	br	2005a68 <__svfscanf_r+0x990>
 2005af8:	d9c0a117 	ldw	r7,644(sp)
 2005afc:	d940a517 	ldw	r5,660(sp)
 2005b00:	000d883a 	mov	r6,zero
 2005b04:	b009883a 	mov	r4,r22
 2005b08:	200c5580 	call	200c558 <_strtoull_r>
 2005b0c:	100d883a 	mov	r6,r2
 2005b10:	180f883a 	mov	r7,r3
 2005b14:	003feb06 	br	2005ac4 <__svfscanf_r+0x9ec>
 2005b18:	9080200c 	andi	r2,r18,128
 2005b1c:	103faa26 	beq	r2,zero,20059c8 <__svfscanf_r+0x8f0>
 2005b20:	00bfdfc4 	movi	r2,-129
 2005b24:	90a4703a 	and	r18,r18,r2
 2005b28:	a9400005 	stb	r5,0(r21)
 2005b2c:	ad400044 	addi	r21,r21,1
 2005b30:	80c00117 	ldw	r3,4(r16)
 2005b34:	18ffffc4 	addi	r3,r3,-1
 2005b38:	80c00115 	stw	r3,4(r16)
 2005b3c:	00c0130e 	bge	zero,r3,2005b8c <__svfscanf_r+0xab4>
 2005b40:	31800044 	addi	r6,r6,1
 2005b44:	81800015 	stw	r6,0(r16)
 2005b48:	d880a317 	ldw	r2,652(sp)
 2005b4c:	10bfffc4 	addi	r2,r2,-1
 2005b50:	d880a315 	stw	r2,652(sp)
 2005b54:	103ede1e 	bne	r2,zero,20056d0 <__svfscanf_r+0x5f8>
 2005b58:	003f9b06 	br	20059c8 <__svfscanf_r+0x8f0>
 2005b5c:	9082000c 	andi	r2,r18,2048
 2005b60:	103ff126 	beq	r2,zero,2005b28 <__svfscanf_r+0xa50>
 2005b64:	d8c0a117 	ldw	r3,644(sp)
 2005b68:	1800031e 	bne	r3,zero,2005b78 <__svfscanf_r+0xaa0>
 2005b6c:	01000204 	movi	r4,8
 2005b70:	94808014 	ori	r18,r18,512
 2005b74:	d900a115 	stw	r4,644(sp)
 2005b78:	9081000c 	andi	r2,r18,1024
 2005b7c:	10000826 	beq	r2,zero,2005ba0 <__svfscanf_r+0xac8>
 2005b80:	00be9fc4 	movi	r2,-1409
 2005b84:	90a4703a 	and	r18,r18,r2
 2005b88:	003fe706 	br	2005b28 <__svfscanf_r+0xa50>
 2005b8c:	b009883a 	mov	r4,r22
 2005b90:	800b883a 	mov	r5,r16
 2005b94:	2002bf00 	call	2002bf0 <__srefill_r>
 2005b98:	103feb26 	beq	r2,zero,2005b48 <__svfscanf_r+0xa70>
 2005b9c:	003f8a06 	br	20059c8 <__svfscanf_r+0x8f0>
 2005ba0:	98000426 	beq	r19,zero,2005bb4 <__svfscanf_r+0xadc>
 2005ba4:	d880a317 	ldw	r2,652(sp)
 2005ba8:	9cffffc4 	addi	r19,r19,-1
 2005bac:	10800044 	addi	r2,r2,1
 2005bb0:	d880a315 	stw	r2,652(sp)
 2005bb4:	00bf1fc4 	movi	r2,-897
 2005bb8:	90a4703a 	and	r18,r18,r2
 2005bbc:	bdc00044 	addi	r23,r23,1
 2005bc0:	003fdb06 	br	2005b30 <__svfscanf_r+0xa58>
 2005bc4:	d900a317 	ldw	r4,652(sp)
 2005bc8:	ad41e014 	ori	r21,r21,1920
 2005bcc:	2000791e 	bne	r4,zero,2005db4 <__svfscanf_r+0xcdc>
 2005bd0:	d8c04404 	addi	r3,sp,272
 2005bd4:	d8c0a515 	stw	r3,660(sp)
 2005bd8:	182f883a 	mov	r23,r3
 2005bdc:	d8009c15 	stw	zero,624(sp)
 2005be0:	d8009d15 	stw	zero,628(sp)
 2005be4:	d8009f15 	stw	zero,636(sp)
 2005be8:	d8009e15 	stw	zero,632(sp)
 2005bec:	0039883a 	mov	fp,zero
 2005bf0:	e1003fcc 	andi	r4,fp,255
 2005bf4:	2100201c 	xori	r4,r4,128
 2005bf8:	213fe004 	addi	r4,r4,-128
 2005bfc:	20ffffc4 	addi	r3,r4,-1
 2005c00:	00800184 	movi	r2,6
 2005c04:	10c01736 	bltu	r2,r3,2005c64 <__svfscanf_r+0xb8c>
 2005c08:	00c00084 	movi	r3,2
 2005c0c:	19026d0e 	bge	r3,r4,20065c4 <__svfscanf_r+0x14ec>
 2005c10:	008000c4 	movi	r2,3
 2005c14:	1100130e 	bge	r2,r4,2005c64 <__svfscanf_r+0xb8c>
 2005c18:	e4ffffc4 	addi	r19,fp,-1
 2005c1c:	b825883a 	mov	r18,r23
 2005c20:	94bfffc4 	addi	r18,r18,-1
 2005c24:	91400007 	ldb	r5,0(r18)
 2005c28:	b009883a 	mov	r4,r22
 2005c2c:	800d883a 	mov	r6,r16
 2005c30:	200c9240 	call	200c924 <_ungetc_r>
 2005c34:	9cffffc4 	addi	r19,r19,-1
 2005c38:	98c03fcc 	andi	r3,r19,255
 2005c3c:	18c0201c 	xori	r3,r3,128
 2005c40:	18ffe004 	addi	r3,r3,-128
 2005c44:	00800084 	movi	r2,2
 2005c48:	18bff51e 	bne	r3,r2,2005c20 <__svfscanf_r+0xb48>
 2005c4c:	e0bfff04 	addi	r2,fp,-4
 2005c50:	10803fcc 	andi	r2,r2,255
 2005c54:	b887c83a 	sub	r3,r23,r2
 2005c58:	8885c83a 	sub	r2,r17,r2
 2005c5c:	147fffc4 	addi	r17,r2,-1
 2005c60:	1dffffc4 	addi	r23,r3,-1
 2005c64:	a880400c 	andi	r2,r21,256
 2005c68:	10001226 	beq	r2,zero,2005cb4 <__svfscanf_r+0xbdc>
 2005c6c:	a881000c 	andi	r2,r21,1024
 2005c70:	10002b1e 	bne	r2,zero,2005d20 <__svfscanf_r+0xc48>
 2005c74:	bdffffc4 	addi	r23,r23,-1
 2005c78:	b9400007 	ldb	r5,0(r23)
 2005c7c:	00801944 	movi	r2,101
 2005c80:	8c7fffc4 	addi	r17,r17,-1
 2005c84:	28800826 	beq	r5,r2,2005ca8 <__svfscanf_r+0xbd0>
 2005c88:	00801144 	movi	r2,69
 2005c8c:	28800626 	beq	r5,r2,2005ca8 <__svfscanf_r+0xbd0>
 2005c90:	bdffffc4 	addi	r23,r23,-1
 2005c94:	b009883a 	mov	r4,r22
 2005c98:	800d883a 	mov	r6,r16
 2005c9c:	200c9240 	call	200c924 <_ungetc_r>
 2005ca0:	b9400007 	ldb	r5,0(r23)
 2005ca4:	8c7fffc4 	addi	r17,r17,-1
 2005ca8:	b009883a 	mov	r4,r22
 2005cac:	800d883a 	mov	r6,r16
 2005cb0:	200c9240 	call	200c924 <_ungetc_r>
 2005cb4:	a880040c 	andi	r2,r21,16
 2005cb8:	103d1a1e 	bne	r2,zero,2005124 <__svfscanf_r+0x4c>
 2005cbc:	a8c1800c 	andi	r3,r21,1536
 2005cc0:	00810004 	movi	r2,1024
 2005cc4:	b8000005 	stb	zero,0(r23)
 2005cc8:	18813326 	beq	r3,r2,2006198 <__svfscanf_r+0x10c0>
 2005ccc:	d8809d17 	ldw	r2,628(sp)
 2005cd0:	1000251e 	bne	r2,zero,2005d68 <__svfscanf_r+0xc90>
 2005cd4:	d940a517 	ldw	r5,660(sp)
 2005cd8:	b009883a 	mov	r4,r22
 2005cdc:	000d883a 	mov	r6,zero
 2005ce0:	200a65c0 	call	200a65c <_strtod_r>
 2005ce4:	a900004c 	andi	r4,r21,1
 2005ce8:	2009003a 	cmpeq	r4,r4,zero
 2005cec:	1025883a 	mov	r18,r2
 2005cf0:	1827883a 	mov	r19,r3
 2005cf4:	2000141e 	bne	r4,zero,2005d48 <__svfscanf_r+0xc70>
 2005cf8:	d8c0a417 	ldw	r3,656(sp)
 2005cfc:	18800017 	ldw	r2,0(r3)
 2005d00:	1d400104 	addi	r21,r3,4
 2005d04:	14c00115 	stw	r19,4(r2)
 2005d08:	14800015 	stw	r18,0(r2)
 2005d0c:	d8c0a217 	ldw	r3,648(sp)
 2005d10:	dd40a415 	stw	r21,656(sp)
 2005d14:	18c00044 	addi	r3,r3,1
 2005d18:	d8c0a215 	stw	r3,648(sp)
 2005d1c:	003d0106 	br	2005124 <__svfscanf_r+0x4c>
 2005d20:	d900a517 	ldw	r4,660(sp)
 2005d24:	25fd212e 	bgeu	r4,r23,20051ac <__svfscanf_r+0xd4>
 2005d28:	bdffffc4 	addi	r23,r23,-1
 2005d2c:	b9400007 	ldb	r5,0(r23)
 2005d30:	b009883a 	mov	r4,r22
 2005d34:	800d883a 	mov	r6,r16
 2005d38:	200c9240 	call	200c924 <_ungetc_r>
 2005d3c:	d880a517 	ldw	r2,660(sp)
 2005d40:	15fff936 	bltu	r2,r23,2005d28 <__svfscanf_r+0xc50>
 2005d44:	003d1906 	br	20051ac <__svfscanf_r+0xd4>
 2005d48:	a880008c 	andi	r2,r21,2
 2005d4c:	10011926 	beq	r2,zero,20061b4 <__svfscanf_r+0x10dc>
 2005d50:	d900a417 	ldw	r4,656(sp)
 2005d54:	20800017 	ldw	r2,0(r4)
 2005d58:	25400104 	addi	r21,r4,4
 2005d5c:	10c00115 	stw	r3,4(r2)
 2005d60:	14800015 	stw	r18,0(r2)
 2005d64:	003fe906 	br	2005d0c <__svfscanf_r+0xc34>
 2005d68:	d8c09c17 	ldw	r3,624(sp)
 2005d6c:	b009883a 	mov	r4,r22
 2005d70:	000d883a 	mov	r6,zero
 2005d74:	19400044 	addi	r5,r3,1
 2005d78:	01c00284 	movi	r7,10
 2005d7c:	200bd680 	call	200bd68 <_strtol_r>
 2005d80:	d9009d17 	ldw	r4,628(sp)
 2005d84:	110dc83a 	sub	r6,r2,r4
 2005d88:	d8c0a517 	ldw	r3,660(sp)
 2005d8c:	d9009c17 	ldw	r4,624(sp)
 2005d90:	188054c4 	addi	r2,r3,339
 2005d94:	20800236 	bltu	r4,r2,2005da0 <__svfscanf_r+0xcc8>
 2005d98:	18805484 	addi	r2,r3,338
 2005d9c:	d8809c15 	stw	r2,624(sp)
 2005da0:	d9009c17 	ldw	r4,624(sp)
 2005da4:	01408074 	movhi	r5,513
 2005da8:	294e3d04 	addi	r5,r5,14580
 2005dac:	200a4840 	call	200a484 <sprintf>
 2005db0:	003fc806 	br	2005cd4 <__svfscanf_r+0xbfc>
 2005db4:	0027883a 	mov	r19,zero
 2005db8:	d8c04404 	addi	r3,sp,272
 2005dbc:	d8c0a515 	stw	r3,660(sp)
 2005dc0:	182f883a 	mov	r23,r3
 2005dc4:	d8009f15 	stw	zero,636(sp)
 2005dc8:	d8009e15 	stw	zero,632(sp)
 2005dcc:	d8009d15 	stw	zero,628(sp)
 2005dd0:	d8009c15 	stw	zero,624(sp)
 2005dd4:	0039883a 	mov	fp,zero
 2005dd8:	0025883a 	mov	r18,zero
 2005ddc:	80800017 	ldw	r2,0(r16)
 2005de0:	11400003 	ldbu	r5,0(r2)
 2005de4:	00801384 	movi	r2,78
 2005de8:	28fff544 	addi	r3,r5,-43
 2005dec:	18c03fcc 	andi	r3,r3,255
 2005df0:	10c08336 	bltu	r2,r3,2006000 <__svfscanf_r+0xf28>
 2005df4:	18c5883a 	add	r2,r3,r3
 2005df8:	1085883a 	add	r2,r2,r2
 2005dfc:	00c08034 	movhi	r3,512
 2005e00:	18d78404 	addi	r3,r3,24080
 2005e04:	10c5883a 	add	r2,r2,r3
 2005e08:	11000017 	ldw	r4,0(r2)
 2005e0c:	2000683a 	jmp	r4
 2005e10:	02005fb8 	rdprs	r8,zero,382
 2005e14:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e18:	02005fb8 	rdprs	r8,zero,382
 2005e1c:	02006044 	movi	r8,385
 2005e20:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e24:	020060b0 	cmpltui	r8,zero,386
 2005e28:	020060e4 	muli	r8,zero,387
 2005e2c:	020060e4 	muli	r8,zero,387
 2005e30:	020060e4 	muli	r8,zero,387
 2005e34:	020060e4 	muli	r8,zero,387
 2005e38:	020060e4 	muli	r8,zero,387
 2005e3c:	020060e4 	muli	r8,zero,387
 2005e40:	020060e4 	muli	r8,zero,387
 2005e44:	020060e4 	muli	r8,zero,387
 2005e48:	020060e4 	muli	r8,zero,387
 2005e4c:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e50:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e54:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e58:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e5c:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e60:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e64:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e68:	02006104 	movi	r8,388
 2005e6c:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e70:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e74:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e78:	02006114 	movui	r8,388
 2005e7c:	02006160 	cmpeqi	r8,zero,389
 2005e80:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e84:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e88:	02006238 	rdprs	r8,zero,392
 2005e8c:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e90:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e94:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e98:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005e9c:	020061e4 	muli	r8,zero,391
 2005ea0:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ea4:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ea8:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005eac:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005eb0:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005eb4:	02006278 	rdprs	r8,zero,393
 2005eb8:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ebc:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ec0:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ec4:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ec8:	0200617c 	xorhi	r8,zero,389
 2005ecc:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ed0:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ed4:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ed8:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005edc:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ee0:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ee4:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ee8:	02006104 	movi	r8,388
 2005eec:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ef0:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ef4:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005ef8:	02006114 	movui	r8,388
 2005efc:	02006160 	cmpeqi	r8,zero,389
 2005f00:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f04:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f08:	02006238 	rdprs	r8,zero,392
 2005f0c:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f10:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f14:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f18:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f1c:	020061e4 	muli	r8,zero,391
 2005f20:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f24:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f28:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f2c:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f30:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f34:	02006278 	rdprs	r8,zero,393
 2005f38:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f3c:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f40:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f44:	02006000 	call	200600 <__alt_mem_sdram-0x1dffa00>
 2005f48:	0200617c 	xorhi	r8,zero,389
 2005f4c:	a880040c 	andi	r2,r21,16
 2005f50:	10004826 	beq	r2,zero,2006074 <__svfscanf_r+0xf9c>
 2005f54:	0027883a 	mov	r19,zero
 2005f58:	00000b06 	br	2005f88 <__svfscanf_r+0xeb0>
 2005f5c:	80800017 	ldw	r2,0(r16)
 2005f60:	b009883a 	mov	r4,r22
 2005f64:	800b883a 	mov	r5,r16
 2005f68:	148d883a 	add	r6,r2,r18
 2005f6c:	81800015 	stw	r6,0(r16)
 2005f70:	9ca7883a 	add	r19,r19,r18
 2005f74:	2002bf00 	call	2002bf0 <__srefill_r>
 2005f78:	103dc61e 	bne	r2,zero,2005694 <__svfscanf_r+0x5bc>
 2005f7c:	d880a317 	ldw	r2,652(sp)
 2005f80:	1485c83a 	sub	r2,r2,r18
 2005f84:	d880a315 	stw	r2,652(sp)
 2005f88:	84800117 	ldw	r18,4(r16)
 2005f8c:	d900a317 	ldw	r4,652(sp)
 2005f90:	913ff216 	blt	r18,r4,2005f5c <__svfscanf_r+0xe84>
 2005f94:	d900a317 	ldw	r4,652(sp)
 2005f98:	80800017 	ldw	r2,0(r16)
 2005f9c:	9927883a 	add	r19,r19,r4
 2005fa0:	9107c83a 	sub	r3,r18,r4
 2005fa4:	110d883a 	add	r6,r2,r4
 2005fa8:	8ce3883a 	add	r17,r17,r19
 2005fac:	80c00115 	stw	r3,4(r16)
 2005fb0:	81800015 	stw	r6,0(r16)
 2005fb4:	003c5b06 	br	2005124 <__svfscanf_r+0x4c>
 2005fb8:	a880200c 	andi	r2,r21,128
 2005fbc:	10001026 	beq	r2,zero,2006000 <__svfscanf_r+0xf28>
 2005fc0:	00bfdfc4 	movi	r2,-129
 2005fc4:	a8aa703a 	and	r21,r21,r2
 2005fc8:	b9400005 	stb	r5,0(r23)
 2005fcc:	bdc00044 	addi	r23,r23,1
 2005fd0:	80c00117 	ldw	r3,4(r16)
 2005fd4:	8c400044 	addi	r17,r17,1
 2005fd8:	18bfffc4 	addi	r2,r3,-1
 2005fdc:	80800115 	stw	r2,4(r16)
 2005fe0:	00801f0e 	bge	zero,r2,2006060 <__svfscanf_r+0xf88>
 2005fe4:	80800017 	ldw	r2,0(r16)
 2005fe8:	10800044 	addi	r2,r2,1
 2005fec:	80800015 	stw	r2,0(r16)
 2005ff0:	d880a317 	ldw	r2,652(sp)
 2005ff4:	10bfffc4 	addi	r2,r2,-1
 2005ff8:	d880a315 	stw	r2,652(sp)
 2005ffc:	103f771e 	bne	r2,zero,2005ddc <__svfscanf_r+0xd04>
 2006000:	d8c09e17 	ldw	r3,632(sp)
 2006004:	18000226 	beq	r3,zero,2006010 <__svfscanf_r+0xf38>
 2006008:	00bfbfc4 	movi	r2,-257
 200600c:	a8aa703a 	and	r21,r21,r2
 2006010:	90ffffc4 	addi	r3,r18,-1
 2006014:	00800044 	movi	r2,1
 2006018:	10fef536 	bltu	r2,r3,2005bf0 <__svfscanf_r+0xb18>
 200601c:	d900a517 	ldw	r4,660(sp)
 2006020:	25fc622e 	bgeu	r4,r23,20051ac <__svfscanf_r+0xd4>
 2006024:	bdffffc4 	addi	r23,r23,-1
 2006028:	b9400007 	ldb	r5,0(r23)
 200602c:	b009883a 	mov	r4,r22
 2006030:	800d883a 	mov	r6,r16
 2006034:	200c9240 	call	200c924 <_ungetc_r>
 2006038:	d880a517 	ldw	r2,660(sp)
 200603c:	15fff936 	bltu	r2,r23,2006024 <__svfscanf_r+0xf4c>
 2006040:	003c5a06 	br	20051ac <__svfscanf_r+0xd4>
 2006044:	a880800c 	andi	r2,r21,512
 2006048:	103fed26 	beq	r2,zero,2006000 <__svfscanf_r+0xf28>
 200604c:	d9009e17 	ldw	r4,632(sp)
 2006050:	00bf5fc4 	movi	r2,-641
 2006054:	a8aa703a 	and	r21,r21,r2
 2006058:	d9009f15 	stw	r4,636(sp)
 200605c:	003fda06 	br	2005fc8 <__svfscanf_r+0xef0>
 2006060:	b009883a 	mov	r4,r22
 2006064:	800b883a 	mov	r5,r16
 2006068:	2002bf00 	call	2002bf0 <__srefill_r>
 200606c:	103fe026 	beq	r2,zero,2005ff0 <__svfscanf_r+0xf18>
 2006070:	003fe306 	br	2006000 <__svfscanf_r+0xf28>
 2006074:	d880a417 	ldw	r2,656(sp)
 2006078:	d980a317 	ldw	r6,652(sp)
 200607c:	01400044 	movi	r5,1
 2006080:	11000017 	ldw	r4,0(r2)
 2006084:	800f883a 	mov	r7,r16
 2006088:	20014580 	call	2001458 <fread>
 200608c:	103c6726 	beq	r2,zero,200522c <__svfscanf_r+0x154>
 2006090:	d8c0a417 	ldw	r3,656(sp)
 2006094:	d900a217 	ldw	r4,648(sp)
 2006098:	88a3883a 	add	r17,r17,r2
 200609c:	18c00104 	addi	r3,r3,4
 20060a0:	21000044 	addi	r4,r4,1
 20060a4:	d8c0a415 	stw	r3,656(sp)
 20060a8:	d900a215 	stw	r4,648(sp)
 20060ac:	003c1d06 	br	2005124 <__svfscanf_r+0x4c>
 20060b0:	a880400c 	andi	r2,r21,256
 20060b4:	10000b26 	beq	r2,zero,20060e4 <__svfscanf_r+0x100c>
 20060b8:	00bfdfc4 	movi	r2,-129
 20060bc:	a8aa703a 	and	r21,r21,r2
 20060c0:	d8809e17 	ldw	r2,632(sp)
 20060c4:	10800044 	addi	r2,r2,1
 20060c8:	d8809e15 	stw	r2,632(sp)
 20060cc:	983fc026 	beq	r19,zero,2005fd0 <__svfscanf_r+0xef8>
 20060d0:	d8c0a317 	ldw	r3,652(sp)
 20060d4:	9cffffc4 	addi	r19,r19,-1
 20060d8:	18c00044 	addi	r3,r3,1
 20060dc:	d8c0a315 	stw	r3,652(sp)
 20060e0:	003fbb06 	br	2005fd0 <__svfscanf_r+0xef8>
 20060e4:	e0803fcc 	andi	r2,fp,255
 20060e8:	1080201c 	xori	r2,r2,128
 20060ec:	10bfe004 	addi	r2,r2,-128
 20060f0:	9085883a 	add	r2,r18,r2
 20060f4:	103fc21e 	bne	r2,zero,2006000 <__svfscanf_r+0xf28>
 20060f8:	00bf9fc4 	movi	r2,-385
 20060fc:	a8aa703a 	and	r21,r21,r2
 2006100:	003fb106 	br	2005fc8 <__svfscanf_r+0xef0>
 2006104:	00800044 	movi	r2,1
 2006108:	90bfbd1e 	bne	r18,r2,2006000 <__svfscanf_r+0xf28>
 200610c:	04800084 	movi	r18,2
 2006110:	003fad06 	br	2005fc8 <__svfscanf_r+0xef0>
 2006114:	a8c1400c 	andi	r3,r21,1280
 2006118:	00810004 	movi	r2,1024
 200611c:	18800426 	beq	r3,r2,2006130 <__svfscanf_r+0x1058>
 2006120:	a884703a 	and	r2,r21,r2
 2006124:	103fb626 	beq	r2,zero,2006000 <__svfscanf_r+0xf28>
 2006128:	d8809e17 	ldw	r2,632(sp)
 200612c:	103fb826 	beq	r2,zero,2006010 <__svfscanf_r+0xf38>
 2006130:	a880800c 	andi	r2,r21,512
 2006134:	1000051e 	bne	r2,zero,200614c <__svfscanf_r+0x1074>
 2006138:	d8c09e17 	ldw	r3,632(sp)
 200613c:	d9009f17 	ldw	r4,636(sp)
 2006140:	ddc09c15 	stw	r23,624(sp)
 2006144:	1907c83a 	sub	r3,r3,r4
 2006148:	d8c09d15 	stw	r3,628(sp)
 200614c:	00be7fc4 	movi	r2,-1537
 2006150:	a884703a 	and	r2,r21,r2
 2006154:	15406014 	ori	r21,r2,384
 2006158:	d8009e15 	stw	zero,632(sp)
 200615c:	003f9a06 	br	2005fc8 <__svfscanf_r+0xef0>
 2006160:	e0c03fcc 	andi	r3,fp,255
 2006164:	18c0201c 	xori	r3,r3,128
 2006168:	18ffe004 	addi	r3,r3,-128
 200616c:	00800084 	movi	r2,2
 2006170:	18bfa31e 	bne	r3,r2,2006000 <__svfscanf_r+0xf28>
 2006174:	070000c4 	movi	fp,3
 2006178:	003f9306 	br	2005fc8 <__svfscanf_r+0xef0>
 200617c:	e0c03fcc 	andi	r3,fp,255
 2006180:	18c0201c 	xori	r3,r3,128
 2006184:	18ffe004 	addi	r3,r3,-128
 2006188:	008001c4 	movi	r2,7
 200618c:	18bf9c1e 	bne	r3,r2,2006000 <__svfscanf_r+0xf28>
 2006190:	07000204 	movi	fp,8
 2006194:	003f8c06 	br	2005fc8 <__svfscanf_r+0xef0>
 2006198:	d8c09e17 	ldw	r3,632(sp)
 200619c:	d9009f17 	ldw	r4,636(sp)
 20061a0:	1905c83a 	sub	r2,r3,r4
 20061a4:	103ecb26 	beq	r2,zero,2005cd4 <__svfscanf_r+0xbfc>
 20061a8:	008dc83a 	sub	r6,zero,r2
 20061ac:	ddc09c15 	stw	r23,624(sp)
 20061b0:	003ef506 	br	2005d88 <__svfscanf_r+0xcb0>
 20061b4:	d880a417 	ldw	r2,656(sp)
 20061b8:	9009883a 	mov	r4,r18
 20061bc:	180b883a 	mov	r5,r3
 20061c0:	15c00017 	ldw	r23,0(r2)
 20061c4:	15400104 	addi	r21,r2,4
 20061c8:	200a38c0 	call	200a38c <__isnand>
 20061cc:	1000311e 	bne	r2,zero,2006294 <__svfscanf_r+0x11bc>
 20061d0:	980b883a 	mov	r5,r19
 20061d4:	9009883a 	mov	r4,r18
 20061d8:	200f78c0 	call	200f78c <__truncdfsf2>
 20061dc:	b8800015 	stw	r2,0(r23)
 20061e0:	003eca06 	br	2005d0c <__svfscanf_r+0xc34>
 20061e4:	9000101e 	bne	r18,zero,2006228 <__svfscanf_r+0x1150>
 20061e8:	a8c1c00c 	andi	r3,r21,1792
 20061ec:	0081c004 	movi	r2,1792
 20061f0:	18800926 	beq	r3,r2,2006218 <__svfscanf_r+0x1140>
 20061f4:	e0c03fcc 	andi	r3,fp,255
 20061f8:	18c0201c 	xori	r3,r3,128
 20061fc:	18ffe004 	addi	r3,r3,-128
 2006200:	00800044 	movi	r2,1
 2006204:	18800226 	beq	r3,r2,2006210 <__svfscanf_r+0x1138>
 2006208:	00800104 	movi	r2,4
 200620c:	18bf7c1e 	bne	r3,r2,2006000 <__svfscanf_r+0xf28>
 2006210:	e7000044 	addi	fp,fp,1
 2006214:	003f6c06 	br	2005fc8 <__svfscanf_r+0xef0>
 2006218:	00be1fc4 	movi	r2,-1921
 200621c:	a8aa703a 	and	r21,r21,r2
 2006220:	04800044 	movi	r18,1
 2006224:	003f6806 	br	2005fc8 <__svfscanf_r+0xef0>
 2006228:	00800084 	movi	r2,2
 200622c:	90bff11e 	bne	r18,r2,20061f4 <__svfscanf_r+0x111c>
 2006230:	048000c4 	movi	r18,3
 2006234:	003f6406 	br	2005fc8 <__svfscanf_r+0xef0>
 2006238:	e0c03fcc 	andi	r3,fp,255
 200623c:	18c0201c 	xori	r3,r3,128
 2006240:	18ffe004 	addi	r3,r3,-128
 2006244:	1800071e 	bne	r3,zero,2006264 <__svfscanf_r+0x118c>
 2006248:	a8c1c00c 	andi	r3,r21,1792
 200624c:	0081c004 	movi	r2,1792
 2006250:	18bf6b1e 	bne	r3,r2,2006000 <__svfscanf_r+0xf28>
 2006254:	00be1fc4 	movi	r2,-1921
 2006258:	a8aa703a 	and	r21,r21,r2
 200625c:	07000044 	movi	fp,1
 2006260:	003f5906 	br	2005fc8 <__svfscanf_r+0xef0>
 2006264:	008000c4 	movi	r2,3
 2006268:	18bfe926 	beq	r3,r2,2006210 <__svfscanf_r+0x1138>
 200626c:	00800144 	movi	r2,5
 2006270:	18bfe726 	beq	r3,r2,2006210 <__svfscanf_r+0x1138>
 2006274:	003f6206 	br	2006000 <__svfscanf_r+0xf28>
 2006278:	e0c03fcc 	andi	r3,fp,255
 200627c:	18c0201c 	xori	r3,r3,128
 2006280:	18ffe004 	addi	r3,r3,-128
 2006284:	00800184 	movi	r2,6
 2006288:	18bf5d1e 	bne	r3,r2,2006000 <__svfscanf_r+0xf28>
 200628c:	070001c4 	movi	fp,7
 2006290:	003f4d06 	br	2005fc8 <__svfscanf_r+0xef0>
 2006294:	0009883a 	mov	r4,zero
 2006298:	200a47c0 	call	200a47c <nanf>
 200629c:	b8800015 	stw	r2,0(r23)
 20062a0:	003e9a06 	br	2005d0c <__svfscanf_r+0xc34>
 20062a4:	a00b883a 	mov	r5,r20
 20062a8:	d9000404 	addi	r4,sp,16
 20062ac:	200a3bc0 	call	200a3bc <__sccl>
 20062b0:	1029883a 	mov	r20,r2
 20062b4:	ad401014 	ori	r21,r21,64
 20062b8:	04800044 	movi	r18,1
 20062bc:	003c7506 	br	2005494 <__svfscanf_r+0x3bc>
 20062c0:	01000204 	movi	r4,8
 20062c4:	00808074 	movhi	r2,513
 20062c8:	10b0bd04 	addi	r2,r2,-15628
 20062cc:	ad400054 	ori	r21,r21,1
 20062d0:	048000c4 	movi	r18,3
 20062d4:	d900a115 	stw	r4,644(sp)
 20062d8:	d880a015 	stw	r2,640(sp)
 20062dc:	003c6d06 	br	2005494 <__svfscanf_r+0x3bc>
 20062e0:	ad400094 	ori	r21,r21,2
 20062e4:	003bd806 	br	2005248 <__svfscanf_r+0x170>
 20062e8:	d900a317 	ldw	r4,652(sp)
 20062ec:	01400284 	movi	r5,10
 20062f0:	2000abc0 	call	2000abc <__mulsi3>
 20062f4:	15c5883a 	add	r2,r2,r23
 20062f8:	10bff404 	addi	r2,r2,-48
 20062fc:	d880a315 	stw	r2,652(sp)
 2006300:	003bd106 	br	2005248 <__svfscanf_r+0x170>
 2006304:	ad400414 	ori	r21,r21,16
 2006308:	003bcf06 	br	2005248 <__svfscanf_r+0x170>
 200630c:	00800404 	movi	r2,16
 2006310:	00c08074 	movhi	r3,513
 2006314:	18f0bd04 	addi	r3,r3,-15628
 2006318:	ad408014 	ori	r21,r21,512
 200631c:	048000c4 	movi	r18,3
 2006320:	d880a115 	stw	r2,644(sp)
 2006324:	d8c0a015 	stw	r3,640(sp)
 2006328:	003c5a06 	br	2005494 <__svfscanf_r+0x3bc>
 200632c:	00c00284 	movi	r3,10
 2006330:	01008074 	movhi	r4,513
 2006334:	2130bd04 	addi	r4,r4,-15628
 2006338:	048000c4 	movi	r18,3
 200633c:	d8c0a115 	stw	r3,644(sp)
 2006340:	d900a015 	stw	r4,640(sp)
 2006344:	003c5306 	br	2005494 <__svfscanf_r+0x3bc>
 2006348:	00c08074 	movhi	r3,513
 200634c:	18ef5a04 	addi	r3,r3,-17048
 2006350:	048000c4 	movi	r18,3
 2006354:	d8c0a015 	stw	r3,640(sp)
 2006358:	d800a115 	stw	zero,644(sp)
 200635c:	003c4d06 	br	2005494 <__svfscanf_r+0x3bc>
 2006360:	d8c0a117 	ldw	r3,644(sp)
 2006364:	18c5883a 	add	r2,r3,r3
 2006368:	00c08074 	movhi	r3,513
 200636c:	18ce3f04 	addi	r3,r3,14588
 2006370:	10c5883a 	add	r2,r2,r3
 2006374:	1080000f 	ldh	r2,0(r2)
 2006378:	00fd1fc4 	movi	r3,-2945
 200637c:	90e4703a 	and	r18,r18,r3
 2006380:	d880a115 	stw	r2,644(sp)
 2006384:	003de806 	br	2005b28 <__svfscanf_r+0xa50>
 2006388:	d900a117 	ldw	r4,644(sp)
 200638c:	00c08074 	movhi	r3,513
 2006390:	18ce3f04 	addi	r3,r3,14588
 2006394:	2105883a 	add	r2,r4,r4
 2006398:	10c5883a 	add	r2,r2,r3
 200639c:	1080000f 	ldh	r2,0(r2)
 20063a0:	00c00204 	movi	r3,8
 20063a4:	d880a115 	stw	r2,644(sp)
 20063a8:	18bd870e 	bge	r3,r2,20059c8 <__svfscanf_r+0x8f0>
 20063ac:	00bd1fc4 	movi	r2,-2945
 20063b0:	90a4703a 	and	r18,r18,r2
 20063b4:	003ddc06 	br	2005b28 <__svfscanf_r+0xa50>
 20063b8:	d8c0a117 	ldw	r3,644(sp)
 20063bc:	00800284 	movi	r2,10
 20063c0:	10fffa16 	blt	r2,r3,20063ac <__svfscanf_r+0x12d4>
 20063c4:	003d8006 	br	20059c8 <__svfscanf_r+0x8f0>
 20063c8:	90c1800c 	andi	r3,r18,1536
 20063cc:	00808004 	movi	r2,512
 20063d0:	18bd7d1e 	bne	r3,r2,20059c8 <__svfscanf_r+0x8f0>
 20063d4:	00bf7fc4 	movi	r2,-513
 20063d8:	9084703a 	and	r2,r18,r2
 20063dc:	01000404 	movi	r4,16
 20063e0:	14814014 	ori	r18,r2,1280
 20063e4:	d900a115 	stw	r4,644(sp)
 20063e8:	003dcf06 	br	2005b28 <__svfscanf_r+0xa50>
 20063ec:	04800104 	movi	r18,4
 20063f0:	003c2806 	br	2005494 <__svfscanf_r+0x3bc>
 20063f4:	ad401014 	ori	r21,r21,64
 20063f8:	0025883a 	mov	r18,zero
 20063fc:	003c2506 	br	2005494 <__svfscanf_r+0x3bc>
 2006400:	ad400114 	ori	r21,r21,4
 2006404:	003b9006 	br	2005248 <__svfscanf_r+0x170>
 2006408:	0027883a 	mov	r19,zero
 200640c:	003cac06 	br	20056c0 <__svfscanf_r+0x5e8>
 2006410:	903d5226 	beq	r18,zero,200595c <__svfscanf_r+0x884>
 2006414:	94bfffc4 	addi	r18,r18,-1
 2006418:	d8c04404 	addi	r3,sp,272
 200641c:	1c85883a 	add	r2,r3,r18
 2006420:	11400003 	ldbu	r5,0(r2)
 2006424:	b009883a 	mov	r4,r22
 2006428:	800d883a 	mov	r6,r16
 200642c:	200c9240 	call	200c924 <_ungetc_r>
 2006430:	003ff706 	br	2006410 <__svfscanf_r+0x1338>
 2006434:	00bfff84 	movi	r2,-2
 2006438:	18bd361e 	bne	r3,r2,2005914 <__svfscanf_r+0x83c>
 200643c:	003d4006 	br	2005940 <__svfscanf_r+0x868>
 2006440:	d900a417 	ldw	r4,656(sp)
 2006444:	25400017 	ldw	r21,0(r4)
 2006448:	21000104 	addi	r4,r4,4
 200644c:	d900a415 	stw	r4,656(sp)
 2006450:	003d0606 	br	200586c <__svfscanf_r+0x794>
 2006454:	983b5526 	beq	r19,zero,20051ac <__svfscanf_r+0xd4>
 2006458:	8ce3883a 	add	r17,r17,r19
 200645c:	003b3106 	br	2005124 <__svfscanf_r+0x4c>
 2006460:	00bfff84 	movi	r2,-2
 2006464:	18bc621e 	bne	r3,r2,20055f0 <__svfscanf_r+0x518>
 2006468:	003c6906 	br	2005610 <__svfscanf_r+0x538>
 200646c:	b009883a 	mov	r4,r22
 2006470:	800b883a 	mov	r5,r16
 2006474:	2002bf00 	call	2002bf0 <__srefill_r>
 2006478:	103c6726 	beq	r2,zero,2005618 <__svfscanf_r+0x540>
 200647c:	903b6b1e 	bne	r18,zero,200522c <__svfscanf_r+0x154>
 2006480:	a83b281e 	bne	r21,zero,2005124 <__svfscanf_r+0x4c>
 2006484:	d8c0a217 	ldw	r3,648(sp)
 2006488:	18c00044 	addi	r3,r3,1
 200648c:	d8c0a215 	stw	r3,648(sp)
 2006490:	003b2406 	br	2005124 <__svfscanf_r+0x4c>
 2006494:	8080030b 	ldhu	r2,12(r16)
 2006498:	1080100c 	andi	r2,r2,64
 200649c:	103b4326 	beq	r2,zero,20051ac <__svfscanf_r+0xd4>
 20064a0:	003b6406 	br	2005234 <__svfscanf_r+0x15c>
 20064a4:	d8c0a417 	ldw	r3,656(sp)
 20064a8:	1cc00017 	ldw	r19,0(r3)
 20064ac:	18c00104 	addi	r3,r3,4
 20064b0:	d8c0a415 	stw	r3,656(sp)
 20064b4:	003c2906 	br	200555c <__svfscanf_r+0x484>
 20064b8:	00800204 	movi	r2,8
 20064bc:	00c08074 	movhi	r3,513
 20064c0:	18f0bd04 	addi	r3,r3,-15628
 20064c4:	048000c4 	movi	r18,3
 20064c8:	d880a115 	stw	r2,644(sp)
 20064cc:	d8c0a015 	stw	r3,640(sp)
 20064d0:	003bf006 	br	2005494 <__svfscanf_r+0x3bc>
 20064d4:	04800084 	movi	r18,2
 20064d8:	003bee06 	br	2005494 <__svfscanf_r+0x3bc>
 20064dc:	01000404 	movi	r4,16
 20064e0:	00808074 	movhi	r2,513
 20064e4:	10b0bd04 	addi	r2,r2,-15628
 20064e8:	ad408814 	ori	r21,r21,544
 20064ec:	048000c4 	movi	r18,3
 20064f0:	d900a115 	stw	r4,644(sp)
 20064f4:	d880a015 	stw	r2,640(sp)
 20064f8:	003be606 	br	2005494 <__svfscanf_r+0x3bc>
 20064fc:	a880040c 	andi	r2,r21,16
 2006500:	103b081e 	bne	r2,zero,2005124 <__svfscanf_r+0x4c>
 2006504:	a880010c 	andi	r2,r21,4
 2006508:	10004e26 	beq	r2,zero,2006644 <__svfscanf_r+0x156c>
 200650c:	d8c0a417 	ldw	r3,656(sp)
 2006510:	18800017 	ldw	r2,0(r3)
 2006514:	18c00104 	addi	r3,r3,4
 2006518:	d8c0a415 	stw	r3,656(sp)
 200651c:	1440000d 	sth	r17,0(r2)
 2006520:	003b0006 	br	2005124 <__svfscanf_r+0x4c>
 2006524:	d880a417 	ldw	r2,656(sp)
 2006528:	dd400404 	addi	r21,sp,16
 200652c:	14800017 	ldw	r18,0(r2)
 2006530:	9027883a 	mov	r19,r18
 2006534:	81000017 	ldw	r4,0(r16)
 2006538:	20800003 	ldbu	r2,0(r4)
 200653c:	a885883a 	add	r2,r21,r2
 2006540:	10c00007 	ldb	r3,0(r2)
 2006544:	18001426 	beq	r3,zero,2006598 <__svfscanf_r+0x14c0>
 2006548:	d8c0a317 	ldw	r3,652(sp)
 200654c:	80800117 	ldw	r2,4(r16)
 2006550:	21800044 	addi	r6,r4,1
 2006554:	18ffffc4 	addi	r3,r3,-1
 2006558:	d8c0a315 	stw	r3,652(sp)
 200655c:	10ffffc4 	addi	r3,r2,-1
 2006560:	80c00115 	stw	r3,4(r16)
 2006564:	20800003 	ldbu	r2,0(r4)
 2006568:	90800005 	stb	r2,0(r18)
 200656c:	d900a317 	ldw	r4,652(sp)
 2006570:	81800015 	stw	r6,0(r16)
 2006574:	94800044 	addi	r18,r18,1
 2006578:	20000726 	beq	r4,zero,2006598 <__svfscanf_r+0x14c0>
 200657c:	80800117 	ldw	r2,4(r16)
 2006580:	00bfec16 	blt	zero,r2,2006534 <__svfscanf_r+0x145c>
 2006584:	b009883a 	mov	r4,r22
 2006588:	800b883a 	mov	r5,r16
 200658c:	2002bf00 	call	2002bf0 <__srefill_r>
 2006590:	103fe826 	beq	r2,zero,2006534 <__svfscanf_r+0x145c>
 2006594:	9cbb2526 	beq	r19,r18,200522c <__svfscanf_r+0x154>
 2006598:	94e7c83a 	sub	r19,r18,r19
 200659c:	983b0326 	beq	r19,zero,20051ac <__svfscanf_r+0xd4>
 20065a0:	90000005 	stb	zero,0(r18)
 20065a4:	d880a417 	ldw	r2,656(sp)
 20065a8:	d8c0a217 	ldw	r3,648(sp)
 20065ac:	8ce3883a 	add	r17,r17,r19
 20065b0:	10800104 	addi	r2,r2,4
 20065b4:	18c00044 	addi	r3,r3,1
 20065b8:	d880a415 	stw	r2,656(sp)
 20065bc:	d8c0a215 	stw	r3,648(sp)
 20065c0:	003ad806 	br	2005124 <__svfscanf_r+0x4c>
 20065c4:	d900a517 	ldw	r4,660(sp)
 20065c8:	25faf82e 	bgeu	r4,r23,20051ac <__svfscanf_r+0xd4>
 20065cc:	bdffffc4 	addi	r23,r23,-1
 20065d0:	b9400007 	ldb	r5,0(r23)
 20065d4:	b009883a 	mov	r4,r22
 20065d8:	800d883a 	mov	r6,r16
 20065dc:	200c9240 	call	200c924 <_ungetc_r>
 20065e0:	d8c0a517 	ldw	r3,660(sp)
 20065e4:	1dfff936 	bltu	r3,r23,20065cc <__svfscanf_r+0x14f4>
 20065e8:	003af006 	br	20051ac <__svfscanf_r+0xd4>
 20065ec:	a880040c 	andi	r2,r21,16
 20065f0:	10002d26 	beq	r2,zero,20066a8 <__svfscanf_r+0x15d0>
 20065f4:	0025883a 	mov	r18,zero
 20065f8:	00000906 	br	2006620 <__svfscanf_r+0x1548>
 20065fc:	80c00117 	ldw	r3,4(r16)
 2006600:	d880a317 	ldw	r2,652(sp)
 2006604:	29800044 	addi	r6,r5,1
 2006608:	18ffffc4 	addi	r3,r3,-1
 200660c:	94800044 	addi	r18,r18,1
 2006610:	81800015 	stw	r6,0(r16)
 2006614:	80c00115 	stw	r3,4(r16)
 2006618:	14800826 	beq	r2,r18,200663c <__svfscanf_r+0x1564>
 200661c:	00c0120e 	bge	zero,r3,2006668 <__svfscanf_r+0x1590>
 2006620:	81400017 	ldw	r5,0(r16)
 2006624:	98800017 	ldw	r2,0(r19)
 2006628:	28c00003 	ldbu	r3,0(r5)
 200662c:	1887883a 	add	r3,r3,r2
 2006630:	19000003 	ldbu	r4,0(r3)
 2006634:	2100020c 	andi	r4,r4,8
 2006638:	203ff026 	beq	r4,zero,20065fc <__svfscanf_r+0x1524>
 200663c:	8ca3883a 	add	r17,r17,r18
 2006640:	003ab806 	br	2005124 <__svfscanf_r+0x4c>
 2006644:	a880004c 	andi	r2,r21,1
 2006648:	1005003a 	cmpeq	r2,r2,zero
 200664c:	10000b1e 	bne	r2,zero,200667c <__svfscanf_r+0x15a4>
 2006650:	d900a417 	ldw	r4,656(sp)
 2006654:	20800017 	ldw	r2,0(r4)
 2006658:	21000104 	addi	r4,r4,4
 200665c:	d900a415 	stw	r4,656(sp)
 2006660:	14400015 	stw	r17,0(r2)
 2006664:	003aaf06 	br	2005124 <__svfscanf_r+0x4c>
 2006668:	b009883a 	mov	r4,r22
 200666c:	800b883a 	mov	r5,r16
 2006670:	2002bf00 	call	2002bf0 <__srefill_r>
 2006674:	103fea26 	beq	r2,zero,2006620 <__svfscanf_r+0x1548>
 2006678:	003ff006 	br	200663c <__svfscanf_r+0x1564>
 200667c:	a880008c 	andi	r2,r21,2
 2006680:	10002c26 	beq	r2,zero,2006734 <__svfscanf_r+0x165c>
 2006684:	d8c0a417 	ldw	r3,656(sp)
 2006688:	d900a417 	ldw	r4,656(sp)
 200668c:	18800017 	ldw	r2,0(r3)
 2006690:	8807d7fa 	srai	r3,r17,31
 2006694:	21000104 	addi	r4,r4,4
 2006698:	d900a415 	stw	r4,656(sp)
 200669c:	14400015 	stw	r17,0(r2)
 20066a0:	10c00115 	stw	r3,4(r2)
 20066a4:	003a9f06 	br	2005124 <__svfscanf_r+0x4c>
 20066a8:	d8c0a417 	ldw	r3,656(sp)
 20066ac:	1d400017 	ldw	r21,0(r3)
 20066b0:	a825883a 	mov	r18,r21
 20066b4:	00000e06 	br	20066f0 <__svfscanf_r+0x1618>
 20066b8:	80800117 	ldw	r2,4(r16)
 20066bc:	d900a317 	ldw	r4,652(sp)
 20066c0:	29800044 	addi	r6,r5,1
 20066c4:	10ffffc4 	addi	r3,r2,-1
 20066c8:	213fffc4 	addi	r4,r4,-1
 20066cc:	d900a315 	stw	r4,652(sp)
 20066d0:	80c00115 	stw	r3,4(r16)
 20066d4:	28800003 	ldbu	r2,0(r5)
 20066d8:	90800005 	stb	r2,0(r18)
 20066dc:	81800015 	stw	r6,0(r16)
 20066e0:	94800044 	addi	r18,r18,1
 20066e4:	20000926 	beq	r4,zero,200670c <__svfscanf_r+0x1634>
 20066e8:	80800117 	ldw	r2,4(r16)
 20066ec:	0080170e 	bge	zero,r2,200674c <__svfscanf_r+0x1674>
 20066f0:	81400017 	ldw	r5,0(r16)
 20066f4:	98800017 	ldw	r2,0(r19)
 20066f8:	28c00003 	ldbu	r3,0(r5)
 20066fc:	1887883a 	add	r3,r3,r2
 2006700:	19000003 	ldbu	r4,0(r3)
 2006704:	2100020c 	andi	r4,r4,8
 2006708:	203feb26 	beq	r4,zero,20066b8 <__svfscanf_r+0x15e0>
 200670c:	9545c83a 	sub	r2,r18,r21
 2006710:	d8c0a217 	ldw	r3,648(sp)
 2006714:	88a3883a 	add	r17,r17,r2
 2006718:	d880a417 	ldw	r2,656(sp)
 200671c:	18c00044 	addi	r3,r3,1
 2006720:	d8c0a215 	stw	r3,648(sp)
 2006724:	10800104 	addi	r2,r2,4
 2006728:	d880a415 	stw	r2,656(sp)
 200672c:	90000005 	stb	zero,0(r18)
 2006730:	003a7c06 	br	2005124 <__svfscanf_r+0x4c>
 2006734:	d8c0a417 	ldw	r3,656(sp)
 2006738:	18800017 	ldw	r2,0(r3)
 200673c:	18c00104 	addi	r3,r3,4
 2006740:	d8c0a415 	stw	r3,656(sp)
 2006744:	14400015 	stw	r17,0(r2)
 2006748:	003a7606 	br	2005124 <__svfscanf_r+0x4c>
 200674c:	b009883a 	mov	r4,r22
 2006750:	800b883a 	mov	r5,r16
 2006754:	2002bf00 	call	2002bf0 <__srefill_r>
 2006758:	103fe526 	beq	r2,zero,20066f0 <__svfscanf_r+0x1618>
 200675c:	003feb06 	br	200670c <__svfscanf_r+0x1634>

02006760 <__svfscanf>:
 2006760:	00808074 	movhi	r2,513
 2006764:	10968904 	addi	r2,r2,23076
 2006768:	2013883a 	mov	r9,r4
 200676c:	11000017 	ldw	r4,0(r2)
 2006770:	2805883a 	mov	r2,r5
 2006774:	300f883a 	mov	r7,r6
 2006778:	480b883a 	mov	r5,r9
 200677c:	100d883a 	mov	r6,r2
 2006780:	20050d81 	jmpi	20050d8 <__svfscanf_r>

02006784 <_vfscanf_r>:
 2006784:	defffb04 	addi	sp,sp,-20
 2006788:	dcc00315 	stw	r19,12(sp)
 200678c:	dc800215 	stw	r18,8(sp)
 2006790:	dc400115 	stw	r17,4(sp)
 2006794:	dc000015 	stw	r16,0(sp)
 2006798:	dfc00415 	stw	ra,16(sp)
 200679c:	2021883a 	mov	r16,r4
 20067a0:	2823883a 	mov	r17,r5
 20067a4:	3025883a 	mov	r18,r6
 20067a8:	3827883a 	mov	r19,r7
 20067ac:	20000226 	beq	r4,zero,20067b8 <_vfscanf_r+0x34>
 20067b0:	20800e17 	ldw	r2,56(r4)
 20067b4:	10000b26 	beq	r2,zero,20067e4 <_vfscanf_r+0x60>
 20067b8:	8009883a 	mov	r4,r16
 20067bc:	880b883a 	mov	r5,r17
 20067c0:	900d883a 	mov	r6,r18
 20067c4:	980f883a 	mov	r7,r19
 20067c8:	dfc00417 	ldw	ra,16(sp)
 20067cc:	dcc00317 	ldw	r19,12(sp)
 20067d0:	dc800217 	ldw	r18,8(sp)
 20067d4:	dc400117 	ldw	r17,4(sp)
 20067d8:	dc000017 	ldw	r16,0(sp)
 20067dc:	dec00504 	addi	sp,sp,20
 20067e0:	20050d81 	jmpi	20050d8 <__svfscanf_r>
 20067e4:	2000eb00 	call	2000eb0 <__sinit>
 20067e8:	003ff306 	br	20067b8 <_vfscanf_r+0x34>

020067ec <vfscanf>:
 20067ec:	defffb04 	addi	sp,sp,-20
 20067f0:	dcc00315 	stw	r19,12(sp)
 20067f4:	04c08074 	movhi	r19,513
 20067f8:	9cd68904 	addi	r19,r19,23076
 20067fc:	98c00017 	ldw	r3,0(r19)
 2006800:	dc800215 	stw	r18,8(sp)
 2006804:	dc400115 	stw	r17,4(sp)
 2006808:	dc000015 	stw	r16,0(sp)
 200680c:	dfc00415 	stw	ra,16(sp)
 2006810:	2021883a 	mov	r16,r4
 2006814:	2823883a 	mov	r17,r5
 2006818:	3025883a 	mov	r18,r6
 200681c:	18000326 	beq	r3,zero,200682c <vfscanf+0x40>
 2006820:	18800e17 	ldw	r2,56(r3)
 2006824:	1809883a 	mov	r4,r3
 2006828:	10000b26 	beq	r2,zero,2006858 <vfscanf+0x6c>
 200682c:	99000017 	ldw	r4,0(r19)
 2006830:	800b883a 	mov	r5,r16
 2006834:	880d883a 	mov	r6,r17
 2006838:	900f883a 	mov	r7,r18
 200683c:	dfc00417 	ldw	ra,16(sp)
 2006840:	dcc00317 	ldw	r19,12(sp)
 2006844:	dc800217 	ldw	r18,8(sp)
 2006848:	dc400117 	ldw	r17,4(sp)
 200684c:	dc000017 	ldw	r16,0(sp)
 2006850:	dec00504 	addi	sp,sp,20
 2006854:	20050d81 	jmpi	20050d8 <__svfscanf_r>
 2006858:	2000eb00 	call	2000eb0 <__sinit>
 200685c:	003ff306 	br	200682c <vfscanf+0x40>

02006860 <_write_r>:
 2006860:	defffd04 	addi	sp,sp,-12
 2006864:	dc000015 	stw	r16,0(sp)
 2006868:	04008074 	movhi	r16,513
 200686c:	841d6a04 	addi	r16,r16,30120
 2006870:	dc400115 	stw	r17,4(sp)
 2006874:	80000015 	stw	zero,0(r16)
 2006878:	2023883a 	mov	r17,r4
 200687c:	2809883a 	mov	r4,r5
 2006880:	300b883a 	mov	r5,r6
 2006884:	380d883a 	mov	r6,r7
 2006888:	dfc00215 	stw	ra,8(sp)
 200688c:	2010fe00 	call	2010fe0 <write>
 2006890:	1007883a 	mov	r3,r2
 2006894:	00bfffc4 	movi	r2,-1
 2006898:	18800626 	beq	r3,r2,20068b4 <_write_r+0x54>
 200689c:	1805883a 	mov	r2,r3
 20068a0:	dfc00217 	ldw	ra,8(sp)
 20068a4:	dc400117 	ldw	r17,4(sp)
 20068a8:	dc000017 	ldw	r16,0(sp)
 20068ac:	dec00304 	addi	sp,sp,12
 20068b0:	f800283a 	ret
 20068b4:	80800017 	ldw	r2,0(r16)
 20068b8:	103ff826 	beq	r2,zero,200689c <_write_r+0x3c>
 20068bc:	88800015 	stw	r2,0(r17)
 20068c0:	1805883a 	mov	r2,r3
 20068c4:	dfc00217 	ldw	ra,8(sp)
 20068c8:	dc400117 	ldw	r17,4(sp)
 20068cc:	dc000017 	ldw	r16,0(sp)
 20068d0:	dec00304 	addi	sp,sp,12
 20068d4:	f800283a 	ret

020068d8 <__swsetup_r>:
 20068d8:	00808074 	movhi	r2,513
 20068dc:	10968904 	addi	r2,r2,23076
 20068e0:	10c00017 	ldw	r3,0(r2)
 20068e4:	defffd04 	addi	sp,sp,-12
 20068e8:	dc400115 	stw	r17,4(sp)
 20068ec:	dc000015 	stw	r16,0(sp)
 20068f0:	dfc00215 	stw	ra,8(sp)
 20068f4:	2023883a 	mov	r17,r4
 20068f8:	2821883a 	mov	r16,r5
 20068fc:	18000226 	beq	r3,zero,2006908 <__swsetup_r+0x30>
 2006900:	18800e17 	ldw	r2,56(r3)
 2006904:	10001f26 	beq	r2,zero,2006984 <__swsetup_r+0xac>
 2006908:	8100030b 	ldhu	r4,12(r16)
 200690c:	2080020c 	andi	r2,r4,8
 2006910:	10002826 	beq	r2,zero,20069b4 <__swsetup_r+0xdc>
 2006914:	81400417 	ldw	r5,16(r16)
 2006918:	28001d26 	beq	r5,zero,2006990 <__swsetup_r+0xb8>
 200691c:	2080004c 	andi	r2,r4,1
 2006920:	1005003a 	cmpeq	r2,r2,zero
 2006924:	10000b26 	beq	r2,zero,2006954 <__swsetup_r+0x7c>
 2006928:	2080008c 	andi	r2,r4,2
 200692c:	10001226 	beq	r2,zero,2006978 <__swsetup_r+0xa0>
 2006930:	0005883a 	mov	r2,zero
 2006934:	80800215 	stw	r2,8(r16)
 2006938:	28000b26 	beq	r5,zero,2006968 <__swsetup_r+0x90>
 200693c:	0005883a 	mov	r2,zero
 2006940:	dfc00217 	ldw	ra,8(sp)
 2006944:	dc400117 	ldw	r17,4(sp)
 2006948:	dc000017 	ldw	r16,0(sp)
 200694c:	dec00304 	addi	sp,sp,12
 2006950:	f800283a 	ret
 2006954:	80800517 	ldw	r2,20(r16)
 2006958:	80000215 	stw	zero,8(r16)
 200695c:	0085c83a 	sub	r2,zero,r2
 2006960:	80800615 	stw	r2,24(r16)
 2006964:	283ff51e 	bne	r5,zero,200693c <__swsetup_r+0x64>
 2006968:	2080200c 	andi	r2,r4,128
 200696c:	103ff326 	beq	r2,zero,200693c <__swsetup_r+0x64>
 2006970:	00bfffc4 	movi	r2,-1
 2006974:	003ff206 	br	2006940 <__swsetup_r+0x68>
 2006978:	80800517 	ldw	r2,20(r16)
 200697c:	80800215 	stw	r2,8(r16)
 2006980:	003fed06 	br	2006938 <__swsetup_r+0x60>
 2006984:	1809883a 	mov	r4,r3
 2006988:	2000eb00 	call	2000eb0 <__sinit>
 200698c:	003fde06 	br	2006908 <__swsetup_r+0x30>
 2006990:	20c0a00c 	andi	r3,r4,640
 2006994:	00808004 	movi	r2,512
 2006998:	18bfe026 	beq	r3,r2,200691c <__swsetup_r+0x44>
 200699c:	8809883a 	mov	r4,r17
 20069a0:	800b883a 	mov	r5,r16
 20069a4:	20020180 	call	2002018 <__smakebuf_r>
 20069a8:	8100030b 	ldhu	r4,12(r16)
 20069ac:	81400417 	ldw	r5,16(r16)
 20069b0:	003fda06 	br	200691c <__swsetup_r+0x44>
 20069b4:	2080040c 	andi	r2,r4,16
 20069b8:	103fed26 	beq	r2,zero,2006970 <__swsetup_r+0x98>
 20069bc:	2080010c 	andi	r2,r4,4
 20069c0:	10001226 	beq	r2,zero,2006a0c <__swsetup_r+0x134>
 20069c4:	81400c17 	ldw	r5,48(r16)
 20069c8:	28000526 	beq	r5,zero,20069e0 <__swsetup_r+0x108>
 20069cc:	80801004 	addi	r2,r16,64
 20069d0:	28800226 	beq	r5,r2,20069dc <__swsetup_r+0x104>
 20069d4:	8809883a 	mov	r4,r17
 20069d8:	20015c40 	call	20015c4 <_free_r>
 20069dc:	80000c15 	stw	zero,48(r16)
 20069e0:	8080030b 	ldhu	r2,12(r16)
 20069e4:	81400417 	ldw	r5,16(r16)
 20069e8:	80000115 	stw	zero,4(r16)
 20069ec:	10bff6cc 	andi	r2,r2,65499
 20069f0:	8080030d 	sth	r2,12(r16)
 20069f4:	81400015 	stw	r5,0(r16)
 20069f8:	8080030b 	ldhu	r2,12(r16)
 20069fc:	10800214 	ori	r2,r2,8
 2006a00:	113fffcc 	andi	r4,r2,65535
 2006a04:	8080030d 	sth	r2,12(r16)
 2006a08:	003fc306 	br	2006918 <__swsetup_r+0x40>
 2006a0c:	81400417 	ldw	r5,16(r16)
 2006a10:	003ff906 	br	20069f8 <__swsetup_r+0x120>

02006a14 <_close_r>:
 2006a14:	defffd04 	addi	sp,sp,-12
 2006a18:	dc000015 	stw	r16,0(sp)
 2006a1c:	04008074 	movhi	r16,513
 2006a20:	841d6a04 	addi	r16,r16,30120
 2006a24:	dc400115 	stw	r17,4(sp)
 2006a28:	80000015 	stw	zero,0(r16)
 2006a2c:	2023883a 	mov	r17,r4
 2006a30:	2809883a 	mov	r4,r5
 2006a34:	dfc00215 	stw	ra,8(sp)
 2006a38:	20103700 	call	2010370 <close>
 2006a3c:	1007883a 	mov	r3,r2
 2006a40:	00bfffc4 	movi	r2,-1
 2006a44:	18800626 	beq	r3,r2,2006a60 <_close_r+0x4c>
 2006a48:	1805883a 	mov	r2,r3
 2006a4c:	dfc00217 	ldw	ra,8(sp)
 2006a50:	dc400117 	ldw	r17,4(sp)
 2006a54:	dc000017 	ldw	r16,0(sp)
 2006a58:	dec00304 	addi	sp,sp,12
 2006a5c:	f800283a 	ret
 2006a60:	80800017 	ldw	r2,0(r16)
 2006a64:	103ff826 	beq	r2,zero,2006a48 <_close_r+0x34>
 2006a68:	88800015 	stw	r2,0(r17)
 2006a6c:	1805883a 	mov	r2,r3
 2006a70:	dfc00217 	ldw	ra,8(sp)
 2006a74:	dc400117 	ldw	r17,4(sp)
 2006a78:	dc000017 	ldw	r16,0(sp)
 2006a7c:	dec00304 	addi	sp,sp,12
 2006a80:	f800283a 	ret

02006a84 <quorem>:
 2006a84:	28c00417 	ldw	r3,16(r5)
 2006a88:	20800417 	ldw	r2,16(r4)
 2006a8c:	defff104 	addi	sp,sp,-60
 2006a90:	dfc00e15 	stw	ra,56(sp)
 2006a94:	df000d15 	stw	fp,52(sp)
 2006a98:	ddc00c15 	stw	r23,48(sp)
 2006a9c:	dd800b15 	stw	r22,44(sp)
 2006aa0:	dd400a15 	stw	r21,40(sp)
 2006aa4:	dd000915 	stw	r20,36(sp)
 2006aa8:	dcc00815 	stw	r19,32(sp)
 2006aac:	dc800715 	stw	r18,28(sp)
 2006ab0:	dc400615 	stw	r17,24(sp)
 2006ab4:	dc000515 	stw	r16,20(sp)
 2006ab8:	d9000315 	stw	r4,12(sp)
 2006abc:	d9400415 	stw	r5,16(sp)
 2006ac0:	10c07f16 	blt	r2,r3,2006cc0 <quorem+0x23c>
 2006ac4:	1d3fffc4 	addi	r20,r3,-1
 2006ac8:	d8c00417 	ldw	r3,16(sp)
 2006acc:	d9000317 	ldw	r4,12(sp)
 2006ad0:	a505883a 	add	r2,r20,r20
 2006ad4:	1085883a 	add	r2,r2,r2
 2006ad8:	1cc00504 	addi	r19,r3,20
 2006adc:	25c00504 	addi	r23,r4,20
 2006ae0:	98ad883a 	add	r22,r19,r2
 2006ae4:	15c7883a 	add	r3,r2,r23
 2006ae8:	b1400017 	ldw	r5,0(r22)
 2006aec:	19000017 	ldw	r4,0(r3)
 2006af0:	d8c00015 	stw	r3,0(sp)
 2006af4:	29400044 	addi	r5,r5,1
 2006af8:	d9000215 	stw	r4,8(sp)
 2006afc:	200fad00 	call	200fad0 <__udivsi3>
 2006b00:	1039883a 	mov	fp,r2
 2006b04:	10003d1e 	bne	r2,zero,2006bfc <quorem+0x178>
 2006b08:	d9400417 	ldw	r5,16(sp)
 2006b0c:	d9000317 	ldw	r4,12(sp)
 2006b10:	2008db00 	call	2008db0 <__mcmp>
 2006b14:	10002c16 	blt	r2,zero,2006bc8 <quorem+0x144>
 2006b18:	e7000044 	addi	fp,fp,1
 2006b1c:	b80f883a 	mov	r7,r23
 2006b20:	0011883a 	mov	r8,zero
 2006b24:	0009883a 	mov	r4,zero
 2006b28:	99400017 	ldw	r5,0(r19)
 2006b2c:	38c00017 	ldw	r3,0(r7)
 2006b30:	9cc00104 	addi	r19,r19,4
 2006b34:	28bfffcc 	andi	r2,r5,65535
 2006b38:	2085883a 	add	r2,r4,r2
 2006b3c:	11bfffcc 	andi	r6,r2,65535
 2006b40:	193fffcc 	andi	r4,r3,65535
 2006b44:	1004d43a 	srli	r2,r2,16
 2006b48:	280ad43a 	srli	r5,r5,16
 2006b4c:	2189c83a 	sub	r4,r4,r6
 2006b50:	2209883a 	add	r4,r4,r8
 2006b54:	1806d43a 	srli	r3,r3,16
 2006b58:	288b883a 	add	r5,r5,r2
 2006b5c:	200dd43a 	srai	r6,r4,16
 2006b60:	28bfffcc 	andi	r2,r5,65535
 2006b64:	1887c83a 	sub	r3,r3,r2
 2006b68:	1987883a 	add	r3,r3,r6
 2006b6c:	3900000d 	sth	r4,0(r7)
 2006b70:	38c0008d 	sth	r3,2(r7)
 2006b74:	2808d43a 	srli	r4,r5,16
 2006b78:	39c00104 	addi	r7,r7,4
 2006b7c:	1811d43a 	srai	r8,r3,16
 2006b80:	b4ffe92e 	bgeu	r22,r19,2006b28 <quorem+0xa4>
 2006b84:	a505883a 	add	r2,r20,r20
 2006b88:	1085883a 	add	r2,r2,r2
 2006b8c:	b885883a 	add	r2,r23,r2
 2006b90:	10c00017 	ldw	r3,0(r2)
 2006b94:	18000c1e 	bne	r3,zero,2006bc8 <quorem+0x144>
 2006b98:	113fff04 	addi	r4,r2,-4
 2006b9c:	b900082e 	bgeu	r23,r4,2006bc0 <quorem+0x13c>
 2006ba0:	10bfff17 	ldw	r2,-4(r2)
 2006ba4:	10000326 	beq	r2,zero,2006bb4 <quorem+0x130>
 2006ba8:	00000506 	br	2006bc0 <quorem+0x13c>
 2006bac:	20800017 	ldw	r2,0(r4)
 2006bb0:	1000031e 	bne	r2,zero,2006bc0 <quorem+0x13c>
 2006bb4:	213fff04 	addi	r4,r4,-4
 2006bb8:	a53fffc4 	addi	r20,r20,-1
 2006bbc:	b93ffb36 	bltu	r23,r4,2006bac <quorem+0x128>
 2006bc0:	d9000317 	ldw	r4,12(sp)
 2006bc4:	25000415 	stw	r20,16(r4)
 2006bc8:	e005883a 	mov	r2,fp
 2006bcc:	dfc00e17 	ldw	ra,56(sp)
 2006bd0:	df000d17 	ldw	fp,52(sp)
 2006bd4:	ddc00c17 	ldw	r23,48(sp)
 2006bd8:	dd800b17 	ldw	r22,44(sp)
 2006bdc:	dd400a17 	ldw	r21,40(sp)
 2006be0:	dd000917 	ldw	r20,36(sp)
 2006be4:	dcc00817 	ldw	r19,32(sp)
 2006be8:	dc800717 	ldw	r18,28(sp)
 2006bec:	dc400617 	ldw	r17,24(sp)
 2006bf0:	dc000517 	ldw	r16,20(sp)
 2006bf4:	dec00f04 	addi	sp,sp,60
 2006bf8:	f800283a 	ret
 2006bfc:	b823883a 	mov	r17,r23
 2006c00:	9825883a 	mov	r18,r19
 2006c04:	d8000115 	stw	zero,4(sp)
 2006c08:	002b883a 	mov	r21,zero
 2006c0c:	94000017 	ldw	r16,0(r18)
 2006c10:	e009883a 	mov	r4,fp
 2006c14:	94800104 	addi	r18,r18,4
 2006c18:	817fffcc 	andi	r5,r16,65535
 2006c1c:	2000abc0 	call	2000abc <__mulsi3>
 2006c20:	800ad43a 	srli	r5,r16,16
 2006c24:	e009883a 	mov	r4,fp
 2006c28:	a8a1883a 	add	r16,r21,r2
 2006c2c:	2000abc0 	call	2000abc <__mulsi3>
 2006c30:	89000017 	ldw	r4,0(r17)
 2006c34:	80ffffcc 	andi	r3,r16,65535
 2006c38:	8020d43a 	srli	r16,r16,16
 2006c3c:	217fffcc 	andi	r5,r4,65535
 2006c40:	28cbc83a 	sub	r5,r5,r3
 2006c44:	d8c00117 	ldw	r3,4(sp)
 2006c48:	2008d43a 	srli	r4,r4,16
 2006c4c:	1405883a 	add	r2,r2,r16
 2006c50:	28cb883a 	add	r5,r5,r3
 2006c54:	280dd43a 	srai	r6,r5,16
 2006c58:	10ffffcc 	andi	r3,r2,65535
 2006c5c:	20c9c83a 	sub	r4,r4,r3
 2006c60:	2189883a 	add	r4,r4,r6
 2006c64:	8900008d 	sth	r4,2(r17)
 2006c68:	2009d43a 	srai	r4,r4,16
 2006c6c:	8940000d 	sth	r5,0(r17)
 2006c70:	102ad43a 	srli	r21,r2,16
 2006c74:	8c400104 	addi	r17,r17,4
 2006c78:	d9000115 	stw	r4,4(sp)
 2006c7c:	b4bfe32e 	bgeu	r22,r18,2006c0c <quorem+0x188>
 2006c80:	d9000217 	ldw	r4,8(sp)
 2006c84:	203fa01e 	bne	r4,zero,2006b08 <quorem+0x84>
 2006c88:	d8800017 	ldw	r2,0(sp)
 2006c8c:	10ffff04 	addi	r3,r2,-4
 2006c90:	b8c0082e 	bgeu	r23,r3,2006cb4 <quorem+0x230>
 2006c94:	10bfff17 	ldw	r2,-4(r2)
 2006c98:	10000326 	beq	r2,zero,2006ca8 <quorem+0x224>
 2006c9c:	00000506 	br	2006cb4 <quorem+0x230>
 2006ca0:	18800017 	ldw	r2,0(r3)
 2006ca4:	1000031e 	bne	r2,zero,2006cb4 <quorem+0x230>
 2006ca8:	18ffff04 	addi	r3,r3,-4
 2006cac:	a53fffc4 	addi	r20,r20,-1
 2006cb0:	b8fffb36 	bltu	r23,r3,2006ca0 <quorem+0x21c>
 2006cb4:	d8c00317 	ldw	r3,12(sp)
 2006cb8:	1d000415 	stw	r20,16(r3)
 2006cbc:	003f9206 	br	2006b08 <quorem+0x84>
 2006cc0:	0005883a 	mov	r2,zero
 2006cc4:	003fc106 	br	2006bcc <quorem+0x148>

02006cc8 <_dtoa_r>:
 2006cc8:	22001017 	ldw	r8,64(r4)
 2006ccc:	deffda04 	addi	sp,sp,-152
 2006cd0:	dd402115 	stw	r21,132(sp)
 2006cd4:	dd002015 	stw	r20,128(sp)
 2006cd8:	dc801e15 	stw	r18,120(sp)
 2006cdc:	dc401d15 	stw	r17,116(sp)
 2006ce0:	dfc02515 	stw	ra,148(sp)
 2006ce4:	df002415 	stw	fp,144(sp)
 2006ce8:	ddc02315 	stw	r23,140(sp)
 2006cec:	dd802215 	stw	r22,136(sp)
 2006cf0:	dcc01f15 	stw	r19,124(sp)
 2006cf4:	dc001c15 	stw	r16,112(sp)
 2006cf8:	d9001615 	stw	r4,88(sp)
 2006cfc:	3023883a 	mov	r17,r6
 2006d00:	2829883a 	mov	r20,r5
 2006d04:	d9c01715 	stw	r7,92(sp)
 2006d08:	dc802817 	ldw	r18,160(sp)
 2006d0c:	302b883a 	mov	r21,r6
 2006d10:	40000a26 	beq	r8,zero,2006d3c <_dtoa_r+0x74>
 2006d14:	20801117 	ldw	r2,68(r4)
 2006d18:	400b883a 	mov	r5,r8
 2006d1c:	40800115 	stw	r2,4(r8)
 2006d20:	20c01117 	ldw	r3,68(r4)
 2006d24:	00800044 	movi	r2,1
 2006d28:	10c4983a 	sll	r2,r2,r3
 2006d2c:	40800215 	stw	r2,8(r8)
 2006d30:	2008c540 	call	2008c54 <_Bfree>
 2006d34:	d8c01617 	ldw	r3,88(sp)
 2006d38:	18001015 	stw	zero,64(r3)
 2006d3c:	8800a316 	blt	r17,zero,2006fcc <_dtoa_r+0x304>
 2006d40:	90000015 	stw	zero,0(r18)
 2006d44:	a8dffc2c 	andhi	r3,r21,32752
 2006d48:	009ffc34 	movhi	r2,32752
 2006d4c:	18809126 	beq	r3,r2,2006f94 <_dtoa_r+0x2cc>
 2006d50:	000d883a 	mov	r6,zero
 2006d54:	000f883a 	mov	r7,zero
 2006d58:	a009883a 	mov	r4,r20
 2006d5c:	a80b883a 	mov	r5,r21
 2006d60:	dd001215 	stw	r20,72(sp)
 2006d64:	dd401315 	stw	r21,76(sp)
 2006d68:	200f3140 	call	200f314 <__nedf2>
 2006d6c:	1000171e 	bne	r2,zero,2006dcc <_dtoa_r+0x104>
 2006d70:	d9802717 	ldw	r6,156(sp)
 2006d74:	00800044 	movi	r2,1
 2006d78:	30800015 	stw	r2,0(r6)
 2006d7c:	d8802917 	ldw	r2,164(sp)
 2006d80:	10029b26 	beq	r2,zero,20077f0 <_dtoa_r+0xb28>
 2006d84:	d9002917 	ldw	r4,164(sp)
 2006d88:	00808074 	movhi	r2,513
 2006d8c:	108e3444 	addi	r2,r2,14545
 2006d90:	10ffffc4 	addi	r3,r2,-1
 2006d94:	20800015 	stw	r2,0(r4)
 2006d98:	1805883a 	mov	r2,r3
 2006d9c:	dfc02517 	ldw	ra,148(sp)
 2006da0:	df002417 	ldw	fp,144(sp)
 2006da4:	ddc02317 	ldw	r23,140(sp)
 2006da8:	dd802217 	ldw	r22,136(sp)
 2006dac:	dd402117 	ldw	r21,132(sp)
 2006db0:	dd002017 	ldw	r20,128(sp)
 2006db4:	dcc01f17 	ldw	r19,124(sp)
 2006db8:	dc801e17 	ldw	r18,120(sp)
 2006dbc:	dc401d17 	ldw	r17,116(sp)
 2006dc0:	dc001c17 	ldw	r16,112(sp)
 2006dc4:	dec02604 	addi	sp,sp,152
 2006dc8:	f800283a 	ret
 2006dcc:	d9001617 	ldw	r4,88(sp)
 2006dd0:	d9401217 	ldw	r5,72(sp)
 2006dd4:	d8800104 	addi	r2,sp,4
 2006dd8:	a80d883a 	mov	r6,r21
 2006ddc:	d9c00204 	addi	r7,sp,8
 2006de0:	d8800015 	stw	r2,0(sp)
 2006de4:	20092900 	call	2009290 <__d2b>
 2006de8:	d8800715 	stw	r2,28(sp)
 2006dec:	a804d53a 	srli	r2,r21,20
 2006df0:	1101ffcc 	andi	r4,r2,2047
 2006df4:	20008626 	beq	r4,zero,2007010 <_dtoa_r+0x348>
 2006df8:	d8c01217 	ldw	r3,72(sp)
 2006dfc:	00800434 	movhi	r2,16
 2006e00:	10bfffc4 	addi	r2,r2,-1
 2006e04:	ddc00117 	ldw	r23,4(sp)
 2006e08:	a884703a 	and	r2,r21,r2
 2006e0c:	1811883a 	mov	r8,r3
 2006e10:	124ffc34 	orhi	r9,r2,16368
 2006e14:	25bf0044 	addi	r22,r4,-1023
 2006e18:	d8000815 	stw	zero,32(sp)
 2006e1c:	0005883a 	mov	r2,zero
 2006e20:	00cffe34 	movhi	r3,16376
 2006e24:	480b883a 	mov	r5,r9
 2006e28:	4009883a 	mov	r4,r8
 2006e2c:	180f883a 	mov	r7,r3
 2006e30:	100d883a 	mov	r6,r2
 2006e34:	200eb7c0 	call	200eb7c <__subdf3>
 2006e38:	0218dbf4 	movhi	r8,25455
 2006e3c:	4210d844 	addi	r8,r8,17249
 2006e40:	024ff4f4 	movhi	r9,16339
 2006e44:	4a61e9c4 	addi	r9,r9,-30809
 2006e48:	480f883a 	mov	r7,r9
 2006e4c:	400d883a 	mov	r6,r8
 2006e50:	180b883a 	mov	r5,r3
 2006e54:	1009883a 	mov	r4,r2
 2006e58:	200ec700 	call	200ec70 <__muldf3>
 2006e5c:	0222d874 	movhi	r8,35681
 2006e60:	42322cc4 	addi	r8,r8,-14157
 2006e64:	024ff1f4 	movhi	r9,16327
 2006e68:	4a628a04 	addi	r9,r9,-30168
 2006e6c:	480f883a 	mov	r7,r9
 2006e70:	400d883a 	mov	r6,r8
 2006e74:	180b883a 	mov	r5,r3
 2006e78:	1009883a 	mov	r4,r2
 2006e7c:	200ebfc0 	call	200ebfc <__adddf3>
 2006e80:	b009883a 	mov	r4,r22
 2006e84:	1021883a 	mov	r16,r2
 2006e88:	1823883a 	mov	r17,r3
 2006e8c:	200f5bc0 	call	200f5bc <__floatsidf>
 2006e90:	021427f4 	movhi	r8,20639
 2006e94:	421e7ec4 	addi	r8,r8,31227
 2006e98:	024ff4f4 	movhi	r9,16339
 2006e9c:	4a5104c4 	addi	r9,r9,17427
 2006ea0:	480f883a 	mov	r7,r9
 2006ea4:	400d883a 	mov	r6,r8
 2006ea8:	180b883a 	mov	r5,r3
 2006eac:	1009883a 	mov	r4,r2
 2006eb0:	200ec700 	call	200ec70 <__muldf3>
 2006eb4:	180f883a 	mov	r7,r3
 2006eb8:	880b883a 	mov	r5,r17
 2006ebc:	100d883a 	mov	r6,r2
 2006ec0:	8009883a 	mov	r4,r16
 2006ec4:	200ebfc0 	call	200ebfc <__adddf3>
 2006ec8:	1009883a 	mov	r4,r2
 2006ecc:	180b883a 	mov	r5,r3
 2006ed0:	1021883a 	mov	r16,r2
 2006ed4:	1823883a 	mov	r17,r3
 2006ed8:	200f6b40 	call	200f6b4 <__fixdfsi>
 2006edc:	000d883a 	mov	r6,zero
 2006ee0:	000f883a 	mov	r7,zero
 2006ee4:	8009883a 	mov	r4,r16
 2006ee8:	880b883a 	mov	r5,r17
 2006eec:	d8800d15 	stw	r2,52(sp)
 2006ef0:	200f4ac0 	call	200f4ac <__ltdf2>
 2006ef4:	10031716 	blt	r2,zero,2007b54 <_dtoa_r+0xe8c>
 2006ef8:	d8c00d17 	ldw	r3,52(sp)
 2006efc:	00800584 	movi	r2,22
 2006f00:	10c1482e 	bgeu	r2,r3,2007424 <_dtoa_r+0x75c>
 2006f04:	01000044 	movi	r4,1
 2006f08:	d9000c15 	stw	r4,48(sp)
 2006f0c:	bd85c83a 	sub	r2,r23,r22
 2006f10:	11bfffc4 	addi	r6,r2,-1
 2006f14:	30030b16 	blt	r6,zero,2007b44 <_dtoa_r+0xe7c>
 2006f18:	d9800a15 	stw	r6,40(sp)
 2006f1c:	d8001115 	stw	zero,68(sp)
 2006f20:	d8c00d17 	ldw	r3,52(sp)
 2006f24:	1802ff16 	blt	r3,zero,2007b24 <_dtoa_r+0xe5c>
 2006f28:	d9000a17 	ldw	r4,40(sp)
 2006f2c:	d8c00915 	stw	r3,36(sp)
 2006f30:	d8001015 	stw	zero,64(sp)
 2006f34:	20c9883a 	add	r4,r4,r3
 2006f38:	d9000a15 	stw	r4,40(sp)
 2006f3c:	d9001717 	ldw	r4,92(sp)
 2006f40:	00800244 	movi	r2,9
 2006f44:	11004636 	bltu	r2,r4,2007060 <_dtoa_r+0x398>
 2006f48:	00800144 	movi	r2,5
 2006f4c:	11020416 	blt	r2,r4,2007760 <_dtoa_r+0xa98>
 2006f50:	04400044 	movi	r17,1
 2006f54:	d8c01717 	ldw	r3,92(sp)
 2006f58:	00800144 	movi	r2,5
 2006f5c:	10c1ed36 	bltu	r2,r3,2007714 <_dtoa_r+0xa4c>
 2006f60:	18c5883a 	add	r2,r3,r3
 2006f64:	1085883a 	add	r2,r2,r2
 2006f68:	00c08034 	movhi	r3,512
 2006f6c:	18dbdf04 	addi	r3,r3,28540
 2006f70:	10c5883a 	add	r2,r2,r3
 2006f74:	11000017 	ldw	r4,0(r2)
 2006f78:	2000683a 	jmp	r4
 2006f7c:	02007068 	cmpgeui	r8,zero,449
 2006f80:	02007068 	cmpgeui	r8,zero,449
 2006f84:	02007a68 	cmpgeui	r8,zero,489
 2006f88:	02007a40 	call	2007a4 <__alt_mem_sdram-0x1dff85c>
 2006f8c:	02007a84 	movi	r8,490
 2006f90:	02007a90 	cmplti	r8,zero,490
 2006f94:	d9002717 	ldw	r4,156(sp)
 2006f98:	0089c3c4 	movi	r2,9999
 2006f9c:	20800015 	stw	r2,0(r4)
 2006fa0:	a0001026 	beq	r20,zero,2006fe4 <_dtoa_r+0x31c>
 2006fa4:	00c08074 	movhi	r3,513
 2006fa8:	18ceec04 	addi	r3,r3,15280
 2006fac:	d9802917 	ldw	r6,164(sp)
 2006fb0:	303f7926 	beq	r6,zero,2006d98 <_dtoa_r+0xd0>
 2006fb4:	188000c7 	ldb	r2,3(r3)
 2006fb8:	190000c4 	addi	r4,r3,3
 2006fbc:	1000101e 	bne	r2,zero,2007000 <_dtoa_r+0x338>
 2006fc0:	d8802917 	ldw	r2,164(sp)
 2006fc4:	11000015 	stw	r4,0(r2)
 2006fc8:	003f7306 	br	2006d98 <_dtoa_r+0xd0>
 2006fcc:	00a00034 	movhi	r2,32768
 2006fd0:	10bfffc4 	addi	r2,r2,-1
 2006fd4:	00c00044 	movi	r3,1
 2006fd8:	88aa703a 	and	r21,r17,r2
 2006fdc:	90c00015 	stw	r3,0(r18)
 2006fe0:	003f5806 	br	2006d44 <_dtoa_r+0x7c>
 2006fe4:	00800434 	movhi	r2,16
 2006fe8:	10bfffc4 	addi	r2,r2,-1
 2006fec:	a884703a 	and	r2,r21,r2
 2006ff0:	103fec1e 	bne	r2,zero,2006fa4 <_dtoa_r+0x2dc>
 2006ff4:	00c08074 	movhi	r3,513
 2006ff8:	18cee904 	addi	r3,r3,15268
 2006ffc:	003feb06 	br	2006fac <_dtoa_r+0x2e4>
 2007000:	d8802917 	ldw	r2,164(sp)
 2007004:	19000204 	addi	r4,r3,8
 2007008:	11000015 	stw	r4,0(r2)
 200700c:	003f6206 	br	2006d98 <_dtoa_r+0xd0>
 2007010:	ddc00117 	ldw	r23,4(sp)
 2007014:	d8800217 	ldw	r2,8(sp)
 2007018:	01000804 	movi	r4,32
 200701c:	b8c10c84 	addi	r3,r23,1074
 2007020:	18a3883a 	add	r17,r3,r2
 2007024:	2441b80e 	bge	r4,r17,2007708 <_dtoa_r+0xa40>
 2007028:	00c01004 	movi	r3,64
 200702c:	1c47c83a 	sub	r3,r3,r17
 2007030:	88bff804 	addi	r2,r17,-32
 2007034:	a8c6983a 	sll	r3,r21,r3
 2007038:	a084d83a 	srl	r2,r20,r2
 200703c:	1888b03a 	or	r4,r3,r2
 2007040:	200f8000 	call	200f800 <__floatunsidf>
 2007044:	1011883a 	mov	r8,r2
 2007048:	00bf8434 	movhi	r2,65040
 200704c:	01000044 	movi	r4,1
 2007050:	10d3883a 	add	r9,r2,r3
 2007054:	8dbef344 	addi	r22,r17,-1075
 2007058:	d9000815 	stw	r4,32(sp)
 200705c:	003f6f06 	br	2006e1c <_dtoa_r+0x154>
 2007060:	d8001715 	stw	zero,92(sp)
 2007064:	04400044 	movi	r17,1
 2007068:	00bfffc4 	movi	r2,-1
 200706c:	00c00044 	movi	r3,1
 2007070:	d8800e15 	stw	r2,56(sp)
 2007074:	d8002615 	stw	zero,152(sp)
 2007078:	d8800f15 	stw	r2,60(sp)
 200707c:	d8c00b15 	stw	r3,44(sp)
 2007080:	1021883a 	mov	r16,r2
 2007084:	d8801617 	ldw	r2,88(sp)
 2007088:	10001115 	stw	zero,68(r2)
 200708c:	d8801617 	ldw	r2,88(sp)
 2007090:	11401117 	ldw	r5,68(r2)
 2007094:	1009883a 	mov	r4,r2
 2007098:	20091d40 	call	20091d4 <_Balloc>
 200709c:	d8c01617 	ldw	r3,88(sp)
 20070a0:	d8800515 	stw	r2,20(sp)
 20070a4:	18801015 	stw	r2,64(r3)
 20070a8:	00800384 	movi	r2,14
 20070ac:	14006836 	bltu	r2,r16,2007250 <_dtoa_r+0x588>
 20070b0:	8805003a 	cmpeq	r2,r17,zero
 20070b4:	1000661e 	bne	r2,zero,2007250 <_dtoa_r+0x588>
 20070b8:	d9000d17 	ldw	r4,52(sp)
 20070bc:	0102300e 	bge	zero,r4,2007980 <_dtoa_r+0xcb8>
 20070c0:	208003cc 	andi	r2,r4,15
 20070c4:	100490fa 	slli	r2,r2,3
 20070c8:	2025d13a 	srai	r18,r4,4
 20070cc:	00c08074 	movhi	r3,513
 20070d0:	18cefd04 	addi	r3,r3,15348
 20070d4:	10c5883a 	add	r2,r2,r3
 20070d8:	90c0040c 	andi	r3,r18,16
 20070dc:	14000017 	ldw	r16,0(r2)
 20070e0:	14400117 	ldw	r17,4(r2)
 20070e4:	18036a1e 	bne	r3,zero,2007e90 <_dtoa_r+0x11c8>
 20070e8:	05800084 	movi	r22,2
 20070ec:	90001026 	beq	r18,zero,2007130 <_dtoa_r+0x468>
 20070f0:	04c08074 	movhi	r19,513
 20070f4:	9ccf2f04 	addi	r19,r19,15548
 20070f8:	9080004c 	andi	r2,r18,1
 20070fc:	1005003a 	cmpeq	r2,r2,zero
 2007100:	1000081e 	bne	r2,zero,2007124 <_dtoa_r+0x45c>
 2007104:	99800017 	ldw	r6,0(r19)
 2007108:	99c00117 	ldw	r7,4(r19)
 200710c:	880b883a 	mov	r5,r17
 2007110:	8009883a 	mov	r4,r16
 2007114:	200ec700 	call	200ec70 <__muldf3>
 2007118:	1021883a 	mov	r16,r2
 200711c:	b5800044 	addi	r22,r22,1
 2007120:	1823883a 	mov	r17,r3
 2007124:	9025d07a 	srai	r18,r18,1
 2007128:	9cc00204 	addi	r19,r19,8
 200712c:	903ff21e 	bne	r18,zero,20070f8 <_dtoa_r+0x430>
 2007130:	a80b883a 	mov	r5,r21
 2007134:	a009883a 	mov	r4,r20
 2007138:	880f883a 	mov	r7,r17
 200713c:	800d883a 	mov	r6,r16
 2007140:	200f0340 	call	200f034 <__divdf3>
 2007144:	1029883a 	mov	r20,r2
 2007148:	182b883a 	mov	r21,r3
 200714c:	d8c00c17 	ldw	r3,48(sp)
 2007150:	1805003a 	cmpeq	r2,r3,zero
 2007154:	1000081e 	bne	r2,zero,2007178 <_dtoa_r+0x4b0>
 2007158:	0005883a 	mov	r2,zero
 200715c:	00cffc34 	movhi	r3,16368
 2007160:	180f883a 	mov	r7,r3
 2007164:	a009883a 	mov	r4,r20
 2007168:	a80b883a 	mov	r5,r21
 200716c:	100d883a 	mov	r6,r2
 2007170:	200f4ac0 	call	200f4ac <__ltdf2>
 2007174:	1003fe16 	blt	r2,zero,2008170 <_dtoa_r+0x14a8>
 2007178:	b009883a 	mov	r4,r22
 200717c:	200f5bc0 	call	200f5bc <__floatsidf>
 2007180:	180b883a 	mov	r5,r3
 2007184:	1009883a 	mov	r4,r2
 2007188:	a00d883a 	mov	r6,r20
 200718c:	a80f883a 	mov	r7,r21
 2007190:	200ec700 	call	200ec70 <__muldf3>
 2007194:	0011883a 	mov	r8,zero
 2007198:	02500734 	movhi	r9,16412
 200719c:	1009883a 	mov	r4,r2
 20071a0:	180b883a 	mov	r5,r3
 20071a4:	480f883a 	mov	r7,r9
 20071a8:	400d883a 	mov	r6,r8
 20071ac:	200ebfc0 	call	200ebfc <__adddf3>
 20071b0:	d9000f17 	ldw	r4,60(sp)
 20071b4:	102d883a 	mov	r22,r2
 20071b8:	00bf3034 	movhi	r2,64704
 20071bc:	18b9883a 	add	fp,r3,r2
 20071c0:	e02f883a 	mov	r23,fp
 20071c4:	20028f1e 	bne	r4,zero,2007c04 <_dtoa_r+0xf3c>
 20071c8:	0005883a 	mov	r2,zero
 20071cc:	00d00534 	movhi	r3,16404
 20071d0:	a009883a 	mov	r4,r20
 20071d4:	a80b883a 	mov	r5,r21
 20071d8:	180f883a 	mov	r7,r3
 20071dc:	100d883a 	mov	r6,r2
 20071e0:	200eb7c0 	call	200eb7c <__subdf3>
 20071e4:	1009883a 	mov	r4,r2
 20071e8:	e00f883a 	mov	r7,fp
 20071ec:	180b883a 	mov	r5,r3
 20071f0:	b00d883a 	mov	r6,r22
 20071f4:	1025883a 	mov	r18,r2
 20071f8:	1827883a 	mov	r19,r3
 20071fc:	200f39c0 	call	200f39c <__gtdf2>
 2007200:	00834f16 	blt	zero,r2,2007f40 <_dtoa_r+0x1278>
 2007204:	e0e0003c 	xorhi	r3,fp,32768
 2007208:	9009883a 	mov	r4,r18
 200720c:	980b883a 	mov	r5,r19
 2007210:	180f883a 	mov	r7,r3
 2007214:	b00d883a 	mov	r6,r22
 2007218:	200f4ac0 	call	200f4ac <__ltdf2>
 200721c:	1000080e 	bge	r2,zero,2007240 <_dtoa_r+0x578>
 2007220:	0027883a 	mov	r19,zero
 2007224:	0025883a 	mov	r18,zero
 2007228:	d8802617 	ldw	r2,152(sp)
 200722c:	df000517 	ldw	fp,20(sp)
 2007230:	d8000615 	stw	zero,24(sp)
 2007234:	0084303a 	nor	r2,zero,r2
 2007238:	d8800d15 	stw	r2,52(sp)
 200723c:	00019b06 	br	20078ac <_dtoa_r+0xbe4>
 2007240:	d9801217 	ldw	r6,72(sp)
 2007244:	d8801317 	ldw	r2,76(sp)
 2007248:	3029883a 	mov	r20,r6
 200724c:	102b883a 	mov	r21,r2
 2007250:	d8c00217 	ldw	r3,8(sp)
 2007254:	18008516 	blt	r3,zero,200746c <_dtoa_r+0x7a4>
 2007258:	d9000d17 	ldw	r4,52(sp)
 200725c:	00800384 	movi	r2,14
 2007260:	11008216 	blt	r2,r4,200746c <_dtoa_r+0x7a4>
 2007264:	200490fa 	slli	r2,r4,3
 2007268:	d9802617 	ldw	r6,152(sp)
 200726c:	00c08074 	movhi	r3,513
 2007270:	18cefd04 	addi	r3,r3,15348
 2007274:	10c5883a 	add	r2,r2,r3
 2007278:	14800017 	ldw	r18,0(r2)
 200727c:	14c00117 	ldw	r19,4(r2)
 2007280:	30031e16 	blt	r6,zero,2007efc <_dtoa_r+0x1234>
 2007284:	d9000517 	ldw	r4,20(sp)
 2007288:	d8c00f17 	ldw	r3,60(sp)
 200728c:	a823883a 	mov	r17,r21
 2007290:	a021883a 	mov	r16,r20
 2007294:	192b883a 	add	r21,r3,r4
 2007298:	2039883a 	mov	fp,r4
 200729c:	00000f06 	br	20072dc <_dtoa_r+0x614>
 20072a0:	0005883a 	mov	r2,zero
 20072a4:	00d00934 	movhi	r3,16420
 20072a8:	5009883a 	mov	r4,r10
 20072ac:	580b883a 	mov	r5,r11
 20072b0:	180f883a 	mov	r7,r3
 20072b4:	100d883a 	mov	r6,r2
 20072b8:	200ec700 	call	200ec70 <__muldf3>
 20072bc:	180b883a 	mov	r5,r3
 20072c0:	000d883a 	mov	r6,zero
 20072c4:	000f883a 	mov	r7,zero
 20072c8:	1009883a 	mov	r4,r2
 20072cc:	1021883a 	mov	r16,r2
 20072d0:	1823883a 	mov	r17,r3
 20072d4:	200f3140 	call	200f314 <__nedf2>
 20072d8:	10004526 	beq	r2,zero,20073f0 <_dtoa_r+0x728>
 20072dc:	900d883a 	mov	r6,r18
 20072e0:	980f883a 	mov	r7,r19
 20072e4:	8009883a 	mov	r4,r16
 20072e8:	880b883a 	mov	r5,r17
 20072ec:	200f0340 	call	200f034 <__divdf3>
 20072f0:	180b883a 	mov	r5,r3
 20072f4:	1009883a 	mov	r4,r2
 20072f8:	200f6b40 	call	200f6b4 <__fixdfsi>
 20072fc:	1009883a 	mov	r4,r2
 2007300:	1029883a 	mov	r20,r2
 2007304:	200f5bc0 	call	200f5bc <__floatsidf>
 2007308:	180f883a 	mov	r7,r3
 200730c:	9009883a 	mov	r4,r18
 2007310:	980b883a 	mov	r5,r19
 2007314:	100d883a 	mov	r6,r2
 2007318:	200ec700 	call	200ec70 <__muldf3>
 200731c:	180f883a 	mov	r7,r3
 2007320:	880b883a 	mov	r5,r17
 2007324:	8009883a 	mov	r4,r16
 2007328:	100d883a 	mov	r6,r2
 200732c:	200eb7c0 	call	200eb7c <__subdf3>
 2007330:	1015883a 	mov	r10,r2
 2007334:	a0800c04 	addi	r2,r20,48
 2007338:	e0800005 	stb	r2,0(fp)
 200733c:	e7000044 	addi	fp,fp,1
 2007340:	1817883a 	mov	r11,r3
 2007344:	e57fd61e 	bne	fp,r21,20072a0 <_dtoa_r+0x5d8>
 2007348:	500d883a 	mov	r6,r10
 200734c:	180f883a 	mov	r7,r3
 2007350:	5009883a 	mov	r4,r10
 2007354:	180b883a 	mov	r5,r3
 2007358:	200ebfc0 	call	200ebfc <__adddf3>
 200735c:	100d883a 	mov	r6,r2
 2007360:	9009883a 	mov	r4,r18
 2007364:	980b883a 	mov	r5,r19
 2007368:	180f883a 	mov	r7,r3
 200736c:	1021883a 	mov	r16,r2
 2007370:	1823883a 	mov	r17,r3
 2007374:	200f4ac0 	call	200f4ac <__ltdf2>
 2007378:	10000816 	blt	r2,zero,200739c <_dtoa_r+0x6d4>
 200737c:	980b883a 	mov	r5,r19
 2007380:	800d883a 	mov	r6,r16
 2007384:	880f883a 	mov	r7,r17
 2007388:	9009883a 	mov	r4,r18
 200738c:	200f28c0 	call	200f28c <__eqdf2>
 2007390:	1000171e 	bne	r2,zero,20073f0 <_dtoa_r+0x728>
 2007394:	a080004c 	andi	r2,r20,1
 2007398:	10001526 	beq	r2,zero,20073f0 <_dtoa_r+0x728>
 200739c:	d8800d17 	ldw	r2,52(sp)
 20073a0:	d8800415 	stw	r2,16(sp)
 20073a4:	e009883a 	mov	r4,fp
 20073a8:	213fffc4 	addi	r4,r4,-1
 20073ac:	20c00007 	ldb	r3,0(r4)
 20073b0:	00800e44 	movi	r2,57
 20073b4:	1880081e 	bne	r3,r2,20073d8 <_dtoa_r+0x710>
 20073b8:	d8800517 	ldw	r2,20(sp)
 20073bc:	113ffa1e 	bne	r2,r4,20073a8 <_dtoa_r+0x6e0>
 20073c0:	d8c00417 	ldw	r3,16(sp)
 20073c4:	d9800517 	ldw	r6,20(sp)
 20073c8:	00800c04 	movi	r2,48
 20073cc:	18c00044 	addi	r3,r3,1
 20073d0:	d8c00415 	stw	r3,16(sp)
 20073d4:	30800005 	stb	r2,0(r6)
 20073d8:	20800003 	ldbu	r2,0(r4)
 20073dc:	d8c00417 	ldw	r3,16(sp)
 20073e0:	27000044 	addi	fp,r4,1
 20073e4:	10800044 	addi	r2,r2,1
 20073e8:	d8c00d15 	stw	r3,52(sp)
 20073ec:	20800005 	stb	r2,0(r4)
 20073f0:	d9001617 	ldw	r4,88(sp)
 20073f4:	d9400717 	ldw	r5,28(sp)
 20073f8:	2008c540 	call	2008c54 <_Bfree>
 20073fc:	e0000005 	stb	zero,0(fp)
 2007400:	d9800d17 	ldw	r6,52(sp)
 2007404:	d8c02717 	ldw	r3,156(sp)
 2007408:	d9002917 	ldw	r4,164(sp)
 200740c:	30800044 	addi	r2,r6,1
 2007410:	18800015 	stw	r2,0(r3)
 2007414:	20029c26 	beq	r4,zero,2007e88 <_dtoa_r+0x11c0>
 2007418:	d8c00517 	ldw	r3,20(sp)
 200741c:	27000015 	stw	fp,0(r4)
 2007420:	003e5d06 	br	2006d98 <_dtoa_r+0xd0>
 2007424:	d9800d17 	ldw	r6,52(sp)
 2007428:	00c08074 	movhi	r3,513
 200742c:	18cefd04 	addi	r3,r3,15348
 2007430:	d9001217 	ldw	r4,72(sp)
 2007434:	300490fa 	slli	r2,r6,3
 2007438:	d9401317 	ldw	r5,76(sp)
 200743c:	10c5883a 	add	r2,r2,r3
 2007440:	12000017 	ldw	r8,0(r2)
 2007444:	12400117 	ldw	r9,4(r2)
 2007448:	400d883a 	mov	r6,r8
 200744c:	480f883a 	mov	r7,r9
 2007450:	200f4ac0 	call	200f4ac <__ltdf2>
 2007454:	1000030e 	bge	r2,zero,2007464 <_dtoa_r+0x79c>
 2007458:	d8800d17 	ldw	r2,52(sp)
 200745c:	10bfffc4 	addi	r2,r2,-1
 2007460:	d8800d15 	stw	r2,52(sp)
 2007464:	d8000c15 	stw	zero,48(sp)
 2007468:	003ea806 	br	2006f0c <_dtoa_r+0x244>
 200746c:	d9000b17 	ldw	r4,44(sp)
 2007470:	202cc03a 	cmpne	r22,r4,zero
 2007474:	b000c71e 	bne	r22,zero,2007794 <_dtoa_r+0xacc>
 2007478:	dc001117 	ldw	r16,68(sp)
 200747c:	dc801017 	ldw	r18,64(sp)
 2007480:	0027883a 	mov	r19,zero
 2007484:	04000b0e 	bge	zero,r16,20074b4 <_dtoa_r+0x7ec>
 2007488:	d8c00a17 	ldw	r3,40(sp)
 200748c:	00c0090e 	bge	zero,r3,20074b4 <_dtoa_r+0x7ec>
 2007490:	8005883a 	mov	r2,r16
 2007494:	1c011316 	blt	r3,r16,20078e4 <_dtoa_r+0xc1c>
 2007498:	d9000a17 	ldw	r4,40(sp)
 200749c:	d9801117 	ldw	r6,68(sp)
 20074a0:	80a1c83a 	sub	r16,r16,r2
 20074a4:	2089c83a 	sub	r4,r4,r2
 20074a8:	308dc83a 	sub	r6,r6,r2
 20074ac:	d9000a15 	stw	r4,40(sp)
 20074b0:	d9801115 	stw	r6,68(sp)
 20074b4:	d8801017 	ldw	r2,64(sp)
 20074b8:	0080150e 	bge	zero,r2,2007510 <_dtoa_r+0x848>
 20074bc:	d8c00b17 	ldw	r3,44(sp)
 20074c0:	1805003a 	cmpeq	r2,r3,zero
 20074c4:	1001c91e 	bne	r2,zero,2007bec <_dtoa_r+0xf24>
 20074c8:	04800e0e 	bge	zero,r18,2007504 <_dtoa_r+0x83c>
 20074cc:	d9001617 	ldw	r4,88(sp)
 20074d0:	980b883a 	mov	r5,r19
 20074d4:	900d883a 	mov	r6,r18
 20074d8:	2009aa00 	call	2009aa0 <__pow5mult>
 20074dc:	d9001617 	ldw	r4,88(sp)
 20074e0:	d9800717 	ldw	r6,28(sp)
 20074e4:	100b883a 	mov	r5,r2
 20074e8:	1027883a 	mov	r19,r2
 20074ec:	20096e40 	call	20096e4 <__multiply>
 20074f0:	d9001617 	ldw	r4,88(sp)
 20074f4:	d9400717 	ldw	r5,28(sp)
 20074f8:	1023883a 	mov	r17,r2
 20074fc:	2008c540 	call	2008c54 <_Bfree>
 2007500:	dc400715 	stw	r17,28(sp)
 2007504:	d9001017 	ldw	r4,64(sp)
 2007508:	248dc83a 	sub	r6,r4,r18
 200750c:	30010e1e 	bne	r6,zero,2007948 <_dtoa_r+0xc80>
 2007510:	d9001617 	ldw	r4,88(sp)
 2007514:	04400044 	movi	r17,1
 2007518:	880b883a 	mov	r5,r17
 200751c:	20099380 	call	2009938 <__i2b>
 2007520:	d9800917 	ldw	r6,36(sp)
 2007524:	1025883a 	mov	r18,r2
 2007528:	0180040e 	bge	zero,r6,200753c <_dtoa_r+0x874>
 200752c:	d9001617 	ldw	r4,88(sp)
 2007530:	100b883a 	mov	r5,r2
 2007534:	2009aa00 	call	2009aa0 <__pow5mult>
 2007538:	1025883a 	mov	r18,r2
 200753c:	d8801717 	ldw	r2,92(sp)
 2007540:	8880f30e 	bge	r17,r2,2007910 <_dtoa_r+0xc48>
 2007544:	0023883a 	mov	r17,zero
 2007548:	d9800917 	ldw	r6,36(sp)
 200754c:	30019e1e 	bne	r6,zero,2007bc8 <_dtoa_r+0xf00>
 2007550:	00c00044 	movi	r3,1
 2007554:	d9000a17 	ldw	r4,40(sp)
 2007558:	20c5883a 	add	r2,r4,r3
 200755c:	10c007cc 	andi	r3,r2,31
 2007560:	1800841e 	bne	r3,zero,2007774 <_dtoa_r+0xaac>
 2007564:	00800704 	movi	r2,28
 2007568:	d9000a17 	ldw	r4,40(sp)
 200756c:	d9801117 	ldw	r6,68(sp)
 2007570:	80a1883a 	add	r16,r16,r2
 2007574:	2089883a 	add	r4,r4,r2
 2007578:	308d883a 	add	r6,r6,r2
 200757c:	d9000a15 	stw	r4,40(sp)
 2007580:	d9801115 	stw	r6,68(sp)
 2007584:	d8801117 	ldw	r2,68(sp)
 2007588:	0080050e 	bge	zero,r2,20075a0 <_dtoa_r+0x8d8>
 200758c:	d9400717 	ldw	r5,28(sp)
 2007590:	d9001617 	ldw	r4,88(sp)
 2007594:	100d883a 	mov	r6,r2
 2007598:	20095980 	call	2009598 <__lshift>
 200759c:	d8800715 	stw	r2,28(sp)
 20075a0:	d8c00a17 	ldw	r3,40(sp)
 20075a4:	00c0050e 	bge	zero,r3,20075bc <_dtoa_r+0x8f4>
 20075a8:	d9001617 	ldw	r4,88(sp)
 20075ac:	900b883a 	mov	r5,r18
 20075b0:	180d883a 	mov	r6,r3
 20075b4:	20095980 	call	2009598 <__lshift>
 20075b8:	1025883a 	mov	r18,r2
 20075bc:	d9000c17 	ldw	r4,48(sp)
 20075c0:	2005003a 	cmpeq	r2,r4,zero
 20075c4:	10016f26 	beq	r2,zero,2007b84 <_dtoa_r+0xebc>
 20075c8:	d9000f17 	ldw	r4,60(sp)
 20075cc:	0102170e 	bge	zero,r4,2007e2c <_dtoa_r+0x1164>
 20075d0:	d9800b17 	ldw	r6,44(sp)
 20075d4:	3005003a 	cmpeq	r2,r6,zero
 20075d8:	1000881e 	bne	r2,zero,20077fc <_dtoa_r+0xb34>
 20075dc:	0400050e 	bge	zero,r16,20075f4 <_dtoa_r+0x92c>
 20075e0:	d9001617 	ldw	r4,88(sp)
 20075e4:	980b883a 	mov	r5,r19
 20075e8:	800d883a 	mov	r6,r16
 20075ec:	20095980 	call	2009598 <__lshift>
 20075f0:	1027883a 	mov	r19,r2
 20075f4:	8804c03a 	cmpne	r2,r17,zero
 20075f8:	1002541e 	bne	r2,zero,2007f4c <_dtoa_r+0x1284>
 20075fc:	980b883a 	mov	r5,r19
 2007600:	dd800517 	ldw	r22,20(sp)
 2007604:	dcc00615 	stw	r19,24(sp)
 2007608:	a700004c 	andi	fp,r20,1
 200760c:	2827883a 	mov	r19,r5
 2007610:	d9000717 	ldw	r4,28(sp)
 2007614:	900b883a 	mov	r5,r18
 2007618:	2006a840 	call	2006a84 <quorem>
 200761c:	d9000717 	ldw	r4,28(sp)
 2007620:	d9400617 	ldw	r5,24(sp)
 2007624:	1023883a 	mov	r17,r2
 2007628:	8dc00c04 	addi	r23,r17,48
 200762c:	2008db00 	call	2008db0 <__mcmp>
 2007630:	d9001617 	ldw	r4,88(sp)
 2007634:	900b883a 	mov	r5,r18
 2007638:	980d883a 	mov	r6,r19
 200763c:	1029883a 	mov	r20,r2
 2007640:	200940c0 	call	200940c <__mdiff>
 2007644:	102b883a 	mov	r21,r2
 2007648:	10800317 	ldw	r2,12(r2)
 200764c:	1001281e 	bne	r2,zero,2007af0 <_dtoa_r+0xe28>
 2007650:	d9000717 	ldw	r4,28(sp)
 2007654:	a80b883a 	mov	r5,r21
 2007658:	2008db00 	call	2008db0 <__mcmp>
 200765c:	d9001617 	ldw	r4,88(sp)
 2007660:	1021883a 	mov	r16,r2
 2007664:	a80b883a 	mov	r5,r21
 2007668:	2008c540 	call	2008c54 <_Bfree>
 200766c:	8000041e 	bne	r16,zero,2007680 <_dtoa_r+0x9b8>
 2007670:	d8801717 	ldw	r2,92(sp)
 2007674:	1000021e 	bne	r2,zero,2007680 <_dtoa_r+0x9b8>
 2007678:	e004c03a 	cmpne	r2,fp,zero
 200767c:	10011726 	beq	r2,zero,2007adc <_dtoa_r+0xe14>
 2007680:	a0010616 	blt	r20,zero,2007a9c <_dtoa_r+0xdd4>
 2007684:	a000041e 	bne	r20,zero,2007698 <_dtoa_r+0x9d0>
 2007688:	d8c01717 	ldw	r3,92(sp)
 200768c:	1800021e 	bne	r3,zero,2007698 <_dtoa_r+0x9d0>
 2007690:	e004c03a 	cmpne	r2,fp,zero
 2007694:	10010126 	beq	r2,zero,2007a9c <_dtoa_r+0xdd4>
 2007698:	04023d16 	blt	zero,r16,2007f90 <_dtoa_r+0x12c8>
 200769c:	b5c00005 	stb	r23,0(r22)
 20076a0:	d9800517 	ldw	r6,20(sp)
 20076a4:	d9000f17 	ldw	r4,60(sp)
 20076a8:	b5800044 	addi	r22,r22,1
 20076ac:	3105883a 	add	r2,r6,r4
 20076b0:	b0806526 	beq	r22,r2,2007848 <_dtoa_r+0xb80>
 20076b4:	d9400717 	ldw	r5,28(sp)
 20076b8:	d9001617 	ldw	r4,88(sp)
 20076bc:	01800284 	movi	r6,10
 20076c0:	000f883a 	mov	r7,zero
 20076c4:	20099740 	call	2009974 <__multadd>
 20076c8:	d8800715 	stw	r2,28(sp)
 20076cc:	d8800617 	ldw	r2,24(sp)
 20076d0:	14c10c26 	beq	r2,r19,2007b04 <_dtoa_r+0xe3c>
 20076d4:	d9400617 	ldw	r5,24(sp)
 20076d8:	d9001617 	ldw	r4,88(sp)
 20076dc:	01800284 	movi	r6,10
 20076e0:	000f883a 	mov	r7,zero
 20076e4:	20099740 	call	2009974 <__multadd>
 20076e8:	d9001617 	ldw	r4,88(sp)
 20076ec:	980b883a 	mov	r5,r19
 20076f0:	01800284 	movi	r6,10
 20076f4:	000f883a 	mov	r7,zero
 20076f8:	d8800615 	stw	r2,24(sp)
 20076fc:	20099740 	call	2009974 <__multadd>
 2007700:	1027883a 	mov	r19,r2
 2007704:	003fc206 	br	2007610 <_dtoa_r+0x948>
 2007708:	2445c83a 	sub	r2,r4,r17
 200770c:	a088983a 	sll	r4,r20,r2
 2007710:	003e4b06 	br	2007040 <_dtoa_r+0x378>
 2007714:	01bfffc4 	movi	r6,-1
 2007718:	00800044 	movi	r2,1
 200771c:	d9800e15 	stw	r6,56(sp)
 2007720:	d9800f15 	stw	r6,60(sp)
 2007724:	d8800b15 	stw	r2,44(sp)
 2007728:	d8c01617 	ldw	r3,88(sp)
 200772c:	008005c4 	movi	r2,23
 2007730:	18001115 	stw	zero,68(r3)
 2007734:	1580082e 	bgeu	r2,r22,2007758 <_dtoa_r+0xa90>
 2007738:	00c00104 	movi	r3,4
 200773c:	0009883a 	mov	r4,zero
 2007740:	18c7883a 	add	r3,r3,r3
 2007744:	18800504 	addi	r2,r3,20
 2007748:	21000044 	addi	r4,r4,1
 200774c:	b0bffc2e 	bgeu	r22,r2,2007740 <_dtoa_r+0xa78>
 2007750:	d9801617 	ldw	r6,88(sp)
 2007754:	31001115 	stw	r4,68(r6)
 2007758:	dc000f17 	ldw	r16,60(sp)
 200775c:	003e4b06 	br	200708c <_dtoa_r+0x3c4>
 2007760:	d9801717 	ldw	r6,92(sp)
 2007764:	0023883a 	mov	r17,zero
 2007768:	31bfff04 	addi	r6,r6,-4
 200776c:	d9801715 	stw	r6,92(sp)
 2007770:	003df806 	br	2006f54 <_dtoa_r+0x28c>
 2007774:	00800804 	movi	r2,32
 2007778:	10c9c83a 	sub	r4,r2,r3
 200777c:	00c00104 	movi	r3,4
 2007780:	19005a16 	blt	r3,r4,20078ec <_dtoa_r+0xc24>
 2007784:	008000c4 	movi	r2,3
 2007788:	113f7e16 	blt	r2,r4,2007584 <_dtoa_r+0x8bc>
 200778c:	20800704 	addi	r2,r4,28
 2007790:	003f7506 	br	2007568 <_dtoa_r+0x8a0>
 2007794:	d9801717 	ldw	r6,92(sp)
 2007798:	00800044 	movi	r2,1
 200779c:	1180a10e 	bge	r2,r6,2007a24 <_dtoa_r+0xd5c>
 20077a0:	d9800f17 	ldw	r6,60(sp)
 20077a4:	d8c01017 	ldw	r3,64(sp)
 20077a8:	30bfffc4 	addi	r2,r6,-1
 20077ac:	1881c616 	blt	r3,r2,2007ec8 <_dtoa_r+0x1200>
 20077b0:	18a5c83a 	sub	r18,r3,r2
 20077b4:	d8800f17 	ldw	r2,60(sp)
 20077b8:	10026216 	blt	r2,zero,2008144 <_dtoa_r+0x147c>
 20077bc:	dc001117 	ldw	r16,68(sp)
 20077c0:	1007883a 	mov	r3,r2
 20077c4:	d9800a17 	ldw	r6,40(sp)
 20077c8:	d8801117 	ldw	r2,68(sp)
 20077cc:	d9001617 	ldw	r4,88(sp)
 20077d0:	30cd883a 	add	r6,r6,r3
 20077d4:	10c5883a 	add	r2,r2,r3
 20077d8:	01400044 	movi	r5,1
 20077dc:	d9800a15 	stw	r6,40(sp)
 20077e0:	d8801115 	stw	r2,68(sp)
 20077e4:	20099380 	call	2009938 <__i2b>
 20077e8:	1027883a 	mov	r19,r2
 20077ec:	003f2506 	br	2007484 <_dtoa_r+0x7bc>
 20077f0:	00c08074 	movhi	r3,513
 20077f4:	18ce3404 	addi	r3,r3,14544
 20077f8:	003d6706 	br	2006d98 <_dtoa_r+0xd0>
 20077fc:	dd800517 	ldw	r22,20(sp)
 2007800:	04000044 	movi	r16,1
 2007804:	00000706 	br	2007824 <_dtoa_r+0xb5c>
 2007808:	d9400717 	ldw	r5,28(sp)
 200780c:	d9001617 	ldw	r4,88(sp)
 2007810:	01800284 	movi	r6,10
 2007814:	000f883a 	mov	r7,zero
 2007818:	20099740 	call	2009974 <__multadd>
 200781c:	d8800715 	stw	r2,28(sp)
 2007820:	84000044 	addi	r16,r16,1
 2007824:	d9000717 	ldw	r4,28(sp)
 2007828:	900b883a 	mov	r5,r18
 200782c:	2006a840 	call	2006a84 <quorem>
 2007830:	15c00c04 	addi	r23,r2,48
 2007834:	b5c00005 	stb	r23,0(r22)
 2007838:	d8c00f17 	ldw	r3,60(sp)
 200783c:	b5800044 	addi	r22,r22,1
 2007840:	80fff116 	blt	r16,r3,2007808 <_dtoa_r+0xb40>
 2007844:	d8000615 	stw	zero,24(sp)
 2007848:	d9400717 	ldw	r5,28(sp)
 200784c:	d9001617 	ldw	r4,88(sp)
 2007850:	01800044 	movi	r6,1
 2007854:	20095980 	call	2009598 <__lshift>
 2007858:	1009883a 	mov	r4,r2
 200785c:	900b883a 	mov	r5,r18
 2007860:	d8800715 	stw	r2,28(sp)
 2007864:	2008db00 	call	2008db0 <__mcmp>
 2007868:	00803c0e 	bge	zero,r2,200795c <_dtoa_r+0xc94>
 200786c:	b009883a 	mov	r4,r22
 2007870:	213fffc4 	addi	r4,r4,-1
 2007874:	21400003 	ldbu	r5,0(r4)
 2007878:	00800e44 	movi	r2,57
 200787c:	28c03fcc 	andi	r3,r5,255
 2007880:	18c0201c 	xori	r3,r3,128
 2007884:	18ffe004 	addi	r3,r3,-128
 2007888:	1881981e 	bne	r3,r2,2007eec <_dtoa_r+0x1224>
 200788c:	d9800517 	ldw	r6,20(sp)
 2007890:	21bff71e 	bne	r4,r6,2007870 <_dtoa_r+0xba8>
 2007894:	d8800d17 	ldw	r2,52(sp)
 2007898:	37000044 	addi	fp,r6,1
 200789c:	10800044 	addi	r2,r2,1
 20078a0:	d8800d15 	stw	r2,52(sp)
 20078a4:	00800c44 	movi	r2,49
 20078a8:	30800005 	stb	r2,0(r6)
 20078ac:	d9001617 	ldw	r4,88(sp)
 20078b0:	900b883a 	mov	r5,r18
 20078b4:	2008c540 	call	2008c54 <_Bfree>
 20078b8:	983ecd26 	beq	r19,zero,20073f0 <_dtoa_r+0x728>
 20078bc:	d8c00617 	ldw	r3,24(sp)
 20078c0:	18000426 	beq	r3,zero,20078d4 <_dtoa_r+0xc0c>
 20078c4:	1cc00326 	beq	r3,r19,20078d4 <_dtoa_r+0xc0c>
 20078c8:	d9001617 	ldw	r4,88(sp)
 20078cc:	180b883a 	mov	r5,r3
 20078d0:	2008c540 	call	2008c54 <_Bfree>
 20078d4:	d9001617 	ldw	r4,88(sp)
 20078d8:	980b883a 	mov	r5,r19
 20078dc:	2008c540 	call	2008c54 <_Bfree>
 20078e0:	003ec306 	br	20073f0 <_dtoa_r+0x728>
 20078e4:	1805883a 	mov	r2,r3
 20078e8:	003eeb06 	br	2007498 <_dtoa_r+0x7d0>
 20078ec:	d9800a17 	ldw	r6,40(sp)
 20078f0:	d8c01117 	ldw	r3,68(sp)
 20078f4:	20bfff04 	addi	r2,r4,-4
 20078f8:	308d883a 	add	r6,r6,r2
 20078fc:	1887883a 	add	r3,r3,r2
 2007900:	80a1883a 	add	r16,r16,r2
 2007904:	d9800a15 	stw	r6,40(sp)
 2007908:	d8c01115 	stw	r3,68(sp)
 200790c:	003f1d06 	br	2007584 <_dtoa_r+0x8bc>
 2007910:	a03f0c1e 	bne	r20,zero,2007544 <_dtoa_r+0x87c>
 2007914:	00800434 	movhi	r2,16
 2007918:	10bfffc4 	addi	r2,r2,-1
 200791c:	a884703a 	and	r2,r21,r2
 2007920:	103f081e 	bne	r2,zero,2007544 <_dtoa_r+0x87c>
 2007924:	a89ffc2c 	andhi	r2,r21,32752
 2007928:	103f0626 	beq	r2,zero,2007544 <_dtoa_r+0x87c>
 200792c:	d8c01117 	ldw	r3,68(sp)
 2007930:	d9000a17 	ldw	r4,40(sp)
 2007934:	18c00044 	addi	r3,r3,1
 2007938:	21000044 	addi	r4,r4,1
 200793c:	d8c01115 	stw	r3,68(sp)
 2007940:	d9000a15 	stw	r4,40(sp)
 2007944:	003f0006 	br	2007548 <_dtoa_r+0x880>
 2007948:	d9400717 	ldw	r5,28(sp)
 200794c:	d9001617 	ldw	r4,88(sp)
 2007950:	2009aa00 	call	2009aa0 <__pow5mult>
 2007954:	d8800715 	stw	r2,28(sp)
 2007958:	003eed06 	br	2007510 <_dtoa_r+0x848>
 200795c:	1000021e 	bne	r2,zero,2007968 <_dtoa_r+0xca0>
 2007960:	b880004c 	andi	r2,r23,1
 2007964:	103fc11e 	bne	r2,zero,200786c <_dtoa_r+0xba4>
 2007968:	b5bfffc4 	addi	r22,r22,-1
 200796c:	b0c00007 	ldb	r3,0(r22)
 2007970:	00800c04 	movi	r2,48
 2007974:	18bffc26 	beq	r3,r2,2007968 <_dtoa_r+0xca0>
 2007978:	b7000044 	addi	fp,r22,1
 200797c:	003fcb06 	br	20078ac <_dtoa_r+0xbe4>
 2007980:	d9800d17 	ldw	r6,52(sp)
 2007984:	018fc83a 	sub	r7,zero,r6
 2007988:	3801f726 	beq	r7,zero,2008168 <_dtoa_r+0x14a0>
 200798c:	398003cc 	andi	r6,r7,15
 2007990:	300c90fa 	slli	r6,r6,3
 2007994:	01408074 	movhi	r5,513
 2007998:	294efd04 	addi	r5,r5,15348
 200799c:	d9001217 	ldw	r4,72(sp)
 20079a0:	314d883a 	add	r6,r6,r5
 20079a4:	30c00117 	ldw	r3,4(r6)
 20079a8:	30800017 	ldw	r2,0(r6)
 20079ac:	d9401317 	ldw	r5,76(sp)
 20079b0:	3821d13a 	srai	r16,r7,4
 20079b4:	100d883a 	mov	r6,r2
 20079b8:	180f883a 	mov	r7,r3
 20079bc:	200ec700 	call	200ec70 <__muldf3>
 20079c0:	1011883a 	mov	r8,r2
 20079c4:	1813883a 	mov	r9,r3
 20079c8:	1029883a 	mov	r20,r2
 20079cc:	182b883a 	mov	r21,r3
 20079d0:	8001e526 	beq	r16,zero,2008168 <_dtoa_r+0x14a0>
 20079d4:	05800084 	movi	r22,2
 20079d8:	04408074 	movhi	r17,513
 20079dc:	8c4f2f04 	addi	r17,r17,15548
 20079e0:	8080004c 	andi	r2,r16,1
 20079e4:	1005003a 	cmpeq	r2,r2,zero
 20079e8:	1000081e 	bne	r2,zero,2007a0c <_dtoa_r+0xd44>
 20079ec:	89800017 	ldw	r6,0(r17)
 20079f0:	89c00117 	ldw	r7,4(r17)
 20079f4:	480b883a 	mov	r5,r9
 20079f8:	4009883a 	mov	r4,r8
 20079fc:	200ec700 	call	200ec70 <__muldf3>
 2007a00:	1011883a 	mov	r8,r2
 2007a04:	b5800044 	addi	r22,r22,1
 2007a08:	1813883a 	mov	r9,r3
 2007a0c:	8021d07a 	srai	r16,r16,1
 2007a10:	8c400204 	addi	r17,r17,8
 2007a14:	803ff21e 	bne	r16,zero,20079e0 <_dtoa_r+0xd18>
 2007a18:	4029883a 	mov	r20,r8
 2007a1c:	482b883a 	mov	r21,r9
 2007a20:	003dca06 	br	200714c <_dtoa_r+0x484>
 2007a24:	d9000817 	ldw	r4,32(sp)
 2007a28:	2005003a 	cmpeq	r2,r4,zero
 2007a2c:	1001f61e 	bne	r2,zero,2008208 <_dtoa_r+0x1540>
 2007a30:	dc001117 	ldw	r16,68(sp)
 2007a34:	dc801017 	ldw	r18,64(sp)
 2007a38:	18c10cc4 	addi	r3,r3,1075
 2007a3c:	003f6106 	br	20077c4 <_dtoa_r+0xafc>
 2007a40:	d8000b15 	stw	zero,44(sp)
 2007a44:	d9802617 	ldw	r6,152(sp)
 2007a48:	d8c00d17 	ldw	r3,52(sp)
 2007a4c:	30800044 	addi	r2,r6,1
 2007a50:	18ad883a 	add	r22,r3,r2
 2007a54:	b13fffc4 	addi	r4,r22,-1
 2007a58:	d9000e15 	stw	r4,56(sp)
 2007a5c:	0581f60e 	bge	zero,r22,2008238 <_dtoa_r+0x1570>
 2007a60:	dd800f15 	stw	r22,60(sp)
 2007a64:	003f3006 	br	2007728 <_dtoa_r+0xa60>
 2007a68:	d8000b15 	stw	zero,44(sp)
 2007a6c:	d9002617 	ldw	r4,152(sp)
 2007a70:	0101eb0e 	bge	zero,r4,2008220 <_dtoa_r+0x1558>
 2007a74:	202d883a 	mov	r22,r4
 2007a78:	d9000e15 	stw	r4,56(sp)
 2007a7c:	d9000f15 	stw	r4,60(sp)
 2007a80:	003f2906 	br	2007728 <_dtoa_r+0xa60>
 2007a84:	01800044 	movi	r6,1
 2007a88:	d9800b15 	stw	r6,44(sp)
 2007a8c:	003ff706 	br	2007a6c <_dtoa_r+0xda4>
 2007a90:	01000044 	movi	r4,1
 2007a94:	d9000b15 	stw	r4,44(sp)
 2007a98:	003fea06 	br	2007a44 <_dtoa_r+0xd7c>
 2007a9c:	04000c0e 	bge	zero,r16,2007ad0 <_dtoa_r+0xe08>
 2007aa0:	d9400717 	ldw	r5,28(sp)
 2007aa4:	d9001617 	ldw	r4,88(sp)
 2007aa8:	01800044 	movi	r6,1
 2007aac:	20095980 	call	2009598 <__lshift>
 2007ab0:	1009883a 	mov	r4,r2
 2007ab4:	900b883a 	mov	r5,r18
 2007ab8:	d8800715 	stw	r2,28(sp)
 2007abc:	2008db00 	call	2008db0 <__mcmp>
 2007ac0:	0081e00e 	bge	zero,r2,2008244 <_dtoa_r+0x157c>
 2007ac4:	bdc00044 	addi	r23,r23,1
 2007ac8:	00800e84 	movi	r2,58
 2007acc:	b881a226 	beq	r23,r2,2008158 <_dtoa_r+0x1490>
 2007ad0:	b7000044 	addi	fp,r22,1
 2007ad4:	b5c00005 	stb	r23,0(r22)
 2007ad8:	003f7406 	br	20078ac <_dtoa_r+0xbe4>
 2007adc:	00800e44 	movi	r2,57
 2007ae0:	b8819d26 	beq	r23,r2,2008158 <_dtoa_r+0x1490>
 2007ae4:	053ffa0e 	bge	zero,r20,2007ad0 <_dtoa_r+0xe08>
 2007ae8:	8dc00c44 	addi	r23,r17,49
 2007aec:	003ff806 	br	2007ad0 <_dtoa_r+0xe08>
 2007af0:	d9001617 	ldw	r4,88(sp)
 2007af4:	a80b883a 	mov	r5,r21
 2007af8:	04000044 	movi	r16,1
 2007afc:	2008c540 	call	2008c54 <_Bfree>
 2007b00:	003edf06 	br	2007680 <_dtoa_r+0x9b8>
 2007b04:	d9001617 	ldw	r4,88(sp)
 2007b08:	980b883a 	mov	r5,r19
 2007b0c:	01800284 	movi	r6,10
 2007b10:	000f883a 	mov	r7,zero
 2007b14:	20099740 	call	2009974 <__multadd>
 2007b18:	1027883a 	mov	r19,r2
 2007b1c:	d8800615 	stw	r2,24(sp)
 2007b20:	003ebb06 	br	2007610 <_dtoa_r+0x948>
 2007b24:	d9801117 	ldw	r6,68(sp)
 2007b28:	d8800d17 	ldw	r2,52(sp)
 2007b2c:	d8000915 	stw	zero,36(sp)
 2007b30:	308dc83a 	sub	r6,r6,r2
 2007b34:	0087c83a 	sub	r3,zero,r2
 2007b38:	d9801115 	stw	r6,68(sp)
 2007b3c:	d8c01015 	stw	r3,64(sp)
 2007b40:	003cfe06 	br	2006f3c <_dtoa_r+0x274>
 2007b44:	018dc83a 	sub	r6,zero,r6
 2007b48:	d9801115 	stw	r6,68(sp)
 2007b4c:	d8000a15 	stw	zero,40(sp)
 2007b50:	003cf306 	br	2006f20 <_dtoa_r+0x258>
 2007b54:	d9000d17 	ldw	r4,52(sp)
 2007b58:	200f5bc0 	call	200f5bc <__floatsidf>
 2007b5c:	880b883a 	mov	r5,r17
 2007b60:	8009883a 	mov	r4,r16
 2007b64:	180f883a 	mov	r7,r3
 2007b68:	100d883a 	mov	r6,r2
 2007b6c:	200f3140 	call	200f314 <__nedf2>
 2007b70:	103ce126 	beq	r2,zero,2006ef8 <_dtoa_r+0x230>
 2007b74:	d9800d17 	ldw	r6,52(sp)
 2007b78:	31bfffc4 	addi	r6,r6,-1
 2007b7c:	d9800d15 	stw	r6,52(sp)
 2007b80:	003cdd06 	br	2006ef8 <_dtoa_r+0x230>
 2007b84:	d9000717 	ldw	r4,28(sp)
 2007b88:	900b883a 	mov	r5,r18
 2007b8c:	2008db00 	call	2008db0 <__mcmp>
 2007b90:	103e8d0e 	bge	r2,zero,20075c8 <_dtoa_r+0x900>
 2007b94:	d9400717 	ldw	r5,28(sp)
 2007b98:	d9001617 	ldw	r4,88(sp)
 2007b9c:	01800284 	movi	r6,10
 2007ba0:	000f883a 	mov	r7,zero
 2007ba4:	20099740 	call	2009974 <__multadd>
 2007ba8:	d9800d17 	ldw	r6,52(sp)
 2007bac:	d8800715 	stw	r2,28(sp)
 2007bb0:	31bfffc4 	addi	r6,r6,-1
 2007bb4:	d9800d15 	stw	r6,52(sp)
 2007bb8:	b001a71e 	bne	r22,zero,2008258 <_dtoa_r+0x1590>
 2007bbc:	d8800e17 	ldw	r2,56(sp)
 2007bc0:	d8800f15 	stw	r2,60(sp)
 2007bc4:	003e8006 	br	20075c8 <_dtoa_r+0x900>
 2007bc8:	90800417 	ldw	r2,16(r18)
 2007bcc:	1085883a 	add	r2,r2,r2
 2007bd0:	1085883a 	add	r2,r2,r2
 2007bd4:	1485883a 	add	r2,r2,r18
 2007bd8:	11000417 	ldw	r4,16(r2)
 2007bdc:	2008c7c0 	call	2008c7c <__hi0bits>
 2007be0:	00c00804 	movi	r3,32
 2007be4:	1887c83a 	sub	r3,r3,r2
 2007be8:	003e5a06 	br	2007554 <_dtoa_r+0x88c>
 2007bec:	d9400717 	ldw	r5,28(sp)
 2007bf0:	d9801017 	ldw	r6,64(sp)
 2007bf4:	d9001617 	ldw	r4,88(sp)
 2007bf8:	2009aa00 	call	2009aa0 <__pow5mult>
 2007bfc:	d8800715 	stw	r2,28(sp)
 2007c00:	003e4306 	br	2007510 <_dtoa_r+0x848>
 2007c04:	d9800f17 	ldw	r6,60(sp)
 2007c08:	d8800d17 	ldw	r2,52(sp)
 2007c0c:	d9800315 	stw	r6,12(sp)
 2007c10:	d8800415 	stw	r2,16(sp)
 2007c14:	d8c00b17 	ldw	r3,44(sp)
 2007c18:	1805003a 	cmpeq	r2,r3,zero
 2007c1c:	1000e21e 	bne	r2,zero,2007fa8 <_dtoa_r+0x12e0>
 2007c20:	d9000317 	ldw	r4,12(sp)
 2007c24:	0005883a 	mov	r2,zero
 2007c28:	00cff834 	movhi	r3,16352
 2007c2c:	200c90fa 	slli	r6,r4,3
 2007c30:	01008074 	movhi	r4,513
 2007c34:	210efd04 	addi	r4,r4,15348
 2007c38:	180b883a 	mov	r5,r3
 2007c3c:	310d883a 	add	r6,r6,r4
 2007c40:	327fff17 	ldw	r9,-4(r6)
 2007c44:	323ffe17 	ldw	r8,-8(r6)
 2007c48:	1009883a 	mov	r4,r2
 2007c4c:	480f883a 	mov	r7,r9
 2007c50:	400d883a 	mov	r6,r8
 2007c54:	200f0340 	call	200f034 <__divdf3>
 2007c58:	180b883a 	mov	r5,r3
 2007c5c:	b00d883a 	mov	r6,r22
 2007c60:	b80f883a 	mov	r7,r23
 2007c64:	1009883a 	mov	r4,r2
 2007c68:	200eb7c0 	call	200eb7c <__subdf3>
 2007c6c:	a80b883a 	mov	r5,r21
 2007c70:	a009883a 	mov	r4,r20
 2007c74:	d8c01915 	stw	r3,100(sp)
 2007c78:	d8801815 	stw	r2,96(sp)
 2007c7c:	200f6b40 	call	200f6b4 <__fixdfsi>
 2007c80:	1009883a 	mov	r4,r2
 2007c84:	1027883a 	mov	r19,r2
 2007c88:	200f5bc0 	call	200f5bc <__floatsidf>
 2007c8c:	a80b883a 	mov	r5,r21
 2007c90:	a009883a 	mov	r4,r20
 2007c94:	180f883a 	mov	r7,r3
 2007c98:	100d883a 	mov	r6,r2
 2007c9c:	200eb7c0 	call	200eb7c <__subdf3>
 2007ca0:	d9801817 	ldw	r6,96(sp)
 2007ca4:	1823883a 	mov	r17,r3
 2007ca8:	d8801415 	stw	r2,80(sp)
 2007cac:	302d883a 	mov	r22,r6
 2007cb0:	d9800517 	ldw	r6,20(sp)
 2007cb4:	9cc00c04 	addi	r19,r19,48
 2007cb8:	dc401515 	stw	r17,84(sp)
 2007cbc:	d8c01917 	ldw	r3,100(sp)
 2007cc0:	34c00005 	stb	r19,0(r6)
 2007cc4:	d8800517 	ldw	r2,20(sp)
 2007cc8:	d9401917 	ldw	r5,100(sp)
 2007ccc:	d9801417 	ldw	r6,80(sp)
 2007cd0:	b009883a 	mov	r4,r22
 2007cd4:	880f883a 	mov	r7,r17
 2007cd8:	182f883a 	mov	r23,r3
 2007cdc:	17000044 	addi	fp,r2,1
 2007ce0:	200f39c0 	call	200f39c <__gtdf2>
 2007ce4:	00804e16 	blt	zero,r2,2007e20 <_dtoa_r+0x1158>
 2007ce8:	d9801417 	ldw	r6,80(sp)
 2007cec:	0005883a 	mov	r2,zero
 2007cf0:	00cffc34 	movhi	r3,16368
 2007cf4:	180b883a 	mov	r5,r3
 2007cf8:	880f883a 	mov	r7,r17
 2007cfc:	1009883a 	mov	r4,r2
 2007d00:	200eb7c0 	call	200eb7c <__subdf3>
 2007d04:	d9401917 	ldw	r5,100(sp)
 2007d08:	180f883a 	mov	r7,r3
 2007d0c:	b009883a 	mov	r4,r22
 2007d10:	100d883a 	mov	r6,r2
 2007d14:	200f39c0 	call	200f39c <__gtdf2>
 2007d18:	00bda216 	blt	zero,r2,20073a4 <_dtoa_r+0x6dc>
 2007d1c:	d8c00317 	ldw	r3,12(sp)
 2007d20:	00800044 	movi	r2,1
 2007d24:	10c01216 	blt	r2,r3,2007d70 <_dtoa_r+0x10a8>
 2007d28:	003d4506 	br	2007240 <_dtoa_r+0x578>
 2007d2c:	d9801417 	ldw	r6,80(sp)
 2007d30:	0005883a 	mov	r2,zero
 2007d34:	00cffc34 	movhi	r3,16368
 2007d38:	180b883a 	mov	r5,r3
 2007d3c:	880f883a 	mov	r7,r17
 2007d40:	1009883a 	mov	r4,r2
 2007d44:	200eb7c0 	call	200eb7c <__subdf3>
 2007d48:	d9c01b17 	ldw	r7,108(sp)
 2007d4c:	180b883a 	mov	r5,r3
 2007d50:	1009883a 	mov	r4,r2
 2007d54:	b00d883a 	mov	r6,r22
 2007d58:	200f4ac0 	call	200f4ac <__ltdf2>
 2007d5c:	103d9116 	blt	r2,zero,20073a4 <_dtoa_r+0x6dc>
 2007d60:	d9800517 	ldw	r6,20(sp)
 2007d64:	d9000317 	ldw	r4,12(sp)
 2007d68:	3105883a 	add	r2,r6,r4
 2007d6c:	e0bd3426 	beq	fp,r2,2007240 <_dtoa_r+0x578>
 2007d70:	04500934 	movhi	r17,16420
 2007d74:	0021883a 	mov	r16,zero
 2007d78:	b80b883a 	mov	r5,r23
 2007d7c:	b009883a 	mov	r4,r22
 2007d80:	800d883a 	mov	r6,r16
 2007d84:	880f883a 	mov	r7,r17
 2007d88:	200ec700 	call	200ec70 <__muldf3>
 2007d8c:	d9401517 	ldw	r5,84(sp)
 2007d90:	d9001417 	ldw	r4,80(sp)
 2007d94:	880f883a 	mov	r7,r17
 2007d98:	000d883a 	mov	r6,zero
 2007d9c:	d8801a15 	stw	r2,104(sp)
 2007da0:	d8c01b15 	stw	r3,108(sp)
 2007da4:	200ec700 	call	200ec70 <__muldf3>
 2007da8:	180b883a 	mov	r5,r3
 2007dac:	1009883a 	mov	r4,r2
 2007db0:	1823883a 	mov	r17,r3
 2007db4:	1021883a 	mov	r16,r2
 2007db8:	200f6b40 	call	200f6b4 <__fixdfsi>
 2007dbc:	1009883a 	mov	r4,r2
 2007dc0:	102b883a 	mov	r21,r2
 2007dc4:	200f5bc0 	call	200f5bc <__floatsidf>
 2007dc8:	880b883a 	mov	r5,r17
 2007dcc:	8009883a 	mov	r4,r16
 2007dd0:	180f883a 	mov	r7,r3
 2007dd4:	100d883a 	mov	r6,r2
 2007dd8:	200eb7c0 	call	200eb7c <__subdf3>
 2007ddc:	1021883a 	mov	r16,r2
 2007de0:	d9001b17 	ldw	r4,108(sp)
 2007de4:	1823883a 	mov	r17,r3
 2007de8:	dc001415 	stw	r16,80(sp)
 2007dec:	ad400c04 	addi	r21,r21,48
 2007df0:	dc401515 	stw	r17,84(sp)
 2007df4:	d8801a17 	ldw	r2,104(sp)
 2007df8:	e5400005 	stb	r21,0(fp)
 2007dfc:	202f883a 	mov	r23,r4
 2007e00:	d9c01b17 	ldw	r7,108(sp)
 2007e04:	d9001417 	ldw	r4,80(sp)
 2007e08:	880b883a 	mov	r5,r17
 2007e0c:	100d883a 	mov	r6,r2
 2007e10:	102d883a 	mov	r22,r2
 2007e14:	e7000044 	addi	fp,fp,1
 2007e18:	200f4ac0 	call	200f4ac <__ltdf2>
 2007e1c:	103fc30e 	bge	r2,zero,2007d2c <_dtoa_r+0x1064>
 2007e20:	d9000417 	ldw	r4,16(sp)
 2007e24:	d9000d15 	stw	r4,52(sp)
 2007e28:	003d7106 	br	20073f0 <_dtoa_r+0x728>
 2007e2c:	d9801717 	ldw	r6,92(sp)
 2007e30:	00800084 	movi	r2,2
 2007e34:	11bde60e 	bge	r2,r6,20075d0 <_dtoa_r+0x908>
 2007e38:	203cfb1e 	bne	r4,zero,2007228 <_dtoa_r+0x560>
 2007e3c:	d9001617 	ldw	r4,88(sp)
 2007e40:	900b883a 	mov	r5,r18
 2007e44:	01800144 	movi	r6,5
 2007e48:	000f883a 	mov	r7,zero
 2007e4c:	20099740 	call	2009974 <__multadd>
 2007e50:	d9000717 	ldw	r4,28(sp)
 2007e54:	100b883a 	mov	r5,r2
 2007e58:	1025883a 	mov	r18,r2
 2007e5c:	2008db00 	call	2008db0 <__mcmp>
 2007e60:	00bcf10e 	bge	zero,r2,2007228 <_dtoa_r+0x560>
 2007e64:	d8c00d17 	ldw	r3,52(sp)
 2007e68:	d9000517 	ldw	r4,20(sp)
 2007e6c:	d8000615 	stw	zero,24(sp)
 2007e70:	18c00044 	addi	r3,r3,1
 2007e74:	d8c00d15 	stw	r3,52(sp)
 2007e78:	00800c44 	movi	r2,49
 2007e7c:	27000044 	addi	fp,r4,1
 2007e80:	20800005 	stb	r2,0(r4)
 2007e84:	003e8906 	br	20078ac <_dtoa_r+0xbe4>
 2007e88:	d8c00517 	ldw	r3,20(sp)
 2007e8c:	003bc206 	br	2006d98 <_dtoa_r+0xd0>
 2007e90:	01808074 	movhi	r6,513
 2007e94:	318f2f04 	addi	r6,r6,15548
 2007e98:	30c00917 	ldw	r3,36(r6)
 2007e9c:	30800817 	ldw	r2,32(r6)
 2007ea0:	d9001217 	ldw	r4,72(sp)
 2007ea4:	d9401317 	ldw	r5,76(sp)
 2007ea8:	180f883a 	mov	r7,r3
 2007eac:	100d883a 	mov	r6,r2
 2007eb0:	200f0340 	call	200f034 <__divdf3>
 2007eb4:	948003cc 	andi	r18,r18,15
 2007eb8:	058000c4 	movi	r22,3
 2007ebc:	1029883a 	mov	r20,r2
 2007ec0:	182b883a 	mov	r21,r3
 2007ec4:	003c8906 	br	20070ec <_dtoa_r+0x424>
 2007ec8:	d9001017 	ldw	r4,64(sp)
 2007ecc:	d9800917 	ldw	r6,36(sp)
 2007ed0:	0025883a 	mov	r18,zero
 2007ed4:	1105c83a 	sub	r2,r2,r4
 2007ed8:	2089883a 	add	r4,r4,r2
 2007edc:	308d883a 	add	r6,r6,r2
 2007ee0:	d9001015 	stw	r4,64(sp)
 2007ee4:	d9800915 	stw	r6,36(sp)
 2007ee8:	003e3206 	br	20077b4 <_dtoa_r+0xaec>
 2007eec:	28800044 	addi	r2,r5,1
 2007ef0:	27000044 	addi	fp,r4,1
 2007ef4:	20800005 	stb	r2,0(r4)
 2007ef8:	003e6c06 	br	20078ac <_dtoa_r+0xbe4>
 2007efc:	d8800f17 	ldw	r2,60(sp)
 2007f00:	00bce016 	blt	zero,r2,2007284 <_dtoa_r+0x5bc>
 2007f04:	d9800f17 	ldw	r6,60(sp)
 2007f08:	303cc51e 	bne	r6,zero,2007220 <_dtoa_r+0x558>
 2007f0c:	0005883a 	mov	r2,zero
 2007f10:	00d00534 	movhi	r3,16404
 2007f14:	980b883a 	mov	r5,r19
 2007f18:	180f883a 	mov	r7,r3
 2007f1c:	9009883a 	mov	r4,r18
 2007f20:	100d883a 	mov	r6,r2
 2007f24:	200ec700 	call	200ec70 <__muldf3>
 2007f28:	180b883a 	mov	r5,r3
 2007f2c:	a80f883a 	mov	r7,r21
 2007f30:	1009883a 	mov	r4,r2
 2007f34:	a00d883a 	mov	r6,r20
 2007f38:	200f4240 	call	200f424 <__gedf2>
 2007f3c:	103cb80e 	bge	r2,zero,2007220 <_dtoa_r+0x558>
 2007f40:	0027883a 	mov	r19,zero
 2007f44:	0025883a 	mov	r18,zero
 2007f48:	003fc606 	br	2007e64 <_dtoa_r+0x119c>
 2007f4c:	99400117 	ldw	r5,4(r19)
 2007f50:	d9001617 	ldw	r4,88(sp)
 2007f54:	20091d40 	call	20091d4 <_Balloc>
 2007f58:	99800417 	ldw	r6,16(r19)
 2007f5c:	11000304 	addi	r4,r2,12
 2007f60:	99400304 	addi	r5,r19,12
 2007f64:	318d883a 	add	r6,r6,r6
 2007f68:	318d883a 	add	r6,r6,r6
 2007f6c:	31800204 	addi	r6,r6,8
 2007f70:	1023883a 	mov	r17,r2
 2007f74:	20029140 	call	2002914 <memcpy>
 2007f78:	d9001617 	ldw	r4,88(sp)
 2007f7c:	880b883a 	mov	r5,r17
 2007f80:	01800044 	movi	r6,1
 2007f84:	20095980 	call	2009598 <__lshift>
 2007f88:	100b883a 	mov	r5,r2
 2007f8c:	003d9c06 	br	2007600 <_dtoa_r+0x938>
 2007f90:	00800e44 	movi	r2,57
 2007f94:	b8807026 	beq	r23,r2,2008158 <_dtoa_r+0x1490>
 2007f98:	b8800044 	addi	r2,r23,1
 2007f9c:	b7000044 	addi	fp,r22,1
 2007fa0:	b0800005 	stb	r2,0(r22)
 2007fa4:	003e4106 	br	20078ac <_dtoa_r+0xbe4>
 2007fa8:	d8800317 	ldw	r2,12(sp)
 2007fac:	01808074 	movhi	r6,513
 2007fb0:	318efd04 	addi	r6,r6,15348
 2007fb4:	b009883a 	mov	r4,r22
 2007fb8:	100e90fa 	slli	r7,r2,3
 2007fbc:	b80b883a 	mov	r5,r23
 2007fc0:	398f883a 	add	r7,r7,r6
 2007fc4:	38bffe17 	ldw	r2,-8(r7)
 2007fc8:	d9800517 	ldw	r6,20(sp)
 2007fcc:	38ffff17 	ldw	r3,-4(r7)
 2007fd0:	37000044 	addi	fp,r6,1
 2007fd4:	180f883a 	mov	r7,r3
 2007fd8:	100d883a 	mov	r6,r2
 2007fdc:	200ec700 	call	200ec70 <__muldf3>
 2007fe0:	a80b883a 	mov	r5,r21
 2007fe4:	a009883a 	mov	r4,r20
 2007fe8:	182f883a 	mov	r23,r3
 2007fec:	102d883a 	mov	r22,r2
 2007ff0:	200f6b40 	call	200f6b4 <__fixdfsi>
 2007ff4:	1009883a 	mov	r4,r2
 2007ff8:	1027883a 	mov	r19,r2
 2007ffc:	200f5bc0 	call	200f5bc <__floatsidf>
 2008000:	a80b883a 	mov	r5,r21
 2008004:	a009883a 	mov	r4,r20
 2008008:	180f883a 	mov	r7,r3
 200800c:	100d883a 	mov	r6,r2
 2008010:	200eb7c0 	call	200eb7c <__subdf3>
 2008014:	180b883a 	mov	r5,r3
 2008018:	d8c00517 	ldw	r3,20(sp)
 200801c:	9cc00c04 	addi	r19,r19,48
 2008020:	1009883a 	mov	r4,r2
 2008024:	1cc00005 	stb	r19,0(r3)
 2008028:	2021883a 	mov	r16,r4
 200802c:	d9000317 	ldw	r4,12(sp)
 2008030:	00800044 	movi	r2,1
 2008034:	2823883a 	mov	r17,r5
 2008038:	20802226 	beq	r4,r2,20080c4 <_dtoa_r+0x13fc>
 200803c:	1029883a 	mov	r20,r2
 2008040:	0005883a 	mov	r2,zero
 2008044:	00d00934 	movhi	r3,16420
 2008048:	180f883a 	mov	r7,r3
 200804c:	100d883a 	mov	r6,r2
 2008050:	880b883a 	mov	r5,r17
 2008054:	8009883a 	mov	r4,r16
 2008058:	200ec700 	call	200ec70 <__muldf3>
 200805c:	180b883a 	mov	r5,r3
 2008060:	1009883a 	mov	r4,r2
 2008064:	1823883a 	mov	r17,r3
 2008068:	1021883a 	mov	r16,r2
 200806c:	200f6b40 	call	200f6b4 <__fixdfsi>
 2008070:	1009883a 	mov	r4,r2
 2008074:	102b883a 	mov	r21,r2
 2008078:	200f5bc0 	call	200f5bc <__floatsidf>
 200807c:	880b883a 	mov	r5,r17
 2008080:	8009883a 	mov	r4,r16
 2008084:	180f883a 	mov	r7,r3
 2008088:	100d883a 	mov	r6,r2
 200808c:	200eb7c0 	call	200eb7c <__subdf3>
 2008090:	180b883a 	mov	r5,r3
 2008094:	d8c00517 	ldw	r3,20(sp)
 2008098:	1009883a 	mov	r4,r2
 200809c:	ad400c04 	addi	r21,r21,48
 20080a0:	1d05883a 	add	r2,r3,r20
 20080a4:	15400005 	stb	r21,0(r2)
 20080a8:	2021883a 	mov	r16,r4
 20080ac:	d9000317 	ldw	r4,12(sp)
 20080b0:	a5000044 	addi	r20,r20,1
 20080b4:	2823883a 	mov	r17,r5
 20080b8:	a13fe11e 	bne	r20,r4,2008040 <_dtoa_r+0x1378>
 20080bc:	e505883a 	add	r2,fp,r20
 20080c0:	173fffc4 	addi	fp,r2,-1
 20080c4:	0025883a 	mov	r18,zero
 20080c8:	04cff834 	movhi	r19,16352
 20080cc:	b009883a 	mov	r4,r22
 20080d0:	b80b883a 	mov	r5,r23
 20080d4:	900d883a 	mov	r6,r18
 20080d8:	980f883a 	mov	r7,r19
 20080dc:	200ebfc0 	call	200ebfc <__adddf3>
 20080e0:	180b883a 	mov	r5,r3
 20080e4:	1009883a 	mov	r4,r2
 20080e8:	800d883a 	mov	r6,r16
 20080ec:	880f883a 	mov	r7,r17
 20080f0:	200f4ac0 	call	200f4ac <__ltdf2>
 20080f4:	103cab16 	blt	r2,zero,20073a4 <_dtoa_r+0x6dc>
 20080f8:	0009883a 	mov	r4,zero
 20080fc:	980b883a 	mov	r5,r19
 2008100:	b80f883a 	mov	r7,r23
 2008104:	b00d883a 	mov	r6,r22
 2008108:	200eb7c0 	call	200eb7c <__subdf3>
 200810c:	180b883a 	mov	r5,r3
 2008110:	880f883a 	mov	r7,r17
 2008114:	1009883a 	mov	r4,r2
 2008118:	800d883a 	mov	r6,r16
 200811c:	200f39c0 	call	200f39c <__gtdf2>
 2008120:	00bc470e 	bge	zero,r2,2007240 <_dtoa_r+0x578>
 2008124:	00c00c04 	movi	r3,48
 2008128:	e73fffc4 	addi	fp,fp,-1
 200812c:	e0800007 	ldb	r2,0(fp)
 2008130:	10fffd26 	beq	r2,r3,2008128 <_dtoa_r+0x1460>
 2008134:	d9800417 	ldw	r6,16(sp)
 2008138:	e7000044 	addi	fp,fp,1
 200813c:	d9800d15 	stw	r6,52(sp)
 2008140:	003cab06 	br	20073f0 <_dtoa_r+0x728>
 2008144:	d8c00f17 	ldw	r3,60(sp)
 2008148:	d9001117 	ldw	r4,68(sp)
 200814c:	20e1c83a 	sub	r16,r4,r3
 2008150:	0007883a 	mov	r3,zero
 2008154:	003d9b06 	br	20077c4 <_dtoa_r+0xafc>
 2008158:	00800e44 	movi	r2,57
 200815c:	b0800005 	stb	r2,0(r22)
 2008160:	b5800044 	addi	r22,r22,1
 2008164:	003dc106 	br	200786c <_dtoa_r+0xba4>
 2008168:	05800084 	movi	r22,2
 200816c:	003bf706 	br	200714c <_dtoa_r+0x484>
 2008170:	d9000f17 	ldw	r4,60(sp)
 2008174:	013c000e 	bge	zero,r4,2007178 <_dtoa_r+0x4b0>
 2008178:	d9800e17 	ldw	r6,56(sp)
 200817c:	01bc300e 	bge	zero,r6,2007240 <_dtoa_r+0x578>
 2008180:	0005883a 	mov	r2,zero
 2008184:	00d00934 	movhi	r3,16420
 2008188:	a80b883a 	mov	r5,r21
 200818c:	180f883a 	mov	r7,r3
 2008190:	a009883a 	mov	r4,r20
 2008194:	100d883a 	mov	r6,r2
 2008198:	200ec700 	call	200ec70 <__muldf3>
 200819c:	b1000044 	addi	r4,r22,1
 20081a0:	1021883a 	mov	r16,r2
 20081a4:	1823883a 	mov	r17,r3
 20081a8:	200f5bc0 	call	200f5bc <__floatsidf>
 20081ac:	880b883a 	mov	r5,r17
 20081b0:	8009883a 	mov	r4,r16
 20081b4:	180f883a 	mov	r7,r3
 20081b8:	100d883a 	mov	r6,r2
 20081bc:	200ec700 	call	200ec70 <__muldf3>
 20081c0:	0011883a 	mov	r8,zero
 20081c4:	02500734 	movhi	r9,16412
 20081c8:	180b883a 	mov	r5,r3
 20081cc:	480f883a 	mov	r7,r9
 20081d0:	1009883a 	mov	r4,r2
 20081d4:	400d883a 	mov	r6,r8
 20081d8:	200ebfc0 	call	200ebfc <__adddf3>
 20081dc:	102d883a 	mov	r22,r2
 20081e0:	00bf3034 	movhi	r2,64704
 20081e4:	10ef883a 	add	r23,r2,r3
 20081e8:	d8800d17 	ldw	r2,52(sp)
 20081ec:	d8c00e17 	ldw	r3,56(sp)
 20081f0:	8029883a 	mov	r20,r16
 20081f4:	10bfffc4 	addi	r2,r2,-1
 20081f8:	882b883a 	mov	r21,r17
 20081fc:	d8800415 	stw	r2,16(sp)
 2008200:	d8c00315 	stw	r3,12(sp)
 2008204:	003e8306 	br	2007c14 <_dtoa_r+0xf4c>
 2008208:	d8800117 	ldw	r2,4(sp)
 200820c:	dc001117 	ldw	r16,68(sp)
 2008210:	dc801017 	ldw	r18,64(sp)
 2008214:	00c00d84 	movi	r3,54
 2008218:	1887c83a 	sub	r3,r3,r2
 200821c:	003d6906 	br	20077c4 <_dtoa_r+0xafc>
 2008220:	01800044 	movi	r6,1
 2008224:	3021883a 	mov	r16,r6
 2008228:	d9800f15 	stw	r6,60(sp)
 200822c:	d9802615 	stw	r6,152(sp)
 2008230:	d9800e15 	stw	r6,56(sp)
 2008234:	003b9306 	br	2007084 <_dtoa_r+0x3bc>
 2008238:	b021883a 	mov	r16,r22
 200823c:	dd800f15 	stw	r22,60(sp)
 2008240:	003b9006 	br	2007084 <_dtoa_r+0x3bc>
 2008244:	103e221e 	bne	r2,zero,2007ad0 <_dtoa_r+0xe08>
 2008248:	b880004c 	andi	r2,r23,1
 200824c:	1005003a 	cmpeq	r2,r2,zero
 2008250:	103e1f1e 	bne	r2,zero,2007ad0 <_dtoa_r+0xe08>
 2008254:	003e1b06 	br	2007ac4 <_dtoa_r+0xdfc>
 2008258:	d9001617 	ldw	r4,88(sp)
 200825c:	980b883a 	mov	r5,r19
 2008260:	01800284 	movi	r6,10
 2008264:	000f883a 	mov	r7,zero
 2008268:	20099740 	call	2009974 <__multadd>
 200826c:	d8c00e17 	ldw	r3,56(sp)
 2008270:	1027883a 	mov	r19,r2
 2008274:	d8c00f15 	stw	r3,60(sp)
 2008278:	003cd306 	br	20075c8 <_dtoa_r+0x900>

0200827c <__sflags>:
 200827c:	28c00007 	ldb	r3,0(r5)
 2008280:	00801c84 	movi	r2,114
 2008284:	18800926 	beq	r3,r2,20082ac <__sflags+0x30>
 2008288:	00801dc4 	movi	r2,119
 200828c:	18801426 	beq	r3,r2,20082e0 <__sflags+0x64>
 2008290:	00801844 	movi	r2,97
 2008294:	18801626 	beq	r3,r2,20082f0 <__sflags+0x74>
 2008298:	0007883a 	mov	r3,zero
 200829c:	00800584 	movi	r2,22
 20082a0:	20800015 	stw	r2,0(r4)
 20082a4:	1805883a 	mov	r2,r3
 20082a8:	f800283a 	ret
 20082ac:	000f883a 	mov	r7,zero
 20082b0:	0011883a 	mov	r8,zero
 20082b4:	00c00104 	movi	r3,4
 20082b8:	28800047 	ldb	r2,1(r5)
 20082bc:	10000426 	beq	r2,zero,20082d0 <__sflags+0x54>
 20082c0:	01000ac4 	movi	r4,43
 20082c4:	11000e26 	beq	r2,r4,2008300 <__sflags+0x84>
 20082c8:	28800087 	ldb	r2,2(r5)
 20082cc:	11000c26 	beq	r2,r4,2008300 <__sflags+0x84>
 20082d0:	3a04b03a 	or	r2,r7,r8
 20082d4:	30800015 	stw	r2,0(r6)
 20082d8:	1805883a 	mov	r2,r3
 20082dc:	f800283a 	ret
 20082e0:	01c00044 	movi	r7,1
 20082e4:	02018004 	movi	r8,1536
 20082e8:	00c00204 	movi	r3,8
 20082ec:	003ff206 	br	20082b8 <__sflags+0x3c>
 20082f0:	01c00044 	movi	r7,1
 20082f4:	02008204 	movi	r8,520
 20082f8:	00c04204 	movi	r3,264
 20082fc:	003fee06 	br	20082b8 <__sflags+0x3c>
 2008300:	00bffcc4 	movi	r2,-13
 2008304:	1884703a 	and	r2,r3,r2
 2008308:	01c00084 	movi	r7,2
 200830c:	10c00414 	ori	r3,r2,16
 2008310:	3a04b03a 	or	r2,r7,r8
 2008314:	30800015 	stw	r2,0(r6)
 2008318:	003fef06 	br	20082d8 <__sflags+0x5c>

0200831c <__sfvwrite_r>:
 200831c:	30800217 	ldw	r2,8(r6)
 2008320:	defff504 	addi	sp,sp,-44
 2008324:	df000915 	stw	fp,36(sp)
 2008328:	dd800715 	stw	r22,28(sp)
 200832c:	dc800315 	stw	r18,12(sp)
 2008330:	dfc00a15 	stw	ra,40(sp)
 2008334:	ddc00815 	stw	r23,32(sp)
 2008338:	dd400615 	stw	r21,24(sp)
 200833c:	dd000515 	stw	r20,20(sp)
 2008340:	dcc00415 	stw	r19,16(sp)
 2008344:	dc400215 	stw	r17,8(sp)
 2008348:	dc000115 	stw	r16,4(sp)
 200834c:	302d883a 	mov	r22,r6
 2008350:	2039883a 	mov	fp,r4
 2008354:	2825883a 	mov	r18,r5
 2008358:	10001c26 	beq	r2,zero,20083cc <__sfvwrite_r+0xb0>
 200835c:	29c0030b 	ldhu	r7,12(r5)
 2008360:	3880020c 	andi	r2,r7,8
 2008364:	10002726 	beq	r2,zero,2008404 <__sfvwrite_r+0xe8>
 2008368:	28800417 	ldw	r2,16(r5)
 200836c:	10002526 	beq	r2,zero,2008404 <__sfvwrite_r+0xe8>
 2008370:	3880008c 	andi	r2,r7,2
 2008374:	b5400017 	ldw	r21,0(r22)
 2008378:	10002826 	beq	r2,zero,200841c <__sfvwrite_r+0x100>
 200837c:	0021883a 	mov	r16,zero
 2008380:	0023883a 	mov	r17,zero
 2008384:	880d883a 	mov	r6,r17
 2008388:	e009883a 	mov	r4,fp
 200838c:	00810004 	movi	r2,1024
 2008390:	80006e26 	beq	r16,zero,200854c <__sfvwrite_r+0x230>
 2008394:	800f883a 	mov	r7,r16
 2008398:	91400717 	ldw	r5,28(r18)
 200839c:	1400012e 	bgeu	r2,r16,20083a4 <__sfvwrite_r+0x88>
 20083a0:	100f883a 	mov	r7,r2
 20083a4:	90c00917 	ldw	r3,36(r18)
 20083a8:	183ee83a 	callr	r3
 20083ac:	1007883a 	mov	r3,r2
 20083b0:	80a1c83a 	sub	r16,r16,r2
 20083b4:	88a3883a 	add	r17,r17,r2
 20083b8:	00806d0e 	bge	zero,r2,2008570 <__sfvwrite_r+0x254>
 20083bc:	b0800217 	ldw	r2,8(r22)
 20083c0:	10c5c83a 	sub	r2,r2,r3
 20083c4:	b0800215 	stw	r2,8(r22)
 20083c8:	103fee1e 	bne	r2,zero,2008384 <__sfvwrite_r+0x68>
 20083cc:	0009883a 	mov	r4,zero
 20083d0:	2005883a 	mov	r2,r4
 20083d4:	dfc00a17 	ldw	ra,40(sp)
 20083d8:	df000917 	ldw	fp,36(sp)
 20083dc:	ddc00817 	ldw	r23,32(sp)
 20083e0:	dd800717 	ldw	r22,28(sp)
 20083e4:	dd400617 	ldw	r21,24(sp)
 20083e8:	dd000517 	ldw	r20,20(sp)
 20083ec:	dcc00417 	ldw	r19,16(sp)
 20083f0:	dc800317 	ldw	r18,12(sp)
 20083f4:	dc400217 	ldw	r17,8(sp)
 20083f8:	dc000117 	ldw	r16,4(sp)
 20083fc:	dec00b04 	addi	sp,sp,44
 2008400:	f800283a 	ret
 2008404:	20068d80 	call	20068d8 <__swsetup_r>
 2008408:	1000e41e 	bne	r2,zero,200879c <__sfvwrite_r+0x480>
 200840c:	91c0030b 	ldhu	r7,12(r18)
 2008410:	b5400017 	ldw	r21,0(r22)
 2008414:	3880008c 	andi	r2,r7,2
 2008418:	103fd81e 	bne	r2,zero,200837c <__sfvwrite_r+0x60>
 200841c:	3880004c 	andi	r2,r7,1
 2008420:	1005003a 	cmpeq	r2,r2,zero
 2008424:	10005726 	beq	r2,zero,2008584 <__sfvwrite_r+0x268>
 2008428:	0029883a 	mov	r20,zero
 200842c:	002f883a 	mov	r23,zero
 2008430:	a0004226 	beq	r20,zero,200853c <__sfvwrite_r+0x220>
 2008434:	3880800c 	andi	r2,r7,512
 2008438:	94000217 	ldw	r16,8(r18)
 200843c:	10008b26 	beq	r2,zero,200866c <__sfvwrite_r+0x350>
 2008440:	800d883a 	mov	r6,r16
 2008444:	a400a536 	bltu	r20,r16,20086dc <__sfvwrite_r+0x3c0>
 2008448:	3881200c 	andi	r2,r7,1152
 200844c:	10002726 	beq	r2,zero,20084ec <__sfvwrite_r+0x1d0>
 2008450:	90800517 	ldw	r2,20(r18)
 2008454:	92000417 	ldw	r8,16(r18)
 2008458:	91400017 	ldw	r5,0(r18)
 200845c:	1087883a 	add	r3,r2,r2
 2008460:	1887883a 	add	r3,r3,r2
 2008464:	1808d7fa 	srli	r4,r3,31
 2008468:	2a21c83a 	sub	r16,r5,r8
 200846c:	80800044 	addi	r2,r16,1
 2008470:	20c9883a 	add	r4,r4,r3
 2008474:	2027d07a 	srai	r19,r4,1
 2008478:	a085883a 	add	r2,r20,r2
 200847c:	980d883a 	mov	r6,r19
 2008480:	9880022e 	bgeu	r19,r2,200848c <__sfvwrite_r+0x170>
 2008484:	1027883a 	mov	r19,r2
 2008488:	100d883a 	mov	r6,r2
 200848c:	3881000c 	andi	r2,r7,1024
 2008490:	1000b826 	beq	r2,zero,2008774 <__sfvwrite_r+0x458>
 2008494:	300b883a 	mov	r5,r6
 2008498:	e009883a 	mov	r4,fp
 200849c:	20021d40 	call	20021d4 <_malloc_r>
 20084a0:	10003126 	beq	r2,zero,2008568 <__sfvwrite_r+0x24c>
 20084a4:	91400417 	ldw	r5,16(r18)
 20084a8:	1009883a 	mov	r4,r2
 20084ac:	800d883a 	mov	r6,r16
 20084b0:	1023883a 	mov	r17,r2
 20084b4:	20029140 	call	2002914 <memcpy>
 20084b8:	90c0030b 	ldhu	r3,12(r18)
 20084bc:	00beffc4 	movi	r2,-1025
 20084c0:	1886703a 	and	r3,r3,r2
 20084c4:	18c02014 	ori	r3,r3,128
 20084c8:	90c0030d 	sth	r3,12(r18)
 20084cc:	9c07c83a 	sub	r3,r19,r16
 20084d0:	8c05883a 	add	r2,r17,r16
 20084d4:	a00d883a 	mov	r6,r20
 20084d8:	a021883a 	mov	r16,r20
 20084dc:	90800015 	stw	r2,0(r18)
 20084e0:	90c00215 	stw	r3,8(r18)
 20084e4:	94400415 	stw	r17,16(r18)
 20084e8:	94c00515 	stw	r19,20(r18)
 20084ec:	91000017 	ldw	r4,0(r18)
 20084f0:	b80b883a 	mov	r5,r23
 20084f4:	a023883a 	mov	r17,r20
 20084f8:	2008b740 	call	2008b74 <memmove>
 20084fc:	90c00217 	ldw	r3,8(r18)
 2008500:	90800017 	ldw	r2,0(r18)
 2008504:	a027883a 	mov	r19,r20
 2008508:	1c07c83a 	sub	r3,r3,r16
 200850c:	1405883a 	add	r2,r2,r16
 2008510:	90c00215 	stw	r3,8(r18)
 2008514:	a021883a 	mov	r16,r20
 2008518:	90800015 	stw	r2,0(r18)
 200851c:	b0800217 	ldw	r2,8(r22)
 2008520:	1405c83a 	sub	r2,r2,r16
 2008524:	b0800215 	stw	r2,8(r22)
 2008528:	103fa826 	beq	r2,zero,20083cc <__sfvwrite_r+0xb0>
 200852c:	a469c83a 	sub	r20,r20,r17
 2008530:	91c0030b 	ldhu	r7,12(r18)
 2008534:	bcef883a 	add	r23,r23,r19
 2008538:	a03fbe1e 	bne	r20,zero,2008434 <__sfvwrite_r+0x118>
 200853c:	adc00017 	ldw	r23,0(r21)
 2008540:	ad000117 	ldw	r20,4(r21)
 2008544:	ad400204 	addi	r21,r21,8
 2008548:	003fb906 	br	2008430 <__sfvwrite_r+0x114>
 200854c:	ac400017 	ldw	r17,0(r21)
 2008550:	ac000117 	ldw	r16,4(r21)
 2008554:	ad400204 	addi	r21,r21,8
 2008558:	003f8a06 	br	2008384 <__sfvwrite_r+0x68>
 200855c:	91400417 	ldw	r5,16(r18)
 2008560:	e009883a 	mov	r4,fp
 2008564:	20015c40 	call	20015c4 <_free_r>
 2008568:	00800304 	movi	r2,12
 200856c:	e0800015 	stw	r2,0(fp)
 2008570:	9080030b 	ldhu	r2,12(r18)
 2008574:	013fffc4 	movi	r4,-1
 2008578:	10801014 	ori	r2,r2,64
 200857c:	9080030d 	sth	r2,12(r18)
 2008580:	003f9306 	br	20083d0 <__sfvwrite_r+0xb4>
 2008584:	0027883a 	mov	r19,zero
 2008588:	002f883a 	mov	r23,zero
 200858c:	d8000015 	stw	zero,0(sp)
 2008590:	0029883a 	mov	r20,zero
 2008594:	98001e26 	beq	r19,zero,2008610 <__sfvwrite_r+0x2f4>
 2008598:	d8c00017 	ldw	r3,0(sp)
 200859c:	1804c03a 	cmpne	r2,r3,zero
 20085a0:	10005e26 	beq	r2,zero,200871c <__sfvwrite_r+0x400>
 20085a4:	9821883a 	mov	r16,r19
 20085a8:	a4c0012e 	bgeu	r20,r19,20085b0 <__sfvwrite_r+0x294>
 20085ac:	a021883a 	mov	r16,r20
 20085b0:	91000017 	ldw	r4,0(r18)
 20085b4:	90800417 	ldw	r2,16(r18)
 20085b8:	91800217 	ldw	r6,8(r18)
 20085bc:	91c00517 	ldw	r7,20(r18)
 20085c0:	1100022e 	bgeu	r2,r4,20085cc <__sfvwrite_r+0x2b0>
 20085c4:	31e3883a 	add	r17,r6,r7
 20085c8:	8c001616 	blt	r17,r16,2008624 <__sfvwrite_r+0x308>
 20085cc:	81c03816 	blt	r16,r7,20086b0 <__sfvwrite_r+0x394>
 20085d0:	90c00917 	ldw	r3,36(r18)
 20085d4:	91400717 	ldw	r5,28(r18)
 20085d8:	e009883a 	mov	r4,fp
 20085dc:	b80d883a 	mov	r6,r23
 20085e0:	183ee83a 	callr	r3
 20085e4:	1023883a 	mov	r17,r2
 20085e8:	00bfe10e 	bge	zero,r2,2008570 <__sfvwrite_r+0x254>
 20085ec:	a469c83a 	sub	r20,r20,r17
 20085f0:	a0001826 	beq	r20,zero,2008654 <__sfvwrite_r+0x338>
 20085f4:	b0800217 	ldw	r2,8(r22)
 20085f8:	1445c83a 	sub	r2,r2,r17
 20085fc:	b0800215 	stw	r2,8(r22)
 2008600:	103f7226 	beq	r2,zero,20083cc <__sfvwrite_r+0xb0>
 2008604:	9c67c83a 	sub	r19,r19,r17
 2008608:	bc6f883a 	add	r23,r23,r17
 200860c:	983fe21e 	bne	r19,zero,2008598 <__sfvwrite_r+0x27c>
 2008610:	adc00017 	ldw	r23,0(r21)
 2008614:	acc00117 	ldw	r19,4(r21)
 2008618:	ad400204 	addi	r21,r21,8
 200861c:	d8000015 	stw	zero,0(sp)
 2008620:	003fdc06 	br	2008594 <__sfvwrite_r+0x278>
 2008624:	b80b883a 	mov	r5,r23
 2008628:	880d883a 	mov	r6,r17
 200862c:	2008b740 	call	2008b74 <memmove>
 2008630:	90c00017 	ldw	r3,0(r18)
 2008634:	e009883a 	mov	r4,fp
 2008638:	900b883a 	mov	r5,r18
 200863c:	1c47883a 	add	r3,r3,r17
 2008640:	90c00015 	stw	r3,0(r18)
 2008644:	2000c180 	call	2000c18 <_fflush_r>
 2008648:	103fc91e 	bne	r2,zero,2008570 <__sfvwrite_r+0x254>
 200864c:	a469c83a 	sub	r20,r20,r17
 2008650:	a03fe81e 	bne	r20,zero,20085f4 <__sfvwrite_r+0x2d8>
 2008654:	e009883a 	mov	r4,fp
 2008658:	900b883a 	mov	r5,r18
 200865c:	2000c180 	call	2000c18 <_fflush_r>
 2008660:	103fc31e 	bne	r2,zero,2008570 <__sfvwrite_r+0x254>
 2008664:	d8000015 	stw	zero,0(sp)
 2008668:	003fe206 	br	20085f4 <__sfvwrite_r+0x2d8>
 200866c:	91000017 	ldw	r4,0(r18)
 2008670:	90800417 	ldw	r2,16(r18)
 2008674:	1100022e 	bgeu	r2,r4,2008680 <__sfvwrite_r+0x364>
 2008678:	8023883a 	mov	r17,r16
 200867c:	85003136 	bltu	r16,r20,2008744 <__sfvwrite_r+0x428>
 2008680:	91c00517 	ldw	r7,20(r18)
 2008684:	a1c01836 	bltu	r20,r7,20086e8 <__sfvwrite_r+0x3cc>
 2008688:	90c00917 	ldw	r3,36(r18)
 200868c:	91400717 	ldw	r5,28(r18)
 2008690:	e009883a 	mov	r4,fp
 2008694:	b80d883a 	mov	r6,r23
 2008698:	183ee83a 	callr	r3
 200869c:	1021883a 	mov	r16,r2
 20086a0:	00bfb30e 	bge	zero,r2,2008570 <__sfvwrite_r+0x254>
 20086a4:	1023883a 	mov	r17,r2
 20086a8:	1027883a 	mov	r19,r2
 20086ac:	003f9b06 	br	200851c <__sfvwrite_r+0x200>
 20086b0:	b80b883a 	mov	r5,r23
 20086b4:	800d883a 	mov	r6,r16
 20086b8:	2008b740 	call	2008b74 <memmove>
 20086bc:	90c00217 	ldw	r3,8(r18)
 20086c0:	90800017 	ldw	r2,0(r18)
 20086c4:	8023883a 	mov	r17,r16
 20086c8:	1c07c83a 	sub	r3,r3,r16
 20086cc:	1405883a 	add	r2,r2,r16
 20086d0:	90c00215 	stw	r3,8(r18)
 20086d4:	90800015 	stw	r2,0(r18)
 20086d8:	003fc406 	br	20085ec <__sfvwrite_r+0x2d0>
 20086dc:	a00d883a 	mov	r6,r20
 20086e0:	a021883a 	mov	r16,r20
 20086e4:	003f8106 	br	20084ec <__sfvwrite_r+0x1d0>
 20086e8:	b80b883a 	mov	r5,r23
 20086ec:	a00d883a 	mov	r6,r20
 20086f0:	2008b740 	call	2008b74 <memmove>
 20086f4:	90c00217 	ldw	r3,8(r18)
 20086f8:	90800017 	ldw	r2,0(r18)
 20086fc:	a021883a 	mov	r16,r20
 2008700:	1d07c83a 	sub	r3,r3,r20
 2008704:	1505883a 	add	r2,r2,r20
 2008708:	a023883a 	mov	r17,r20
 200870c:	a027883a 	mov	r19,r20
 2008710:	90c00215 	stw	r3,8(r18)
 2008714:	90800015 	stw	r2,0(r18)
 2008718:	003f8006 	br	200851c <__sfvwrite_r+0x200>
 200871c:	b809883a 	mov	r4,r23
 2008720:	01400284 	movi	r5,10
 2008724:	980d883a 	mov	r6,r19
 2008728:	2008a900 	call	2008a90 <memchr>
 200872c:	10001726 	beq	r2,zero,200878c <__sfvwrite_r+0x470>
 2008730:	15c5c83a 	sub	r2,r2,r23
 2008734:	15000044 	addi	r20,r2,1
 2008738:	00800044 	movi	r2,1
 200873c:	d8800015 	stw	r2,0(sp)
 2008740:	003f9806 	br	20085a4 <__sfvwrite_r+0x288>
 2008744:	b80b883a 	mov	r5,r23
 2008748:	800d883a 	mov	r6,r16
 200874c:	2008b740 	call	2008b74 <memmove>
 2008750:	90c00017 	ldw	r3,0(r18)
 2008754:	e009883a 	mov	r4,fp
 2008758:	900b883a 	mov	r5,r18
 200875c:	1c07883a 	add	r3,r3,r16
 2008760:	90c00015 	stw	r3,0(r18)
 2008764:	8027883a 	mov	r19,r16
 2008768:	2000c180 	call	2000c18 <_fflush_r>
 200876c:	103f6b26 	beq	r2,zero,200851c <__sfvwrite_r+0x200>
 2008770:	003f7f06 	br	2008570 <__sfvwrite_r+0x254>
 2008774:	400b883a 	mov	r5,r8
 2008778:	e009883a 	mov	r4,fp
 200877c:	2009d580 	call	2009d58 <_realloc_r>
 2008780:	103f7626 	beq	r2,zero,200855c <__sfvwrite_r+0x240>
 2008784:	1023883a 	mov	r17,r2
 2008788:	003f5006 	br	20084cc <__sfvwrite_r+0x1b0>
 200878c:	00c00044 	movi	r3,1
 2008790:	9d000044 	addi	r20,r19,1
 2008794:	d8c00015 	stw	r3,0(sp)
 2008798:	003f8206 	br	20085a4 <__sfvwrite_r+0x288>
 200879c:	9080030b 	ldhu	r2,12(r18)
 20087a0:	00c00244 	movi	r3,9
 20087a4:	013fffc4 	movi	r4,-1
 20087a8:	10801014 	ori	r2,r2,64
 20087ac:	9080030d 	sth	r2,12(r18)
 20087b0:	e0c00015 	stw	r3,0(fp)
 20087b4:	003f0606 	br	20083d0 <__sfvwrite_r+0xb4>

020087b8 <_isatty_r>:
 20087b8:	defffd04 	addi	sp,sp,-12
 20087bc:	dc000015 	stw	r16,0(sp)
 20087c0:	04008074 	movhi	r16,513
 20087c4:	841d6a04 	addi	r16,r16,30120
 20087c8:	dc400115 	stw	r17,4(sp)
 20087cc:	80000015 	stw	zero,0(r16)
 20087d0:	2023883a 	mov	r17,r4
 20087d4:	2809883a 	mov	r4,r5
 20087d8:	dfc00215 	stw	ra,8(sp)
 20087dc:	20106340 	call	2010634 <isatty>
 20087e0:	1007883a 	mov	r3,r2
 20087e4:	00bfffc4 	movi	r2,-1
 20087e8:	18800626 	beq	r3,r2,2008804 <_isatty_r+0x4c>
 20087ec:	1805883a 	mov	r2,r3
 20087f0:	dfc00217 	ldw	ra,8(sp)
 20087f4:	dc400117 	ldw	r17,4(sp)
 20087f8:	dc000017 	ldw	r16,0(sp)
 20087fc:	dec00304 	addi	sp,sp,12
 2008800:	f800283a 	ret
 2008804:	80800017 	ldw	r2,0(r16)
 2008808:	103ff826 	beq	r2,zero,20087ec <_isatty_r+0x34>
 200880c:	88800015 	stw	r2,0(r17)
 2008810:	1805883a 	mov	r2,r3
 2008814:	dfc00217 	ldw	ra,8(sp)
 2008818:	dc400117 	ldw	r17,4(sp)
 200881c:	dc000017 	ldw	r16,0(sp)
 2008820:	dec00304 	addi	sp,sp,12
 2008824:	f800283a 	ret

02008828 <iswspace>:
 2008828:	00803fc4 	movi	r2,255
 200882c:	0007883a 	mov	r3,zero
 2008830:	11000636 	bltu	r2,r4,200884c <iswspace+0x24>
 2008834:	00808074 	movhi	r2,513
 2008838:	10968d04 	addi	r2,r2,23092
 200883c:	10c00017 	ldw	r3,0(r2)
 2008840:	1907883a 	add	r3,r3,r4
 2008844:	18800003 	ldbu	r2,0(r3)
 2008848:	10c0020c 	andi	r3,r2,8
 200884c:	1805883a 	mov	r2,r3
 2008850:	f800283a 	ret

02008854 <__locale_charset>:
 2008854:	d0a00617 	ldw	r2,-32744(gp)
 2008858:	f800283a 	ret

0200885c <_localeconv_r>:
 200885c:	00808074 	movhi	r2,513
 2008860:	108ef104 	addi	r2,r2,15300
 2008864:	f800283a 	ret

02008868 <localeconv>:
 2008868:	00808074 	movhi	r2,513
 200886c:	10968904 	addi	r2,r2,23076
 2008870:	11000017 	ldw	r4,0(r2)
 2008874:	200885c1 	jmpi	200885c <_localeconv_r>

02008878 <_setlocale_r>:
 2008878:	defffc04 	addi	sp,sp,-16
 200887c:	00c08074 	movhi	r3,513
 2008880:	18ce1b04 	addi	r3,r3,14444
 2008884:	dc800215 	stw	r18,8(sp)
 2008888:	dc400115 	stw	r17,4(sp)
 200888c:	dc000015 	stw	r16,0(sp)
 2008890:	2023883a 	mov	r17,r4
 2008894:	2825883a 	mov	r18,r5
 2008898:	dfc00315 	stw	ra,12(sp)
 200889c:	3021883a 	mov	r16,r6
 20088a0:	3009883a 	mov	r4,r6
 20088a4:	180b883a 	mov	r5,r3
 20088a8:	30000926 	beq	r6,zero,20088d0 <_setlocale_r+0x58>
 20088ac:	200a5580 	call	200a558 <strcmp>
 20088b0:	8009883a 	mov	r4,r16
 20088b4:	01408074 	movhi	r5,513
 20088b8:	294e2c04 	addi	r5,r5,14512
 20088bc:	10000b1e 	bne	r2,zero,20088ec <_setlocale_r+0x74>
 20088c0:	8c000d15 	stw	r16,52(r17)
 20088c4:	8c800c15 	stw	r18,48(r17)
 20088c8:	00c08074 	movhi	r3,513
 20088cc:	18ce1b04 	addi	r3,r3,14444
 20088d0:	1805883a 	mov	r2,r3
 20088d4:	dfc00317 	ldw	ra,12(sp)
 20088d8:	dc800217 	ldw	r18,8(sp)
 20088dc:	dc400117 	ldw	r17,4(sp)
 20088e0:	dc000017 	ldw	r16,0(sp)
 20088e4:	dec00404 	addi	sp,sp,16
 20088e8:	f800283a 	ret
 20088ec:	200a5580 	call	200a558 <strcmp>
 20088f0:	0007883a 	mov	r3,zero
 20088f4:	103ff226 	beq	r2,zero,20088c0 <_setlocale_r+0x48>
 20088f8:	003ff506 	br	20088d0 <_setlocale_r+0x58>

020088fc <setlocale>:
 20088fc:	01808074 	movhi	r6,513
 2008900:	31968904 	addi	r6,r6,23076
 2008904:	2007883a 	mov	r3,r4
 2008908:	31000017 	ldw	r4,0(r6)
 200890c:	280d883a 	mov	r6,r5
 2008910:	180b883a 	mov	r5,r3
 2008914:	20088781 	jmpi	2008878 <_setlocale_r>

02008918 <_lseek_r>:
 2008918:	defffd04 	addi	sp,sp,-12
 200891c:	dc000015 	stw	r16,0(sp)
 2008920:	04008074 	movhi	r16,513
 2008924:	841d6a04 	addi	r16,r16,30120
 2008928:	dc400115 	stw	r17,4(sp)
 200892c:	80000015 	stw	zero,0(r16)
 2008930:	2023883a 	mov	r17,r4
 2008934:	2809883a 	mov	r4,r5
 2008938:	300b883a 	mov	r5,r6
 200893c:	380d883a 	mov	r6,r7
 2008940:	dfc00215 	stw	ra,8(sp)
 2008944:	20108440 	call	2010844 <lseek>
 2008948:	1007883a 	mov	r3,r2
 200894c:	00bfffc4 	movi	r2,-1
 2008950:	18800626 	beq	r3,r2,200896c <_lseek_r+0x54>
 2008954:	1805883a 	mov	r2,r3
 2008958:	dfc00217 	ldw	ra,8(sp)
 200895c:	dc400117 	ldw	r17,4(sp)
 2008960:	dc000017 	ldw	r16,0(sp)
 2008964:	dec00304 	addi	sp,sp,12
 2008968:	f800283a 	ret
 200896c:	80800017 	ldw	r2,0(r16)
 2008970:	103ff826 	beq	r2,zero,2008954 <_lseek_r+0x3c>
 2008974:	88800015 	stw	r2,0(r17)
 2008978:	1805883a 	mov	r2,r3
 200897c:	dfc00217 	ldw	ra,8(sp)
 2008980:	dc400117 	ldw	r17,4(sp)
 2008984:	dc000017 	ldw	r16,0(sp)
 2008988:	dec00304 	addi	sp,sp,12
 200898c:	f800283a 	ret

02008990 <_mbrtowc_r>:
 2008990:	defffc04 	addi	sp,sp,-16
 2008994:	dc400215 	stw	r17,8(sp)
 2008998:	dc000115 	stw	r16,4(sp)
 200899c:	dfc00315 	stw	ra,12(sp)
 20089a0:	dc000417 	ldw	r16,16(sp)
 20089a4:	2023883a 	mov	r17,r4
 20089a8:	30000f26 	beq	r6,zero,20089e8 <_mbrtowc_r+0x58>
 20089ac:	dc000015 	stw	r16,0(sp)
 20089b0:	2008a500 	call	2008a50 <_mbtowc_r>
 20089b4:	1007883a 	mov	r3,r2
 20089b8:	00bfffc4 	movi	r2,-1
 20089bc:	1809883a 	mov	r4,r3
 20089c0:	1880111e 	bne	r3,r2,2008a08 <_mbrtowc_r+0x78>
 20089c4:	80000015 	stw	zero,0(r16)
 20089c8:	00802284 	movi	r2,138
 20089cc:	88800015 	stw	r2,0(r17)
 20089d0:	2005883a 	mov	r2,r4
 20089d4:	dfc00317 	ldw	ra,12(sp)
 20089d8:	dc400217 	ldw	r17,8(sp)
 20089dc:	dc000117 	ldw	r16,4(sp)
 20089e0:	dec00404 	addi	sp,sp,16
 20089e4:	f800283a 	ret
 20089e8:	000b883a 	mov	r5,zero
 20089ec:	01808074 	movhi	r6,513
 20089f0:	318e2c04 	addi	r6,r6,14512
 20089f4:	01c00044 	movi	r7,1
 20089f8:	dc000015 	stw	r16,0(sp)
 20089fc:	2008a500 	call	2008a50 <_mbtowc_r>
 2008a00:	1007883a 	mov	r3,r2
 2008a04:	003fec06 	br	20089b8 <_mbrtowc_r+0x28>
 2008a08:	1809883a 	mov	r4,r3
 2008a0c:	003ff006 	br	20089d0 <_mbrtowc_r+0x40>

02008a10 <mbrtowc>:
 2008a10:	00808074 	movhi	r2,513
 2008a14:	10968904 	addi	r2,r2,23076
 2008a18:	2017883a 	mov	r11,r4
 2008a1c:	11000017 	ldw	r4,0(r2)
 2008a20:	defffe04 	addi	sp,sp,-8
 2008a24:	3013883a 	mov	r9,r6
 2008a28:	2805883a 	mov	r2,r5
 2008a2c:	d9c00015 	stw	r7,0(sp)
 2008a30:	580b883a 	mov	r5,r11
 2008a34:	100d883a 	mov	r6,r2
 2008a38:	480f883a 	mov	r7,r9
 2008a3c:	dfc00115 	stw	ra,4(sp)
 2008a40:	20089900 	call	2008990 <_mbrtowc_r>
 2008a44:	dfc00117 	ldw	ra,4(sp)
 2008a48:	dec00204 	addi	sp,sp,8
 2008a4c:	f800283a 	ret

02008a50 <_mbtowc_r>:
 2008a50:	deffff04 	addi	sp,sp,-4
 2008a54:	0005883a 	mov	r2,zero
 2008a58:	28000326 	beq	r5,zero,2008a68 <_mbtowc_r+0x18>
 2008a5c:	3000041e 	bne	r6,zero,2008a70 <_mbtowc_r+0x20>
 2008a60:	dec00104 	addi	sp,sp,4
 2008a64:	f800283a 	ret
 2008a68:	d80b883a 	mov	r5,sp
 2008a6c:	303ffc26 	beq	r6,zero,2008a60 <_mbtowc_r+0x10>
 2008a70:	00bfff84 	movi	r2,-2
 2008a74:	383ffa26 	beq	r7,zero,2008a60 <_mbtowc_r+0x10>
 2008a78:	30800003 	ldbu	r2,0(r6)
 2008a7c:	28800015 	stw	r2,0(r5)
 2008a80:	30c00003 	ldbu	r3,0(r6)
 2008a84:	1804c03a 	cmpne	r2,r3,zero
 2008a88:	dec00104 	addi	sp,sp,4
 2008a8c:	f800283a 	ret

02008a90 <memchr>:
 2008a90:	008000c4 	movi	r2,3
 2008a94:	29403fcc 	andi	r5,r5,255
 2008a98:	2007883a 	mov	r3,r4
 2008a9c:	1180022e 	bgeu	r2,r6,2008aa8 <memchr+0x18>
 2008aa0:	2084703a 	and	r2,r4,r2
 2008aa4:	10000b26 	beq	r2,zero,2008ad4 <memchr+0x44>
 2008aa8:	313fffc4 	addi	r4,r6,-1
 2008aac:	3000051e 	bne	r6,zero,2008ac4 <memchr+0x34>
 2008ab0:	00002c06 	br	2008b64 <memchr+0xd4>
 2008ab4:	213fffc4 	addi	r4,r4,-1
 2008ab8:	00bfffc4 	movi	r2,-1
 2008abc:	18c00044 	addi	r3,r3,1
 2008ac0:	20802826 	beq	r4,r2,2008b64 <memchr+0xd4>
 2008ac4:	18800003 	ldbu	r2,0(r3)
 2008ac8:	28bffa1e 	bne	r5,r2,2008ab4 <memchr+0x24>
 2008acc:	1805883a 	mov	r2,r3
 2008ad0:	f800283a 	ret
 2008ad4:	0011883a 	mov	r8,zero
 2008ad8:	0007883a 	mov	r3,zero
 2008adc:	01c00104 	movi	r7,4
 2008ae0:	4004923a 	slli	r2,r8,8
 2008ae4:	18c00044 	addi	r3,r3,1
 2008ae8:	1151883a 	add	r8,r2,r5
 2008aec:	19fffc1e 	bne	r3,r7,2008ae0 <memchr+0x50>
 2008af0:	02bfbff4 	movhi	r10,65279
 2008af4:	52bfbfc4 	addi	r10,r10,-257
 2008af8:	02602074 	movhi	r9,32897
 2008afc:	4a602004 	addi	r9,r9,-32640
 2008b00:	02c000c4 	movi	r11,3
 2008b04:	20800017 	ldw	r2,0(r4)
 2008b08:	31bfff04 	addi	r6,r6,-4
 2008b0c:	200f883a 	mov	r7,r4
 2008b10:	1204f03a 	xor	r2,r2,r8
 2008b14:	1287883a 	add	r3,r2,r10
 2008b18:	1a46703a 	and	r3,r3,r9
 2008b1c:	0084303a 	nor	r2,zero,r2
 2008b20:	10c4703a 	and	r2,r2,r3
 2008b24:	10000b26 	beq	r2,zero,2008b54 <memchr+0xc4>
 2008b28:	20800003 	ldbu	r2,0(r4)
 2008b2c:	28800f26 	beq	r5,r2,2008b6c <memchr+0xdc>
 2008b30:	20800043 	ldbu	r2,1(r4)
 2008b34:	21c00044 	addi	r7,r4,1
 2008b38:	28800c26 	beq	r5,r2,2008b6c <memchr+0xdc>
 2008b3c:	20800083 	ldbu	r2,2(r4)
 2008b40:	21c00084 	addi	r7,r4,2
 2008b44:	28800926 	beq	r5,r2,2008b6c <memchr+0xdc>
 2008b48:	208000c3 	ldbu	r2,3(r4)
 2008b4c:	21c000c4 	addi	r7,r4,3
 2008b50:	28800626 	beq	r5,r2,2008b6c <memchr+0xdc>
 2008b54:	21000104 	addi	r4,r4,4
 2008b58:	59bfea36 	bltu	r11,r6,2008b04 <memchr+0x74>
 2008b5c:	2007883a 	mov	r3,r4
 2008b60:	003fd106 	br	2008aa8 <memchr+0x18>
 2008b64:	0005883a 	mov	r2,zero
 2008b68:	f800283a 	ret
 2008b6c:	3805883a 	mov	r2,r7
 2008b70:	f800283a 	ret

02008b74 <memmove>:
 2008b74:	2807883a 	mov	r3,r5
 2008b78:	2011883a 	mov	r8,r4
 2008b7c:	29000c2e 	bgeu	r5,r4,2008bb0 <memmove+0x3c>
 2008b80:	298f883a 	add	r7,r5,r6
 2008b84:	21c00a2e 	bgeu	r4,r7,2008bb0 <memmove+0x3c>
 2008b88:	30000726 	beq	r6,zero,2008ba8 <memmove+0x34>
 2008b8c:	2187883a 	add	r3,r4,r6
 2008b90:	198dc83a 	sub	r6,r3,r6
 2008b94:	39ffffc4 	addi	r7,r7,-1
 2008b98:	38800003 	ldbu	r2,0(r7)
 2008b9c:	18ffffc4 	addi	r3,r3,-1
 2008ba0:	18800005 	stb	r2,0(r3)
 2008ba4:	19bffb1e 	bne	r3,r6,2008b94 <memmove+0x20>
 2008ba8:	2005883a 	mov	r2,r4
 2008bac:	f800283a 	ret
 2008bb0:	01c003c4 	movi	r7,15
 2008bb4:	39800a36 	bltu	r7,r6,2008be0 <memmove+0x6c>
 2008bb8:	303ffb26 	beq	r6,zero,2008ba8 <memmove+0x34>
 2008bbc:	400f883a 	mov	r7,r8
 2008bc0:	320d883a 	add	r6,r6,r8
 2008bc4:	28800003 	ldbu	r2,0(r5)
 2008bc8:	29400044 	addi	r5,r5,1
 2008bcc:	38800005 	stb	r2,0(r7)
 2008bd0:	39c00044 	addi	r7,r7,1
 2008bd4:	39bffb1e 	bne	r7,r6,2008bc4 <memmove+0x50>
 2008bd8:	2005883a 	mov	r2,r4
 2008bdc:	f800283a 	ret
 2008be0:	1904b03a 	or	r2,r3,r4
 2008be4:	108000cc 	andi	r2,r2,3
 2008be8:	103ff31e 	bne	r2,zero,2008bb8 <memmove+0x44>
 2008bec:	3811883a 	mov	r8,r7
 2008bf0:	180b883a 	mov	r5,r3
 2008bf4:	200f883a 	mov	r7,r4
 2008bf8:	28c00017 	ldw	r3,0(r5)
 2008bfc:	31bffc04 	addi	r6,r6,-16
 2008c00:	38c00015 	stw	r3,0(r7)
 2008c04:	28800117 	ldw	r2,4(r5)
 2008c08:	38800115 	stw	r2,4(r7)
 2008c0c:	28c00217 	ldw	r3,8(r5)
 2008c10:	38c00215 	stw	r3,8(r7)
 2008c14:	28800317 	ldw	r2,12(r5)
 2008c18:	29400404 	addi	r5,r5,16
 2008c1c:	38800315 	stw	r2,12(r7)
 2008c20:	39c00404 	addi	r7,r7,16
 2008c24:	41bff436 	bltu	r8,r6,2008bf8 <memmove+0x84>
 2008c28:	008000c4 	movi	r2,3
 2008c2c:	1180072e 	bgeu	r2,r6,2008c4c <memmove+0xd8>
 2008c30:	1007883a 	mov	r3,r2
 2008c34:	28800017 	ldw	r2,0(r5)
 2008c38:	31bfff04 	addi	r6,r6,-4
 2008c3c:	29400104 	addi	r5,r5,4
 2008c40:	38800015 	stw	r2,0(r7)
 2008c44:	39c00104 	addi	r7,r7,4
 2008c48:	19bffa36 	bltu	r3,r6,2008c34 <memmove+0xc0>
 2008c4c:	3811883a 	mov	r8,r7
 2008c50:	003fd906 	br	2008bb8 <memmove+0x44>

02008c54 <_Bfree>:
 2008c54:	28000826 	beq	r5,zero,2008c78 <_Bfree+0x24>
 2008c58:	28800117 	ldw	r2,4(r5)
 2008c5c:	21001317 	ldw	r4,76(r4)
 2008c60:	1085883a 	add	r2,r2,r2
 2008c64:	1085883a 	add	r2,r2,r2
 2008c68:	1105883a 	add	r2,r2,r4
 2008c6c:	10c00017 	ldw	r3,0(r2)
 2008c70:	28c00015 	stw	r3,0(r5)
 2008c74:	11400015 	stw	r5,0(r2)
 2008c78:	f800283a 	ret

02008c7c <__hi0bits>:
 2008c7c:	20bfffec 	andhi	r2,r4,65535
 2008c80:	10001426 	beq	r2,zero,2008cd4 <__hi0bits+0x58>
 2008c84:	0007883a 	mov	r3,zero
 2008c88:	20bfc02c 	andhi	r2,r4,65280
 2008c8c:	1000021e 	bne	r2,zero,2008c98 <__hi0bits+0x1c>
 2008c90:	2008923a 	slli	r4,r4,8
 2008c94:	18c00204 	addi	r3,r3,8
 2008c98:	20bc002c 	andhi	r2,r4,61440
 2008c9c:	1000021e 	bne	r2,zero,2008ca8 <__hi0bits+0x2c>
 2008ca0:	2008913a 	slli	r4,r4,4
 2008ca4:	18c00104 	addi	r3,r3,4
 2008ca8:	20b0002c 	andhi	r2,r4,49152
 2008cac:	1000031e 	bne	r2,zero,2008cbc <__hi0bits+0x40>
 2008cb0:	2105883a 	add	r2,r4,r4
 2008cb4:	18c00084 	addi	r3,r3,2
 2008cb8:	1089883a 	add	r4,r2,r2
 2008cbc:	20000316 	blt	r4,zero,2008ccc <__hi0bits+0x50>
 2008cc0:	2090002c 	andhi	r2,r4,16384
 2008cc4:	10000626 	beq	r2,zero,2008ce0 <__hi0bits+0x64>
 2008cc8:	18c00044 	addi	r3,r3,1
 2008ccc:	1805883a 	mov	r2,r3
 2008cd0:	f800283a 	ret
 2008cd4:	2008943a 	slli	r4,r4,16
 2008cd8:	00c00404 	movi	r3,16
 2008cdc:	003fea06 	br	2008c88 <__hi0bits+0xc>
 2008ce0:	00c00804 	movi	r3,32
 2008ce4:	1805883a 	mov	r2,r3
 2008ce8:	f800283a 	ret

02008cec <__lo0bits>:
 2008cec:	20c00017 	ldw	r3,0(r4)
 2008cf0:	188001cc 	andi	r2,r3,7
 2008cf4:	10000a26 	beq	r2,zero,2008d20 <__lo0bits+0x34>
 2008cf8:	1880004c 	andi	r2,r3,1
 2008cfc:	1005003a 	cmpeq	r2,r2,zero
 2008d00:	10002126 	beq	r2,zero,2008d88 <__lo0bits+0x9c>
 2008d04:	1880008c 	andi	r2,r3,2
 2008d08:	1000251e 	bne	r2,zero,2008da0 <__lo0bits+0xb4>
 2008d0c:	1804d0ba 	srli	r2,r3,2
 2008d10:	01400084 	movi	r5,2
 2008d14:	20800015 	stw	r2,0(r4)
 2008d18:	2805883a 	mov	r2,r5
 2008d1c:	f800283a 	ret
 2008d20:	18bfffcc 	andi	r2,r3,65535
 2008d24:	10001526 	beq	r2,zero,2008d7c <__lo0bits+0x90>
 2008d28:	000b883a 	mov	r5,zero
 2008d2c:	18803fcc 	andi	r2,r3,255
 2008d30:	1000021e 	bne	r2,zero,2008d3c <__lo0bits+0x50>
 2008d34:	1806d23a 	srli	r3,r3,8
 2008d38:	29400204 	addi	r5,r5,8
 2008d3c:	188003cc 	andi	r2,r3,15
 2008d40:	1000021e 	bne	r2,zero,2008d4c <__lo0bits+0x60>
 2008d44:	1806d13a 	srli	r3,r3,4
 2008d48:	29400104 	addi	r5,r5,4
 2008d4c:	188000cc 	andi	r2,r3,3
 2008d50:	1000021e 	bne	r2,zero,2008d5c <__lo0bits+0x70>
 2008d54:	1806d0ba 	srli	r3,r3,2
 2008d58:	29400084 	addi	r5,r5,2
 2008d5c:	1880004c 	andi	r2,r3,1
 2008d60:	1000031e 	bne	r2,zero,2008d70 <__lo0bits+0x84>
 2008d64:	1806d07a 	srli	r3,r3,1
 2008d68:	18000a26 	beq	r3,zero,2008d94 <__lo0bits+0xa8>
 2008d6c:	29400044 	addi	r5,r5,1
 2008d70:	2805883a 	mov	r2,r5
 2008d74:	20c00015 	stw	r3,0(r4)
 2008d78:	f800283a 	ret
 2008d7c:	1806d43a 	srli	r3,r3,16
 2008d80:	01400404 	movi	r5,16
 2008d84:	003fe906 	br	2008d2c <__lo0bits+0x40>
 2008d88:	000b883a 	mov	r5,zero
 2008d8c:	2805883a 	mov	r2,r5
 2008d90:	f800283a 	ret
 2008d94:	01400804 	movi	r5,32
 2008d98:	2805883a 	mov	r2,r5
 2008d9c:	f800283a 	ret
 2008da0:	1804d07a 	srli	r2,r3,1
 2008da4:	01400044 	movi	r5,1
 2008da8:	20800015 	stw	r2,0(r4)
 2008dac:	003fda06 	br	2008d18 <__lo0bits+0x2c>

02008db0 <__mcmp>:
 2008db0:	20800417 	ldw	r2,16(r4)
 2008db4:	28c00417 	ldw	r3,16(r5)
 2008db8:	10cfc83a 	sub	r7,r2,r3
 2008dbc:	38000c1e 	bne	r7,zero,2008df0 <__mcmp+0x40>
 2008dc0:	18c5883a 	add	r2,r3,r3
 2008dc4:	1085883a 	add	r2,r2,r2
 2008dc8:	10c00504 	addi	r3,r2,20
 2008dcc:	21000504 	addi	r4,r4,20
 2008dd0:	28cb883a 	add	r5,r5,r3
 2008dd4:	2085883a 	add	r2,r4,r2
 2008dd8:	10bfff04 	addi	r2,r2,-4
 2008ddc:	297fff04 	addi	r5,r5,-4
 2008de0:	11800017 	ldw	r6,0(r2)
 2008de4:	28c00017 	ldw	r3,0(r5)
 2008de8:	30c0031e 	bne	r6,r3,2008df8 <__mcmp+0x48>
 2008dec:	20bffa36 	bltu	r4,r2,2008dd8 <__mcmp+0x28>
 2008df0:	3805883a 	mov	r2,r7
 2008df4:	f800283a 	ret
 2008df8:	30c00336 	bltu	r6,r3,2008e08 <__mcmp+0x58>
 2008dfc:	01c00044 	movi	r7,1
 2008e00:	3805883a 	mov	r2,r7
 2008e04:	f800283a 	ret
 2008e08:	01ffffc4 	movi	r7,-1
 2008e0c:	003ff806 	br	2008df0 <__mcmp+0x40>

02008e10 <__ulp>:
 2008e10:	295ffc2c 	andhi	r5,r5,32752
 2008e14:	013f3034 	movhi	r4,64704
 2008e18:	290b883a 	add	r5,r5,r4
 2008e1c:	0145c83a 	sub	r2,zero,r5
 2008e20:	1007d53a 	srai	r3,r2,20
 2008e24:	000d883a 	mov	r6,zero
 2008e28:	0140040e 	bge	zero,r5,2008e3c <__ulp+0x2c>
 2008e2c:	280f883a 	mov	r7,r5
 2008e30:	3807883a 	mov	r3,r7
 2008e34:	3005883a 	mov	r2,r6
 2008e38:	f800283a 	ret
 2008e3c:	008004c4 	movi	r2,19
 2008e40:	193ffb04 	addi	r4,r3,-20
 2008e44:	10c00c0e 	bge	r2,r3,2008e78 <__ulp+0x68>
 2008e48:	008007c4 	movi	r2,31
 2008e4c:	1107c83a 	sub	r3,r2,r4
 2008e50:	00800784 	movi	r2,30
 2008e54:	01400044 	movi	r5,1
 2008e58:	11000216 	blt	r2,r4,2008e64 <__ulp+0x54>
 2008e5c:	00800044 	movi	r2,1
 2008e60:	10ca983a 	sll	r5,r2,r3
 2008e64:	000f883a 	mov	r7,zero
 2008e68:	280d883a 	mov	r6,r5
 2008e6c:	3807883a 	mov	r3,r7
 2008e70:	3005883a 	mov	r2,r6
 2008e74:	f800283a 	ret
 2008e78:	00800234 	movhi	r2,8
 2008e7c:	10cfd83a 	sra	r7,r2,r3
 2008e80:	000d883a 	mov	r6,zero
 2008e84:	3005883a 	mov	r2,r6
 2008e88:	3807883a 	mov	r3,r7
 2008e8c:	f800283a 	ret

02008e90 <__b2d>:
 2008e90:	20800417 	ldw	r2,16(r4)
 2008e94:	defff904 	addi	sp,sp,-28
 2008e98:	dd000415 	stw	r20,16(sp)
 2008e9c:	1085883a 	add	r2,r2,r2
 2008ea0:	25000504 	addi	r20,r4,20
 2008ea4:	1085883a 	add	r2,r2,r2
 2008ea8:	dc000015 	stw	r16,0(sp)
 2008eac:	a0a1883a 	add	r16,r20,r2
 2008eb0:	dd400515 	stw	r21,20(sp)
 2008eb4:	857fff17 	ldw	r21,-4(r16)
 2008eb8:	dc400115 	stw	r17,4(sp)
 2008ebc:	dfc00615 	stw	ra,24(sp)
 2008ec0:	a809883a 	mov	r4,r21
 2008ec4:	2823883a 	mov	r17,r5
 2008ec8:	dcc00315 	stw	r19,12(sp)
 2008ecc:	dc800215 	stw	r18,8(sp)
 2008ed0:	2008c7c0 	call	2008c7c <__hi0bits>
 2008ed4:	100b883a 	mov	r5,r2
 2008ed8:	00800804 	movi	r2,32
 2008edc:	1145c83a 	sub	r2,r2,r5
 2008ee0:	88800015 	stw	r2,0(r17)
 2008ee4:	00800284 	movi	r2,10
 2008ee8:	80ffff04 	addi	r3,r16,-4
 2008eec:	11401416 	blt	r2,r5,2008f40 <__b2d+0xb0>
 2008ef0:	008002c4 	movi	r2,11
 2008ef4:	1149c83a 	sub	r4,r2,r5
 2008ef8:	a0c02736 	bltu	r20,r3,2008f98 <__b2d+0x108>
 2008efc:	000d883a 	mov	r6,zero
 2008f00:	28800544 	addi	r2,r5,21
 2008f04:	a906d83a 	srl	r3,r21,r4
 2008f08:	a884983a 	sll	r2,r21,r2
 2008f0c:	1ccffc34 	orhi	r19,r3,16368
 2008f10:	11a4b03a 	or	r18,r2,r6
 2008f14:	9005883a 	mov	r2,r18
 2008f18:	9807883a 	mov	r3,r19
 2008f1c:	dfc00617 	ldw	ra,24(sp)
 2008f20:	dd400517 	ldw	r21,20(sp)
 2008f24:	dd000417 	ldw	r20,16(sp)
 2008f28:	dcc00317 	ldw	r19,12(sp)
 2008f2c:	dc800217 	ldw	r18,8(sp)
 2008f30:	dc400117 	ldw	r17,4(sp)
 2008f34:	dc000017 	ldw	r16,0(sp)
 2008f38:	dec00704 	addi	sp,sp,28
 2008f3c:	f800283a 	ret
 2008f40:	a0c00e36 	bltu	r20,r3,2008f7c <__b2d+0xec>
 2008f44:	293ffd44 	addi	r4,r5,-11
 2008f48:	000d883a 	mov	r6,zero
 2008f4c:	20000f26 	beq	r4,zero,2008f8c <__b2d+0xfc>
 2008f50:	00800804 	movi	r2,32
 2008f54:	110bc83a 	sub	r5,r2,r4
 2008f58:	a0c01236 	bltu	r20,r3,2008fa4 <__b2d+0x114>
 2008f5c:	000f883a 	mov	r7,zero
 2008f60:	a904983a 	sll	r2,r21,r4
 2008f64:	3146d83a 	srl	r3,r6,r5
 2008f68:	3108983a 	sll	r4,r6,r4
 2008f6c:	108ffc34 	orhi	r2,r2,16368
 2008f70:	18a6b03a 	or	r19,r3,r2
 2008f74:	3924b03a 	or	r18,r7,r4
 2008f78:	003fe606 	br	2008f14 <__b2d+0x84>
 2008f7c:	293ffd44 	addi	r4,r5,-11
 2008f80:	81bffe17 	ldw	r6,-8(r16)
 2008f84:	80fffe04 	addi	r3,r16,-8
 2008f88:	203ff11e 	bne	r4,zero,2008f50 <__b2d+0xc0>
 2008f8c:	accffc34 	orhi	r19,r21,16368
 2008f90:	3025883a 	mov	r18,r6
 2008f94:	003fdf06 	br	2008f14 <__b2d+0x84>
 2008f98:	18bfff17 	ldw	r2,-4(r3)
 2008f9c:	110cd83a 	srl	r6,r2,r4
 2008fa0:	003fd706 	br	2008f00 <__b2d+0x70>
 2008fa4:	18bfff17 	ldw	r2,-4(r3)
 2008fa8:	114ed83a 	srl	r7,r2,r5
 2008fac:	003fec06 	br	2008f60 <__b2d+0xd0>

02008fb0 <__ratio>:
 2008fb0:	defff904 	addi	sp,sp,-28
 2008fb4:	dc400215 	stw	r17,8(sp)
 2008fb8:	2823883a 	mov	r17,r5
 2008fbc:	d80b883a 	mov	r5,sp
 2008fc0:	dfc00615 	stw	ra,24(sp)
 2008fc4:	dd000515 	stw	r20,20(sp)
 2008fc8:	dcc00415 	stw	r19,16(sp)
 2008fcc:	dc800315 	stw	r18,12(sp)
 2008fd0:	2025883a 	mov	r18,r4
 2008fd4:	2008e900 	call	2008e90 <__b2d>
 2008fd8:	8809883a 	mov	r4,r17
 2008fdc:	d9400104 	addi	r5,sp,4
 2008fe0:	1027883a 	mov	r19,r2
 2008fe4:	1829883a 	mov	r20,r3
 2008fe8:	2008e900 	call	2008e90 <__b2d>
 2008fec:	89000417 	ldw	r4,16(r17)
 2008ff0:	91c00417 	ldw	r7,16(r18)
 2008ff4:	d9800117 	ldw	r6,4(sp)
 2008ff8:	180b883a 	mov	r5,r3
 2008ffc:	390fc83a 	sub	r7,r7,r4
 2009000:	1009883a 	mov	r4,r2
 2009004:	d8800017 	ldw	r2,0(sp)
 2009008:	380e917a 	slli	r7,r7,5
 200900c:	2011883a 	mov	r8,r4
 2009010:	1185c83a 	sub	r2,r2,r6
 2009014:	11c5883a 	add	r2,r2,r7
 2009018:	1006953a 	slli	r3,r2,20
 200901c:	2813883a 	mov	r9,r5
 2009020:	00800d0e 	bge	zero,r2,2009058 <__ratio+0xa8>
 2009024:	1d29883a 	add	r20,r3,r20
 2009028:	a00b883a 	mov	r5,r20
 200902c:	480f883a 	mov	r7,r9
 2009030:	9809883a 	mov	r4,r19
 2009034:	400d883a 	mov	r6,r8
 2009038:	200f0340 	call	200f034 <__divdf3>
 200903c:	dfc00617 	ldw	ra,24(sp)
 2009040:	dd000517 	ldw	r20,20(sp)
 2009044:	dcc00417 	ldw	r19,16(sp)
 2009048:	dc800317 	ldw	r18,12(sp)
 200904c:	dc400217 	ldw	r17,8(sp)
 2009050:	dec00704 	addi	sp,sp,28
 2009054:	f800283a 	ret
 2009058:	28d3c83a 	sub	r9,r5,r3
 200905c:	003ff206 	br	2009028 <__ratio+0x78>

02009060 <_mprec_log10>:
 2009060:	defffe04 	addi	sp,sp,-8
 2009064:	008005c4 	movi	r2,23
 2009068:	dc000015 	stw	r16,0(sp)
 200906c:	dfc00115 	stw	ra,4(sp)
 2009070:	2021883a 	mov	r16,r4
 2009074:	11000c16 	blt	r2,r4,20090a8 <_mprec_log10+0x48>
 2009078:	200490fa 	slli	r2,r4,3
 200907c:	00c08074 	movhi	r3,513
 2009080:	18cefd04 	addi	r3,r3,15348
 2009084:	10c5883a 	add	r2,r2,r3
 2009088:	12400117 	ldw	r9,4(r2)
 200908c:	12000017 	ldw	r8,0(r2)
 2009090:	4807883a 	mov	r3,r9
 2009094:	4005883a 	mov	r2,r8
 2009098:	dfc00117 	ldw	ra,4(sp)
 200909c:	dc000017 	ldw	r16,0(sp)
 20090a0:	dec00204 	addi	sp,sp,8
 20090a4:	f800283a 	ret
 20090a8:	0011883a 	mov	r8,zero
 20090ac:	024ffc34 	movhi	r9,16368
 20090b0:	0005883a 	mov	r2,zero
 20090b4:	00d00934 	movhi	r3,16420
 20090b8:	480b883a 	mov	r5,r9
 20090bc:	4009883a 	mov	r4,r8
 20090c0:	180f883a 	mov	r7,r3
 20090c4:	100d883a 	mov	r6,r2
 20090c8:	200ec700 	call	200ec70 <__muldf3>
 20090cc:	843fffc4 	addi	r16,r16,-1
 20090d0:	1011883a 	mov	r8,r2
 20090d4:	1813883a 	mov	r9,r3
 20090d8:	803ff51e 	bne	r16,zero,20090b0 <_mprec_log10+0x50>
 20090dc:	4005883a 	mov	r2,r8
 20090e0:	4807883a 	mov	r3,r9
 20090e4:	dfc00117 	ldw	ra,4(sp)
 20090e8:	dc000017 	ldw	r16,0(sp)
 20090ec:	dec00204 	addi	sp,sp,8
 20090f0:	f800283a 	ret

020090f4 <__copybits>:
 20090f4:	297fffc4 	addi	r5,r5,-1
 20090f8:	30800417 	ldw	r2,16(r6)
 20090fc:	280bd17a 	srai	r5,r5,5
 2009100:	31800504 	addi	r6,r6,20
 2009104:	1085883a 	add	r2,r2,r2
 2009108:	294b883a 	add	r5,r5,r5
 200910c:	294b883a 	add	r5,r5,r5
 2009110:	1085883a 	add	r2,r2,r2
 2009114:	290b883a 	add	r5,r5,r4
 2009118:	3087883a 	add	r3,r6,r2
 200911c:	29400104 	addi	r5,r5,4
 2009120:	30c0052e 	bgeu	r6,r3,2009138 <__copybits+0x44>
 2009124:	30800017 	ldw	r2,0(r6)
 2009128:	31800104 	addi	r6,r6,4
 200912c:	20800015 	stw	r2,0(r4)
 2009130:	21000104 	addi	r4,r4,4
 2009134:	30fffb36 	bltu	r6,r3,2009124 <__copybits+0x30>
 2009138:	2140032e 	bgeu	r4,r5,2009148 <__copybits+0x54>
 200913c:	20000015 	stw	zero,0(r4)
 2009140:	21000104 	addi	r4,r4,4
 2009144:	217ffd36 	bltu	r4,r5,200913c <__copybits+0x48>
 2009148:	f800283a 	ret

0200914c <__any_on>:
 200914c:	20800417 	ldw	r2,16(r4)
 2009150:	2807d17a 	srai	r3,r5,5
 2009154:	21000504 	addi	r4,r4,20
 2009158:	10c00d0e 	bge	r2,r3,2009190 <__any_on+0x44>
 200915c:	1085883a 	add	r2,r2,r2
 2009160:	1085883a 	add	r2,r2,r2
 2009164:	208d883a 	add	r6,r4,r2
 2009168:	2180182e 	bgeu	r4,r6,20091cc <__any_on+0x80>
 200916c:	30bfff17 	ldw	r2,-4(r6)
 2009170:	30ffff04 	addi	r3,r6,-4
 2009174:	1000041e 	bne	r2,zero,2009188 <__any_on+0x3c>
 2009178:	20c0142e 	bgeu	r4,r3,20091cc <__any_on+0x80>
 200917c:	18ffff04 	addi	r3,r3,-4
 2009180:	18800017 	ldw	r2,0(r3)
 2009184:	103ffc26 	beq	r2,zero,2009178 <__any_on+0x2c>
 2009188:	00800044 	movi	r2,1
 200918c:	f800283a 	ret
 2009190:	18800a0e 	bge	r3,r2,20091bc <__any_on+0x70>
 2009194:	294007cc 	andi	r5,r5,31
 2009198:	28000826 	beq	r5,zero,20091bc <__any_on+0x70>
 200919c:	18c5883a 	add	r2,r3,r3
 20091a0:	1085883a 	add	r2,r2,r2
 20091a4:	208d883a 	add	r6,r4,r2
 20091a8:	30c00017 	ldw	r3,0(r6)
 20091ac:	1944d83a 	srl	r2,r3,r5
 20091b0:	1144983a 	sll	r2,r2,r5
 20091b4:	18bff41e 	bne	r3,r2,2009188 <__any_on+0x3c>
 20091b8:	003feb06 	br	2009168 <__any_on+0x1c>
 20091bc:	18c5883a 	add	r2,r3,r3
 20091c0:	1085883a 	add	r2,r2,r2
 20091c4:	208d883a 	add	r6,r4,r2
 20091c8:	003fe706 	br	2009168 <__any_on+0x1c>
 20091cc:	0005883a 	mov	r2,zero
 20091d0:	f800283a 	ret

020091d4 <_Balloc>:
 20091d4:	20c01317 	ldw	r3,76(r4)
 20091d8:	defffb04 	addi	sp,sp,-20
 20091dc:	dcc00315 	stw	r19,12(sp)
 20091e0:	dc800215 	stw	r18,8(sp)
 20091e4:	dfc00415 	stw	ra,16(sp)
 20091e8:	2825883a 	mov	r18,r5
 20091ec:	dc400115 	stw	r17,4(sp)
 20091f0:	dc000015 	stw	r16,0(sp)
 20091f4:	2027883a 	mov	r19,r4
 20091f8:	01800404 	movi	r6,16
 20091fc:	01400104 	movi	r5,4
 2009200:	18001726 	beq	r3,zero,2009260 <_Balloc+0x8c>
 2009204:	01400044 	movi	r5,1
 2009208:	9485883a 	add	r2,r18,r18
 200920c:	2ca2983a 	sll	r17,r5,r18
 2009210:	1085883a 	add	r2,r2,r2
 2009214:	10c7883a 	add	r3,r2,r3
 2009218:	1c000017 	ldw	r16,0(r3)
 200921c:	8c4d883a 	add	r6,r17,r17
 2009220:	318d883a 	add	r6,r6,r6
 2009224:	9809883a 	mov	r4,r19
 2009228:	31800504 	addi	r6,r6,20
 200922c:	80001226 	beq	r16,zero,2009278 <_Balloc+0xa4>
 2009230:	80800017 	ldw	r2,0(r16)
 2009234:	18800015 	stw	r2,0(r3)
 2009238:	80000415 	stw	zero,16(r16)
 200923c:	80000315 	stw	zero,12(r16)
 2009240:	8005883a 	mov	r2,r16
 2009244:	dfc00417 	ldw	ra,16(sp)
 2009248:	dcc00317 	ldw	r19,12(sp)
 200924c:	dc800217 	ldw	r18,8(sp)
 2009250:	dc400117 	ldw	r17,4(sp)
 2009254:	dc000017 	ldw	r16,0(sp)
 2009258:	dec00504 	addi	sp,sp,20
 200925c:	f800283a 	ret
 2009260:	200cadc0 	call	200cadc <_calloc_r>
 2009264:	1007883a 	mov	r3,r2
 2009268:	0021883a 	mov	r16,zero
 200926c:	98801315 	stw	r2,76(r19)
 2009270:	103fe41e 	bne	r2,zero,2009204 <_Balloc+0x30>
 2009274:	003ff206 	br	2009240 <_Balloc+0x6c>
 2009278:	200cadc0 	call	200cadc <_calloc_r>
 200927c:	103ff026 	beq	r2,zero,2009240 <_Balloc+0x6c>
 2009280:	1021883a 	mov	r16,r2
 2009284:	14800115 	stw	r18,4(r2)
 2009288:	14400215 	stw	r17,8(r2)
 200928c:	003fea06 	br	2009238 <_Balloc+0x64>

02009290 <__d2b>:
 2009290:	defff504 	addi	sp,sp,-44
 2009294:	dcc00515 	stw	r19,20(sp)
 2009298:	04c00044 	movi	r19,1
 200929c:	dc000215 	stw	r16,8(sp)
 20092a0:	2821883a 	mov	r16,r5
 20092a4:	980b883a 	mov	r5,r19
 20092a8:	ddc00915 	stw	r23,36(sp)
 20092ac:	dd800815 	stw	r22,32(sp)
 20092b0:	dd400715 	stw	r21,28(sp)
 20092b4:	dd000615 	stw	r20,24(sp)
 20092b8:	dc800415 	stw	r18,16(sp)
 20092bc:	dc400315 	stw	r17,12(sp)
 20092c0:	dfc00a15 	stw	ra,40(sp)
 20092c4:	3023883a 	mov	r17,r6
 20092c8:	382d883a 	mov	r22,r7
 20092cc:	ddc00b17 	ldw	r23,44(sp)
 20092d0:	20091d40 	call	20091d4 <_Balloc>
 20092d4:	1025883a 	mov	r18,r2
 20092d8:	00a00034 	movhi	r2,32768
 20092dc:	10bfffc4 	addi	r2,r2,-1
 20092e0:	8888703a 	and	r4,r17,r2
 20092e4:	202ad53a 	srli	r21,r4,20
 20092e8:	00800434 	movhi	r2,16
 20092ec:	10bfffc4 	addi	r2,r2,-1
 20092f0:	8886703a 	and	r3,r17,r2
 20092f4:	a829003a 	cmpeq	r20,r21,zero
 20092f8:	800b883a 	mov	r5,r16
 20092fc:	d8c00115 	stw	r3,4(sp)
 2009300:	94000504 	addi	r16,r18,20
 2009304:	a000021e 	bne	r20,zero,2009310 <__d2b+0x80>
 2009308:	18c00434 	orhi	r3,r3,16
 200930c:	d8c00115 	stw	r3,4(sp)
 2009310:	28002726 	beq	r5,zero,20093b0 <__d2b+0x120>
 2009314:	d809883a 	mov	r4,sp
 2009318:	d9400015 	stw	r5,0(sp)
 200931c:	2008cec0 	call	2008cec <__lo0bits>
 2009320:	100d883a 	mov	r6,r2
 2009324:	10003526 	beq	r2,zero,20093fc <__d2b+0x16c>
 2009328:	d8c00117 	ldw	r3,4(sp)
 200932c:	00800804 	movi	r2,32
 2009330:	1185c83a 	sub	r2,r2,r6
 2009334:	d9000017 	ldw	r4,0(sp)
 2009338:	1886983a 	sll	r3,r3,r2
 200933c:	1906b03a 	or	r3,r3,r4
 2009340:	90c00515 	stw	r3,20(r18)
 2009344:	d8c00117 	ldw	r3,4(sp)
 2009348:	1986d83a 	srl	r3,r3,r6
 200934c:	d8c00115 	stw	r3,4(sp)
 2009350:	180b003a 	cmpeq	r5,r3,zero
 2009354:	00800084 	movi	r2,2
 2009358:	114bc83a 	sub	r5,r2,r5
 200935c:	80c00115 	stw	r3,4(r16)
 2009360:	91400415 	stw	r5,16(r18)
 2009364:	a0001a1e 	bne	r20,zero,20093d0 <__d2b+0x140>
 2009368:	3545883a 	add	r2,r6,r21
 200936c:	10bef344 	addi	r2,r2,-1075
 2009370:	00c00d44 	movi	r3,53
 2009374:	b0800015 	stw	r2,0(r22)
 2009378:	1987c83a 	sub	r3,r3,r6
 200937c:	b8c00015 	stw	r3,0(r23)
 2009380:	9005883a 	mov	r2,r18
 2009384:	dfc00a17 	ldw	ra,40(sp)
 2009388:	ddc00917 	ldw	r23,36(sp)
 200938c:	dd800817 	ldw	r22,32(sp)
 2009390:	dd400717 	ldw	r21,28(sp)
 2009394:	dd000617 	ldw	r20,24(sp)
 2009398:	dcc00517 	ldw	r19,20(sp)
 200939c:	dc800417 	ldw	r18,16(sp)
 20093a0:	dc400317 	ldw	r17,12(sp)
 20093a4:	dc000217 	ldw	r16,8(sp)
 20093a8:	dec00b04 	addi	sp,sp,44
 20093ac:	f800283a 	ret
 20093b0:	d9000104 	addi	r4,sp,4
 20093b4:	2008cec0 	call	2008cec <__lo0bits>
 20093b8:	11800804 	addi	r6,r2,32
 20093bc:	d8800117 	ldw	r2,4(sp)
 20093c0:	94c00415 	stw	r19,16(r18)
 20093c4:	980b883a 	mov	r5,r19
 20093c8:	90800515 	stw	r2,20(r18)
 20093cc:	a03fe626 	beq	r20,zero,2009368 <__d2b+0xd8>
 20093d0:	2945883a 	add	r2,r5,r5
 20093d4:	1085883a 	add	r2,r2,r2
 20093d8:	1405883a 	add	r2,r2,r16
 20093dc:	113fff17 	ldw	r4,-4(r2)
 20093e0:	30fef384 	addi	r3,r6,-1074
 20093e4:	2820917a 	slli	r16,r5,5
 20093e8:	b0c00015 	stw	r3,0(r22)
 20093ec:	2008c7c0 	call	2008c7c <__hi0bits>
 20093f0:	80a1c83a 	sub	r16,r16,r2
 20093f4:	bc000015 	stw	r16,0(r23)
 20093f8:	003fe106 	br	2009380 <__d2b+0xf0>
 20093fc:	d8800017 	ldw	r2,0(sp)
 2009400:	90800515 	stw	r2,20(r18)
 2009404:	d8c00117 	ldw	r3,4(sp)
 2009408:	003fd106 	br	2009350 <__d2b+0xc0>

0200940c <__mdiff>:
 200940c:	defffb04 	addi	sp,sp,-20
 2009410:	dc000015 	stw	r16,0(sp)
 2009414:	2821883a 	mov	r16,r5
 2009418:	dc800215 	stw	r18,8(sp)
 200941c:	300b883a 	mov	r5,r6
 2009420:	2025883a 	mov	r18,r4
 2009424:	8009883a 	mov	r4,r16
 2009428:	dc400115 	stw	r17,4(sp)
 200942c:	dfc00415 	stw	ra,16(sp)
 2009430:	dcc00315 	stw	r19,12(sp)
 2009434:	3023883a 	mov	r17,r6
 2009438:	2008db00 	call	2008db0 <__mcmp>
 200943c:	10004226 	beq	r2,zero,2009548 <__mdiff+0x13c>
 2009440:	10005016 	blt	r2,zero,2009584 <__mdiff+0x178>
 2009444:	0027883a 	mov	r19,zero
 2009448:	81400117 	ldw	r5,4(r16)
 200944c:	9009883a 	mov	r4,r18
 2009450:	20091d40 	call	20091d4 <_Balloc>
 2009454:	1019883a 	mov	r12,r2
 2009458:	82800417 	ldw	r10,16(r16)
 200945c:	88800417 	ldw	r2,16(r17)
 2009460:	81800504 	addi	r6,r16,20
 2009464:	5287883a 	add	r3,r10,r10
 2009468:	1085883a 	add	r2,r2,r2
 200946c:	18c7883a 	add	r3,r3,r3
 2009470:	1085883a 	add	r2,r2,r2
 2009474:	8a000504 	addi	r8,r17,20
 2009478:	64c00315 	stw	r19,12(r12)
 200947c:	30db883a 	add	r13,r6,r3
 2009480:	4097883a 	add	r11,r8,r2
 2009484:	61c00504 	addi	r7,r12,20
 2009488:	0013883a 	mov	r9,zero
 200948c:	31000017 	ldw	r4,0(r6)
 2009490:	41400017 	ldw	r5,0(r8)
 2009494:	42000104 	addi	r8,r8,4
 2009498:	20bfffcc 	andi	r2,r4,65535
 200949c:	28ffffcc 	andi	r3,r5,65535
 20094a0:	10c5c83a 	sub	r2,r2,r3
 20094a4:	1245883a 	add	r2,r2,r9
 20094a8:	2008d43a 	srli	r4,r4,16
 20094ac:	280ad43a 	srli	r5,r5,16
 20094b0:	1007d43a 	srai	r3,r2,16
 20094b4:	3880000d 	sth	r2,0(r7)
 20094b8:	2149c83a 	sub	r4,r4,r5
 20094bc:	20c9883a 	add	r4,r4,r3
 20094c0:	3900008d 	sth	r4,2(r7)
 20094c4:	31800104 	addi	r6,r6,4
 20094c8:	39c00104 	addi	r7,r7,4
 20094cc:	2013d43a 	srai	r9,r4,16
 20094d0:	42ffee36 	bltu	r8,r11,200948c <__mdiff+0x80>
 20094d4:	33400c2e 	bgeu	r6,r13,2009508 <__mdiff+0xfc>
 20094d8:	30800017 	ldw	r2,0(r6)
 20094dc:	31800104 	addi	r6,r6,4
 20094e0:	10ffffcc 	andi	r3,r2,65535
 20094e4:	1a47883a 	add	r3,r3,r9
 20094e8:	1004d43a 	srli	r2,r2,16
 20094ec:	1809d43a 	srai	r4,r3,16
 20094f0:	38c0000d 	sth	r3,0(r7)
 20094f4:	1105883a 	add	r2,r2,r4
 20094f8:	3880008d 	sth	r2,2(r7)
 20094fc:	1013d43a 	srai	r9,r2,16
 2009500:	39c00104 	addi	r7,r7,4
 2009504:	337ff436 	bltu	r6,r13,20094d8 <__mdiff+0xcc>
 2009508:	38bfff17 	ldw	r2,-4(r7)
 200950c:	38ffff04 	addi	r3,r7,-4
 2009510:	1000041e 	bne	r2,zero,2009524 <__mdiff+0x118>
 2009514:	18ffff04 	addi	r3,r3,-4
 2009518:	18800017 	ldw	r2,0(r3)
 200951c:	52bfffc4 	addi	r10,r10,-1
 2009520:	103ffc26 	beq	r2,zero,2009514 <__mdiff+0x108>
 2009524:	6005883a 	mov	r2,r12
 2009528:	62800415 	stw	r10,16(r12)
 200952c:	dfc00417 	ldw	ra,16(sp)
 2009530:	dcc00317 	ldw	r19,12(sp)
 2009534:	dc800217 	ldw	r18,8(sp)
 2009538:	dc400117 	ldw	r17,4(sp)
 200953c:	dc000017 	ldw	r16,0(sp)
 2009540:	dec00504 	addi	sp,sp,20
 2009544:	f800283a 	ret
 2009548:	9009883a 	mov	r4,r18
 200954c:	000b883a 	mov	r5,zero
 2009550:	20091d40 	call	20091d4 <_Balloc>
 2009554:	1019883a 	mov	r12,r2
 2009558:	00800044 	movi	r2,1
 200955c:	60800415 	stw	r2,16(r12)
 2009560:	6005883a 	mov	r2,r12
 2009564:	60000515 	stw	zero,20(r12)
 2009568:	dfc00417 	ldw	ra,16(sp)
 200956c:	dcc00317 	ldw	r19,12(sp)
 2009570:	dc800217 	ldw	r18,8(sp)
 2009574:	dc400117 	ldw	r17,4(sp)
 2009578:	dc000017 	ldw	r16,0(sp)
 200957c:	dec00504 	addi	sp,sp,20
 2009580:	f800283a 	ret
 2009584:	880d883a 	mov	r6,r17
 2009588:	04c00044 	movi	r19,1
 200958c:	8023883a 	mov	r17,r16
 2009590:	3021883a 	mov	r16,r6
 2009594:	003fac06 	br	2009448 <__mdiff+0x3c>

02009598 <__lshift>:
 2009598:	defff904 	addi	sp,sp,-28
 200959c:	28800417 	ldw	r2,16(r5)
 20095a0:	dc000015 	stw	r16,0(sp)
 20095a4:	3021d17a 	srai	r16,r6,5
 20095a8:	28c00217 	ldw	r3,8(r5)
 20095ac:	10800044 	addi	r2,r2,1
 20095b0:	dc400115 	stw	r17,4(sp)
 20095b4:	80a3883a 	add	r17,r16,r2
 20095b8:	dd400515 	stw	r21,20(sp)
 20095bc:	dd000415 	stw	r20,16(sp)
 20095c0:	dc800215 	stw	r18,8(sp)
 20095c4:	dfc00615 	stw	ra,24(sp)
 20095c8:	2825883a 	mov	r18,r5
 20095cc:	dcc00315 	stw	r19,12(sp)
 20095d0:	3029883a 	mov	r20,r6
 20095d4:	202b883a 	mov	r21,r4
 20095d8:	29400117 	ldw	r5,4(r5)
 20095dc:	1c40030e 	bge	r3,r17,20095ec <__lshift+0x54>
 20095e0:	18c7883a 	add	r3,r3,r3
 20095e4:	29400044 	addi	r5,r5,1
 20095e8:	1c7ffd16 	blt	r3,r17,20095e0 <__lshift+0x48>
 20095ec:	a809883a 	mov	r4,r21
 20095f0:	20091d40 	call	20091d4 <_Balloc>
 20095f4:	1027883a 	mov	r19,r2
 20095f8:	11400504 	addi	r5,r2,20
 20095fc:	0400090e 	bge	zero,r16,2009624 <__lshift+0x8c>
 2009600:	2805883a 	mov	r2,r5
 2009604:	0007883a 	mov	r3,zero
 2009608:	18c00044 	addi	r3,r3,1
 200960c:	10000015 	stw	zero,0(r2)
 2009610:	10800104 	addi	r2,r2,4
 2009614:	80fffc1e 	bne	r16,r3,2009608 <__lshift+0x70>
 2009618:	8405883a 	add	r2,r16,r16
 200961c:	1085883a 	add	r2,r2,r2
 2009620:	288b883a 	add	r5,r5,r2
 2009624:	90800417 	ldw	r2,16(r18)
 2009628:	91000504 	addi	r4,r18,20
 200962c:	a18007cc 	andi	r6,r20,31
 2009630:	1085883a 	add	r2,r2,r2
 2009634:	1085883a 	add	r2,r2,r2
 2009638:	208f883a 	add	r7,r4,r2
 200963c:	30001e26 	beq	r6,zero,20096b8 <__lshift+0x120>
 2009640:	00800804 	movi	r2,32
 2009644:	1191c83a 	sub	r8,r2,r6
 2009648:	0007883a 	mov	r3,zero
 200964c:	20800017 	ldw	r2,0(r4)
 2009650:	1184983a 	sll	r2,r2,r6
 2009654:	1884b03a 	or	r2,r3,r2
 2009658:	28800015 	stw	r2,0(r5)
 200965c:	20c00017 	ldw	r3,0(r4)
 2009660:	21000104 	addi	r4,r4,4
 2009664:	29400104 	addi	r5,r5,4
 2009668:	1a06d83a 	srl	r3,r3,r8
 200966c:	21fff736 	bltu	r4,r7,200964c <__lshift+0xb4>
 2009670:	28c00015 	stw	r3,0(r5)
 2009674:	18000126 	beq	r3,zero,200967c <__lshift+0xe4>
 2009678:	8c400044 	addi	r17,r17,1
 200967c:	88bfffc4 	addi	r2,r17,-1
 2009680:	98800415 	stw	r2,16(r19)
 2009684:	a809883a 	mov	r4,r21
 2009688:	900b883a 	mov	r5,r18
 200968c:	2008c540 	call	2008c54 <_Bfree>
 2009690:	9805883a 	mov	r2,r19
 2009694:	dfc00617 	ldw	ra,24(sp)
 2009698:	dd400517 	ldw	r21,20(sp)
 200969c:	dd000417 	ldw	r20,16(sp)
 20096a0:	dcc00317 	ldw	r19,12(sp)
 20096a4:	dc800217 	ldw	r18,8(sp)
 20096a8:	dc400117 	ldw	r17,4(sp)
 20096ac:	dc000017 	ldw	r16,0(sp)
 20096b0:	dec00704 	addi	sp,sp,28
 20096b4:	f800283a 	ret
 20096b8:	20800017 	ldw	r2,0(r4)
 20096bc:	21000104 	addi	r4,r4,4
 20096c0:	28800015 	stw	r2,0(r5)
 20096c4:	29400104 	addi	r5,r5,4
 20096c8:	21ffec2e 	bgeu	r4,r7,200967c <__lshift+0xe4>
 20096cc:	20800017 	ldw	r2,0(r4)
 20096d0:	21000104 	addi	r4,r4,4
 20096d4:	28800015 	stw	r2,0(r5)
 20096d8:	29400104 	addi	r5,r5,4
 20096dc:	21fff636 	bltu	r4,r7,20096b8 <__lshift+0x120>
 20096e0:	003fe606 	br	200967c <__lshift+0xe4>

020096e4 <__multiply>:
 20096e4:	defff004 	addi	sp,sp,-64
 20096e8:	dc800815 	stw	r18,32(sp)
 20096ec:	dc400715 	stw	r17,28(sp)
 20096f0:	2c800417 	ldw	r18,16(r5)
 20096f4:	34400417 	ldw	r17,16(r6)
 20096f8:	dcc00915 	stw	r19,36(sp)
 20096fc:	dc000615 	stw	r16,24(sp)
 2009700:	dfc00f15 	stw	ra,60(sp)
 2009704:	df000e15 	stw	fp,56(sp)
 2009708:	ddc00d15 	stw	r23,52(sp)
 200970c:	dd800c15 	stw	r22,48(sp)
 2009710:	dd400b15 	stw	r21,44(sp)
 2009714:	dd000a15 	stw	r20,40(sp)
 2009718:	2821883a 	mov	r16,r5
 200971c:	3027883a 	mov	r19,r6
 2009720:	9440040e 	bge	r18,r17,2009734 <__multiply+0x50>
 2009724:	8825883a 	mov	r18,r17
 2009728:	2c400417 	ldw	r17,16(r5)
 200972c:	2827883a 	mov	r19,r5
 2009730:	3021883a 	mov	r16,r6
 2009734:	80800217 	ldw	r2,8(r16)
 2009738:	9447883a 	add	r3,r18,r17
 200973c:	d8c00415 	stw	r3,16(sp)
 2009740:	81400117 	ldw	r5,4(r16)
 2009744:	10c0010e 	bge	r2,r3,200974c <__multiply+0x68>
 2009748:	29400044 	addi	r5,r5,1
 200974c:	20091d40 	call	20091d4 <_Balloc>
 2009750:	d8800515 	stw	r2,20(sp)
 2009754:	d9000417 	ldw	r4,16(sp)
 2009758:	d8c00517 	ldw	r3,20(sp)
 200975c:	2105883a 	add	r2,r4,r4
 2009760:	1085883a 	add	r2,r2,r2
 2009764:	19000504 	addi	r4,r3,20
 2009768:	2085883a 	add	r2,r4,r2
 200976c:	d8800315 	stw	r2,12(sp)
 2009770:	2080052e 	bgeu	r4,r2,2009788 <__multiply+0xa4>
 2009774:	2005883a 	mov	r2,r4
 2009778:	d8c00317 	ldw	r3,12(sp)
 200977c:	10000015 	stw	zero,0(r2)
 2009780:	10800104 	addi	r2,r2,4
 2009784:	10fffc36 	bltu	r2,r3,2009778 <__multiply+0x94>
 2009788:	8c45883a 	add	r2,r17,r17
 200978c:	9487883a 	add	r3,r18,r18
 2009790:	9dc00504 	addi	r23,r19,20
 2009794:	1085883a 	add	r2,r2,r2
 2009798:	84000504 	addi	r16,r16,20
 200979c:	18c7883a 	add	r3,r3,r3
 20097a0:	b885883a 	add	r2,r23,r2
 20097a4:	dc000015 	stw	r16,0(sp)
 20097a8:	d8800215 	stw	r2,8(sp)
 20097ac:	80f9883a 	add	fp,r16,r3
 20097b0:	b880432e 	bgeu	r23,r2,20098c0 <__multiply+0x1dc>
 20097b4:	d9000115 	stw	r4,4(sp)
 20097b8:	b9000017 	ldw	r4,0(r23)
 20097bc:	253fffcc 	andi	r20,r4,65535
 20097c0:	a0001a26 	beq	r20,zero,200982c <__multiply+0x148>
 20097c4:	dcc00017 	ldw	r19,0(sp)
 20097c8:	dc800117 	ldw	r18,4(sp)
 20097cc:	002b883a 	mov	r21,zero
 20097d0:	9c400017 	ldw	r17,0(r19)
 20097d4:	94000017 	ldw	r16,0(r18)
 20097d8:	a009883a 	mov	r4,r20
 20097dc:	897fffcc 	andi	r5,r17,65535
 20097e0:	2000abc0 	call	2000abc <__mulsi3>
 20097e4:	880ad43a 	srli	r5,r17,16
 20097e8:	80ffffcc 	andi	r3,r16,65535
 20097ec:	a8c7883a 	add	r3,r21,r3
 20097f0:	a009883a 	mov	r4,r20
 20097f4:	10e3883a 	add	r17,r2,r3
 20097f8:	8020d43a 	srli	r16,r16,16
 20097fc:	2000abc0 	call	2000abc <__mulsi3>
 2009800:	8806d43a 	srli	r3,r17,16
 2009804:	1405883a 	add	r2,r2,r16
 2009808:	9cc00104 	addi	r19,r19,4
 200980c:	1887883a 	add	r3,r3,r2
 2009810:	90c0008d 	sth	r3,2(r18)
 2009814:	9440000d 	sth	r17,0(r18)
 2009818:	182ad43a 	srli	r21,r3,16
 200981c:	94800104 	addi	r18,r18,4
 2009820:	9f3feb36 	bltu	r19,fp,20097d0 <__multiply+0xec>
 2009824:	95400015 	stw	r21,0(r18)
 2009828:	b9000017 	ldw	r4,0(r23)
 200982c:	202ad43a 	srli	r21,r4,16
 2009830:	a8001c26 	beq	r21,zero,20098a4 <__multiply+0x1c0>
 2009834:	d9000117 	ldw	r4,4(sp)
 2009838:	dd000017 	ldw	r20,0(sp)
 200983c:	002d883a 	mov	r22,zero
 2009840:	24c00017 	ldw	r19,0(r4)
 2009844:	2025883a 	mov	r18,r4
 2009848:	9823883a 	mov	r17,r19
 200984c:	a4000017 	ldw	r16,0(r20)
 2009850:	a809883a 	mov	r4,r21
 2009854:	a5000104 	addi	r20,r20,4
 2009858:	817fffcc 	andi	r5,r16,65535
 200985c:	2000abc0 	call	2000abc <__mulsi3>
 2009860:	8806d43a 	srli	r3,r17,16
 2009864:	800ad43a 	srli	r5,r16,16
 2009868:	94c0000d 	sth	r19,0(r18)
 200986c:	b0c7883a 	add	r3,r22,r3
 2009870:	10e1883a 	add	r16,r2,r3
 2009874:	9400008d 	sth	r16,2(r18)
 2009878:	a809883a 	mov	r4,r21
 200987c:	94800104 	addi	r18,r18,4
 2009880:	2000abc0 	call	2000abc <__mulsi3>
 2009884:	94400017 	ldw	r17,0(r18)
 2009888:	8020d43a 	srli	r16,r16,16
 200988c:	88ffffcc 	andi	r3,r17,65535
 2009890:	10c5883a 	add	r2,r2,r3
 2009894:	80a7883a 	add	r19,r16,r2
 2009898:	982cd43a 	srli	r22,r19,16
 200989c:	a73feb36 	bltu	r20,fp,200984c <__multiply+0x168>
 20098a0:	94c00015 	stw	r19,0(r18)
 20098a4:	d8800217 	ldw	r2,8(sp)
 20098a8:	bdc00104 	addi	r23,r23,4
 20098ac:	b880042e 	bgeu	r23,r2,20098c0 <__multiply+0x1dc>
 20098b0:	d8c00117 	ldw	r3,4(sp)
 20098b4:	18c00104 	addi	r3,r3,4
 20098b8:	d8c00115 	stw	r3,4(sp)
 20098bc:	003fbe06 	br	20097b8 <__multiply+0xd4>
 20098c0:	d9000417 	ldw	r4,16(sp)
 20098c4:	01000c0e 	bge	zero,r4,20098f8 <__multiply+0x214>
 20098c8:	d8c00317 	ldw	r3,12(sp)
 20098cc:	18bfff17 	ldw	r2,-4(r3)
 20098d0:	18ffff04 	addi	r3,r3,-4
 20098d4:	10000326 	beq	r2,zero,20098e4 <__multiply+0x200>
 20098d8:	00000706 	br	20098f8 <__multiply+0x214>
 20098dc:	18800017 	ldw	r2,0(r3)
 20098e0:	1000051e 	bne	r2,zero,20098f8 <__multiply+0x214>
 20098e4:	d9000417 	ldw	r4,16(sp)
 20098e8:	18ffff04 	addi	r3,r3,-4
 20098ec:	213fffc4 	addi	r4,r4,-1
 20098f0:	d9000415 	stw	r4,16(sp)
 20098f4:	203ff91e 	bne	r4,zero,20098dc <__multiply+0x1f8>
 20098f8:	d8800417 	ldw	r2,16(sp)
 20098fc:	d8c00517 	ldw	r3,20(sp)
 2009900:	18800415 	stw	r2,16(r3)
 2009904:	1805883a 	mov	r2,r3
 2009908:	dfc00f17 	ldw	ra,60(sp)
 200990c:	df000e17 	ldw	fp,56(sp)
 2009910:	ddc00d17 	ldw	r23,52(sp)
 2009914:	dd800c17 	ldw	r22,48(sp)
 2009918:	dd400b17 	ldw	r21,44(sp)
 200991c:	dd000a17 	ldw	r20,40(sp)
 2009920:	dcc00917 	ldw	r19,36(sp)
 2009924:	dc800817 	ldw	r18,32(sp)
 2009928:	dc400717 	ldw	r17,28(sp)
 200992c:	dc000617 	ldw	r16,24(sp)
 2009930:	dec01004 	addi	sp,sp,64
 2009934:	f800283a 	ret

02009938 <__i2b>:
 2009938:	defffd04 	addi	sp,sp,-12
 200993c:	dc000015 	stw	r16,0(sp)
 2009940:	04000044 	movi	r16,1
 2009944:	dc800115 	stw	r18,4(sp)
 2009948:	2825883a 	mov	r18,r5
 200994c:	800b883a 	mov	r5,r16
 2009950:	dfc00215 	stw	ra,8(sp)
 2009954:	20091d40 	call	20091d4 <_Balloc>
 2009958:	14000415 	stw	r16,16(r2)
 200995c:	14800515 	stw	r18,20(r2)
 2009960:	dfc00217 	ldw	ra,8(sp)
 2009964:	dc800117 	ldw	r18,4(sp)
 2009968:	dc000017 	ldw	r16,0(sp)
 200996c:	dec00304 	addi	sp,sp,12
 2009970:	f800283a 	ret

02009974 <__multadd>:
 2009974:	defff604 	addi	sp,sp,-40
 2009978:	dd800615 	stw	r22,24(sp)
 200997c:	2d800417 	ldw	r22,16(r5)
 2009980:	df000815 	stw	fp,32(sp)
 2009984:	ddc00715 	stw	r23,28(sp)
 2009988:	dd400515 	stw	r21,20(sp)
 200998c:	dd000415 	stw	r20,16(sp)
 2009990:	dcc00315 	stw	r19,12(sp)
 2009994:	dc800215 	stw	r18,8(sp)
 2009998:	dfc00915 	stw	ra,36(sp)
 200999c:	dc400115 	stw	r17,4(sp)
 20099a0:	dc000015 	stw	r16,0(sp)
 20099a4:	282f883a 	mov	r23,r5
 20099a8:	2039883a 	mov	fp,r4
 20099ac:	302b883a 	mov	r21,r6
 20099b0:	3829883a 	mov	r20,r7
 20099b4:	2c800504 	addi	r18,r5,20
 20099b8:	0027883a 	mov	r19,zero
 20099bc:	94400017 	ldw	r17,0(r18)
 20099c0:	a80b883a 	mov	r5,r21
 20099c4:	9cc00044 	addi	r19,r19,1
 20099c8:	893fffcc 	andi	r4,r17,65535
 20099cc:	2000abc0 	call	2000abc <__mulsi3>
 20099d0:	8808d43a 	srli	r4,r17,16
 20099d4:	1521883a 	add	r16,r2,r20
 20099d8:	a80b883a 	mov	r5,r21
 20099dc:	2000abc0 	call	2000abc <__mulsi3>
 20099e0:	8008d43a 	srli	r4,r16,16
 20099e4:	843fffcc 	andi	r16,r16,65535
 20099e8:	1105883a 	add	r2,r2,r4
 20099ec:	1006943a 	slli	r3,r2,16
 20099f0:	1028d43a 	srli	r20,r2,16
 20099f4:	1c07883a 	add	r3,r3,r16
 20099f8:	90c00015 	stw	r3,0(r18)
 20099fc:	94800104 	addi	r18,r18,4
 2009a00:	9dbfee16 	blt	r19,r22,20099bc <__multadd+0x48>
 2009a04:	a0000826 	beq	r20,zero,2009a28 <__multadd+0xb4>
 2009a08:	b8800217 	ldw	r2,8(r23)
 2009a0c:	b080130e 	bge	r22,r2,2009a5c <__multadd+0xe8>
 2009a10:	b585883a 	add	r2,r22,r22
 2009a14:	1085883a 	add	r2,r2,r2
 2009a18:	15c5883a 	add	r2,r2,r23
 2009a1c:	b0c00044 	addi	r3,r22,1
 2009a20:	15000515 	stw	r20,20(r2)
 2009a24:	b8c00415 	stw	r3,16(r23)
 2009a28:	b805883a 	mov	r2,r23
 2009a2c:	dfc00917 	ldw	ra,36(sp)
 2009a30:	df000817 	ldw	fp,32(sp)
 2009a34:	ddc00717 	ldw	r23,28(sp)
 2009a38:	dd800617 	ldw	r22,24(sp)
 2009a3c:	dd400517 	ldw	r21,20(sp)
 2009a40:	dd000417 	ldw	r20,16(sp)
 2009a44:	dcc00317 	ldw	r19,12(sp)
 2009a48:	dc800217 	ldw	r18,8(sp)
 2009a4c:	dc400117 	ldw	r17,4(sp)
 2009a50:	dc000017 	ldw	r16,0(sp)
 2009a54:	dec00a04 	addi	sp,sp,40
 2009a58:	f800283a 	ret
 2009a5c:	b9400117 	ldw	r5,4(r23)
 2009a60:	e009883a 	mov	r4,fp
 2009a64:	29400044 	addi	r5,r5,1
 2009a68:	20091d40 	call	20091d4 <_Balloc>
 2009a6c:	b9800417 	ldw	r6,16(r23)
 2009a70:	b9400304 	addi	r5,r23,12
 2009a74:	11000304 	addi	r4,r2,12
 2009a78:	318d883a 	add	r6,r6,r6
 2009a7c:	318d883a 	add	r6,r6,r6
 2009a80:	31800204 	addi	r6,r6,8
 2009a84:	1023883a 	mov	r17,r2
 2009a88:	20029140 	call	2002914 <memcpy>
 2009a8c:	b80b883a 	mov	r5,r23
 2009a90:	e009883a 	mov	r4,fp
 2009a94:	2008c540 	call	2008c54 <_Bfree>
 2009a98:	882f883a 	mov	r23,r17
 2009a9c:	003fdc06 	br	2009a10 <__multadd+0x9c>

02009aa0 <__pow5mult>:
 2009aa0:	defffa04 	addi	sp,sp,-24
 2009aa4:	308000cc 	andi	r2,r6,3
 2009aa8:	dd000415 	stw	r20,16(sp)
 2009aac:	dcc00315 	stw	r19,12(sp)
 2009ab0:	dc000015 	stw	r16,0(sp)
 2009ab4:	dfc00515 	stw	ra,20(sp)
 2009ab8:	dc800215 	stw	r18,8(sp)
 2009abc:	dc400115 	stw	r17,4(sp)
 2009ac0:	3021883a 	mov	r16,r6
 2009ac4:	2027883a 	mov	r19,r4
 2009ac8:	2829883a 	mov	r20,r5
 2009acc:	10002b1e 	bne	r2,zero,2009b7c <__pow5mult+0xdc>
 2009ad0:	8025d0ba 	srai	r18,r16,2
 2009ad4:	90001b26 	beq	r18,zero,2009b44 <__pow5mult+0xa4>
 2009ad8:	9c001217 	ldw	r16,72(r19)
 2009adc:	8000081e 	bne	r16,zero,2009b00 <__pow5mult+0x60>
 2009ae0:	00003006 	br	2009ba4 <__pow5mult+0x104>
 2009ae4:	800b883a 	mov	r5,r16
 2009ae8:	800d883a 	mov	r6,r16
 2009aec:	9809883a 	mov	r4,r19
 2009af0:	90001426 	beq	r18,zero,2009b44 <__pow5mult+0xa4>
 2009af4:	80800017 	ldw	r2,0(r16)
 2009af8:	10001b26 	beq	r2,zero,2009b68 <__pow5mult+0xc8>
 2009afc:	1021883a 	mov	r16,r2
 2009b00:	9080004c 	andi	r2,r18,1
 2009b04:	1005003a 	cmpeq	r2,r2,zero
 2009b08:	9025d07a 	srai	r18,r18,1
 2009b0c:	800d883a 	mov	r6,r16
 2009b10:	9809883a 	mov	r4,r19
 2009b14:	a00b883a 	mov	r5,r20
 2009b18:	103ff21e 	bne	r2,zero,2009ae4 <__pow5mult+0x44>
 2009b1c:	20096e40 	call	20096e4 <__multiply>
 2009b20:	a00b883a 	mov	r5,r20
 2009b24:	9809883a 	mov	r4,r19
 2009b28:	1023883a 	mov	r17,r2
 2009b2c:	2008c540 	call	2008c54 <_Bfree>
 2009b30:	8829883a 	mov	r20,r17
 2009b34:	800b883a 	mov	r5,r16
 2009b38:	800d883a 	mov	r6,r16
 2009b3c:	9809883a 	mov	r4,r19
 2009b40:	903fec1e 	bne	r18,zero,2009af4 <__pow5mult+0x54>
 2009b44:	a005883a 	mov	r2,r20
 2009b48:	dfc00517 	ldw	ra,20(sp)
 2009b4c:	dd000417 	ldw	r20,16(sp)
 2009b50:	dcc00317 	ldw	r19,12(sp)
 2009b54:	dc800217 	ldw	r18,8(sp)
 2009b58:	dc400117 	ldw	r17,4(sp)
 2009b5c:	dc000017 	ldw	r16,0(sp)
 2009b60:	dec00604 	addi	sp,sp,24
 2009b64:	f800283a 	ret
 2009b68:	20096e40 	call	20096e4 <__multiply>
 2009b6c:	80800015 	stw	r2,0(r16)
 2009b70:	1021883a 	mov	r16,r2
 2009b74:	10000015 	stw	zero,0(r2)
 2009b78:	003fe106 	br	2009b00 <__pow5mult+0x60>
 2009b7c:	1085883a 	add	r2,r2,r2
 2009b80:	00c08074 	movhi	r3,513
 2009b84:	18cf4304 	addi	r3,r3,15628
 2009b88:	1085883a 	add	r2,r2,r2
 2009b8c:	10c5883a 	add	r2,r2,r3
 2009b90:	11bfff17 	ldw	r6,-4(r2)
 2009b94:	000f883a 	mov	r7,zero
 2009b98:	20099740 	call	2009974 <__multadd>
 2009b9c:	1029883a 	mov	r20,r2
 2009ba0:	003fcb06 	br	2009ad0 <__pow5mult+0x30>
 2009ba4:	9809883a 	mov	r4,r19
 2009ba8:	01409c44 	movi	r5,625
 2009bac:	20099380 	call	2009938 <__i2b>
 2009bb0:	98801215 	stw	r2,72(r19)
 2009bb4:	1021883a 	mov	r16,r2
 2009bb8:	10000015 	stw	zero,0(r2)
 2009bbc:	003fd006 	br	2009b00 <__pow5mult+0x60>

02009bc0 <__s2b>:
 2009bc0:	defff904 	addi	sp,sp,-28
 2009bc4:	dcc00315 	stw	r19,12(sp)
 2009bc8:	dc800215 	stw	r18,8(sp)
 2009bcc:	2827883a 	mov	r19,r5
 2009bd0:	2025883a 	mov	r18,r4
 2009bd4:	01400244 	movi	r5,9
 2009bd8:	39000204 	addi	r4,r7,8
 2009bdc:	dd000415 	stw	r20,16(sp)
 2009be0:	dc400115 	stw	r17,4(sp)
 2009be4:	dfc00615 	stw	ra,24(sp)
 2009be8:	dd400515 	stw	r21,20(sp)
 2009bec:	dc000015 	stw	r16,0(sp)
 2009bf0:	3829883a 	mov	r20,r7
 2009bf4:	3023883a 	mov	r17,r6
 2009bf8:	200fa100 	call	200fa10 <__divsi3>
 2009bfc:	00c00044 	movi	r3,1
 2009c00:	1880350e 	bge	r3,r2,2009cd8 <__s2b+0x118>
 2009c04:	000b883a 	mov	r5,zero
 2009c08:	18c7883a 	add	r3,r3,r3
 2009c0c:	29400044 	addi	r5,r5,1
 2009c10:	18bffd16 	blt	r3,r2,2009c08 <__s2b+0x48>
 2009c14:	9009883a 	mov	r4,r18
 2009c18:	20091d40 	call	20091d4 <_Balloc>
 2009c1c:	1011883a 	mov	r8,r2
 2009c20:	d8800717 	ldw	r2,28(sp)
 2009c24:	00c00044 	movi	r3,1
 2009c28:	01800244 	movi	r6,9
 2009c2c:	40800515 	stw	r2,20(r8)
 2009c30:	40c00415 	stw	r3,16(r8)
 2009c34:	3440260e 	bge	r6,r17,2009cd0 <__s2b+0x110>
 2009c38:	3021883a 	mov	r16,r6
 2009c3c:	99ab883a 	add	r21,r19,r6
 2009c40:	9c05883a 	add	r2,r19,r16
 2009c44:	11c00007 	ldb	r7,0(r2)
 2009c48:	400b883a 	mov	r5,r8
 2009c4c:	9009883a 	mov	r4,r18
 2009c50:	39fff404 	addi	r7,r7,-48
 2009c54:	01800284 	movi	r6,10
 2009c58:	20099740 	call	2009974 <__multadd>
 2009c5c:	84000044 	addi	r16,r16,1
 2009c60:	1011883a 	mov	r8,r2
 2009c64:	8c3ff61e 	bne	r17,r16,2009c40 <__s2b+0x80>
 2009c68:	ac45883a 	add	r2,r21,r17
 2009c6c:	117ffe04 	addi	r5,r2,-8
 2009c70:	880d883a 	mov	r6,r17
 2009c74:	35000c0e 	bge	r6,r20,2009ca8 <__s2b+0xe8>
 2009c78:	a185c83a 	sub	r2,r20,r6
 2009c7c:	2821883a 	mov	r16,r5
 2009c80:	28a3883a 	add	r17,r5,r2
 2009c84:	81c00007 	ldb	r7,0(r16)
 2009c88:	400b883a 	mov	r5,r8
 2009c8c:	9009883a 	mov	r4,r18
 2009c90:	39fff404 	addi	r7,r7,-48
 2009c94:	01800284 	movi	r6,10
 2009c98:	20099740 	call	2009974 <__multadd>
 2009c9c:	84000044 	addi	r16,r16,1
 2009ca0:	1011883a 	mov	r8,r2
 2009ca4:	847ff71e 	bne	r16,r17,2009c84 <__s2b+0xc4>
 2009ca8:	4005883a 	mov	r2,r8
 2009cac:	dfc00617 	ldw	ra,24(sp)
 2009cb0:	dd400517 	ldw	r21,20(sp)
 2009cb4:	dd000417 	ldw	r20,16(sp)
 2009cb8:	dcc00317 	ldw	r19,12(sp)
 2009cbc:	dc800217 	ldw	r18,8(sp)
 2009cc0:	dc400117 	ldw	r17,4(sp)
 2009cc4:	dc000017 	ldw	r16,0(sp)
 2009cc8:	dec00704 	addi	sp,sp,28
 2009ccc:	f800283a 	ret
 2009cd0:	99400284 	addi	r5,r19,10
 2009cd4:	003fe706 	br	2009c74 <__s2b+0xb4>
 2009cd8:	000b883a 	mov	r5,zero
 2009cdc:	003fcd06 	br	2009c14 <__s2b+0x54>

02009ce0 <_read_r>:
 2009ce0:	defffd04 	addi	sp,sp,-12
 2009ce4:	dc000015 	stw	r16,0(sp)
 2009ce8:	04008074 	movhi	r16,513
 2009cec:	841d6a04 	addi	r16,r16,30120
 2009cf0:	dc400115 	stw	r17,4(sp)
 2009cf4:	80000015 	stw	zero,0(r16)
 2009cf8:	2023883a 	mov	r17,r4
 2009cfc:	2809883a 	mov	r4,r5
 2009d00:	300b883a 	mov	r5,r6
 2009d04:	380d883a 	mov	r6,r7
 2009d08:	dfc00215 	stw	ra,8(sp)
 2009d0c:	2010d280 	call	2010d28 <read>
 2009d10:	1007883a 	mov	r3,r2
 2009d14:	00bfffc4 	movi	r2,-1
 2009d18:	18800626 	beq	r3,r2,2009d34 <_read_r+0x54>
 2009d1c:	1805883a 	mov	r2,r3
 2009d20:	dfc00217 	ldw	ra,8(sp)
 2009d24:	dc400117 	ldw	r17,4(sp)
 2009d28:	dc000017 	ldw	r16,0(sp)
 2009d2c:	dec00304 	addi	sp,sp,12
 2009d30:	f800283a 	ret
 2009d34:	80800017 	ldw	r2,0(r16)
 2009d38:	103ff826 	beq	r2,zero,2009d1c <_read_r+0x3c>
 2009d3c:	88800015 	stw	r2,0(r17)
 2009d40:	1805883a 	mov	r2,r3
 2009d44:	dfc00217 	ldw	ra,8(sp)
 2009d48:	dc400117 	ldw	r17,4(sp)
 2009d4c:	dc000017 	ldw	r16,0(sp)
 2009d50:	dec00304 	addi	sp,sp,12
 2009d54:	f800283a 	ret

02009d58 <_realloc_r>:
 2009d58:	defff404 	addi	sp,sp,-48
 2009d5c:	dd800815 	stw	r22,32(sp)
 2009d60:	dc800415 	stw	r18,16(sp)
 2009d64:	dc400315 	stw	r17,12(sp)
 2009d68:	dfc00b15 	stw	ra,44(sp)
 2009d6c:	df000a15 	stw	fp,40(sp)
 2009d70:	ddc00915 	stw	r23,36(sp)
 2009d74:	dd400715 	stw	r21,28(sp)
 2009d78:	dd000615 	stw	r20,24(sp)
 2009d7c:	dcc00515 	stw	r19,20(sp)
 2009d80:	dc000215 	stw	r16,8(sp)
 2009d84:	2825883a 	mov	r18,r5
 2009d88:	3023883a 	mov	r17,r6
 2009d8c:	202d883a 	mov	r22,r4
 2009d90:	2800c926 	beq	r5,zero,200a0b8 <_realloc_r+0x360>
 2009d94:	2010a040 	call	2010a04 <__malloc_lock>
 2009d98:	943ffe04 	addi	r16,r18,-8
 2009d9c:	88c002c4 	addi	r3,r17,11
 2009da0:	00800584 	movi	r2,22
 2009da4:	82000117 	ldw	r8,4(r16)
 2009da8:	10c01b2e 	bgeu	r2,r3,2009e18 <_realloc_r+0xc0>
 2009dac:	00bffe04 	movi	r2,-8
 2009db0:	188e703a 	and	r7,r3,r2
 2009db4:	3839883a 	mov	fp,r7
 2009db8:	38001a16 	blt	r7,zero,2009e24 <_realloc_r+0xcc>
 2009dbc:	e4401936 	bltu	fp,r17,2009e24 <_realloc_r+0xcc>
 2009dc0:	013fff04 	movi	r4,-4
 2009dc4:	4126703a 	and	r19,r8,r4
 2009dc8:	99c02616 	blt	r19,r7,2009e64 <_realloc_r+0x10c>
 2009dcc:	802b883a 	mov	r21,r16
 2009dd0:	9829883a 	mov	r20,r19
 2009dd4:	84000204 	addi	r16,r16,8
 2009dd8:	a80f883a 	mov	r7,r21
 2009ddc:	a70dc83a 	sub	r6,r20,fp
 2009de0:	008003c4 	movi	r2,15
 2009de4:	1180c136 	bltu	r2,r6,200a0ec <_realloc_r+0x394>
 2009de8:	38800117 	ldw	r2,4(r7)
 2009dec:	a549883a 	add	r4,r20,r21
 2009df0:	1080004c 	andi	r2,r2,1
 2009df4:	a084b03a 	or	r2,r20,r2
 2009df8:	38800115 	stw	r2,4(r7)
 2009dfc:	20c00117 	ldw	r3,4(r4)
 2009e00:	18c00054 	ori	r3,r3,1
 2009e04:	20c00115 	stw	r3,4(r4)
 2009e08:	b009883a 	mov	r4,r22
 2009e0c:	2010a240 	call	2010a24 <__malloc_unlock>
 2009e10:	8023883a 	mov	r17,r16
 2009e14:	00000606 	br	2009e30 <_realloc_r+0xd8>
 2009e18:	01c00404 	movi	r7,16
 2009e1c:	3839883a 	mov	fp,r7
 2009e20:	e47fe72e 	bgeu	fp,r17,2009dc0 <_realloc_r+0x68>
 2009e24:	00800304 	movi	r2,12
 2009e28:	0023883a 	mov	r17,zero
 2009e2c:	b0800015 	stw	r2,0(r22)
 2009e30:	8805883a 	mov	r2,r17
 2009e34:	dfc00b17 	ldw	ra,44(sp)
 2009e38:	df000a17 	ldw	fp,40(sp)
 2009e3c:	ddc00917 	ldw	r23,36(sp)
 2009e40:	dd800817 	ldw	r22,32(sp)
 2009e44:	dd400717 	ldw	r21,28(sp)
 2009e48:	dd000617 	ldw	r20,24(sp)
 2009e4c:	dcc00517 	ldw	r19,20(sp)
 2009e50:	dc800417 	ldw	r18,16(sp)
 2009e54:	dc400317 	ldw	r17,12(sp)
 2009e58:	dc000217 	ldw	r16,8(sp)
 2009e5c:	dec00c04 	addi	sp,sp,48
 2009e60:	f800283a 	ret
 2009e64:	00808074 	movhi	r2,513
 2009e68:	1090ee04 	addi	r2,r2,17336
 2009e6c:	12400217 	ldw	r9,8(r2)
 2009e70:	84cd883a 	add	r6,r16,r19
 2009e74:	802b883a 	mov	r21,r16
 2009e78:	3240b926 	beq	r6,r9,200a160 <_realloc_r+0x408>
 2009e7c:	31400117 	ldw	r5,4(r6)
 2009e80:	00bfff84 	movi	r2,-2
 2009e84:	2884703a 	and	r2,r5,r2
 2009e88:	1185883a 	add	r2,r2,r6
 2009e8c:	10c00117 	ldw	r3,4(r2)
 2009e90:	18c0004c 	andi	r3,r3,1
 2009e94:	1807003a 	cmpeq	r3,r3,zero
 2009e98:	1800a326 	beq	r3,zero,200a128 <_realloc_r+0x3d0>
 2009e9c:	2908703a 	and	r4,r5,r4
 2009ea0:	9929883a 	add	r20,r19,r4
 2009ea4:	a1c0a30e 	bge	r20,r7,200a134 <_realloc_r+0x3dc>
 2009ea8:	4080004c 	andi	r2,r8,1
 2009eac:	1000551e 	bne	r2,zero,200a004 <_realloc_r+0x2ac>
 2009eb0:	80800017 	ldw	r2,0(r16)
 2009eb4:	80afc83a 	sub	r23,r16,r2
 2009eb8:	b8c00117 	ldw	r3,4(r23)
 2009ebc:	00bfff04 	movi	r2,-4
 2009ec0:	1884703a 	and	r2,r3,r2
 2009ec4:	30002e26 	beq	r6,zero,2009f80 <_realloc_r+0x228>
 2009ec8:	3240b926 	beq	r6,r9,200a1b0 <_realloc_r+0x458>
 2009ecc:	98a9883a 	add	r20,r19,r2
 2009ed0:	2509883a 	add	r4,r4,r20
 2009ed4:	d9000015 	stw	r4,0(sp)
 2009ed8:	21c02a16 	blt	r4,r7,2009f84 <_realloc_r+0x22c>
 2009edc:	30800317 	ldw	r2,12(r6)
 2009ee0:	30c00217 	ldw	r3,8(r6)
 2009ee4:	01400904 	movi	r5,36
 2009ee8:	99bfff04 	addi	r6,r19,-4
 2009eec:	18800315 	stw	r2,12(r3)
 2009ef0:	10c00215 	stw	r3,8(r2)
 2009ef4:	b9000317 	ldw	r4,12(r23)
 2009ef8:	b8800217 	ldw	r2,8(r23)
 2009efc:	b82b883a 	mov	r21,r23
 2009f00:	bc000204 	addi	r16,r23,8
 2009f04:	20800215 	stw	r2,8(r4)
 2009f08:	11000315 	stw	r4,12(r2)
 2009f0c:	2980e436 	bltu	r5,r6,200a2a0 <_realloc_r+0x548>
 2009f10:	008004c4 	movi	r2,19
 2009f14:	9009883a 	mov	r4,r18
 2009f18:	8011883a 	mov	r8,r16
 2009f1c:	11800f2e 	bgeu	r2,r6,2009f5c <_realloc_r+0x204>
 2009f20:	90800017 	ldw	r2,0(r18)
 2009f24:	ba000404 	addi	r8,r23,16
 2009f28:	91000204 	addi	r4,r18,8
 2009f2c:	b8800215 	stw	r2,8(r23)
 2009f30:	90c00117 	ldw	r3,4(r18)
 2009f34:	008006c4 	movi	r2,27
 2009f38:	b8c00315 	stw	r3,12(r23)
 2009f3c:	1180072e 	bgeu	r2,r6,2009f5c <_realloc_r+0x204>
 2009f40:	90c00217 	ldw	r3,8(r18)
 2009f44:	ba000604 	addi	r8,r23,24
 2009f48:	91000404 	addi	r4,r18,16
 2009f4c:	b8c00415 	stw	r3,16(r23)
 2009f50:	90800317 	ldw	r2,12(r18)
 2009f54:	b8800515 	stw	r2,20(r23)
 2009f58:	3140e726 	beq	r6,r5,200a2f8 <_realloc_r+0x5a0>
 2009f5c:	20800017 	ldw	r2,0(r4)
 2009f60:	dd000017 	ldw	r20,0(sp)
 2009f64:	b80f883a 	mov	r7,r23
 2009f68:	40800015 	stw	r2,0(r8)
 2009f6c:	20c00117 	ldw	r3,4(r4)
 2009f70:	40c00115 	stw	r3,4(r8)
 2009f74:	20800217 	ldw	r2,8(r4)
 2009f78:	40800215 	stw	r2,8(r8)
 2009f7c:	003f9706 	br	2009ddc <_realloc_r+0x84>
 2009f80:	98a9883a 	add	r20,r19,r2
 2009f84:	a1c01f16 	blt	r20,r7,200a004 <_realloc_r+0x2ac>
 2009f88:	b8c00317 	ldw	r3,12(r23)
 2009f8c:	b8800217 	ldw	r2,8(r23)
 2009f90:	99bfff04 	addi	r6,r19,-4
 2009f94:	01400904 	movi	r5,36
 2009f98:	b82b883a 	mov	r21,r23
 2009f9c:	18800215 	stw	r2,8(r3)
 2009fa0:	10c00315 	stw	r3,12(r2)
 2009fa4:	bc000204 	addi	r16,r23,8
 2009fa8:	2980c336 	bltu	r5,r6,200a2b8 <_realloc_r+0x560>
 2009fac:	008004c4 	movi	r2,19
 2009fb0:	9009883a 	mov	r4,r18
 2009fb4:	8011883a 	mov	r8,r16
 2009fb8:	11800f2e 	bgeu	r2,r6,2009ff8 <_realloc_r+0x2a0>
 2009fbc:	90800017 	ldw	r2,0(r18)
 2009fc0:	ba000404 	addi	r8,r23,16
 2009fc4:	91000204 	addi	r4,r18,8
 2009fc8:	b8800215 	stw	r2,8(r23)
 2009fcc:	90c00117 	ldw	r3,4(r18)
 2009fd0:	008006c4 	movi	r2,27
 2009fd4:	b8c00315 	stw	r3,12(r23)
 2009fd8:	1180072e 	bgeu	r2,r6,2009ff8 <_realloc_r+0x2a0>
 2009fdc:	90c00217 	ldw	r3,8(r18)
 2009fe0:	ba000604 	addi	r8,r23,24
 2009fe4:	91000404 	addi	r4,r18,16
 2009fe8:	b8c00415 	stw	r3,16(r23)
 2009fec:	90800317 	ldw	r2,12(r18)
 2009ff0:	b8800515 	stw	r2,20(r23)
 2009ff4:	3140c726 	beq	r6,r5,200a314 <_realloc_r+0x5bc>
 2009ff8:	20800017 	ldw	r2,0(r4)
 2009ffc:	b80f883a 	mov	r7,r23
 200a000:	003fd906 	br	2009f68 <_realloc_r+0x210>
 200a004:	880b883a 	mov	r5,r17
 200a008:	b009883a 	mov	r4,r22
 200a00c:	20021d40 	call	20021d4 <_malloc_r>
 200a010:	1023883a 	mov	r17,r2
 200a014:	10002526 	beq	r2,zero,200a0ac <_realloc_r+0x354>
 200a018:	80800117 	ldw	r2,4(r16)
 200a01c:	00ffff84 	movi	r3,-2
 200a020:	893ffe04 	addi	r4,r17,-8
 200a024:	10c4703a 	and	r2,r2,r3
 200a028:	8085883a 	add	r2,r16,r2
 200a02c:	20809526 	beq	r4,r2,200a284 <_realloc_r+0x52c>
 200a030:	99bfff04 	addi	r6,r19,-4
 200a034:	01c00904 	movi	r7,36
 200a038:	39804536 	bltu	r7,r6,200a150 <_realloc_r+0x3f8>
 200a03c:	008004c4 	movi	r2,19
 200a040:	9009883a 	mov	r4,r18
 200a044:	880b883a 	mov	r5,r17
 200a048:	11800f2e 	bgeu	r2,r6,200a088 <_realloc_r+0x330>
 200a04c:	90800017 	ldw	r2,0(r18)
 200a050:	89400204 	addi	r5,r17,8
 200a054:	91000204 	addi	r4,r18,8
 200a058:	88800015 	stw	r2,0(r17)
 200a05c:	90c00117 	ldw	r3,4(r18)
 200a060:	008006c4 	movi	r2,27
 200a064:	88c00115 	stw	r3,4(r17)
 200a068:	1180072e 	bgeu	r2,r6,200a088 <_realloc_r+0x330>
 200a06c:	90c00217 	ldw	r3,8(r18)
 200a070:	89400404 	addi	r5,r17,16
 200a074:	91000404 	addi	r4,r18,16
 200a078:	88c00215 	stw	r3,8(r17)
 200a07c:	90800317 	ldw	r2,12(r18)
 200a080:	88800315 	stw	r2,12(r17)
 200a084:	31c09126 	beq	r6,r7,200a2cc <_realloc_r+0x574>
 200a088:	20800017 	ldw	r2,0(r4)
 200a08c:	28800015 	stw	r2,0(r5)
 200a090:	20c00117 	ldw	r3,4(r4)
 200a094:	28c00115 	stw	r3,4(r5)
 200a098:	20800217 	ldw	r2,8(r4)
 200a09c:	28800215 	stw	r2,8(r5)
 200a0a0:	900b883a 	mov	r5,r18
 200a0a4:	b009883a 	mov	r4,r22
 200a0a8:	20015c40 	call	20015c4 <_free_r>
 200a0ac:	b009883a 	mov	r4,r22
 200a0b0:	2010a240 	call	2010a24 <__malloc_unlock>
 200a0b4:	003f5e06 	br	2009e30 <_realloc_r+0xd8>
 200a0b8:	300b883a 	mov	r5,r6
 200a0bc:	dfc00b17 	ldw	ra,44(sp)
 200a0c0:	df000a17 	ldw	fp,40(sp)
 200a0c4:	ddc00917 	ldw	r23,36(sp)
 200a0c8:	dd800817 	ldw	r22,32(sp)
 200a0cc:	dd400717 	ldw	r21,28(sp)
 200a0d0:	dd000617 	ldw	r20,24(sp)
 200a0d4:	dcc00517 	ldw	r19,20(sp)
 200a0d8:	dc800417 	ldw	r18,16(sp)
 200a0dc:	dc400317 	ldw	r17,12(sp)
 200a0e0:	dc000217 	ldw	r16,8(sp)
 200a0e4:	dec00c04 	addi	sp,sp,48
 200a0e8:	20021d41 	jmpi	20021d4 <_malloc_r>
 200a0ec:	38800117 	ldw	r2,4(r7)
 200a0f0:	e54b883a 	add	r5,fp,r21
 200a0f4:	31000054 	ori	r4,r6,1
 200a0f8:	1080004c 	andi	r2,r2,1
 200a0fc:	1704b03a 	or	r2,r2,fp
 200a100:	38800115 	stw	r2,4(r7)
 200a104:	29000115 	stw	r4,4(r5)
 200a108:	2987883a 	add	r3,r5,r6
 200a10c:	18800117 	ldw	r2,4(r3)
 200a110:	29400204 	addi	r5,r5,8
 200a114:	b009883a 	mov	r4,r22
 200a118:	10800054 	ori	r2,r2,1
 200a11c:	18800115 	stw	r2,4(r3)
 200a120:	20015c40 	call	20015c4 <_free_r>
 200a124:	003f3806 	br	2009e08 <_realloc_r+0xb0>
 200a128:	000d883a 	mov	r6,zero
 200a12c:	0009883a 	mov	r4,zero
 200a130:	003f5d06 	br	2009ea8 <_realloc_r+0x150>
 200a134:	30c00217 	ldw	r3,8(r6)
 200a138:	30800317 	ldw	r2,12(r6)
 200a13c:	800f883a 	mov	r7,r16
 200a140:	84000204 	addi	r16,r16,8
 200a144:	10c00215 	stw	r3,8(r2)
 200a148:	18800315 	stw	r2,12(r3)
 200a14c:	003f2306 	br	2009ddc <_realloc_r+0x84>
 200a150:	8809883a 	mov	r4,r17
 200a154:	900b883a 	mov	r5,r18
 200a158:	2008b740 	call	2008b74 <memmove>
 200a15c:	003fd006 	br	200a0a0 <_realloc_r+0x348>
 200a160:	30800117 	ldw	r2,4(r6)
 200a164:	e0c00404 	addi	r3,fp,16
 200a168:	1108703a 	and	r4,r2,r4
 200a16c:	9905883a 	add	r2,r19,r4
 200a170:	10ff4d16 	blt	r2,r3,2009ea8 <_realloc_r+0x150>
 200a174:	1705c83a 	sub	r2,r2,fp
 200a178:	870b883a 	add	r5,r16,fp
 200a17c:	10800054 	ori	r2,r2,1
 200a180:	28800115 	stw	r2,4(r5)
 200a184:	80c00117 	ldw	r3,4(r16)
 200a188:	00808074 	movhi	r2,513
 200a18c:	1090ee04 	addi	r2,r2,17336
 200a190:	b009883a 	mov	r4,r22
 200a194:	18c0004c 	andi	r3,r3,1
 200a198:	e0c6b03a 	or	r3,fp,r3
 200a19c:	11400215 	stw	r5,8(r2)
 200a1a0:	80c00115 	stw	r3,4(r16)
 200a1a4:	2010a240 	call	2010a24 <__malloc_unlock>
 200a1a8:	84400204 	addi	r17,r16,8
 200a1ac:	003f2006 	br	2009e30 <_realloc_r+0xd8>
 200a1b0:	98a9883a 	add	r20,r19,r2
 200a1b4:	2509883a 	add	r4,r4,r20
 200a1b8:	e0800404 	addi	r2,fp,16
 200a1bc:	d9000115 	stw	r4,4(sp)
 200a1c0:	20bf7016 	blt	r4,r2,2009f84 <_realloc_r+0x22c>
 200a1c4:	b8c00317 	ldw	r3,12(r23)
 200a1c8:	b8800217 	ldw	r2,8(r23)
 200a1cc:	99bfff04 	addi	r6,r19,-4
 200a1d0:	01400904 	movi	r5,36
 200a1d4:	18800215 	stw	r2,8(r3)
 200a1d8:	10c00315 	stw	r3,12(r2)
 200a1dc:	bc400204 	addi	r17,r23,8
 200a1e0:	29804136 	bltu	r5,r6,200a2e8 <_realloc_r+0x590>
 200a1e4:	008004c4 	movi	r2,19
 200a1e8:	9009883a 	mov	r4,r18
 200a1ec:	880f883a 	mov	r7,r17
 200a1f0:	11800f2e 	bgeu	r2,r6,200a230 <_realloc_r+0x4d8>
 200a1f4:	90800017 	ldw	r2,0(r18)
 200a1f8:	b9c00404 	addi	r7,r23,16
 200a1fc:	91000204 	addi	r4,r18,8
 200a200:	b8800215 	stw	r2,8(r23)
 200a204:	90c00117 	ldw	r3,4(r18)
 200a208:	008006c4 	movi	r2,27
 200a20c:	b8c00315 	stw	r3,12(r23)
 200a210:	1180072e 	bgeu	r2,r6,200a230 <_realloc_r+0x4d8>
 200a214:	90c00217 	ldw	r3,8(r18)
 200a218:	b9c00604 	addi	r7,r23,24
 200a21c:	91000404 	addi	r4,r18,16
 200a220:	b8c00415 	stw	r3,16(r23)
 200a224:	90800317 	ldw	r2,12(r18)
 200a228:	b8800515 	stw	r2,20(r23)
 200a22c:	31404026 	beq	r6,r5,200a330 <_realloc_r+0x5d8>
 200a230:	20800017 	ldw	r2,0(r4)
 200a234:	38800015 	stw	r2,0(r7)
 200a238:	20c00117 	ldw	r3,4(r4)
 200a23c:	38c00115 	stw	r3,4(r7)
 200a240:	20800217 	ldw	r2,8(r4)
 200a244:	38800215 	stw	r2,8(r7)
 200a248:	d8c00117 	ldw	r3,4(sp)
 200a24c:	bf0b883a 	add	r5,r23,fp
 200a250:	b009883a 	mov	r4,r22
 200a254:	1f05c83a 	sub	r2,r3,fp
 200a258:	10800054 	ori	r2,r2,1
 200a25c:	28800115 	stw	r2,4(r5)
 200a260:	b8c00117 	ldw	r3,4(r23)
 200a264:	00808074 	movhi	r2,513
 200a268:	1090ee04 	addi	r2,r2,17336
 200a26c:	11400215 	stw	r5,8(r2)
 200a270:	18c0004c 	andi	r3,r3,1
 200a274:	e0c6b03a 	or	r3,fp,r3
 200a278:	b8c00115 	stw	r3,4(r23)
 200a27c:	2010a240 	call	2010a24 <__malloc_unlock>
 200a280:	003eeb06 	br	2009e30 <_realloc_r+0xd8>
 200a284:	20800117 	ldw	r2,4(r4)
 200a288:	00ffff04 	movi	r3,-4
 200a28c:	800f883a 	mov	r7,r16
 200a290:	10c4703a 	and	r2,r2,r3
 200a294:	98a9883a 	add	r20,r19,r2
 200a298:	84000204 	addi	r16,r16,8
 200a29c:	003ecf06 	br	2009ddc <_realloc_r+0x84>
 200a2a0:	900b883a 	mov	r5,r18
 200a2a4:	8009883a 	mov	r4,r16
 200a2a8:	2008b740 	call	2008b74 <memmove>
 200a2ac:	dd000017 	ldw	r20,0(sp)
 200a2b0:	b80f883a 	mov	r7,r23
 200a2b4:	003ec906 	br	2009ddc <_realloc_r+0x84>
 200a2b8:	900b883a 	mov	r5,r18
 200a2bc:	8009883a 	mov	r4,r16
 200a2c0:	2008b740 	call	2008b74 <memmove>
 200a2c4:	b80f883a 	mov	r7,r23
 200a2c8:	003ec406 	br	2009ddc <_realloc_r+0x84>
 200a2cc:	90c00417 	ldw	r3,16(r18)
 200a2d0:	89400604 	addi	r5,r17,24
 200a2d4:	91000604 	addi	r4,r18,24
 200a2d8:	88c00415 	stw	r3,16(r17)
 200a2dc:	90800517 	ldw	r2,20(r18)
 200a2e0:	88800515 	stw	r2,20(r17)
 200a2e4:	003f6806 	br	200a088 <_realloc_r+0x330>
 200a2e8:	900b883a 	mov	r5,r18
 200a2ec:	8809883a 	mov	r4,r17
 200a2f0:	2008b740 	call	2008b74 <memmove>
 200a2f4:	003fd406 	br	200a248 <_realloc_r+0x4f0>
 200a2f8:	90c00417 	ldw	r3,16(r18)
 200a2fc:	91000604 	addi	r4,r18,24
 200a300:	ba000804 	addi	r8,r23,32
 200a304:	b8c00615 	stw	r3,24(r23)
 200a308:	90800517 	ldw	r2,20(r18)
 200a30c:	b8800715 	stw	r2,28(r23)
 200a310:	003f1206 	br	2009f5c <_realloc_r+0x204>
 200a314:	90c00417 	ldw	r3,16(r18)
 200a318:	91000604 	addi	r4,r18,24
 200a31c:	ba000804 	addi	r8,r23,32
 200a320:	b8c00615 	stw	r3,24(r23)
 200a324:	90800517 	ldw	r2,20(r18)
 200a328:	b8800715 	stw	r2,28(r23)
 200a32c:	003f3206 	br	2009ff8 <_realloc_r+0x2a0>
 200a330:	90c00417 	ldw	r3,16(r18)
 200a334:	91000604 	addi	r4,r18,24
 200a338:	b9c00804 	addi	r7,r23,32
 200a33c:	b8c00615 	stw	r3,24(r23)
 200a340:	90800517 	ldw	r2,20(r18)
 200a344:	b8800715 	stw	r2,28(r23)
 200a348:	003fb906 	br	200a230 <_realloc_r+0x4d8>

0200a34c <__isinfd>:
 200a34c:	200d883a 	mov	r6,r4
 200a350:	0109c83a 	sub	r4,zero,r4
 200a354:	2188b03a 	or	r4,r4,r6
 200a358:	2008d7fa 	srli	r4,r4,31
 200a35c:	00a00034 	movhi	r2,32768
 200a360:	10bfffc4 	addi	r2,r2,-1
 200a364:	1144703a 	and	r2,r2,r5
 200a368:	2088b03a 	or	r4,r4,r2
 200a36c:	009ffc34 	movhi	r2,32752
 200a370:	1105c83a 	sub	r2,r2,r4
 200a374:	0087c83a 	sub	r3,zero,r2
 200a378:	10c4b03a 	or	r2,r2,r3
 200a37c:	1004d7fa 	srli	r2,r2,31
 200a380:	00c00044 	movi	r3,1
 200a384:	1885c83a 	sub	r2,r3,r2
 200a388:	f800283a 	ret

0200a38c <__isnand>:
 200a38c:	200d883a 	mov	r6,r4
 200a390:	0109c83a 	sub	r4,zero,r4
 200a394:	2188b03a 	or	r4,r4,r6
 200a398:	2008d7fa 	srli	r4,r4,31
 200a39c:	00a00034 	movhi	r2,32768
 200a3a0:	10bfffc4 	addi	r2,r2,-1
 200a3a4:	1144703a 	and	r2,r2,r5
 200a3a8:	2088b03a 	or	r4,r4,r2
 200a3ac:	009ffc34 	movhi	r2,32752
 200a3b0:	1105c83a 	sub	r2,r2,r4
 200a3b4:	1004d7fa 	srli	r2,r2,31
 200a3b8:	f800283a 	ret

0200a3bc <__sccl>:
 200a3bc:	28c00003 	ldbu	r3,0(r5)
 200a3c0:	00801784 	movi	r2,94
 200a3c4:	2a000044 	addi	r8,r5,1
 200a3c8:	18802526 	beq	r3,r2,200a460 <__sccl+0xa4>
 200a3cc:	180f883a 	mov	r7,r3
 200a3d0:	0013883a 	mov	r9,zero
 200a3d4:	000d883a 	mov	r6,zero
 200a3d8:	0007883a 	mov	r3,zero
 200a3dc:	01404004 	movi	r5,256
 200a3e0:	1905883a 	add	r2,r3,r4
 200a3e4:	18c00044 	addi	r3,r3,1
 200a3e8:	11800005 	stb	r6,0(r2)
 200a3ec:	197ffc1e 	bne	r3,r5,200a3e0 <__sccl+0x24>
 200a3f0:	38000c26 	beq	r7,zero,200a424 <__sccl+0x68>
 200a3f4:	00800044 	movi	r2,1
 200a3f8:	124dc83a 	sub	r6,r2,r9
 200a3fc:	3905883a 	add	r2,r7,r4
 200a400:	11800005 	stb	r6,0(r2)
 200a404:	41400044 	addi	r5,r8,1
 200a408:	02400b44 	movi	r9,45
 200a40c:	02801744 	movi	r10,93
 200a410:	28bfffc3 	ldbu	r2,-1(r5)
 200a414:	2811883a 	mov	r8,r5
 200a418:	12400726 	beq	r2,r9,200a438 <__sccl+0x7c>
 200a41c:	12800226 	beq	r2,r10,200a428 <__sccl+0x6c>
 200a420:	1000031e 	bne	r2,zero,200a430 <__sccl+0x74>
 200a424:	423fffc4 	addi	r8,r8,-1
 200a428:	4005883a 	mov	r2,r8
 200a42c:	f800283a 	ret
 200a430:	100f883a 	mov	r7,r2
 200a434:	003ff106 	br	200a3fc <__sccl+0x40>
 200a438:	28c00003 	ldbu	r3,0(r5)
 200a43c:	1a800d26 	beq	r3,r10,200a474 <__sccl+0xb8>
 200a440:	19c00c16 	blt	r3,r7,200a474 <__sccl+0xb8>
 200a444:	21c5883a 	add	r2,r4,r7
 200a448:	39c00044 	addi	r7,r7,1
 200a44c:	11800045 	stb	r6,1(r2)
 200a450:	10800044 	addi	r2,r2,1
 200a454:	38fffc16 	blt	r7,r3,200a448 <__sccl+0x8c>
 200a458:	29400084 	addi	r5,r5,2
 200a45c:	003fec06 	br	200a410 <__sccl+0x54>
 200a460:	29c00043 	ldbu	r7,1(r5)
 200a464:	02400044 	movi	r9,1
 200a468:	2a000084 	addi	r8,r5,2
 200a46c:	480d883a 	mov	r6,r9
 200a470:	003fd906 	br	200a3d8 <__sccl+0x1c>
 200a474:	01c00b44 	movi	r7,45
 200a478:	003fe006 	br	200a3fc <__sccl+0x40>

0200a47c <nanf>:
 200a47c:	009ff034 	movhi	r2,32704
 200a480:	f800283a 	ret

0200a484 <sprintf>:
 200a484:	deffe504 	addi	sp,sp,-108
 200a488:	2013883a 	mov	r9,r4
 200a48c:	dfc01815 	stw	ra,96(sp)
 200a490:	d9801915 	stw	r6,100(sp)
 200a494:	d9c01a15 	stw	r7,104(sp)
 200a498:	d8801904 	addi	r2,sp,100
 200a49c:	d8800015 	stw	r2,0(sp)
 200a4a0:	00808074 	movhi	r2,513
 200a4a4:	10968904 	addi	r2,r2,23076
 200a4a8:	11000017 	ldw	r4,0(r2)
 200a4ac:	d9c00017 	ldw	r7,0(sp)
 200a4b0:	00808204 	movi	r2,520
 200a4b4:	00e00034 	movhi	r3,32768
 200a4b8:	18ffffc4 	addi	r3,r3,-1
 200a4bc:	280d883a 	mov	r6,r5
 200a4c0:	d880040d 	sth	r2,16(sp)
 200a4c4:	d9400104 	addi	r5,sp,4
 200a4c8:	00bfffc4 	movi	r2,-1
 200a4cc:	d8c00615 	stw	r3,24(sp)
 200a4d0:	d8c00315 	stw	r3,12(sp)
 200a4d4:	da400515 	stw	r9,20(sp)
 200a4d8:	d880048d 	sth	r2,18(sp)
 200a4dc:	da400115 	stw	r9,4(sp)
 200a4e0:	20031f00 	call	20031f0 <___vfprintf_internal_r>
 200a4e4:	d8c00117 	ldw	r3,4(sp)
 200a4e8:	18000005 	stb	zero,0(r3)
 200a4ec:	dfc01817 	ldw	ra,96(sp)
 200a4f0:	dec01b04 	addi	sp,sp,108
 200a4f4:	f800283a 	ret

0200a4f8 <_sprintf_r>:
 200a4f8:	deffe604 	addi	sp,sp,-104
 200a4fc:	2813883a 	mov	r9,r5
 200a500:	dfc01815 	stw	ra,96(sp)
 200a504:	d9c01915 	stw	r7,100(sp)
 200a508:	d8801904 	addi	r2,sp,100
 200a50c:	d8800015 	stw	r2,0(sp)
 200a510:	100f883a 	mov	r7,r2
 200a514:	00808204 	movi	r2,520
 200a518:	00e00034 	movhi	r3,32768
 200a51c:	18ffffc4 	addi	r3,r3,-1
 200a520:	d880040d 	sth	r2,16(sp)
 200a524:	d9400104 	addi	r5,sp,4
 200a528:	00bfffc4 	movi	r2,-1
 200a52c:	d8c00615 	stw	r3,24(sp)
 200a530:	d8c00315 	stw	r3,12(sp)
 200a534:	da400515 	stw	r9,20(sp)
 200a538:	d880048d 	sth	r2,18(sp)
 200a53c:	da400115 	stw	r9,4(sp)
 200a540:	20031f00 	call	20031f0 <___vfprintf_internal_r>
 200a544:	d8c00117 	ldw	r3,4(sp)
 200a548:	18000005 	stb	zero,0(r3)
 200a54c:	dfc01817 	ldw	ra,96(sp)
 200a550:	dec01a04 	addi	sp,sp,104
 200a554:	f800283a 	ret

0200a558 <strcmp>:
 200a558:	2144b03a 	or	r2,r4,r5
 200a55c:	108000cc 	andi	r2,r2,3
 200a560:	10001d1e 	bne	r2,zero,200a5d8 <strcmp+0x80>
 200a564:	200f883a 	mov	r7,r4
 200a568:	28800017 	ldw	r2,0(r5)
 200a56c:	21000017 	ldw	r4,0(r4)
 200a570:	280d883a 	mov	r6,r5
 200a574:	2080161e 	bne	r4,r2,200a5d0 <strcmp+0x78>
 200a578:	023fbff4 	movhi	r8,65279
 200a57c:	423fbfc4 	addi	r8,r8,-257
 200a580:	2207883a 	add	r3,r4,r8
 200a584:	01602074 	movhi	r5,32897
 200a588:	29602004 	addi	r5,r5,-32640
 200a58c:	1946703a 	and	r3,r3,r5
 200a590:	0104303a 	nor	r2,zero,r4
 200a594:	10c4703a 	and	r2,r2,r3
 200a598:	10001c1e 	bne	r2,zero,200a60c <strcmp+0xb4>
 200a59c:	4013883a 	mov	r9,r8
 200a5a0:	2811883a 	mov	r8,r5
 200a5a4:	00000106 	br	200a5ac <strcmp+0x54>
 200a5a8:	1800181e 	bne	r3,zero,200a60c <strcmp+0xb4>
 200a5ac:	39c00104 	addi	r7,r7,4
 200a5b0:	39000017 	ldw	r4,0(r7)
 200a5b4:	31800104 	addi	r6,r6,4
 200a5b8:	31400017 	ldw	r5,0(r6)
 200a5bc:	2245883a 	add	r2,r4,r9
 200a5c0:	1204703a 	and	r2,r2,r8
 200a5c4:	0106303a 	nor	r3,zero,r4
 200a5c8:	1886703a 	and	r3,r3,r2
 200a5cc:	217ff626 	beq	r4,r5,200a5a8 <strcmp+0x50>
 200a5d0:	3809883a 	mov	r4,r7
 200a5d4:	300b883a 	mov	r5,r6
 200a5d8:	20c00007 	ldb	r3,0(r4)
 200a5dc:	1800051e 	bne	r3,zero,200a5f4 <strcmp+0x9c>
 200a5e0:	00000606 	br	200a5fc <strcmp+0xa4>
 200a5e4:	21000044 	addi	r4,r4,1
 200a5e8:	20c00007 	ldb	r3,0(r4)
 200a5ec:	29400044 	addi	r5,r5,1
 200a5f0:	18000226 	beq	r3,zero,200a5fc <strcmp+0xa4>
 200a5f4:	28800007 	ldb	r2,0(r5)
 200a5f8:	18bffa26 	beq	r3,r2,200a5e4 <strcmp+0x8c>
 200a5fc:	20c00003 	ldbu	r3,0(r4)
 200a600:	28800003 	ldbu	r2,0(r5)
 200a604:	1885c83a 	sub	r2,r3,r2
 200a608:	f800283a 	ret
 200a60c:	0005883a 	mov	r2,zero
 200a610:	f800283a 	ret

0200a614 <match>:
 200a614:	21800017 	ldw	r6,0(r4)
 200a618:	01c01004 	movi	r7,64
 200a61c:	02001684 	movi	r8,90
 200a620:	28800007 	ldb	r2,0(r5)
 200a624:	29400044 	addi	r5,r5,1
 200a628:	10000826 	beq	r2,zero,200a64c <match+0x38>
 200a62c:	31800044 	addi	r6,r6,1
 200a630:	30c00007 	ldb	r3,0(r6)
 200a634:	38c0020e 	bge	r7,r3,200a640 <match+0x2c>
 200a638:	40c00116 	blt	r8,r3,200a640 <match+0x2c>
 200a63c:	18c00804 	addi	r3,r3,32
 200a640:	18bff726 	beq	r3,r2,200a620 <match+0xc>
 200a644:	0005883a 	mov	r2,zero
 200a648:	f800283a 	ret
 200a64c:	30800044 	addi	r2,r6,1
 200a650:	20800015 	stw	r2,0(r4)
 200a654:	00800044 	movi	r2,1
 200a658:	f800283a 	ret

0200a65c <_strtod_r>:
 200a65c:	deffd504 	addi	sp,sp,-172
 200a660:	df002915 	stw	fp,164(sp)
 200a664:	dd402615 	stw	r21,152(sp)
 200a668:	dd002515 	stw	r20,148(sp)
 200a66c:	dfc02a15 	stw	ra,168(sp)
 200a670:	ddc02815 	stw	r23,160(sp)
 200a674:	dd802715 	stw	r22,156(sp)
 200a678:	dcc02415 	stw	r19,144(sp)
 200a67c:	dc802315 	stw	r18,140(sp)
 200a680:	dc402215 	stw	r17,136(sp)
 200a684:	dc002115 	stw	r16,132(sp)
 200a688:	2829883a 	mov	r20,r5
 200a68c:	202b883a 	mov	r21,r4
 200a690:	d9801d15 	stw	r6,116(sp)
 200a694:	d8000915 	stw	zero,36(sp)
 200a698:	d8000a15 	stw	zero,40(sp)
 200a69c:	d9400415 	stw	r5,16(sp)
 200a6a0:	df000904 	addi	fp,sp,36
 200a6a4:	dc000417 	ldw	r16,16(sp)
 200a6a8:	00800b44 	movi	r2,45
 200a6ac:	80c00003 	ldbu	r3,0(r16)
 200a6b0:	10c03536 	bltu	r2,r3,200a788 <_strtod_r+0x12c>
 200a6b4:	18c5883a 	add	r2,r3,r3
 200a6b8:	1085883a 	add	r2,r2,r2
 200a6bc:	00c08074 	movhi	r3,513
 200a6c0:	18e9b404 	addi	r3,r3,-22832
 200a6c4:	10c5883a 	add	r2,r2,r3
 200a6c8:	11000017 	ldw	r4,0(r2)
 200a6cc:	2000683a 	jmp	r4
 200a6d0:	0200a908 	cmpgei	r8,zero,676
 200a6d4:	0200a788 	cmpgei	r8,zero,670
 200a6d8:	0200a788 	cmpgei	r8,zero,670
 200a6dc:	0200a788 	cmpgei	r8,zero,670
 200a6e0:	0200a788 	cmpgei	r8,zero,670
 200a6e4:	0200a788 	cmpgei	r8,zero,670
 200a6e8:	0200a788 	cmpgei	r8,zero,670
 200a6ec:	0200a788 	cmpgei	r8,zero,670
 200a6f0:	0200a788 	cmpgei	r8,zero,670
 200a6f4:	0200ac50 	cmplti	r8,zero,689
 200a6f8:	0200ac50 	cmplti	r8,zero,689
 200a6fc:	0200ac50 	cmplti	r8,zero,689
 200a700:	0200ac50 	cmplti	r8,zero,689
 200a704:	0200ac50 	cmplti	r8,zero,689
 200a708:	0200a788 	cmpgei	r8,zero,670
 200a70c:	0200a788 	cmpgei	r8,zero,670
 200a710:	0200a788 	cmpgei	r8,zero,670
 200a714:	0200a788 	cmpgei	r8,zero,670
 200a718:	0200a788 	cmpgei	r8,zero,670
 200a71c:	0200a788 	cmpgei	r8,zero,670
 200a720:	0200a788 	cmpgei	r8,zero,670
 200a724:	0200a788 	cmpgei	r8,zero,670
 200a728:	0200a788 	cmpgei	r8,zero,670
 200a72c:	0200a788 	cmpgei	r8,zero,670
 200a730:	0200a788 	cmpgei	r8,zero,670
 200a734:	0200a788 	cmpgei	r8,zero,670
 200a738:	0200a788 	cmpgei	r8,zero,670
 200a73c:	0200a788 	cmpgei	r8,zero,670
 200a740:	0200a788 	cmpgei	r8,zero,670
 200a744:	0200a788 	cmpgei	r8,zero,670
 200a748:	0200a788 	cmpgei	r8,zero,670
 200a74c:	0200a788 	cmpgei	r8,zero,670
 200a750:	0200ac50 	cmplti	r8,zero,689
 200a754:	0200a788 	cmpgei	r8,zero,670
 200a758:	0200a788 	cmpgei	r8,zero,670
 200a75c:	0200a788 	cmpgei	r8,zero,670
 200a760:	0200a788 	cmpgei	r8,zero,670
 200a764:	0200a788 	cmpgei	r8,zero,670
 200a768:	0200a788 	cmpgei	r8,zero,670
 200a76c:	0200a788 	cmpgei	r8,zero,670
 200a770:	0200a788 	cmpgei	r8,zero,670
 200a774:	0200a788 	cmpgei	r8,zero,670
 200a778:	0200a788 	cmpgei	r8,zero,670
 200a77c:	0200ac30 	cmpltui	r8,zero,688
 200a780:	0200a788 	cmpgei	r8,zero,670
 200a784:	0200ac5c 	xori	r8,zero,689
 200a788:	d8001515 	stw	zero,84(sp)
 200a78c:	80c00007 	ldb	r3,0(r16)
 200a790:	00800c04 	movi	r2,48
 200a794:	1880e926 	beq	r3,r2,200ab3c <_strtod_r+0x4e0>
 200a798:	d8001615 	stw	zero,88(sp)
 200a79c:	dc001415 	stw	r16,80(sp)
 200a7a0:	84400007 	ldb	r17,0(r16)
 200a7a4:	00800bc4 	movi	r2,47
 200a7a8:	1443760e 	bge	r2,r17,200b584 <_strtod_r+0xf28>
 200a7ac:	00800e44 	movi	r2,57
 200a7b0:	14437416 	blt	r2,r17,200b584 <_strtod_r+0xf28>
 200a7b4:	8025883a 	mov	r18,r16
 200a7b8:	0027883a 	mov	r19,zero
 200a7bc:	d8001215 	stw	zero,72(sp)
 200a7c0:	d8001115 	stw	zero,68(sp)
 200a7c4:	00000f06 	br	200a804 <_strtod_r+0x1a8>
 200a7c8:	d9001217 	ldw	r4,72(sp)
 200a7cc:	01400284 	movi	r5,10
 200a7d0:	2000abc0 	call	2000abc <__mulsi3>
 200a7d4:	1445883a 	add	r2,r2,r17
 200a7d8:	10bff404 	addi	r2,r2,-48
 200a7dc:	d8801215 	stw	r2,72(sp)
 200a7e0:	94000044 	addi	r16,r18,1
 200a7e4:	dc000415 	stw	r16,16(sp)
 200a7e8:	84400007 	ldb	r17,0(r16)
 200a7ec:	00800bc4 	movi	r2,47
 200a7f0:	9cc00044 	addi	r19,r19,1
 200a7f4:	8025883a 	mov	r18,r16
 200a7f8:	1440130e 	bge	r2,r17,200a848 <_strtod_r+0x1ec>
 200a7fc:	00800e44 	movi	r2,57
 200a800:	14401116 	blt	r2,r17,200a848 <_strtod_r+0x1ec>
 200a804:	00800204 	movi	r2,8
 200a808:	14ffef0e 	bge	r2,r19,200a7c8 <_strtod_r+0x16c>
 200a80c:	008003c4 	movi	r2,15
 200a810:	14fff316 	blt	r2,r19,200a7e0 <_strtod_r+0x184>
 200a814:	d9001117 	ldw	r4,68(sp)
 200a818:	01400284 	movi	r5,10
 200a81c:	94000044 	addi	r16,r18,1
 200a820:	2000abc0 	call	2000abc <__mulsi3>
 200a824:	1445883a 	add	r2,r2,r17
 200a828:	10bff404 	addi	r2,r2,-48
 200a82c:	d8801115 	stw	r2,68(sp)
 200a830:	dc000415 	stw	r16,16(sp)
 200a834:	84400007 	ldb	r17,0(r16)
 200a838:	00800bc4 	movi	r2,47
 200a83c:	9cc00044 	addi	r19,r19,1
 200a840:	8025883a 	mov	r18,r16
 200a844:	147fed16 	blt	r2,r17,200a7fc <_strtod_r+0x1a0>
 200a848:	00800b84 	movi	r2,46
 200a84c:	8880c926 	beq	r17,r2,200ab74 <_strtod_r+0x518>
 200a850:	dcc01815 	stw	r19,96(sp)
 200a854:	d8001b15 	stw	zero,108(sp)
 200a858:	d8001715 	stw	zero,92(sp)
 200a85c:	000d883a 	mov	r6,zero
 200a860:	00801944 	movi	r2,101
 200a864:	88802126 	beq	r17,r2,200a8ec <_strtod_r+0x290>
 200a868:	00801144 	movi	r2,69
 200a86c:	88801f26 	beq	r17,r2,200a8ec <_strtod_r+0x290>
 200a870:	d9001817 	ldw	r4,96(sp)
 200a874:	2024c03a 	cmpne	r18,r4,zero
 200a878:	0009883a 	mov	r4,zero
 200a87c:	9000651e 	bne	r18,zero,200aa14 <_strtod_r+0x3b8>
 200a880:	3000c926 	beq	r6,zero,200aba8 <_strtod_r+0x54c>
 200a884:	d8801d17 	ldw	r2,116(sp)
 200a888:	10000326 	beq	r2,zero,200a898 <_strtod_r+0x23c>
 200a88c:	d8800417 	ldw	r2,16(sp)
 200a890:	d8c01d17 	ldw	r3,116(sp)
 200a894:	18800015 	stw	r2,0(r3)
 200a898:	d9001517 	ldw	r4,84(sp)
 200a89c:	2005003a 	cmpeq	r2,r4,zero
 200a8a0:	10001c1e 	bne	r2,zero,200a914 <_strtod_r+0x2b8>
 200a8a4:	e0800017 	ldw	r2,0(fp)
 200a8a8:	e0c00117 	ldw	r3,4(fp)
 200a8ac:	1009883a 	mov	r4,r2
 200a8b0:	1960003c 	xorhi	r5,r3,32768
 200a8b4:	2005883a 	mov	r2,r4
 200a8b8:	2807883a 	mov	r3,r5
 200a8bc:	dfc02a17 	ldw	ra,168(sp)
 200a8c0:	df002917 	ldw	fp,164(sp)
 200a8c4:	ddc02817 	ldw	r23,160(sp)
 200a8c8:	dd802717 	ldw	r22,156(sp)
 200a8cc:	dd402617 	ldw	r21,152(sp)
 200a8d0:	dd002517 	ldw	r20,148(sp)
 200a8d4:	dcc02417 	ldw	r19,144(sp)
 200a8d8:	dc802317 	ldw	r18,140(sp)
 200a8dc:	dc402217 	ldw	r17,136(sp)
 200a8e0:	dc002117 	ldw	r16,132(sp)
 200a8e4:	dec02b04 	addi	sp,sp,172
 200a8e8:	f800283a 	ret
 200a8ec:	d8801817 	ldw	r2,96(sp)
 200a8f0:	1024c03a 	cmpne	r18,r2,zero
 200a8f4:	90000a1e 	bne	r18,zero,200a920 <_strtod_r+0x2c4>
 200a8f8:	3000091e 	bne	r6,zero,200a920 <_strtod_r+0x2c4>
 200a8fc:	d8c01617 	ldw	r3,88(sp)
 200a900:	1805003a 	cmpeq	r2,r3,zero
 200a904:	10000626 	beq	r2,zero,200a920 <_strtod_r+0x2c4>
 200a908:	d8001515 	stw	zero,84(sp)
 200a90c:	dd000415 	stw	r20,16(sp)
 200a910:	003fdc06 	br	200a884 <_strtod_r+0x228>
 200a914:	e1000017 	ldw	r4,0(fp)
 200a918:	e1400117 	ldw	r5,4(fp)
 200a91c:	003fe506 	br	200a8b4 <_strtod_r+0x258>
 200a920:	dd000417 	ldw	r20,16(sp)
 200a924:	00800ac4 	movi	r2,43
 200a928:	a4000044 	addi	r16,r20,1
 200a92c:	dc000415 	stw	r16,16(sp)
 200a930:	a0c00047 	ldb	r3,1(r20)
 200a934:	8009883a 	mov	r4,r16
 200a938:	1880cb26 	beq	r3,r2,200ac68 <_strtod_r+0x60c>
 200a93c:	00800b44 	movi	r2,45
 200a940:	18838326 	beq	r3,r2,200b750 <_strtod_r+0x10f4>
 200a944:	1823883a 	mov	r17,r3
 200a948:	88fff404 	addi	r3,r17,-48
 200a94c:	00800244 	movi	r2,9
 200a950:	d8001915 	stw	zero,100(sp)
 200a954:	10c0cb36 	bltu	r2,r3,200ac84 <_strtod_r+0x628>
 200a958:	00800c04 	movi	r2,48
 200a95c:	8880061e 	bne	r17,r2,200a978 <_strtod_r+0x31c>
 200a960:	dc000417 	ldw	r16,16(sp)
 200a964:	8805883a 	mov	r2,r17
 200a968:	84000044 	addi	r16,r16,1
 200a96c:	dc000415 	stw	r16,16(sp)
 200a970:	84400007 	ldb	r17,0(r16)
 200a974:	88bffc26 	beq	r17,r2,200a968 <_strtod_r+0x30c>
 200a978:	88fff3c4 	addi	r3,r17,-49
 200a97c:	00800204 	movi	r2,8
 200a980:	10ffbd36 	bltu	r2,r3,200a878 <_strtod_r+0x21c>
 200a984:	dc000417 	ldw	r16,16(sp)
 200a988:	893ff404 	addi	r4,r17,-48
 200a98c:	00c00bc4 	movi	r3,47
 200a990:	dc001315 	stw	r16,76(sp)
 200a994:	84000044 	addi	r16,r16,1
 200a998:	dc000415 	stw	r16,16(sp)
 200a99c:	84400007 	ldb	r17,0(r16)
 200a9a0:	1c40100e 	bge	r3,r17,200a9e4 <_strtod_r+0x388>
 200a9a4:	00800e44 	movi	r2,57
 200a9a8:	14400e16 	blt	r2,r17,200a9e4 <_strtod_r+0x388>
 200a9ac:	182f883a 	mov	r23,r3
 200a9b0:	102d883a 	mov	r22,r2
 200a9b4:	00000106 	br	200a9bc <_strtod_r+0x360>
 200a9b8:	b4400a16 	blt	r22,r17,200a9e4 <_strtod_r+0x388>
 200a9bc:	84000044 	addi	r16,r16,1
 200a9c0:	01400284 	movi	r5,10
 200a9c4:	d9802015 	stw	r6,128(sp)
 200a9c8:	2000abc0 	call	2000abc <__mulsi3>
 200a9cc:	dc000415 	stw	r16,16(sp)
 200a9d0:	8885883a 	add	r2,r17,r2
 200a9d4:	84400007 	ldb	r17,0(r16)
 200a9d8:	113ff404 	addi	r4,r2,-48
 200a9dc:	d9802017 	ldw	r6,128(sp)
 200a9e0:	bc7ff516 	blt	r23,r17,200a9b8 <_strtod_r+0x35c>
 200a9e4:	d8801317 	ldw	r2,76(sp)
 200a9e8:	8087c83a 	sub	r3,r16,r2
 200a9ec:	00800204 	movi	r2,8
 200a9f0:	10c2ff16 	blt	r2,r3,200b5f0 <_strtod_r+0xf94>
 200a9f4:	009387c4 	movi	r2,19999
 200a9f8:	1100010e 	bge	r2,r4,200aa00 <_strtod_r+0x3a4>
 200a9fc:	1009883a 	mov	r4,r2
 200aa00:	d8c01917 	ldw	r3,100(sp)
 200aa04:	1805003a 	cmpeq	r2,r3,zero
 200aa08:	103f9c1e 	bne	r2,zero,200a87c <_strtod_r+0x220>
 200aa0c:	0109c83a 	sub	r4,zero,r4
 200aa10:	903f9b26 	beq	r18,zero,200a880 <_strtod_r+0x224>
 200aa14:	d8801717 	ldw	r2,92(sp)
 200aa18:	2089c83a 	sub	r4,r4,r2
 200aa1c:	d9000f15 	stw	r4,60(sp)
 200aa20:	9800811e 	bne	r19,zero,200ac28 <_strtod_r+0x5cc>
 200aa24:	dd001817 	ldw	r20,96(sp)
 200aa28:	dc801817 	ldw	r18,96(sp)
 200aa2c:	00800404 	movi	r2,16
 200aa30:	1480010e 	bge	r2,r18,200aa38 <_strtod_r+0x3dc>
 200aa34:	1025883a 	mov	r18,r2
 200aa38:	d9001217 	ldw	r4,72(sp)
 200aa3c:	200f8000 	call	200f800 <__floatunsidf>
 200aa40:	100f883a 	mov	r7,r2
 200aa44:	e0800015 	stw	r2,0(fp)
 200aa48:	00800244 	movi	r2,9
 200aa4c:	e0c00115 	stw	r3,4(fp)
 200aa50:	1480160e 	bge	r2,r18,200aaac <_strtod_r+0x450>
 200aa54:	900c90fa 	slli	r6,r18,3
 200aa58:	01008074 	movhi	r4,513
 200aa5c:	210efd04 	addi	r4,r4,15348
 200aa60:	180b883a 	mov	r5,r3
 200aa64:	310d883a 	add	r6,r6,r4
 200aa68:	30ffef17 	ldw	r3,-68(r6)
 200aa6c:	30bfee17 	ldw	r2,-72(r6)
 200aa70:	3809883a 	mov	r4,r7
 200aa74:	180f883a 	mov	r7,r3
 200aa78:	100d883a 	mov	r6,r2
 200aa7c:	200ec700 	call	200ec70 <__muldf3>
 200aa80:	d9001117 	ldw	r4,68(sp)
 200aa84:	1021883a 	mov	r16,r2
 200aa88:	1823883a 	mov	r17,r3
 200aa8c:	200f8000 	call	200f800 <__floatunsidf>
 200aa90:	880b883a 	mov	r5,r17
 200aa94:	180f883a 	mov	r7,r3
 200aa98:	8009883a 	mov	r4,r16
 200aa9c:	100d883a 	mov	r6,r2
 200aaa0:	200ebfc0 	call	200ebfc <__adddf3>
 200aaa4:	e0c00115 	stw	r3,4(fp)
 200aaa8:	e0800015 	stw	r2,0(fp)
 200aaac:	d8c01817 	ldw	r3,96(sp)
 200aab0:	010003c4 	movi	r4,15
 200aab4:	20c09e16 	blt	r4,r3,200ad30 <_strtod_r+0x6d4>
 200aab8:	d8800f17 	ldw	r2,60(sp)
 200aabc:	103f7126 	beq	r2,zero,200a884 <_strtod_r+0x228>
 200aac0:	0083d90e 	bge	zero,r2,200ba28 <_strtod_r+0x13cc>
 200aac4:	d8c00f17 	ldw	r3,60(sp)
 200aac8:	00800584 	movi	r2,22
 200aacc:	10c2ca0e 	bge	r2,r3,200b5f8 <_strtod_r+0xf9c>
 200aad0:	d8801817 	ldw	r2,96(sp)
 200aad4:	d8c00f17 	ldw	r3,60(sp)
 200aad8:	20a3c83a 	sub	r17,r4,r2
 200aadc:	88800584 	addi	r2,r17,22
 200aae0:	10c09316 	blt	r2,r3,200ad30 <_strtod_r+0x6d4>
 200aae4:	880890fa 	slli	r4,r17,3
 200aae8:	04008074 	movhi	r16,513
 200aaec:	840efd04 	addi	r16,r16,15348
 200aaf0:	e0800017 	ldw	r2,0(fp)
 200aaf4:	2409883a 	add	r4,r4,r16
 200aaf8:	22000017 	ldw	r8,0(r4)
 200aafc:	22400117 	ldw	r9,4(r4)
 200ab00:	e0c00117 	ldw	r3,4(fp)
 200ab04:	1009883a 	mov	r4,r2
 200ab08:	480f883a 	mov	r7,r9
 200ab0c:	180b883a 	mov	r5,r3
 200ab10:	400d883a 	mov	r6,r8
 200ab14:	200ec700 	call	200ec70 <__muldf3>
 200ab18:	d9000f17 	ldw	r4,60(sp)
 200ab1c:	180b883a 	mov	r5,r3
 200ab20:	2455c83a 	sub	r10,r4,r17
 200ab24:	501490fa 	slli	r10,r10,3
 200ab28:	1009883a 	mov	r4,r2
 200ab2c:	5415883a 	add	r10,r10,r16
 200ab30:	52000017 	ldw	r8,0(r10)
 200ab34:	52400117 	ldw	r9,4(r10)
 200ab38:	0002b906 	br	200b620 <_strtod_r+0xfc4>
 200ab3c:	80c00047 	ldb	r3,1(r16)
 200ab40:	00801604 	movi	r2,88
 200ab44:	18805226 	beq	r3,r2,200ac90 <_strtod_r+0x634>
 200ab48:	00801e04 	movi	r2,120
 200ab4c:	18805026 	beq	r3,r2,200ac90 <_strtod_r+0x634>
 200ab50:	84000044 	addi	r16,r16,1
 200ab54:	dc000415 	stw	r16,16(sp)
 200ab58:	80c00007 	ldb	r3,0(r16)
 200ab5c:	00800c04 	movi	r2,48
 200ab60:	18bffb26 	beq	r3,r2,200ab50 <_strtod_r+0x4f4>
 200ab64:	183f4726 	beq	r3,zero,200a884 <_strtod_r+0x228>
 200ab68:	01000044 	movi	r4,1
 200ab6c:	d9001615 	stw	r4,88(sp)
 200ab70:	003f0a06 	br	200a79c <_strtod_r+0x140>
 200ab74:	84000044 	addi	r16,r16,1
 200ab78:	dc000415 	stw	r16,16(sp)
 200ab7c:	94400047 	ldb	r17,1(r18)
 200ab80:	9800ba26 	beq	r19,zero,200ae6c <_strtod_r+0x810>
 200ab84:	dcc01815 	stw	r19,96(sp)
 200ab88:	d8001715 	stw	zero,92(sp)
 200ab8c:	000d883a 	mov	r6,zero
 200ab90:	8dbff404 	addi	r22,r17,-48
 200ab94:	00800244 	movi	r2,9
 200ab98:	15826e2e 	bgeu	r2,r22,200b554 <_strtod_r+0xef8>
 200ab9c:	01000044 	movi	r4,1
 200aba0:	d9001b15 	stw	r4,108(sp)
 200aba4:	003f2e06 	br	200a860 <_strtod_r+0x204>
 200aba8:	d8c01617 	ldw	r3,88(sp)
 200abac:	1804c03a 	cmpne	r2,r3,zero
 200abb0:	103f341e 	bne	r2,zero,200a884 <_strtod_r+0x228>
 200abb4:	d9001b17 	ldw	r4,108(sp)
 200abb8:	2004c03a 	cmpne	r2,r4,zero
 200abbc:	103f521e 	bne	r2,zero,200a908 <_strtod_r+0x2ac>
 200abc0:	00801384 	movi	r2,78
 200abc4:	8883b526 	beq	r17,r2,200ba9c <_strtod_r+0x1440>
 200abc8:	1443b016 	blt	r2,r17,200ba8c <_strtod_r+0x1430>
 200abcc:	00801244 	movi	r2,73
 200abd0:	88bf4d1e 	bne	r17,r2,200a908 <_strtod_r+0x2ac>
 200abd4:	dc000404 	addi	r16,sp,16
 200abd8:	8009883a 	mov	r4,r16
 200abdc:	01408074 	movhi	r5,513
 200abe0:	294f4604 	addi	r5,r5,15640
 200abe4:	200a6140 	call	200a614 <match>
 200abe8:	103f4726 	beq	r2,zero,200a908 <_strtod_r+0x2ac>
 200abec:	d8800417 	ldw	r2,16(sp)
 200abf0:	8009883a 	mov	r4,r16
 200abf4:	01408074 	movhi	r5,513
 200abf8:	294f4704 	addi	r5,r5,15644
 200abfc:	143fffc4 	addi	r16,r2,-1
 200ac00:	dc000415 	stw	r16,16(sp)
 200ac04:	200a6140 	call	200a614 <match>
 200ac08:	1000031e 	bne	r2,zero,200ac18 <_strtod_r+0x5bc>
 200ac0c:	d8800417 	ldw	r2,16(sp)
 200ac10:	14000044 	addi	r16,r2,1
 200ac14:	dc000415 	stw	r16,16(sp)
 200ac18:	019ffc34 	movhi	r6,32752
 200ac1c:	e1800115 	stw	r6,4(fp)
 200ac20:	e0000015 	stw	zero,0(fp)
 200ac24:	003f1706 	br	200a884 <_strtod_r+0x228>
 200ac28:	9829883a 	mov	r20,r19
 200ac2c:	003f7e06 	br	200aa28 <_strtod_r+0x3cc>
 200ac30:	d8001515 	stw	zero,84(sp)
 200ac34:	84000044 	addi	r16,r16,1
 200ac38:	dc000415 	stw	r16,16(sp)
 200ac3c:	80800007 	ldb	r2,0(r16)
 200ac40:	103ed21e 	bne	r2,zero,200a78c <_strtod_r+0x130>
 200ac44:	d8001515 	stw	zero,84(sp)
 200ac48:	dd000415 	stw	r20,16(sp)
 200ac4c:	003f0d06 	br	200a884 <_strtod_r+0x228>
 200ac50:	84000044 	addi	r16,r16,1
 200ac54:	dc000415 	stw	r16,16(sp)
 200ac58:	003e9206 	br	200a6a4 <_strtod_r+0x48>
 200ac5c:	00800044 	movi	r2,1
 200ac60:	d8801515 	stw	r2,84(sp)
 200ac64:	003ff306 	br	200ac34 <_strtod_r+0x5d8>
 200ac68:	d8001915 	stw	zero,100(sp)
 200ac6c:	84000044 	addi	r16,r16,1
 200ac70:	dc000415 	stw	r16,16(sp)
 200ac74:	24400047 	ldb	r17,1(r4)
 200ac78:	00800244 	movi	r2,9
 200ac7c:	88fff404 	addi	r3,r17,-48
 200ac80:	10ff352e 	bgeu	r2,r3,200a958 <_strtod_r+0x2fc>
 200ac84:	0009883a 	mov	r4,zero
 200ac88:	dd000415 	stw	r20,16(sp)
 200ac8c:	003efb06 	br	200a87c <_strtod_r+0x220>
 200ac90:	d8c01517 	ldw	r3,84(sp)
 200ac94:	04408074 	movhi	r17,513
 200ac98:	8c51f804 	addi	r17,r17,18400
 200ac9c:	d8800504 	addi	r2,sp,20
 200aca0:	a809883a 	mov	r4,r21
 200aca4:	d9400404 	addi	r5,sp,16
 200aca8:	880d883a 	mov	r6,r17
 200acac:	d9c00604 	addi	r7,sp,24
 200acb0:	d8800015 	stw	r2,0(sp)
 200acb4:	d8c00115 	stw	r3,4(sp)
 200acb8:	200cce00 	call	200cce0 <__gethex>
 200acbc:	140001cc 	andi	r16,r2,7
 200acc0:	1025883a 	mov	r18,r2
 200acc4:	803eef26 	beq	r16,zero,200a884 <_strtod_r+0x228>
 200acc8:	04c00184 	movi	r19,6
 200accc:	84ff0e26 	beq	r16,r19,200a908 <_strtod_r+0x2ac>
 200acd0:	d9800517 	ldw	r6,20(sp)
 200acd4:	30000626 	beq	r6,zero,200acf0 <_strtod_r+0x694>
 200acd8:	89400017 	ldw	r5,0(r17)
 200acdc:	d9000d04 	addi	r4,sp,52
 200ace0:	20090f40 	call	20090f4 <__copybits>
 200ace4:	d9400517 	ldw	r5,20(sp)
 200ace8:	a809883a 	mov	r4,r21
 200acec:	2008c540 	call	2008c54 <_Bfree>
 200acf0:	d9400617 	ldw	r5,24(sp)
 200acf4:	9c025436 	bltu	r19,r16,200b648 <_strtod_r+0xfec>
 200acf8:	8405883a 	add	r2,r16,r16
 200acfc:	1085883a 	add	r2,r2,r2
 200ad00:	00c08074 	movhi	r3,513
 200ad04:	18eb4504 	addi	r3,r3,-21228
 200ad08:	10c5883a 	add	r2,r2,r3
 200ad0c:	11000017 	ldw	r4,0(r2)
 200ad10:	2000683a 	jmp	r4
 200ad14:	0200b688 	cmpgei	r8,zero,730
 200ad18:	0200b694 	movui	r8,730
 200ad1c:	0200b638 	rdprs	r8,zero,728
 200ad20:	0200b660 	cmpeqi	r8,zero,729
 200ad24:	0200b670 	cmpltui	r8,zero,729
 200ad28:	0200b694 	movui	r8,730
 200ad2c:	0200b688 	cmpgei	r8,zero,730
 200ad30:	d9001817 	ldw	r4,96(sp)
 200ad34:	d8c00f17 	ldw	r3,60(sp)
 200ad38:	2485c83a 	sub	r2,r4,r18
 200ad3c:	18a1883a 	add	r16,r3,r2
 200ad40:	0402e80e 	bge	zero,r16,200b8e4 <_strtod_r+0x1288>
 200ad44:	814003cc 	andi	r5,r16,15
 200ad48:	28000f26 	beq	r5,zero,200ad88 <_strtod_r+0x72c>
 200ad4c:	280a90fa 	slli	r5,r5,3
 200ad50:	01008074 	movhi	r4,513
 200ad54:	210efd04 	addi	r4,r4,15348
 200ad58:	e0800017 	ldw	r2,0(fp)
 200ad5c:	290b883a 	add	r5,r5,r4
 200ad60:	2a000017 	ldw	r8,0(r5)
 200ad64:	e0c00117 	ldw	r3,4(fp)
 200ad68:	2a400117 	ldw	r9,4(r5)
 200ad6c:	1009883a 	mov	r4,r2
 200ad70:	180b883a 	mov	r5,r3
 200ad74:	480f883a 	mov	r7,r9
 200ad78:	400d883a 	mov	r6,r8
 200ad7c:	200ec700 	call	200ec70 <__muldf3>
 200ad80:	e0c00115 	stw	r3,4(fp)
 200ad84:	e0800015 	stw	r2,0(fp)
 200ad88:	00bffc04 	movi	r2,-16
 200ad8c:	808c703a 	and	r6,r16,r2
 200ad90:	30006726 	beq	r6,zero,200af30 <_strtod_r+0x8d4>
 200ad94:	00804d04 	movi	r2,308
 200ad98:	11820f16 	blt	r2,r6,200b5d8 <_strtod_r+0xf7c>
 200ad9c:	3021d13a 	srai	r16,r6,4
 200ada0:	00800044 	movi	r2,1
 200ada4:	14037f0e 	bge	r2,r16,200bba4 <_strtod_r+0x1548>
 200ada8:	05808074 	movhi	r22,513
 200adac:	b58f2f04 	addi	r22,r22,15548
 200adb0:	1027883a 	mov	r19,r2
 200adb4:	0025883a 	mov	r18,zero
 200adb8:	b023883a 	mov	r17,r22
 200adbc:	8080004c 	andi	r2,r16,1
 200adc0:	1005003a 	cmpeq	r2,r2,zero
 200adc4:	1000091e 	bne	r2,zero,200adec <_strtod_r+0x790>
 200adc8:	e0800017 	ldw	r2,0(fp)
 200adcc:	e0c00117 	ldw	r3,4(fp)
 200add0:	89800017 	ldw	r6,0(r17)
 200add4:	89c00117 	ldw	r7,4(r17)
 200add8:	180b883a 	mov	r5,r3
 200addc:	1009883a 	mov	r4,r2
 200ade0:	200ec700 	call	200ec70 <__muldf3>
 200ade4:	e0c00115 	stw	r3,4(fp)
 200ade8:	e0800015 	stw	r2,0(fp)
 200adec:	8021d07a 	srai	r16,r16,1
 200adf0:	94800044 	addi	r18,r18,1
 200adf4:	8c400204 	addi	r17,r17,8
 200adf8:	9c3ff016 	blt	r19,r16,200adbc <_strtod_r+0x760>
 200adfc:	900e90fa 	slli	r7,r18,3
 200ae00:	e2000117 	ldw	r8,4(fp)
 200ae04:	e1000017 	ldw	r4,0(fp)
 200ae08:	3d8f883a 	add	r7,r7,r22
 200ae0c:	38800017 	ldw	r2,0(r7)
 200ae10:	38c00117 	ldw	r3,4(r7)
 200ae14:	01bf2c34 	movhi	r6,64688
 200ae18:	418d883a 	add	r6,r8,r6
 200ae1c:	300b883a 	mov	r5,r6
 200ae20:	180f883a 	mov	r7,r3
 200ae24:	100d883a 	mov	r6,r2
 200ae28:	200ec700 	call	200ec70 <__muldf3>
 200ae2c:	1009883a 	mov	r4,r2
 200ae30:	180b883a 	mov	r5,r3
 200ae34:	199ffc2c 	andhi	r6,r3,32752
 200ae38:	009f2834 	movhi	r2,31904
 200ae3c:	e1000015 	stw	r4,0(fp)
 200ae40:	e1400115 	stw	r5,4(fp)
 200ae44:	1181e436 	bltu	r2,r6,200b5d8 <_strtod_r+0xf7c>
 200ae48:	009f2434 	movhi	r2,31888
 200ae4c:	11833f2e 	bgeu	r2,r6,200bb4c <_strtod_r+0x14f0>
 200ae50:	d8001c15 	stw	zero,112(sp)
 200ae54:	019ffc34 	movhi	r6,32752
 200ae58:	31bfffc4 	addi	r6,r6,-1
 200ae5c:	01ffffc4 	movi	r7,-1
 200ae60:	e1800115 	stw	r6,4(fp)
 200ae64:	e1c00015 	stw	r7,0(fp)
 200ae68:	00003206 	br	200af34 <_strtod_r+0x8d8>
 200ae6c:	00800c04 	movi	r2,48
 200ae70:	8883221e 	bne	r17,r2,200bafc <_strtod_r+0x14a0>
 200ae74:	8805883a 	mov	r2,r17
 200ae78:	000d883a 	mov	r6,zero
 200ae7c:	84000044 	addi	r16,r16,1
 200ae80:	dc000415 	stw	r16,16(sp)
 200ae84:	84400007 	ldb	r17,0(r16)
 200ae88:	31800044 	addi	r6,r6,1
 200ae8c:	88bffb26 	beq	r17,r2,200ae7c <_strtod_r+0x820>
 200ae90:	88fff3c4 	addi	r3,r17,-49
 200ae94:	00800204 	movi	r2,8
 200ae98:	10c1ca36 	bltu	r2,r3,200b5c4 <_strtod_r+0xf68>
 200ae9c:	d8c00417 	ldw	r3,16(sp)
 200aea0:	d9801715 	stw	r6,92(sp)
 200aea4:	8dbff404 	addi	r22,r17,-48
 200aea8:	d8c01415 	stw	r3,80(sp)
 200aeac:	1821883a 	mov	r16,r3
 200aeb0:	d8001815 	stw	zero,96(sp)
 200aeb4:	01800044 	movi	r6,1
 200aeb8:	b0023526 	beq	r22,zero,200b790 <_strtod_r+0x1134>
 200aebc:	d9001717 	ldw	r4,92(sp)
 200aec0:	00800044 	movi	r2,1
 200aec4:	2189883a 	add	r4,r4,r6
 200aec8:	d9001715 	stw	r4,92(sp)
 200aecc:	1183390e 	bge	r2,r6,200bbb4 <_strtod_r+0x1558>
 200aed0:	dc401817 	ldw	r17,96(sp)
 200aed4:	1025883a 	mov	r18,r2
 200aed8:	05c00204 	movi	r23,8
 200aedc:	00000806 	br	200af00 <_strtod_r+0x8a4>
 200aee0:	d9001217 	ldw	r4,72(sp)
 200aee4:	01400284 	movi	r5,10
 200aee8:	d9802015 	stw	r6,128(sp)
 200aeec:	2000abc0 	call	2000abc <__mulsi3>
 200aef0:	d9802017 	ldw	r6,128(sp)
 200aef4:	d8801215 	stw	r2,72(sp)
 200aef8:	94800044 	addi	r18,r18,1
 200aefc:	91821726 	beq	r18,r6,200b75c <_strtod_r+0x1100>
 200af00:	8c400044 	addi	r17,r17,1
 200af04:	88bfffc4 	addi	r2,r17,-1
 200af08:	b8bff50e 	bge	r23,r2,200aee0 <_strtod_r+0x884>
 200af0c:	00800404 	movi	r2,16
 200af10:	147ff916 	blt	r2,r17,200aef8 <_strtod_r+0x89c>
 200af14:	d9001117 	ldw	r4,68(sp)
 200af18:	01400284 	movi	r5,10
 200af1c:	d9802015 	stw	r6,128(sp)
 200af20:	2000abc0 	call	2000abc <__mulsi3>
 200af24:	d9802017 	ldw	r6,128(sp)
 200af28:	d8801115 	stw	r2,68(sp)
 200af2c:	003ff206 	br	200aef8 <_strtod_r+0x89c>
 200af30:	d8001c15 	stw	zero,112(sp)
 200af34:	d8c01217 	ldw	r3,72(sp)
 200af38:	d9401417 	ldw	r5,80(sp)
 200af3c:	d9c01817 	ldw	r7,96(sp)
 200af40:	a809883a 	mov	r4,r21
 200af44:	a00d883a 	mov	r6,r20
 200af48:	d8c00015 	stw	r3,0(sp)
 200af4c:	2009bc00 	call	2009bc0 <__s2b>
 200af50:	11000304 	addi	r4,r2,12
 200af54:	d8801015 	stw	r2,64(sp)
 200af58:	d8800f17 	ldw	r2,60(sp)
 200af5c:	d9001f15 	stw	r4,124(sp)
 200af60:	1004803a 	cmplt	r2,r2,zero
 200af64:	d8801e15 	stw	r2,120(sp)
 200af68:	d8c01017 	ldw	r3,64(sp)
 200af6c:	a809883a 	mov	r4,r21
 200af70:	19400117 	ldw	r5,4(r3)
 200af74:	20091d40 	call	20091d4 <_Balloc>
 200af78:	d9001017 	ldw	r4,64(sp)
 200af7c:	d9401f17 	ldw	r5,124(sp)
 200af80:	102f883a 	mov	r23,r2
 200af84:	21800417 	ldw	r6,16(r4)
 200af88:	11000304 	addi	r4,r2,12
 200af8c:	318d883a 	add	r6,r6,r6
 200af90:	318d883a 	add	r6,r6,r6
 200af94:	31800204 	addi	r6,r6,8
 200af98:	20029140 	call	2002914 <memcpy>
 200af9c:	e2000017 	ldw	r8,0(fp)
 200afa0:	e2400117 	ldw	r9,4(fp)
 200afa4:	a809883a 	mov	r4,r21
 200afa8:	400b883a 	mov	r5,r8
 200afac:	d9c00204 	addi	r7,sp,8
 200afb0:	d8800304 	addi	r2,sp,12
 200afb4:	480d883a 	mov	r6,r9
 200afb8:	d8800015 	stw	r2,0(sp)
 200afbc:	20092900 	call	2009290 <__d2b>
 200afc0:	a809883a 	mov	r4,r21
 200afc4:	01400044 	movi	r5,1
 200afc8:	d8800515 	stw	r2,20(sp)
 200afcc:	20099380 	call	2009938 <__i2b>
 200afd0:	d8c01e17 	ldw	r3,120(sp)
 200afd4:	102d883a 	mov	r22,r2
 200afd8:	1801091e 	bne	r3,zero,200b400 <_strtod_r+0xda4>
 200afdc:	dd000f17 	ldw	r20,60(sp)
 200afe0:	000f883a 	mov	r7,zero
 200afe4:	0013883a 	mov	r9,zero
 200afe8:	a011883a 	mov	r8,r20
 200afec:	d8800217 	ldw	r2,8(sp)
 200aff0:	10010116 	blt	r2,zero,200b3f8 <_strtod_r+0xd9c>
 200aff4:	388f883a 	add	r7,r7,r2
 200aff8:	d8c01c17 	ldw	r3,112(sp)
 200affc:	d9400317 	ldw	r5,12(sp)
 200b000:	10c9c83a 	sub	r4,r2,r3
 200b004:	2145883a 	add	r2,r4,r5
 200b008:	10bfffc4 	addi	r2,r2,-1
 200b00c:	00ff0084 	movi	r3,-1022
 200b010:	10c09f0e 	bge	r2,r3,200b290 <_strtod_r+0xc34>
 200b014:	21810cc4 	addi	r6,r4,1075
 200b018:	d9001c17 	ldw	r4,112(sp)
 200b01c:	4185883a 	add	r2,r8,r6
 200b020:	39a1883a 	add	r16,r7,r6
 200b024:	20a5883a 	add	r18,r4,r2
 200b028:	3807883a 	mov	r3,r7
 200b02c:	81c0010e 	bge	r16,r7,200b034 <_strtod_r+0x9d8>
 200b030:	8007883a 	mov	r3,r16
 200b034:	9005883a 	mov	r2,r18
 200b038:	1c80010e 	bge	r3,r18,200b040 <_strtod_r+0x9e4>
 200b03c:	1805883a 	mov	r2,r3
 200b040:	0080eb0e 	bge	zero,r2,200b3f0 <_strtod_r+0xd94>
 200b044:	38a7c83a 	sub	r19,r7,r2
 200b048:	80a1c83a 	sub	r16,r16,r2
 200b04c:	90a5c83a 	sub	r18,r18,r2
 200b050:	02400e0e 	bge	zero,r9,200b08c <_strtod_r+0xa30>
 200b054:	480d883a 	mov	r6,r9
 200b058:	b00b883a 	mov	r5,r22
 200b05c:	a809883a 	mov	r4,r21
 200b060:	2009aa00 	call	2009aa0 <__pow5mult>
 200b064:	d9800517 	ldw	r6,20(sp)
 200b068:	a809883a 	mov	r4,r21
 200b06c:	100b883a 	mov	r5,r2
 200b070:	102d883a 	mov	r22,r2
 200b074:	20096e40 	call	20096e4 <__multiply>
 200b078:	d9400517 	ldw	r5,20(sp)
 200b07c:	1023883a 	mov	r17,r2
 200b080:	a809883a 	mov	r4,r21
 200b084:	2008c540 	call	2008c54 <_Bfree>
 200b088:	dc400515 	stw	r17,20(sp)
 200b08c:	0400050e 	bge	zero,r16,200b0a4 <_strtod_r+0xa48>
 200b090:	d9400517 	ldw	r5,20(sp)
 200b094:	800d883a 	mov	r6,r16
 200b098:	a809883a 	mov	r4,r21
 200b09c:	20095980 	call	2009598 <__lshift>
 200b0a0:	d8800515 	stw	r2,20(sp)
 200b0a4:	a000741e 	bne	r20,zero,200b278 <_strtod_r+0xc1c>
 200b0a8:	0480050e 	bge	zero,r18,200b0c0 <_strtod_r+0xa64>
 200b0ac:	b80b883a 	mov	r5,r23
 200b0b0:	900d883a 	mov	r6,r18
 200b0b4:	a809883a 	mov	r4,r21
 200b0b8:	20095980 	call	2009598 <__lshift>
 200b0bc:	102f883a 	mov	r23,r2
 200b0c0:	04c0050e 	bge	zero,r19,200b0d8 <_strtod_r+0xa7c>
 200b0c4:	b00b883a 	mov	r5,r22
 200b0c8:	980d883a 	mov	r6,r19
 200b0cc:	a809883a 	mov	r4,r21
 200b0d0:	20095980 	call	2009598 <__lshift>
 200b0d4:	102d883a 	mov	r22,r2
 200b0d8:	d9400517 	ldw	r5,20(sp)
 200b0dc:	a809883a 	mov	r4,r21
 200b0e0:	b80d883a 	mov	r6,r23
 200b0e4:	200940c0 	call	200940c <__mdiff>
 200b0e8:	1029883a 	mov	r20,r2
 200b0ec:	10800317 	ldw	r2,12(r2)
 200b0f0:	a009883a 	mov	r4,r20
 200b0f4:	a0000315 	stw	zero,12(r20)
 200b0f8:	b00b883a 	mov	r5,r22
 200b0fc:	d8801a15 	stw	r2,104(sp)
 200b100:	2008db00 	call	2008db0 <__mcmp>
 200b104:	1001a616 	blt	r2,zero,200b7a0 <_strtod_r+0x1144>
 200b108:	10016d26 	beq	r2,zero,200b6c0 <_strtod_r+0x1064>
 200b10c:	a009883a 	mov	r4,r20
 200b110:	b00b883a 	mov	r5,r22
 200b114:	2008fb00 	call	2008fb0 <__ratio>
 200b118:	0011883a 	mov	r8,zero
 200b11c:	02500034 	movhi	r9,16384
 200b120:	480f883a 	mov	r7,r9
 200b124:	1009883a 	mov	r4,r2
 200b128:	180b883a 	mov	r5,r3
 200b12c:	400d883a 	mov	r6,r8
 200b130:	1021883a 	mov	r16,r2
 200b134:	1823883a 	mov	r17,r3
 200b138:	200f5340 	call	200f534 <__ledf2>
 200b13c:	00805716 	blt	zero,r2,200b29c <_strtod_r+0xc40>
 200b140:	d8801a17 	ldw	r2,104(sp)
 200b144:	1025003a 	cmpeq	r18,r2,zero
 200b148:	90008c1e 	bne	r18,zero,200b37c <_strtod_r+0xd20>
 200b14c:	008ffc34 	movhi	r2,16368
 200b150:	0021883a 	mov	r16,zero
 200b154:	1023883a 	mov	r17,r2
 200b158:	d8000715 	stw	zero,28(sp)
 200b15c:	d8800815 	stw	r2,32(sp)
 200b160:	e1c00117 	ldw	r7,4(fp)
 200b164:	009ff834 	movhi	r2,32736
 200b168:	3cdffc2c 	andhi	r19,r7,32752
 200b16c:	98805f26 	beq	r19,r2,200b2ec <_strtod_r+0xc90>
 200b170:	d8c01c17 	ldw	r3,112(sp)
 200b174:	18001b26 	beq	r3,zero,200b1e4 <_strtod_r+0xb88>
 200b178:	0081a834 	movhi	r2,1696
 200b17c:	14c01936 	bltu	r2,r19,200b1e4 <_strtod_r+0xb88>
 200b180:	00bff034 	movhi	r2,65472
 200b184:	00d07834 	movhi	r3,16864
 200b188:	18ffffc4 	addi	r3,r3,-1
 200b18c:	180f883a 	mov	r7,r3
 200b190:	8009883a 	mov	r4,r16
 200b194:	880b883a 	mov	r5,r17
 200b198:	100d883a 	mov	r6,r2
 200b19c:	200f5340 	call	200f534 <__ledf2>
 200b1a0:	00800b16 	blt	zero,r2,200b1d0 <_strtod_r+0xb74>
 200b1a4:	880b883a 	mov	r5,r17
 200b1a8:	8009883a 	mov	r4,r16
 200b1ac:	200d8940 	call	200d894 <__fixunsdfsi>
 200b1b0:	1000e31e 	bne	r2,zero,200b540 <_strtod_r+0xee4>
 200b1b4:	0021883a 	mov	r16,zero
 200b1b8:	044ffc34 	movhi	r17,16368
 200b1bc:	9000dd1e 	bne	r18,zero,200b534 <_strtod_r+0xed8>
 200b1c0:	8005883a 	mov	r2,r16
 200b1c4:	8807883a 	mov	r3,r17
 200b1c8:	d8c00815 	stw	r3,32(sp)
 200b1cc:	d8800715 	stw	r2,28(sp)
 200b1d0:	d8800817 	ldw	r2,32(sp)
 200b1d4:	00c1ac34 	movhi	r3,1712
 200b1d8:	14c5c83a 	sub	r2,r2,r19
 200b1dc:	10c5883a 	add	r2,r2,r3
 200b1e0:	d8800815 	stw	r2,32(sp)
 200b1e4:	e0800017 	ldw	r2,0(fp)
 200b1e8:	e0c00117 	ldw	r3,4(fp)
 200b1ec:	1009883a 	mov	r4,r2
 200b1f0:	180b883a 	mov	r5,r3
 200b1f4:	2008e100 	call	2008e10 <__ulp>
 200b1f8:	d9800717 	ldw	r6,28(sp)
 200b1fc:	d9c00817 	ldw	r7,32(sp)
 200b200:	180b883a 	mov	r5,r3
 200b204:	1009883a 	mov	r4,r2
 200b208:	200ec700 	call	200ec70 <__muldf3>
 200b20c:	e2000017 	ldw	r8,0(fp)
 200b210:	e2400117 	ldw	r9,4(fp)
 200b214:	180b883a 	mov	r5,r3
 200b218:	1009883a 	mov	r4,r2
 200b21c:	480f883a 	mov	r7,r9
 200b220:	400d883a 	mov	r6,r8
 200b224:	200ebfc0 	call	200ebfc <__adddf3>
 200b228:	e0c00115 	stw	r3,4(fp)
 200b22c:	e0800015 	stw	r2,0(fp)
 200b230:	d9001c17 	ldw	r4,112(sp)
 200b234:	e4800117 	ldw	r18,4(fp)
 200b238:	2000021e 	bne	r4,zero,200b244 <_strtod_r+0xbe8>
 200b23c:	909ffc2c 	andhi	r2,r18,32752
 200b240:	98807f26 	beq	r19,r2,200b440 <_strtod_r+0xde4>
 200b244:	d9400517 	ldw	r5,20(sp)
 200b248:	a809883a 	mov	r4,r21
 200b24c:	2008c540 	call	2008c54 <_Bfree>
 200b250:	a809883a 	mov	r4,r21
 200b254:	b80b883a 	mov	r5,r23
 200b258:	2008c540 	call	2008c54 <_Bfree>
 200b25c:	a809883a 	mov	r4,r21
 200b260:	b00b883a 	mov	r5,r22
 200b264:	2008c540 	call	2008c54 <_Bfree>
 200b268:	a809883a 	mov	r4,r21
 200b26c:	a00b883a 	mov	r5,r20
 200b270:	2008c540 	call	2008c54 <_Bfree>
 200b274:	003f3c06 	br	200af68 <_strtod_r+0x90c>
 200b278:	b80b883a 	mov	r5,r23
 200b27c:	a00d883a 	mov	r6,r20
 200b280:	a809883a 	mov	r4,r21
 200b284:	2009aa00 	call	2009aa0 <__pow5mult>
 200b288:	102f883a 	mov	r23,r2
 200b28c:	003f8606 	br	200b0a8 <_strtod_r+0xa4c>
 200b290:	00800d84 	movi	r2,54
 200b294:	114dc83a 	sub	r6,r2,r5
 200b298:	003f5f06 	br	200b018 <_strtod_r+0x9bc>
 200b29c:	0005883a 	mov	r2,zero
 200b2a0:	00cff834 	movhi	r3,16352
 200b2a4:	8009883a 	mov	r4,r16
 200b2a8:	880b883a 	mov	r5,r17
 200b2ac:	180f883a 	mov	r7,r3
 200b2b0:	100d883a 	mov	r6,r2
 200b2b4:	200ec700 	call	200ec70 <__muldf3>
 200b2b8:	1009883a 	mov	r4,r2
 200b2bc:	d8801a17 	ldw	r2,104(sp)
 200b2c0:	2021883a 	mov	r16,r4
 200b2c4:	1823883a 	mov	r17,r3
 200b2c8:	1025003a 	cmpeq	r18,r2,zero
 200b2cc:	9000451e 	bne	r18,zero,200b3e4 <_strtod_r+0xd88>
 200b2d0:	2005883a 	mov	r2,r4
 200b2d4:	d8800715 	stw	r2,28(sp)
 200b2d8:	d8c00815 	stw	r3,32(sp)
 200b2dc:	e1c00117 	ldw	r7,4(fp)
 200b2e0:	009ff834 	movhi	r2,32736
 200b2e4:	3cdffc2c 	andhi	r19,r7,32752
 200b2e8:	98bfa11e 	bne	r19,r2,200b170 <_strtod_r+0xb14>
 200b2ec:	e1000017 	ldw	r4,0(fp)
 200b2f0:	01bf2c34 	movhi	r6,64688
 200b2f4:	398d883a 	add	r6,r7,r6
 200b2f8:	d9000b15 	stw	r4,44(sp)
 200b2fc:	d9c00c15 	stw	r7,48(sp)
 200b300:	300b883a 	mov	r5,r6
 200b304:	e1800115 	stw	r6,4(fp)
 200b308:	2008e100 	call	2008e10 <__ulp>
 200b30c:	d9800717 	ldw	r6,28(sp)
 200b310:	d9c00817 	ldw	r7,32(sp)
 200b314:	180b883a 	mov	r5,r3
 200b318:	1009883a 	mov	r4,r2
 200b31c:	200ec700 	call	200ec70 <__muldf3>
 200b320:	e2000017 	ldw	r8,0(fp)
 200b324:	e2400117 	ldw	r9,4(fp)
 200b328:	180b883a 	mov	r5,r3
 200b32c:	1009883a 	mov	r4,r2
 200b330:	480f883a 	mov	r7,r9
 200b334:	400d883a 	mov	r6,r8
 200b338:	200ebfc0 	call	200ebfc <__adddf3>
 200b33c:	1009883a 	mov	r4,r2
 200b340:	180b883a 	mov	r5,r3
 200b344:	009f2834 	movhi	r2,31904
 200b348:	10bfffc4 	addi	r2,r2,-1
 200b34c:	18dffc2c 	andhi	r3,r3,32752
 200b350:	e1000015 	stw	r4,0(fp)
 200b354:	e1400115 	stw	r5,4(fp)
 200b358:	10c0722e 	bgeu	r2,r3,200b524 <_strtod_r+0xec8>
 200b35c:	d8800c17 	ldw	r2,48(sp)
 200b360:	011ffc34 	movhi	r4,32752
 200b364:	213fffc4 	addi	r4,r4,-1
 200b368:	11007d26 	beq	r2,r4,200b560 <_strtod_r+0xf04>
 200b36c:	01ffffc4 	movi	r7,-1
 200b370:	e1000115 	stw	r4,4(fp)
 200b374:	e1c00015 	stw	r7,0(fp)
 200b378:	003fb206 	br	200b244 <_strtod_r+0xbe8>
 200b37c:	e0c00017 	ldw	r3,0(fp)
 200b380:	1800251e 	bne	r3,zero,200b418 <_strtod_r+0xdbc>
 200b384:	e0800117 	ldw	r2,4(fp)
 200b388:	00c00434 	movhi	r3,16
 200b38c:	18ffffc4 	addi	r3,r3,-1
 200b390:	10c4703a 	and	r2,r2,r3
 200b394:	1000241e 	bne	r2,zero,200b428 <_strtod_r+0xdcc>
 200b398:	0005883a 	mov	r2,zero
 200b39c:	00cffc34 	movhi	r3,16368
 200b3a0:	180f883a 	mov	r7,r3
 200b3a4:	8009883a 	mov	r4,r16
 200b3a8:	880b883a 	mov	r5,r17
 200b3ac:	100d883a 	mov	r6,r2
 200b3b0:	200f4ac0 	call	200f4ac <__ltdf2>
 200b3b4:	10014616 	blt	r2,zero,200b8d0 <_strtod_r+0x1274>
 200b3b8:	0005883a 	mov	r2,zero
 200b3bc:	00cff834 	movhi	r3,16352
 200b3c0:	880b883a 	mov	r5,r17
 200b3c4:	8009883a 	mov	r4,r16
 200b3c8:	180f883a 	mov	r7,r3
 200b3cc:	100d883a 	mov	r6,r2
 200b3d0:	200ec700 	call	200ec70 <__muldf3>
 200b3d4:	1823883a 	mov	r17,r3
 200b3d8:	1021883a 	mov	r16,r2
 200b3dc:	18e0003c 	xorhi	r3,r3,32768
 200b3e0:	003fbc06 	br	200b2d4 <_strtod_r+0xc78>
 200b3e4:	2005883a 	mov	r2,r4
 200b3e8:	18e0003c 	xorhi	r3,r3,32768
 200b3ec:	003fb906 	br	200b2d4 <_strtod_r+0xc78>
 200b3f0:	3827883a 	mov	r19,r7
 200b3f4:	003f1606 	br	200b050 <_strtod_r+0x9f4>
 200b3f8:	4091c83a 	sub	r8,r8,r2
 200b3fc:	003efe06 	br	200aff8 <_strtod_r+0x99c>
 200b400:	d9000f17 	ldw	r4,60(sp)
 200b404:	0011883a 	mov	r8,zero
 200b408:	0029883a 	mov	r20,zero
 200b40c:	0113c83a 	sub	r9,zero,r4
 200b410:	480f883a 	mov	r7,r9
 200b414:	003ef506 	br	200afec <_strtod_r+0x990>
 200b418:	00800044 	movi	r2,1
 200b41c:	1880021e 	bne	r3,r2,200b428 <_strtod_r+0xdcc>
 200b420:	e0800117 	ldw	r2,4(fp)
 200b424:	1000c526 	beq	r2,zero,200b73c <_strtod_r+0x10e0>
 200b428:	00affc34 	movhi	r2,49136
 200b42c:	0021883a 	mov	r16,zero
 200b430:	044ffc34 	movhi	r17,16368
 200b434:	d8800815 	stw	r2,32(sp)
 200b438:	d8000715 	stw	zero,28(sp)
 200b43c:	003f4806 	br	200b160 <_strtod_r+0xb04>
 200b440:	880b883a 	mov	r5,r17
 200b444:	8009883a 	mov	r4,r16
 200b448:	200f6b40 	call	200f6b4 <__fixdfsi>
 200b44c:	1009883a 	mov	r4,r2
 200b450:	200f5bc0 	call	200f5bc <__floatsidf>
 200b454:	880b883a 	mov	r5,r17
 200b458:	8009883a 	mov	r4,r16
 200b45c:	100d883a 	mov	r6,r2
 200b460:	180f883a 	mov	r7,r3
 200b464:	200eb7c0 	call	200eb7c <__subdf3>
 200b468:	100b883a 	mov	r5,r2
 200b46c:	1021883a 	mov	r16,r2
 200b470:	d8801a17 	ldw	r2,104(sp)
 200b474:	180d883a 	mov	r6,r3
 200b478:	1823883a 	mov	r17,r3
 200b47c:	1000061e 	bne	r2,zero,200b498 <_strtod_r+0xe3c>
 200b480:	e0800017 	ldw	r2,0(fp)
 200b484:	1000041e 	bne	r2,zero,200b498 <_strtod_r+0xe3c>
 200b488:	00c00434 	movhi	r3,16
 200b48c:	18ffffc4 	addi	r3,r3,-1
 200b490:	90c4703a 	and	r2,r18,r3
 200b494:	10004026 	beq	r2,zero,200b598 <_strtod_r+0xf3c>
 200b498:	00a52834 	movhi	r2,38048
 200b49c:	108d6544 	addi	r2,r2,13717
 200b4a0:	00cff834 	movhi	r3,16352
 200b4a4:	18ffffc4 	addi	r3,r3,-1
 200b4a8:	180f883a 	mov	r7,r3
 200b4ac:	8009883a 	mov	r4,r16
 200b4b0:	880b883a 	mov	r5,r17
 200b4b4:	100d883a 	mov	r6,r2
 200b4b8:	200f4ac0 	call	200f4ac <__ltdf2>
 200b4bc:	10000916 	blt	r2,zero,200b4e4 <_strtod_r+0xe88>
 200b4c0:	008d6c34 	movhi	r2,13744
 200b4c4:	10b94d44 	addi	r2,r2,-6859
 200b4c8:	00cff834 	movhi	r3,16352
 200b4cc:	880b883a 	mov	r5,r17
 200b4d0:	180f883a 	mov	r7,r3
 200b4d4:	8009883a 	mov	r4,r16
 200b4d8:	100d883a 	mov	r6,r2
 200b4dc:	200f39c0 	call	200f39c <__gtdf2>
 200b4e0:	00bf580e 	bge	zero,r2,200b244 <_strtod_r+0xbe8>
 200b4e4:	d9400517 	ldw	r5,20(sp)
 200b4e8:	a809883a 	mov	r4,r21
 200b4ec:	2008c540 	call	2008c54 <_Bfree>
 200b4f0:	a809883a 	mov	r4,r21
 200b4f4:	b80b883a 	mov	r5,r23
 200b4f8:	2008c540 	call	2008c54 <_Bfree>
 200b4fc:	a809883a 	mov	r4,r21
 200b500:	b00b883a 	mov	r5,r22
 200b504:	2008c540 	call	2008c54 <_Bfree>
 200b508:	d9401017 	ldw	r5,64(sp)
 200b50c:	a809883a 	mov	r4,r21
 200b510:	2008c540 	call	2008c54 <_Bfree>
 200b514:	a809883a 	mov	r4,r21
 200b518:	a00b883a 	mov	r5,r20
 200b51c:	2008c540 	call	2008c54 <_Bfree>
 200b520:	003cd806 	br	200a884 <_strtod_r+0x228>
 200b524:	0080d434 	movhi	r2,848
 200b528:	288d883a 	add	r6,r5,r2
 200b52c:	e1800115 	stw	r6,4(fp)
 200b530:	003f3f06 	br	200b230 <_strtod_r+0xbd4>
 200b534:	8005883a 	mov	r2,r16
 200b538:	88e0003c 	xorhi	r3,r17,32768
 200b53c:	003f2206 	br	200b1c8 <_strtod_r+0xb6c>
 200b540:	1009883a 	mov	r4,r2
 200b544:	200f8000 	call	200f800 <__floatunsidf>
 200b548:	1021883a 	mov	r16,r2
 200b54c:	1823883a 	mov	r17,r3
 200b550:	003f1a06 	br	200b1bc <_strtod_r+0xb60>
 200b554:	dc000417 	ldw	r16,16(sp)
 200b558:	31800044 	addi	r6,r6,1
 200b55c:	003e5606 	br	200aeb8 <_strtod_r+0x85c>
 200b560:	d8c00b17 	ldw	r3,44(sp)
 200b564:	00bfffc4 	movi	r2,-1
 200b568:	18bf801e 	bne	r3,r2,200b36c <_strtod_r+0xd10>
 200b56c:	00c00884 	movi	r3,34
 200b570:	a8c00015 	stw	r3,0(r21)
 200b574:	009ffc34 	movhi	r2,32752
 200b578:	e0800115 	stw	r2,4(fp)
 200b57c:	e0000015 	stw	zero,0(fp)
 200b580:	003fd806 	br	200b4e4 <_strtod_r+0xe88>
 200b584:	8025883a 	mov	r18,r16
 200b588:	0027883a 	mov	r19,zero
 200b58c:	d8001215 	stw	zero,72(sp)
 200b590:	d8001115 	stw	zero,68(sp)
 200b594:	003cac06 	br	200a848 <_strtod_r+0x1ec>
 200b598:	00a52834 	movhi	r2,38048
 200b59c:	108d6544 	addi	r2,r2,13717
 200b5a0:	00cff434 	movhi	r3,16336
 200b5a4:	18ffffc4 	addi	r3,r3,-1
 200b5a8:	2809883a 	mov	r4,r5
 200b5ac:	180f883a 	mov	r7,r3
 200b5b0:	300b883a 	mov	r5,r6
 200b5b4:	100d883a 	mov	r6,r2
 200b5b8:	200f4ac0 	call	200f4ac <__ltdf2>
 200b5bc:	103f210e 	bge	r2,zero,200b244 <_strtod_r+0xbe8>
 200b5c0:	003fc806 	br	200b4e4 <_strtod_r+0xe88>
 200b5c4:	00800044 	movi	r2,1
 200b5c8:	d8001815 	stw	zero,96(sp)
 200b5cc:	d8801b15 	stw	r2,108(sp)
 200b5d0:	d8001715 	stw	zero,92(sp)
 200b5d4:	003ca206 	br	200a860 <_strtod_r+0x204>
 200b5d8:	00800884 	movi	r2,34
 200b5dc:	a8800015 	stw	r2,0(r21)
 200b5e0:	019ffc34 	movhi	r6,32752
 200b5e4:	e1800115 	stw	r6,4(fp)
 200b5e8:	e0000015 	stw	zero,0(fp)
 200b5ec:	003ca506 	br	200a884 <_strtod_r+0x228>
 200b5f0:	011387c4 	movi	r4,19999
 200b5f4:	003d0206 	br	200aa00 <_strtod_r+0x3a4>
 200b5f8:	180a90fa 	slli	r5,r3,3
 200b5fc:	e0800017 	ldw	r2,0(fp)
 200b600:	e0c00117 	ldw	r3,4(fp)
 200b604:	01008074 	movhi	r4,513
 200b608:	210efd04 	addi	r4,r4,15348
 200b60c:	290b883a 	add	r5,r5,r4
 200b610:	2a000017 	ldw	r8,0(r5)
 200b614:	2a400117 	ldw	r9,4(r5)
 200b618:	1009883a 	mov	r4,r2
 200b61c:	180b883a 	mov	r5,r3
 200b620:	480f883a 	mov	r7,r9
 200b624:	400d883a 	mov	r6,r8
 200b628:	200ec700 	call	200ec70 <__muldf3>
 200b62c:	e0c00115 	stw	r3,4(fp)
 200b630:	e0800015 	stw	r2,0(fp)
 200b634:	003c9306 	br	200a884 <_strtod_r+0x228>
 200b638:	d8800d17 	ldw	r2,52(sp)
 200b63c:	e0800015 	stw	r2,0(fp)
 200b640:	d8c00e17 	ldw	r3,56(sp)
 200b644:	e0c00115 	stw	r3,4(fp)
 200b648:	9080020c 	andi	r2,r18,8
 200b64c:	103c8d26 	beq	r2,zero,200a884 <_strtod_r+0x228>
 200b650:	e0800117 	ldw	r2,4(fp)
 200b654:	10a00034 	orhi	r2,r2,32768
 200b658:	e0800115 	stw	r2,4(fp)
 200b65c:	003c8906 	br	200a884 <_strtod_r+0x228>
 200b660:	009ffc34 	movhi	r2,32752
 200b664:	e0800115 	stw	r2,4(fp)
 200b668:	e0000015 	stw	zero,0(fp)
 200b66c:	003ff606 	br	200b648 <_strtod_r+0xfec>
 200b670:	00a00034 	movhi	r2,32768
 200b674:	10bfffc4 	addi	r2,r2,-1
 200b678:	00ffffc4 	movi	r3,-1
 200b67c:	e0800115 	stw	r2,4(fp)
 200b680:	e0c00015 	stw	r3,0(fp)
 200b684:	003ff006 	br	200b648 <_strtod_r+0xfec>
 200b688:	e0000115 	stw	zero,4(fp)
 200b68c:	e0000015 	stw	zero,0(fp)
 200b690:	003fed06 	br	200b648 <_strtod_r+0xfec>
 200b694:	d8800e17 	ldw	r2,56(sp)
 200b698:	29010cc4 	addi	r4,r5,1075
 200b69c:	00fffc34 	movhi	r3,65520
 200b6a0:	18ffffc4 	addi	r3,r3,-1
 200b6a4:	2008953a 	slli	r4,r4,20
 200b6a8:	10c4703a 	and	r2,r2,r3
 200b6ac:	d8c00d17 	ldw	r3,52(sp)
 200b6b0:	1104b03a 	or	r2,r2,r4
 200b6b4:	e0800115 	stw	r2,4(fp)
 200b6b8:	e0c00015 	stw	r3,0(fp)
 200b6bc:	003fe206 	br	200b648 <_strtod_r+0xfec>
 200b6c0:	d8c01a17 	ldw	r3,104(sp)
 200b6c4:	1825003a 	cmpeq	r18,r3,zero
 200b6c8:	9000cf1e 	bne	r18,zero,200ba08 <_strtod_r+0x13ac>
 200b6cc:	e1400117 	ldw	r5,4(fp)
 200b6d0:	01000434 	movhi	r4,16
 200b6d4:	213fffc4 	addi	r4,r4,-1
 200b6d8:	2904703a 	and	r2,r5,r4
 200b6dc:	11006826 	beq	r2,r4,200b880 <_strtod_r+0x1224>
 200b6e0:	e1c00017 	ldw	r7,0(fp)
 200b6e4:	3880004c 	andi	r2,r7,1
 200b6e8:	1005003a 	cmpeq	r2,r2,zero
 200b6ec:	1000601e 	bne	r2,zero,200b870 <_strtod_r+0x1214>
 200b6f0:	90010426 	beq	r18,zero,200bb04 <_strtod_r+0x14a8>
 200b6f4:	e4400117 	ldw	r17,4(fp)
 200b6f8:	3809883a 	mov	r4,r7
 200b6fc:	3821883a 	mov	r16,r7
 200b700:	880b883a 	mov	r5,r17
 200b704:	2008e100 	call	2008e10 <__ulp>
 200b708:	180f883a 	mov	r7,r3
 200b70c:	880b883a 	mov	r5,r17
 200b710:	8009883a 	mov	r4,r16
 200b714:	100d883a 	mov	r6,r2
 200b718:	200eb7c0 	call	200eb7c <__subdf3>
 200b71c:	1009883a 	mov	r4,r2
 200b720:	000d883a 	mov	r6,zero
 200b724:	000f883a 	mov	r7,zero
 200b728:	180b883a 	mov	r5,r3
 200b72c:	e0800015 	stw	r2,0(fp)
 200b730:	e0c00115 	stw	r3,4(fp)
 200b734:	200f3140 	call	200f314 <__nedf2>
 200b738:	10004d1e 	bne	r2,zero,200b870 <_strtod_r+0x1214>
 200b73c:	00800884 	movi	r2,34
 200b740:	a8800015 	stw	r2,0(r21)
 200b744:	e0000015 	stw	zero,0(fp)
 200b748:	e0000115 	stw	zero,4(fp)
 200b74c:	003f6506 	br	200b4e4 <_strtod_r+0xe88>
 200b750:	00800044 	movi	r2,1
 200b754:	d8801915 	stw	r2,100(sp)
 200b758:	003d4406 	br	200ac6c <_strtod_r+0x610>
 200b75c:	d8c01817 	ldw	r3,96(sp)
 200b760:	1985883a 	add	r2,r3,r6
 200b764:	11ffffc4 	addi	r7,r2,-1
 200b768:	39000044 	addi	r4,r7,1
 200b76c:	00800204 	movi	r2,8
 200b770:	d9001815 	stw	r4,96(sp)
 200b774:	11c0d716 	blt	r2,r7,200bad4 <_strtod_r+0x1478>
 200b778:	d9001217 	ldw	r4,72(sp)
 200b77c:	01400284 	movi	r5,10
 200b780:	2000abc0 	call	2000abc <__mulsi3>
 200b784:	1585883a 	add	r2,r2,r22
 200b788:	d8801215 	stw	r2,72(sp)
 200b78c:	000d883a 	mov	r6,zero
 200b790:	84000044 	addi	r16,r16,1
 200b794:	dc000415 	stw	r16,16(sp)
 200b798:	84400007 	ldb	r17,0(r16)
 200b79c:	003cfc06 	br	200ab90 <_strtod_r+0x534>
 200b7a0:	d8c01a17 	ldw	r3,104(sp)
 200b7a4:	1800321e 	bne	r3,zero,200b870 <_strtod_r+0x1214>
 200b7a8:	e0800017 	ldw	r2,0(fp)
 200b7ac:	1000b31e 	bne	r2,zero,200ba7c <_strtod_r+0x1420>
 200b7b0:	e0c00117 	ldw	r3,4(fp)
 200b7b4:	01000434 	movhi	r4,16
 200b7b8:	213fffc4 	addi	r4,r4,-1
 200b7bc:	1904703a 	and	r2,r3,r4
 200b7c0:	1000e71e 	bne	r2,zero,200bb60 <_strtod_r+0x1504>
 200b7c4:	18dffc2c 	andhi	r3,r3,32752
 200b7c8:	0081ac34 	movhi	r2,1712
 200b7cc:	10c0282e 	bgeu	r2,r3,200b870 <_strtod_r+0x1214>
 200b7d0:	a0800517 	ldw	r2,20(r20)
 200b7d4:	1000031e 	bne	r2,zero,200b7e4 <_strtod_r+0x1188>
 200b7d8:	a0c00417 	ldw	r3,16(r20)
 200b7dc:	00800044 	movi	r2,1
 200b7e0:	10c0a60e 	bge	r2,r3,200ba7c <_strtod_r+0x1420>
 200b7e4:	a00b883a 	mov	r5,r20
 200b7e8:	a809883a 	mov	r4,r21
 200b7ec:	01800044 	movi	r6,1
 200b7f0:	20095980 	call	2009598 <__lshift>
 200b7f4:	1009883a 	mov	r4,r2
 200b7f8:	b00b883a 	mov	r5,r22
 200b7fc:	1029883a 	mov	r20,r2
 200b800:	2008db00 	call	2008db0 <__mcmp>
 200b804:	00809d0e 	bge	zero,r2,200ba7c <_strtod_r+0x1420>
 200b808:	e1800117 	ldw	r6,4(fp)
 200b80c:	d9001c17 	ldw	r4,112(sp)
 200b810:	2013003a 	cmpeq	r9,r4,zero
 200b814:	4800d61e 	bne	r9,zero,200bb70 <_strtod_r+0x1514>
 200b818:	30dffc2c 	andhi	r3,r6,32752
 200b81c:	0081ac34 	movhi	r2,1712
 200b820:	10c0d336 	bltu	r2,r3,200bb70 <_strtod_r+0x1514>
 200b824:	0080dc34 	movhi	r2,880
 200b828:	10ffc42e 	bgeu	r2,r3,200b73c <_strtod_r+0x10e0>
 200b82c:	e0800017 	ldw	r2,0(fp)
 200b830:	e0c00117 	ldw	r3,4(fp)
 200b834:	020e5434 	movhi	r8,14672
 200b838:	000d883a 	mov	r6,zero
 200b83c:	400f883a 	mov	r7,r8
 200b840:	180b883a 	mov	r5,r3
 200b844:	1009883a 	mov	r4,r2
 200b848:	da000c15 	stw	r8,48(sp)
 200b84c:	d8000b15 	stw	zero,44(sp)
 200b850:	200ec700 	call	200ec70 <__muldf3>
 200b854:	e0800015 	stw	r2,0(fp)
 200b858:	e0c00115 	stw	r3,4(fp)
 200b85c:	183f211e 	bne	r3,zero,200b4e4 <_strtod_r+0xe88>
 200b860:	103f201e 	bne	r2,zero,200b4e4 <_strtod_r+0xe88>
 200b864:	00800884 	movi	r2,34
 200b868:	a8800015 	stw	r2,0(r21)
 200b86c:	003f1d06 	br	200b4e4 <_strtod_r+0xe88>
 200b870:	d9001c17 	ldw	r4,112(sp)
 200b874:	2013003a 	cmpeq	r9,r4,zero
 200b878:	483f1a1e 	bne	r9,zero,200b4e4 <_strtod_r+0xe88>
 200b87c:	003feb06 	br	200b82c <_strtod_r+0x11d0>
 200b880:	d8801c17 	ldw	r2,112(sp)
 200b884:	e1c00017 	ldw	r7,0(fp)
 200b888:	1013003a 	cmpeq	r9,r2,zero
 200b88c:	4800c31e 	bne	r9,zero,200bb9c <_strtod_r+0x1540>
 200b890:	28dffc2c 	andhi	r3,r5,32752
 200b894:	0081a834 	movhi	r2,1696
 200b898:	10c0c036 	bltu	r2,r3,200bb9c <_strtod_r+0x1540>
 200b89c:	1804d53a 	srli	r2,r3,20
 200b8a0:	00c01ac4 	movi	r3,107
 200b8a4:	013fffc4 	movi	r4,-1
 200b8a8:	1887c83a 	sub	r3,r3,r2
 200b8ac:	20c4983a 	sll	r2,r4,r3
 200b8b0:	11ff8c1e 	bne	r2,r7,200b6e4 <_strtod_r+0x1088>
 200b8b4:	28dffc2c 	andhi	r3,r5,32752
 200b8b8:	00800434 	movhi	r2,16
 200b8bc:	188d883a 	add	r6,r3,r2
 200b8c0:	e1800115 	stw	r6,4(fp)
 200b8c4:	e0000015 	stw	zero,0(fp)
 200b8c8:	483f061e 	bne	r9,zero,200b4e4 <_strtod_r+0xe88>
 200b8cc:	003fd706 	br	200b82c <_strtod_r+0x11d0>
 200b8d0:	0021883a 	mov	r16,zero
 200b8d4:	0005883a 	mov	r2,zero
 200b8d8:	044ff834 	movhi	r17,16352
 200b8dc:	00eff834 	movhi	r3,49120
 200b8e0:	003e7c06 	br	200b2d4 <_strtod_r+0xc78>
 200b8e4:	803d9226 	beq	r16,zero,200af30 <_strtod_r+0x8d4>
 200b8e8:	0421c83a 	sub	r16,zero,r16
 200b8ec:	814003cc 	andi	r5,r16,15
 200b8f0:	28000f26 	beq	r5,zero,200b930 <_strtod_r+0x12d4>
 200b8f4:	280a90fa 	slli	r5,r5,3
 200b8f8:	01008074 	movhi	r4,513
 200b8fc:	210efd04 	addi	r4,r4,15348
 200b900:	e0800017 	ldw	r2,0(fp)
 200b904:	290b883a 	add	r5,r5,r4
 200b908:	2a000017 	ldw	r8,0(r5)
 200b90c:	e0c00117 	ldw	r3,4(fp)
 200b910:	2a400117 	ldw	r9,4(r5)
 200b914:	1009883a 	mov	r4,r2
 200b918:	180b883a 	mov	r5,r3
 200b91c:	480f883a 	mov	r7,r9
 200b920:	400d883a 	mov	r6,r8
 200b924:	200f0340 	call	200f034 <__divdf3>
 200b928:	e0c00115 	stw	r3,4(fp)
 200b92c:	e0800015 	stw	r2,0(fp)
 200b930:	8021d13a 	srai	r16,r16,4
 200b934:	803d7e26 	beq	r16,zero,200af30 <_strtod_r+0x8d4>
 200b938:	008007c4 	movi	r2,31
 200b93c:	14002d16 	blt	r2,r16,200b9f4 <_strtod_r+0x1398>
 200b940:	8080040c 	andi	r2,r16,16
 200b944:	10009d26 	beq	r2,zero,200bbbc <_strtod_r+0x1560>
 200b948:	01001a84 	movi	r4,106
 200b94c:	d9001c15 	stw	r4,112(sp)
 200b950:	0400110e 	bge	zero,r16,200b998 <_strtod_r+0x133c>
 200b954:	04408074 	movhi	r17,513
 200b958:	8c4f4a04 	addi	r17,r17,15656
 200b95c:	8080004c 	andi	r2,r16,1
 200b960:	1005003a 	cmpeq	r2,r2,zero
 200b964:	1000091e 	bne	r2,zero,200b98c <_strtod_r+0x1330>
 200b968:	e0800017 	ldw	r2,0(fp)
 200b96c:	e0c00117 	ldw	r3,4(fp)
 200b970:	89800017 	ldw	r6,0(r17)
 200b974:	89c00117 	ldw	r7,4(r17)
 200b978:	180b883a 	mov	r5,r3
 200b97c:	1009883a 	mov	r4,r2
 200b980:	200ec700 	call	200ec70 <__muldf3>
 200b984:	e0c00115 	stw	r3,4(fp)
 200b988:	e0800015 	stw	r2,0(fp)
 200b98c:	8021d07a 	srai	r16,r16,1
 200b990:	8c400204 	addi	r17,r17,8
 200b994:	043ff116 	blt	zero,r16,200b95c <_strtod_r+0x1300>
 200b998:	d8801c17 	ldw	r2,112(sp)
 200b99c:	10000d26 	beq	r2,zero,200b9d4 <_strtod_r+0x1378>
 200b9a0:	e1000117 	ldw	r4,4(fp)
 200b9a4:	00c01ac4 	movi	r3,107
 200b9a8:	209ffc2c 	andhi	r2,r4,32752
 200b9ac:	1004d53a 	srli	r2,r2,20
 200b9b0:	1887c83a 	sub	r3,r3,r2
 200b9b4:	00c0070e 	bge	zero,r3,200b9d4 <_strtod_r+0x1378>
 200b9b8:	008007c4 	movi	r2,31
 200b9bc:	10c0940e 	bge	r2,r3,200bc10 <_strtod_r+0x15b4>
 200b9c0:	00800d04 	movi	r2,52
 200b9c4:	e0000015 	stw	zero,0(fp)
 200b9c8:	10c08b0e 	bge	r2,r3,200bbf8 <_strtod_r+0x159c>
 200b9cc:	0180dc34 	movhi	r6,880
 200b9d0:	e1800115 	stw	r6,4(fp)
 200b9d4:	e0800017 	ldw	r2,0(fp)
 200b9d8:	e0c00117 	ldw	r3,4(fp)
 200b9dc:	000d883a 	mov	r6,zero
 200b9e0:	000f883a 	mov	r7,zero
 200b9e4:	180b883a 	mov	r5,r3
 200b9e8:	1009883a 	mov	r4,r2
 200b9ec:	200f3140 	call	200f314 <__nedf2>
 200b9f0:	103d501e 	bne	r2,zero,200af34 <_strtod_r+0x8d8>
 200b9f4:	00800884 	movi	r2,34
 200b9f8:	a8800015 	stw	r2,0(r21)
 200b9fc:	e0000015 	stw	zero,0(fp)
 200ba00:	e0000115 	stw	zero,4(fp)
 200ba04:	003b9f06 	br	200a884 <_strtod_r+0x228>
 200ba08:	e1800117 	ldw	r6,4(fp)
 200ba0c:	00c00434 	movhi	r3,16
 200ba10:	18ffffc4 	addi	r3,r3,-1
 200ba14:	30c4703a 	and	r2,r6,r3
 200ba18:	103f311e 	bne	r2,zero,200b6e0 <_strtod_r+0x1084>
 200ba1c:	e1c00017 	ldw	r7,0(fp)
 200ba20:	383f301e 	bne	r7,zero,200b6e4 <_strtod_r+0x1088>
 200ba24:	003f7906 	br	200b80c <_strtod_r+0x11b0>
 200ba28:	d8c00f17 	ldw	r3,60(sp)
 200ba2c:	00bffa84 	movi	r2,-22
 200ba30:	18bcbf16 	blt	r3,r2,200ad30 <_strtod_r+0x6d4>
 200ba34:	1809883a 	mov	r4,r3
 200ba38:	017ffe04 	movi	r5,-8
 200ba3c:	2000abc0 	call	2000abc <__mulsi3>
 200ba40:	00c08074 	movhi	r3,513
 200ba44:	18cefd04 	addi	r3,r3,15348
 200ba48:	10c5883a 	add	r2,r2,r3
 200ba4c:	e2000017 	ldw	r8,0(fp)
 200ba50:	e2400117 	ldw	r9,4(fp)
 200ba54:	12800017 	ldw	r10,0(r2)
 200ba58:	12c00117 	ldw	r11,4(r2)
 200ba5c:	480b883a 	mov	r5,r9
 200ba60:	4009883a 	mov	r4,r8
 200ba64:	580f883a 	mov	r7,r11
 200ba68:	500d883a 	mov	r6,r10
 200ba6c:	200f0340 	call	200f034 <__divdf3>
 200ba70:	e0c00115 	stw	r3,4(fp)
 200ba74:	e0800015 	stw	r2,0(fp)
 200ba78:	003b8206 	br	200a884 <_strtod_r+0x228>
 200ba7c:	d8801c17 	ldw	r2,112(sp)
 200ba80:	1013003a 	cmpeq	r9,r2,zero
 200ba84:	483e971e 	bne	r9,zero,200b4e4 <_strtod_r+0xe88>
 200ba88:	003f6806 	br	200b82c <_strtod_r+0x11d0>
 200ba8c:	00801a44 	movi	r2,105
 200ba90:	88bc5026 	beq	r17,r2,200abd4 <_strtod_r+0x578>
 200ba94:	00801b84 	movi	r2,110
 200ba98:	88bb9b1e 	bne	r17,r2,200a908 <_strtod_r+0x2ac>
 200ba9c:	dc000404 	addi	r16,sp,16
 200baa0:	8009883a 	mov	r4,r16
 200baa4:	01408074 	movhi	r5,513
 200baa8:	294f4904 	addi	r5,r5,15652
 200baac:	200a6140 	call	200a614 <match>
 200bab0:	103b9526 	beq	r2,zero,200a908 <_strtod_r+0x2ac>
 200bab4:	d8800417 	ldw	r2,16(sp)
 200bab8:	00c00a04 	movi	r3,40
 200babc:	11000007 	ldb	r4,0(r2)
 200bac0:	20c04026 	beq	r4,r3,200bbc4 <_strtod_r+0x1568>
 200bac4:	01bffe34 	movhi	r6,65528
 200bac8:	e1800115 	stw	r6,4(fp)
 200bacc:	e0000015 	stw	zero,0(fp)
 200bad0:	003b6c06 	br	200a884 <_strtod_r+0x228>
 200bad4:	d8c01817 	ldw	r3,96(sp)
 200bad8:	00800404 	movi	r2,16
 200badc:	10c00516 	blt	r2,r3,200baf4 <_strtod_r+0x1498>
 200bae0:	d9001117 	ldw	r4,68(sp)
 200bae4:	01400284 	movi	r5,10
 200bae8:	2000abc0 	call	2000abc <__mulsi3>
 200baec:	1585883a 	add	r2,r2,r22
 200baf0:	d8801115 	stw	r2,68(sp)
 200baf4:	000d883a 	mov	r6,zero
 200baf8:	003f2506 	br	200b790 <_strtod_r+0x1134>
 200bafc:	000d883a 	mov	r6,zero
 200bb00:	003ce306 	br	200ae90 <_strtod_r+0x834>
 200bb04:	e4400117 	ldw	r17,4(fp)
 200bb08:	3809883a 	mov	r4,r7
 200bb0c:	3821883a 	mov	r16,r7
 200bb10:	880b883a 	mov	r5,r17
 200bb14:	2008e100 	call	2008e10 <__ulp>
 200bb18:	180f883a 	mov	r7,r3
 200bb1c:	880b883a 	mov	r5,r17
 200bb20:	8009883a 	mov	r4,r16
 200bb24:	100d883a 	mov	r6,r2
 200bb28:	200ebfc0 	call	200ebfc <__adddf3>
 200bb2c:	180b883a 	mov	r5,r3
 200bb30:	d8c01c17 	ldw	r3,112(sp)
 200bb34:	1009883a 	mov	r4,r2
 200bb38:	e1400115 	stw	r5,4(fp)
 200bb3c:	1813003a 	cmpeq	r9,r3,zero
 200bb40:	e1000015 	stw	r4,0(fp)
 200bb44:	483e671e 	bne	r9,zero,200b4e4 <_strtod_r+0xe88>
 200bb48:	003f3806 	br	200b82c <_strtod_r+0x11d0>
 200bb4c:	0080d434 	movhi	r2,848
 200bb50:	188d883a 	add	r6,r3,r2
 200bb54:	d8001c15 	stw	zero,112(sp)
 200bb58:	e1800115 	stw	r6,4(fp)
 200bb5c:	003cf506 	br	200af34 <_strtod_r+0x8d8>
 200bb60:	d8c01c17 	ldw	r3,112(sp)
 200bb64:	1813003a 	cmpeq	r9,r3,zero
 200bb68:	483e5e1e 	bne	r9,zero,200b4e4 <_strtod_r+0xe88>
 200bb6c:	003f2f06 	br	200b82c <_strtod_r+0x11d0>
 200bb70:	309ffc2c 	andhi	r2,r6,32752
 200bb74:	00fffc34 	movhi	r3,65520
 200bb78:	10c5883a 	add	r2,r2,r3
 200bb7c:	00c00434 	movhi	r3,16
 200bb80:	18ffffc4 	addi	r3,r3,-1
 200bb84:	10ccb03a 	or	r6,r2,r3
 200bb88:	01ffffc4 	movi	r7,-1
 200bb8c:	e1800115 	stw	r6,4(fp)
 200bb90:	e1c00015 	stw	r7,0(fp)
 200bb94:	483e531e 	bne	r9,zero,200b4e4 <_strtod_r+0xe88>
 200bb98:	003f2406 	br	200b82c <_strtod_r+0x11d0>
 200bb9c:	00bfffc4 	movi	r2,-1
 200bba0:	003f4306 	br	200b8b0 <_strtod_r+0x1254>
 200bba4:	0025883a 	mov	r18,zero
 200bba8:	05808074 	movhi	r22,513
 200bbac:	b58f2f04 	addi	r22,r22,15548
 200bbb0:	003c9206 	br	200adfc <_strtod_r+0x7a0>
 200bbb4:	d9c01817 	ldw	r7,96(sp)
 200bbb8:	003eeb06 	br	200b768 <_strtod_r+0x110c>
 200bbbc:	d8001c15 	stw	zero,112(sp)
 200bbc0:	003f6306 	br	200b950 <_strtod_r+0x12f4>
 200bbc4:	8009883a 	mov	r4,r16
 200bbc8:	01408074 	movhi	r5,513
 200bbcc:	2951f304 	addi	r5,r5,18380
 200bbd0:	d9800d04 	addi	r6,sp,52
 200bbd4:	200d5280 	call	200d528 <__hexnan>
 200bbd8:	00c00144 	movi	r3,5
 200bbdc:	10ffb91e 	bne	r2,r3,200bac4 <_strtod_r+0x1468>
 200bbe0:	d8800e17 	ldw	r2,56(sp)
 200bbe4:	d9c00d17 	ldw	r7,52(sp)
 200bbe8:	119ffc34 	orhi	r6,r2,32752
 200bbec:	e1800115 	stw	r6,4(fp)
 200bbf0:	e1c00015 	stw	r7,0(fp)
 200bbf4:	003b2306 	br	200a884 <_strtod_r+0x228>
 200bbf8:	18fff804 	addi	r3,r3,-32
 200bbfc:	00bfffc4 	movi	r2,-1
 200bc00:	10c4983a 	sll	r2,r2,r3
 200bc04:	208c703a 	and	r6,r4,r2
 200bc08:	e1800115 	stw	r6,4(fp)
 200bc0c:	003f7106 	br	200b9d4 <_strtod_r+0x1378>
 200bc10:	00bfffc4 	movi	r2,-1
 200bc14:	10c4983a 	sll	r2,r2,r3
 200bc18:	e0c00017 	ldw	r3,0(fp)
 200bc1c:	188e703a 	and	r7,r3,r2
 200bc20:	e1c00015 	stw	r7,0(fp)
 200bc24:	003f6b06 	br	200b9d4 <_strtod_r+0x1378>

0200bc28 <strtof>:
 200bc28:	defffa04 	addi	sp,sp,-24
 200bc2c:	dd000415 	stw	r20,16(sp)
 200bc30:	05008074 	movhi	r20,513
 200bc34:	a5168904 	addi	r20,r20,23076
 200bc38:	2007883a 	mov	r3,r4
 200bc3c:	a1000017 	ldw	r4,0(r20)
 200bc40:	280d883a 	mov	r6,r5
 200bc44:	180b883a 	mov	r5,r3
 200bc48:	dfc00515 	stw	ra,20(sp)
 200bc4c:	dcc00315 	stw	r19,12(sp)
 200bc50:	dc800215 	stw	r18,8(sp)
 200bc54:	dc400115 	stw	r17,4(sp)
 200bc58:	dc000015 	stw	r16,0(sp)
 200bc5c:	200a65c0 	call	200a65c <_strtod_r>
 200bc60:	180b883a 	mov	r5,r3
 200bc64:	1009883a 	mov	r4,r2
 200bc68:	1823883a 	mov	r17,r3
 200bc6c:	1021883a 	mov	r16,r2
 200bc70:	200f78c0 	call	200f78c <__truncdfsf2>
 200bc74:	1009883a 	mov	r4,r2
 200bc78:	000b883a 	mov	r5,zero
 200bc7c:	1025883a 	mov	r18,r2
 200bc80:	1027883a 	mov	r19,r2
 200bc84:	200e6040 	call	200e604 <__nesf2>
 200bc88:	000d883a 	mov	r6,zero
 200bc8c:	000f883a 	mov	r7,zero
 200bc90:	8009883a 	mov	r4,r16
 200bc94:	880b883a 	mov	r5,r17
 200bc98:	10000e1e 	bne	r2,zero,200bcd4 <strtof+0xac>
 200bc9c:	200f3140 	call	200f314 <__nedf2>
 200bca0:	10000c26 	beq	r2,zero,200bcd4 <strtof+0xac>
 200bca4:	a0c00017 	ldw	r3,0(r20)
 200bca8:	00800884 	movi	r2,34
 200bcac:	18800015 	stw	r2,0(r3)
 200bcb0:	9805883a 	mov	r2,r19
 200bcb4:	dfc00517 	ldw	ra,20(sp)
 200bcb8:	dd000417 	ldw	r20,16(sp)
 200bcbc:	dcc00317 	ldw	r19,12(sp)
 200bcc0:	dc800217 	ldw	r18,8(sp)
 200bcc4:	dc400117 	ldw	r17,4(sp)
 200bcc8:	dc000017 	ldw	r16,0(sp)
 200bccc:	dec00604 	addi	sp,sp,24
 200bcd0:	f800283a 	ret
 200bcd4:	9009883a 	mov	r4,r18
 200bcd8:	015fe034 	movhi	r5,32640
 200bcdc:	297fffc4 	addi	r5,r5,-1
 200bce0:	200e67c0 	call	200e67c <__gtsf2>
 200bce4:	00ffffc4 	movi	r3,-1
 200bce8:	011ffc34 	movhi	r4,32752
 200bcec:	213fffc4 	addi	r4,r4,-1
 200bcf0:	200f883a 	mov	r7,r4
 200bcf4:	180d883a 	mov	r6,r3
 200bcf8:	8009883a 	mov	r4,r16
 200bcfc:	880b883a 	mov	r5,r17
 200bd00:	00800f16 	blt	zero,r2,200bd40 <strtof+0x118>
 200bd04:	9009883a 	mov	r4,r18
 200bd08:	017fe034 	movhi	r5,65408
 200bd0c:	297fffc4 	addi	r5,r5,-1
 200bd10:	200e6f40 	call	200e6f4 <__ltsf2>
 200bd14:	023fffc4 	movi	r8,-1
 200bd18:	027ffc34 	movhi	r9,65520
 200bd1c:	4a7fffc4 	addi	r9,r9,-1
 200bd20:	880b883a 	mov	r5,r17
 200bd24:	480f883a 	mov	r7,r9
 200bd28:	8009883a 	mov	r4,r16
 200bd2c:	400d883a 	mov	r6,r8
 200bd30:	103fdf0e 	bge	r2,zero,200bcb0 <strtof+0x88>
 200bd34:	200f4ac0 	call	200f4ac <__ltdf2>
 200bd38:	103fda0e 	bge	r2,zero,200bca4 <strtof+0x7c>
 200bd3c:	003fdc06 	br	200bcb0 <strtof+0x88>
 200bd40:	200f39c0 	call	200f39c <__gtdf2>
 200bd44:	00bfd70e 	bge	zero,r2,200bca4 <strtof+0x7c>
 200bd48:	003fee06 	br	200bd04 <strtof+0xdc>

0200bd4c <strtod>:
 200bd4c:	01808074 	movhi	r6,513
 200bd50:	31968904 	addi	r6,r6,23076
 200bd54:	2007883a 	mov	r3,r4
 200bd58:	31000017 	ldw	r4,0(r6)
 200bd5c:	280d883a 	mov	r6,r5
 200bd60:	180b883a 	mov	r5,r3
 200bd64:	200a65c1 	jmpi	200a65c <_strtod_r>

0200bd68 <_strtol_r>:
 200bd68:	defff304 	addi	sp,sp,-52
 200bd6c:	00808074 	movhi	r2,513
 200bd70:	10968d04 	addi	r2,r2,23092
 200bd74:	dd000715 	stw	r20,28(sp)
 200bd78:	15000017 	ldw	r20,0(r2)
 200bd7c:	ddc00a15 	stw	r23,40(sp)
 200bd80:	dc800515 	stw	r18,20(sp)
 200bd84:	dc400415 	stw	r17,16(sp)
 200bd88:	dfc00c15 	stw	ra,48(sp)
 200bd8c:	df000b15 	stw	fp,44(sp)
 200bd90:	dd800915 	stw	r22,36(sp)
 200bd94:	dd400815 	stw	r21,32(sp)
 200bd98:	dcc00615 	stw	r19,24(sp)
 200bd9c:	dc000315 	stw	r16,12(sp)
 200bda0:	282f883a 	mov	r23,r5
 200bda4:	d9000115 	stw	r4,4(sp)
 200bda8:	d9800215 	stw	r6,8(sp)
 200bdac:	3825883a 	mov	r18,r7
 200bdb0:	2823883a 	mov	r17,r5
 200bdb4:	8c000007 	ldb	r16,0(r17)
 200bdb8:	8c400044 	addi	r17,r17,1
 200bdbc:	a407883a 	add	r3,r20,r16
 200bdc0:	18800003 	ldbu	r2,0(r3)
 200bdc4:	1080020c 	andi	r2,r2,8
 200bdc8:	103ffa1e 	bne	r2,zero,200bdb4 <_strtol_r+0x4c>
 200bdcc:	00800b44 	movi	r2,45
 200bdd0:	80805c26 	beq	r16,r2,200bf44 <_strtol_r+0x1dc>
 200bdd4:	00800ac4 	movi	r2,43
 200bdd8:	80805726 	beq	r16,r2,200bf38 <_strtol_r+0x1d0>
 200bddc:	d8000015 	stw	zero,0(sp)
 200bde0:	9007003a 	cmpeq	r3,r18,zero
 200bde4:	1800431e 	bne	r3,zero,200bef4 <_strtol_r+0x18c>
 200bde8:	00800404 	movi	r2,16
 200bdec:	90804126 	beq	r18,r2,200bef4 <_strtol_r+0x18c>
 200bdf0:	902b883a 	mov	r21,r18
 200bdf4:	d8c00017 	ldw	r3,0(sp)
 200bdf8:	1838c03a 	cmpne	fp,r3,zero
 200bdfc:	e0004a1e 	bne	fp,zero,200bf28 <_strtol_r+0x1c0>
 200be00:	04e00034 	movhi	r19,32768
 200be04:	9cffffc4 	addi	r19,r19,-1
 200be08:	9809883a 	mov	r4,r19
 200be0c:	a80b883a 	mov	r5,r21
 200be10:	200fad80 	call	200fad8 <__umodsi3>
 200be14:	9809883a 	mov	r4,r19
 200be18:	a80b883a 	mov	r5,r21
 200be1c:	102d883a 	mov	r22,r2
 200be20:	200fad00 	call	200fad0 <__udivsi3>
 200be24:	1027883a 	mov	r19,r2
 200be28:	a405883a 	add	r2,r20,r16
 200be2c:	11400003 	ldbu	r5,0(r2)
 200be30:	0009883a 	mov	r4,zero
 200be34:	000d883a 	mov	r6,zero
 200be38:	28c0010c 	andi	r3,r5,4
 200be3c:	18000f26 	beq	r3,zero,200be7c <_strtol_r+0x114>
 200be40:	843ff404 	addi	r16,r16,-48
 200be44:	8480150e 	bge	r16,r18,200be9c <_strtol_r+0x134>
 200be48:	30003216 	blt	r6,zero,200bf14 <_strtol_r+0x1ac>
 200be4c:	99003136 	bltu	r19,r4,200bf14 <_strtol_r+0x1ac>
 200be50:	24c02f26 	beq	r4,r19,200bf10 <_strtol_r+0x1a8>
 200be54:	a80b883a 	mov	r5,r21
 200be58:	2000abc0 	call	2000abc <__mulsi3>
 200be5c:	1409883a 	add	r4,r2,r16
 200be60:	01800044 	movi	r6,1
 200be64:	8c000007 	ldb	r16,0(r17)
 200be68:	8c400044 	addi	r17,r17,1
 200be6c:	a405883a 	add	r2,r20,r16
 200be70:	11400003 	ldbu	r5,0(r2)
 200be74:	28c0010c 	andi	r3,r5,4
 200be78:	183ff11e 	bne	r3,zero,200be40 <_strtol_r+0xd8>
 200be7c:	288000cc 	andi	r2,r5,3
 200be80:	10000626 	beq	r2,zero,200be9c <_strtol_r+0x134>
 200be84:	2880004c 	andi	r2,r5,1
 200be88:	1005003a 	cmpeq	r2,r2,zero
 200be8c:	1000231e 	bne	r2,zero,200bf1c <_strtol_r+0x1b4>
 200be90:	00800dc4 	movi	r2,55
 200be94:	80a1c83a 	sub	r16,r16,r2
 200be98:	84bfeb16 	blt	r16,r18,200be48 <_strtol_r+0xe0>
 200be9c:	30002e16 	blt	r6,zero,200bf58 <_strtol_r+0x1f0>
 200bea0:	e000231e 	bne	fp,zero,200bf30 <_strtol_r+0x1c8>
 200bea4:	2007883a 	mov	r3,r4
 200bea8:	d8800217 	ldw	r2,8(sp)
 200beac:	10000426 	beq	r2,zero,200bec0 <_strtol_r+0x158>
 200beb0:	30000126 	beq	r6,zero,200beb8 <_strtol_r+0x150>
 200beb4:	8dffffc4 	addi	r23,r17,-1
 200beb8:	d9000217 	ldw	r4,8(sp)
 200bebc:	25c00015 	stw	r23,0(r4)
 200bec0:	1805883a 	mov	r2,r3
 200bec4:	dfc00c17 	ldw	ra,48(sp)
 200bec8:	df000b17 	ldw	fp,44(sp)
 200becc:	ddc00a17 	ldw	r23,40(sp)
 200bed0:	dd800917 	ldw	r22,36(sp)
 200bed4:	dd400817 	ldw	r21,32(sp)
 200bed8:	dd000717 	ldw	r20,28(sp)
 200bedc:	dcc00617 	ldw	r19,24(sp)
 200bee0:	dc800517 	ldw	r18,20(sp)
 200bee4:	dc400417 	ldw	r17,16(sp)
 200bee8:	dc000317 	ldw	r16,12(sp)
 200beec:	dec00d04 	addi	sp,sp,52
 200bef0:	f800283a 	ret
 200bef4:	00800c04 	movi	r2,48
 200bef8:	80801f26 	beq	r16,r2,200bf78 <_strtol_r+0x210>
 200befc:	183fbc26 	beq	r3,zero,200bdf0 <_strtol_r+0x88>
 200bf00:	00800c04 	movi	r2,48
 200bf04:	80802926 	beq	r16,r2,200bfac <_strtol_r+0x244>
 200bf08:	04800284 	movi	r18,10
 200bf0c:	003fb806 	br	200bdf0 <_strtol_r+0x88>
 200bf10:	b43fd00e 	bge	r22,r16,200be54 <_strtol_r+0xec>
 200bf14:	01bfffc4 	movi	r6,-1
 200bf18:	003fd206 	br	200be64 <_strtol_r+0xfc>
 200bf1c:	008015c4 	movi	r2,87
 200bf20:	80a1c83a 	sub	r16,r16,r2
 200bf24:	003fdc06 	br	200be98 <_strtol_r+0x130>
 200bf28:	04e00034 	movhi	r19,32768
 200bf2c:	003fb606 	br	200be08 <_strtol_r+0xa0>
 200bf30:	0107c83a 	sub	r3,zero,r4
 200bf34:	003fdc06 	br	200bea8 <_strtol_r+0x140>
 200bf38:	8c000007 	ldb	r16,0(r17)
 200bf3c:	8c400044 	addi	r17,r17,1
 200bf40:	003fa606 	br	200bddc <_strtol_r+0x74>
 200bf44:	8c000007 	ldb	r16,0(r17)
 200bf48:	00800044 	movi	r2,1
 200bf4c:	8c400044 	addi	r17,r17,1
 200bf50:	d8800015 	stw	r2,0(sp)
 200bf54:	003fa206 	br	200bde0 <_strtol_r+0x78>
 200bf58:	d9000017 	ldw	r4,0(sp)
 200bf5c:	2005003a 	cmpeq	r2,r4,zero
 200bf60:	10000f1e 	bne	r2,zero,200bfa0 <_strtol_r+0x238>
 200bf64:	00e00034 	movhi	r3,32768
 200bf68:	d9000117 	ldw	r4,4(sp)
 200bf6c:	00800884 	movi	r2,34
 200bf70:	20800015 	stw	r2,0(r4)
 200bf74:	003fcc06 	br	200bea8 <_strtol_r+0x140>
 200bf78:	89000007 	ldb	r4,0(r17)
 200bf7c:	00801e04 	movi	r2,120
 200bf80:	20800226 	beq	r4,r2,200bf8c <_strtol_r+0x224>
 200bf84:	00801604 	movi	r2,88
 200bf88:	20bfdc1e 	bne	r4,r2,200befc <_strtol_r+0x194>
 200bf8c:	8c000047 	ldb	r16,1(r17)
 200bf90:	04800404 	movi	r18,16
 200bf94:	8c400084 	addi	r17,r17,2
 200bf98:	902b883a 	mov	r21,r18
 200bf9c:	003f9506 	br	200bdf4 <_strtol_r+0x8c>
 200bfa0:	00e00034 	movhi	r3,32768
 200bfa4:	18ffffc4 	addi	r3,r3,-1
 200bfa8:	003fef06 	br	200bf68 <_strtol_r+0x200>
 200bfac:	04800204 	movi	r18,8
 200bfb0:	902b883a 	mov	r21,r18
 200bfb4:	003f8f06 	br	200bdf4 <_strtol_r+0x8c>

0200bfb8 <strtol>:
 200bfb8:	00808074 	movhi	r2,513
 200bfbc:	10968904 	addi	r2,r2,23076
 200bfc0:	2013883a 	mov	r9,r4
 200bfc4:	11000017 	ldw	r4,0(r2)
 200bfc8:	2805883a 	mov	r2,r5
 200bfcc:	300f883a 	mov	r7,r6
 200bfd0:	480b883a 	mov	r5,r9
 200bfd4:	100d883a 	mov	r6,r2
 200bfd8:	200bd681 	jmpi	200bd68 <_strtol_r>

0200bfdc <_strtoll_r>:
 200bfdc:	defff004 	addi	sp,sp,-64
 200bfe0:	00808074 	movhi	r2,513
 200bfe4:	10968d04 	addi	r2,r2,23092
 200bfe8:	df000e15 	stw	fp,56(sp)
 200bfec:	17000017 	ldw	fp,0(r2)
 200bff0:	ddc00d15 	stw	r23,52(sp)
 200bff4:	dd000a15 	stw	r20,40(sp)
 200bff8:	dfc00f15 	stw	ra,60(sp)
 200bffc:	dd800c15 	stw	r22,48(sp)
 200c000:	dd400b15 	stw	r21,44(sp)
 200c004:	dcc00915 	stw	r19,36(sp)
 200c008:	dc800815 	stw	r18,32(sp)
 200c00c:	dc400715 	stw	r17,28(sp)
 200c010:	dc000615 	stw	r16,24(sp)
 200c014:	d9400315 	stw	r5,12(sp)
 200c018:	d9000215 	stw	r4,8(sp)
 200c01c:	d9800415 	stw	r6,16(sp)
 200c020:	382f883a 	mov	r23,r7
 200c024:	2829883a 	mov	r20,r5
 200c028:	a4c00007 	ldb	r19,0(r20)
 200c02c:	a5000044 	addi	r20,r20,1
 200c030:	e4c7883a 	add	r3,fp,r19
 200c034:	18800003 	ldbu	r2,0(r3)
 200c038:	1080020c 	andi	r2,r2,8
 200c03c:	103ffa1e 	bne	r2,zero,200c028 <_strtoll_r+0x4c>
 200c040:	00800b44 	movi	r2,45
 200c044:	98808826 	beq	r19,r2,200c268 <_strtoll_r+0x28c>
 200c048:	00800ac4 	movi	r2,43
 200c04c:	98808326 	beq	r19,r2,200c25c <_strtoll_r+0x280>
 200c050:	d8000115 	stw	zero,4(sp)
 200c054:	b807003a 	cmpeq	r3,r23,zero
 200c058:	18005f1e 	bne	r3,zero,200c1d8 <_strtoll_r+0x1fc>
 200c05c:	00800404 	movi	r2,16
 200c060:	b8805d26 	beq	r23,r2,200c1d8 <_strtoll_r+0x1fc>
 200c064:	b82dd7fa 	srai	r22,r23,31
 200c068:	b82b883a 	mov	r21,r23
 200c06c:	d8c00117 	ldw	r3,4(sp)
 200c070:	1806c03a 	cmpne	r3,r3,zero
 200c074:	d8c00515 	stw	r3,20(sp)
 200c078:	1800631e 	bne	r3,zero,200c208 <_strtoll_r+0x22c>
 200c07c:	043fffc4 	movi	r16,-1
 200c080:	04600034 	movhi	r17,32768
 200c084:	8c7fffc4 	addi	r17,r17,-1
 200c088:	880b883a 	mov	r5,r17
 200c08c:	8009883a 	mov	r4,r16
 200c090:	a80d883a 	mov	r6,r21
 200c094:	b00f883a 	mov	r7,r22
 200c098:	200dfa40 	call	200dfa4 <__umoddi3>
 200c09c:	880b883a 	mov	r5,r17
 200c0a0:	8009883a 	mov	r4,r16
 200c0a4:	b00f883a 	mov	r7,r22
 200c0a8:	a80d883a 	mov	r6,r21
 200c0ac:	d8800015 	stw	r2,0(sp)
 200c0b0:	200d9380 	call	200d938 <__udivdi3>
 200c0b4:	1023883a 	mov	r17,r2
 200c0b8:	e4c5883a 	add	r2,fp,r19
 200c0bc:	11000003 	ldbu	r4,0(r2)
 200c0c0:	1825883a 	mov	r18,r3
 200c0c4:	0015883a 	mov	r10,zero
 200c0c8:	20c0010c 	andi	r3,r4,4
 200c0cc:	0017883a 	mov	r11,zero
 200c0d0:	000f883a 	mov	r7,zero
 200c0d4:	18001a26 	beq	r3,zero,200c140 <_strtoll_r+0x164>
 200c0d8:	9c3ff404 	addi	r16,r19,-48
 200c0dc:	85c0200e 	bge	r16,r23,200c160 <_strtoll_r+0x184>
 200c0e0:	38003b16 	blt	r7,zero,200c1d0 <_strtoll_r+0x1f4>
 200c0e4:	92c03a36 	bltu	r18,r11,200c1d0 <_strtoll_r+0x1f4>
 200c0e8:	5c803826 	beq	r11,r18,200c1cc <_strtoll_r+0x1f0>
 200c0ec:	54404c26 	beq	r10,r17,200c220 <_strtoll_r+0x244>
 200c0f0:	580b883a 	mov	r5,r11
 200c0f4:	5009883a 	mov	r4,r10
 200c0f8:	a80d883a 	mov	r6,r21
 200c0fc:	b00f883a 	mov	r7,r22
 200c100:	200d7700 	call	200d770 <__muldi3>
 200c104:	8013d7fa 	srai	r9,r16,31
 200c108:	100d883a 	mov	r6,r2
 200c10c:	1405883a 	add	r2,r2,r16
 200c110:	118d803a 	cmpltu	r6,r2,r6
 200c114:	1a47883a 	add	r3,r3,r9
 200c118:	30cd883a 	add	r6,r6,r3
 200c11c:	1015883a 	mov	r10,r2
 200c120:	3017883a 	mov	r11,r6
 200c124:	01c00044 	movi	r7,1
 200c128:	a4c00007 	ldb	r19,0(r20)
 200c12c:	a5000044 	addi	r20,r20,1
 200c130:	e4c5883a 	add	r2,fp,r19
 200c134:	11000003 	ldbu	r4,0(r2)
 200c138:	20c0010c 	andi	r3,r4,4
 200c13c:	183fe61e 	bne	r3,zero,200c0d8 <_strtoll_r+0xfc>
 200c140:	208000cc 	andi	r2,r4,3
 200c144:	10000626 	beq	r2,zero,200c160 <_strtoll_r+0x184>
 200c148:	2080004c 	andi	r2,r4,1
 200c14c:	1005003a 	cmpeq	r2,r2,zero
 200c150:	1000301e 	bne	r2,zero,200c214 <_strtoll_r+0x238>
 200c154:	02000dc4 	movi	r8,55
 200c158:	9a21c83a 	sub	r16,r19,r8
 200c15c:	85ffe016 	blt	r16,r23,200c0e0 <_strtoll_r+0x104>
 200c160:	38004616 	blt	r7,zero,200c27c <_strtoll_r+0x2a0>
 200c164:	d8800517 	ldw	r2,20(sp)
 200c168:	1000341e 	bne	r2,zero,200c23c <_strtoll_r+0x260>
 200c16c:	500b883a 	mov	r5,r10
 200c170:	580d883a 	mov	r6,r11
 200c174:	d8c00417 	ldw	r3,16(sp)
 200c178:	18000626 	beq	r3,zero,200c194 <_strtoll_r+0x1b8>
 200c17c:	38000226 	beq	r7,zero,200c188 <_strtoll_r+0x1ac>
 200c180:	a53fffc4 	addi	r20,r20,-1
 200c184:	dd000315 	stw	r20,12(sp)
 200c188:	d8c00317 	ldw	r3,12(sp)
 200c18c:	d8800417 	ldw	r2,16(sp)
 200c190:	10c00015 	stw	r3,0(r2)
 200c194:	2805883a 	mov	r2,r5
 200c198:	3007883a 	mov	r3,r6
 200c19c:	dfc00f17 	ldw	ra,60(sp)
 200c1a0:	df000e17 	ldw	fp,56(sp)
 200c1a4:	ddc00d17 	ldw	r23,52(sp)
 200c1a8:	dd800c17 	ldw	r22,48(sp)
 200c1ac:	dd400b17 	ldw	r21,44(sp)
 200c1b0:	dd000a17 	ldw	r20,40(sp)
 200c1b4:	dcc00917 	ldw	r19,36(sp)
 200c1b8:	dc800817 	ldw	r18,32(sp)
 200c1bc:	dc400717 	ldw	r17,28(sp)
 200c1c0:	dc000617 	ldw	r16,24(sp)
 200c1c4:	dec01004 	addi	sp,sp,64
 200c1c8:	f800283a 	ret
 200c1cc:	8abfc72e 	bgeu	r17,r10,200c0ec <_strtoll_r+0x110>
 200c1d0:	01ffffc4 	movi	r7,-1
 200c1d4:	003fd406 	br	200c128 <_strtoll_r+0x14c>
 200c1d8:	00800c04 	movi	r2,48
 200c1dc:	98803226 	beq	r19,r2,200c2a8 <_strtoll_r+0x2cc>
 200c1e0:	183fa026 	beq	r3,zero,200c064 <_strtoll_r+0x88>
 200c1e4:	00800c04 	movi	r2,48
 200c1e8:	98803e26 	beq	r19,r2,200c2e4 <_strtoll_r+0x308>
 200c1ec:	d8c00117 	ldw	r3,4(sp)
 200c1f0:	05c00284 	movi	r23,10
 200c1f4:	b82b883a 	mov	r21,r23
 200c1f8:	1806c03a 	cmpne	r3,r3,zero
 200c1fc:	002d883a 	mov	r22,zero
 200c200:	d8c00515 	stw	r3,20(sp)
 200c204:	183f9d26 	beq	r3,zero,200c07c <_strtoll_r+0xa0>
 200c208:	0021883a 	mov	r16,zero
 200c20c:	04600034 	movhi	r17,32768
 200c210:	003f9d06 	br	200c088 <_strtoll_r+0xac>
 200c214:	020015c4 	movi	r8,87
 200c218:	9a21c83a 	sub	r16,r19,r8
 200c21c:	003fcf06 	br	200c15c <_strtoll_r+0x180>
 200c220:	5cbfb31e 	bne	r11,r18,200c0f0 <_strtoll_r+0x114>
 200c224:	d8800017 	ldw	r2,0(sp)
 200c228:	143fb10e 	bge	r2,r16,200c0f0 <_strtoll_r+0x114>
 200c22c:	8815883a 	mov	r10,r17
 200c230:	9017883a 	mov	r11,r18
 200c234:	01ffffc4 	movi	r7,-1
 200c238:	003fbb06 	br	200c128 <_strtoll_r+0x14c>
 200c23c:	0009883a 	mov	r4,zero
 200c240:	2285c83a 	sub	r2,r4,r10
 200c244:	2089803a 	cmpltu	r4,r4,r2
 200c248:	02c7c83a 	sub	r3,zero,r11
 200c24c:	1909c83a 	sub	r4,r3,r4
 200c250:	100b883a 	mov	r5,r2
 200c254:	200d883a 	mov	r6,r4
 200c258:	003fc606 	br	200c174 <_strtoll_r+0x198>
 200c25c:	a4c00007 	ldb	r19,0(r20)
 200c260:	a5000044 	addi	r20,r20,1
 200c264:	003f7a06 	br	200c050 <_strtoll_r+0x74>
 200c268:	a4c00007 	ldb	r19,0(r20)
 200c26c:	00800044 	movi	r2,1
 200c270:	a5000044 	addi	r20,r20,1
 200c274:	d8800115 	stw	r2,4(sp)
 200c278:	003f7606 	br	200c054 <_strtoll_r+0x78>
 200c27c:	d8c00117 	ldw	r3,4(sp)
 200c280:	1805003a 	cmpeq	r2,r3,zero
 200c284:	1000131e 	bne	r2,zero,200c2d4 <_strtoll_r+0x2f8>
 200c288:	0005883a 	mov	r2,zero
 200c28c:	00e00034 	movhi	r3,32768
 200c290:	100b883a 	mov	r5,r2
 200c294:	180d883a 	mov	r6,r3
 200c298:	d8c00217 	ldw	r3,8(sp)
 200c29c:	00800884 	movi	r2,34
 200c2a0:	18800015 	stw	r2,0(r3)
 200c2a4:	003fb306 	br	200c174 <_strtoll_r+0x198>
 200c2a8:	a1000007 	ldb	r4,0(r20)
 200c2ac:	00801e04 	movi	r2,120
 200c2b0:	20800226 	beq	r4,r2,200c2bc <_strtoll_r+0x2e0>
 200c2b4:	00801604 	movi	r2,88
 200c2b8:	20bfc91e 	bne	r4,r2,200c1e0 <_strtoll_r+0x204>
 200c2bc:	a4c00047 	ldb	r19,1(r20)
 200c2c0:	05c00404 	movi	r23,16
 200c2c4:	b82b883a 	mov	r21,r23
 200c2c8:	a5000084 	addi	r20,r20,2
 200c2cc:	002d883a 	mov	r22,zero
 200c2d0:	003f6606 	br	200c06c <_strtoll_r+0x90>
 200c2d4:	017fffc4 	movi	r5,-1
 200c2d8:	01a00034 	movhi	r6,32768
 200c2dc:	31bfffc4 	addi	r6,r6,-1
 200c2e0:	003fed06 	br	200c298 <_strtoll_r+0x2bc>
 200c2e4:	05c00204 	movi	r23,8
 200c2e8:	b82b883a 	mov	r21,r23
 200c2ec:	002d883a 	mov	r22,zero
 200c2f0:	003f5e06 	br	200c06c <_strtoll_r+0x90>

0200c2f4 <_strtoul_r>:
 200c2f4:	defff404 	addi	sp,sp,-48
 200c2f8:	00808074 	movhi	r2,513
 200c2fc:	10968d04 	addi	r2,r2,23092
 200c300:	dd000615 	stw	r20,24(sp)
 200c304:	15000017 	ldw	r20,0(r2)
 200c308:	df000a15 	stw	fp,40(sp)
 200c30c:	ddc00915 	stw	r23,36(sp)
 200c310:	dc800415 	stw	r18,16(sp)
 200c314:	dc400315 	stw	r17,12(sp)
 200c318:	dfc00b15 	stw	ra,44(sp)
 200c31c:	dd800815 	stw	r22,32(sp)
 200c320:	dd400715 	stw	r21,28(sp)
 200c324:	dcc00515 	stw	r19,20(sp)
 200c328:	dc000215 	stw	r16,8(sp)
 200c32c:	282f883a 	mov	r23,r5
 200c330:	d9000115 	stw	r4,4(sp)
 200c334:	3039883a 	mov	fp,r6
 200c338:	3825883a 	mov	r18,r7
 200c33c:	2823883a 	mov	r17,r5
 200c340:	8c000007 	ldb	r16,0(r17)
 200c344:	8c400044 	addi	r17,r17,1
 200c348:	a407883a 	add	r3,r20,r16
 200c34c:	18800003 	ldbu	r2,0(r3)
 200c350:	1080020c 	andi	r2,r2,8
 200c354:	103ffa1e 	bne	r2,zero,200c340 <_strtoul_r+0x4c>
 200c358:	00800b44 	movi	r2,45
 200c35c:	80805826 	beq	r16,r2,200c4c0 <_strtoul_r+0x1cc>
 200c360:	00800ac4 	movi	r2,43
 200c364:	80805326 	beq	r16,r2,200c4b4 <_strtoul_r+0x1c0>
 200c368:	d8000015 	stw	zero,0(sp)
 200c36c:	9007003a 	cmpeq	r3,r18,zero
 200c370:	18003d1e 	bne	r3,zero,200c468 <_strtoul_r+0x174>
 200c374:	00800404 	movi	r2,16
 200c378:	90803b26 	beq	r18,r2,200c468 <_strtoul_r+0x174>
 200c37c:	013fffc4 	movi	r4,-1
 200c380:	900b883a 	mov	r5,r18
 200c384:	200fad00 	call	200fad0 <__udivsi3>
 200c388:	013fffc4 	movi	r4,-1
 200c38c:	900b883a 	mov	r5,r18
 200c390:	1027883a 	mov	r19,r2
 200c394:	200fad80 	call	200fad8 <__umodsi3>
 200c398:	102d883a 	mov	r22,r2
 200c39c:	902b883a 	mov	r21,r18
 200c3a0:	a405883a 	add	r2,r20,r16
 200c3a4:	11400003 	ldbu	r5,0(r2)
 200c3a8:	0009883a 	mov	r4,zero
 200c3ac:	000d883a 	mov	r6,zero
 200c3b0:	28c0010c 	andi	r3,r5,4
 200c3b4:	18000f26 	beq	r3,zero,200c3f4 <_strtoul_r+0x100>
 200c3b8:	843ff404 	addi	r16,r16,-48
 200c3bc:	8480150e 	bge	r16,r18,200c414 <_strtoul_r+0x120>
 200c3c0:	30003516 	blt	r6,zero,200c498 <_strtoul_r+0x1a4>
 200c3c4:	99003436 	bltu	r19,r4,200c498 <_strtoul_r+0x1a4>
 200c3c8:	24c03226 	beq	r4,r19,200c494 <_strtoul_r+0x1a0>
 200c3cc:	a80b883a 	mov	r5,r21
 200c3d0:	2000abc0 	call	2000abc <__mulsi3>
 200c3d4:	1409883a 	add	r4,r2,r16
 200c3d8:	01800044 	movi	r6,1
 200c3dc:	8c000007 	ldb	r16,0(r17)
 200c3e0:	8c400044 	addi	r17,r17,1
 200c3e4:	a405883a 	add	r2,r20,r16
 200c3e8:	11400003 	ldbu	r5,0(r2)
 200c3ec:	28c0010c 	andi	r3,r5,4
 200c3f0:	183ff11e 	bne	r3,zero,200c3b8 <_strtoul_r+0xc4>
 200c3f4:	288000cc 	andi	r2,r5,3
 200c3f8:	10000626 	beq	r2,zero,200c414 <_strtoul_r+0x120>
 200c3fc:	2880004c 	andi	r2,r5,1
 200c400:	1005003a 	cmpeq	r2,r2,zero
 200c404:	1000261e 	bne	r2,zero,200c4a0 <_strtoul_r+0x1ac>
 200c408:	00800dc4 	movi	r2,55
 200c40c:	80a1c83a 	sub	r16,r16,r2
 200c410:	84bfeb16 	blt	r16,r18,200c3c0 <_strtoul_r+0xcc>
 200c414:	3000420e 	bge	r6,zero,200c520 <_strtoul_r+0x22c>
 200c418:	d8c00117 	ldw	r3,4(sp)
 200c41c:	00800884 	movi	r2,34
 200c420:	013fffc4 	movi	r4,-1
 200c424:	18800015 	stw	r2,0(r3)
 200c428:	e0000226 	beq	fp,zero,200c434 <_strtoul_r+0x140>
 200c42c:	30001f1e 	bne	r6,zero,200c4ac <_strtoul_r+0x1b8>
 200c430:	e5c00015 	stw	r23,0(fp)
 200c434:	2005883a 	mov	r2,r4
 200c438:	dfc00b17 	ldw	ra,44(sp)
 200c43c:	df000a17 	ldw	fp,40(sp)
 200c440:	ddc00917 	ldw	r23,36(sp)
 200c444:	dd800817 	ldw	r22,32(sp)
 200c448:	dd400717 	ldw	r21,28(sp)
 200c44c:	dd000617 	ldw	r20,24(sp)
 200c450:	dcc00517 	ldw	r19,20(sp)
 200c454:	dc800417 	ldw	r18,16(sp)
 200c458:	dc400317 	ldw	r17,12(sp)
 200c45c:	dc000217 	ldw	r16,8(sp)
 200c460:	dec00c04 	addi	sp,sp,48
 200c464:	f800283a 	ret
 200c468:	00800c04 	movi	r2,48
 200c46c:	80801926 	beq	r16,r2,200c4d4 <_strtoul_r+0x1e0>
 200c470:	183fc226 	beq	r3,zero,200c37c <_strtoul_r+0x88>
 200c474:	00800c04 	movi	r2,48
 200c478:	80802326 	beq	r16,r2,200c508 <_strtoul_r+0x214>
 200c47c:	04800284 	movi	r18,10
 200c480:	902b883a 	mov	r21,r18
 200c484:	04c666b4 	movhi	r19,6554
 200c488:	9ce66644 	addi	r19,r19,-26215
 200c48c:	05800144 	movi	r22,5
 200c490:	003fc306 	br	200c3a0 <_strtoul_r+0xac>
 200c494:	b43fcd0e 	bge	r22,r16,200c3cc <_strtoul_r+0xd8>
 200c498:	01bfffc4 	movi	r6,-1
 200c49c:	003fcf06 	br	200c3dc <_strtoul_r+0xe8>
 200c4a0:	008015c4 	movi	r2,87
 200c4a4:	80a1c83a 	sub	r16,r16,r2
 200c4a8:	003fd906 	br	200c410 <_strtoul_r+0x11c>
 200c4ac:	8dffffc4 	addi	r23,r17,-1
 200c4b0:	003fdf06 	br	200c430 <_strtoul_r+0x13c>
 200c4b4:	8c000007 	ldb	r16,0(r17)
 200c4b8:	8c400044 	addi	r17,r17,1
 200c4bc:	003faa06 	br	200c368 <_strtoul_r+0x74>
 200c4c0:	8c000007 	ldb	r16,0(r17)
 200c4c4:	00800044 	movi	r2,1
 200c4c8:	8c400044 	addi	r17,r17,1
 200c4cc:	d8800015 	stw	r2,0(sp)
 200c4d0:	003fa606 	br	200c36c <_strtoul_r+0x78>
 200c4d4:	89000007 	ldb	r4,0(r17)
 200c4d8:	00801e04 	movi	r2,120
 200c4dc:	20800226 	beq	r4,r2,200c4e8 <_strtoul_r+0x1f4>
 200c4e0:	00801604 	movi	r2,88
 200c4e4:	20bfe21e 	bne	r4,r2,200c470 <_strtoul_r+0x17c>
 200c4e8:	8c000047 	ldb	r16,1(r17)
 200c4ec:	04800404 	movi	r18,16
 200c4f0:	8c400084 	addi	r17,r17,2
 200c4f4:	902b883a 	mov	r21,r18
 200c4f8:	04c40034 	movhi	r19,4096
 200c4fc:	9cffffc4 	addi	r19,r19,-1
 200c500:	058003c4 	movi	r22,15
 200c504:	003fa606 	br	200c3a0 <_strtoul_r+0xac>
 200c508:	04800204 	movi	r18,8
 200c50c:	902b883a 	mov	r21,r18
 200c510:	04c80034 	movhi	r19,8192
 200c514:	9cffffc4 	addi	r19,r19,-1
 200c518:	058001c4 	movi	r22,7
 200c51c:	003fa006 	br	200c3a0 <_strtoul_r+0xac>
 200c520:	d8c00017 	ldw	r3,0(sp)
 200c524:	1805003a 	cmpeq	r2,r3,zero
 200c528:	103fbf1e 	bne	r2,zero,200c428 <_strtoul_r+0x134>
 200c52c:	0109c83a 	sub	r4,zero,r4
 200c530:	003fbd06 	br	200c428 <_strtoul_r+0x134>

0200c534 <strtoul>:
 200c534:	00808074 	movhi	r2,513
 200c538:	10968904 	addi	r2,r2,23076
 200c53c:	2013883a 	mov	r9,r4
 200c540:	11000017 	ldw	r4,0(r2)
 200c544:	2805883a 	mov	r2,r5
 200c548:	300f883a 	mov	r7,r6
 200c54c:	480b883a 	mov	r5,r9
 200c550:	100d883a 	mov	r6,r2
 200c554:	200c2f41 	jmpi	200c2f4 <_strtoul_r>

0200c558 <_strtoull_r>:
 200c558:	defff104 	addi	sp,sp,-60
 200c55c:	00808074 	movhi	r2,513
 200c560:	10968d04 	addi	r2,r2,23092
 200c564:	df000d15 	stw	fp,52(sp)
 200c568:	17000017 	ldw	fp,0(r2)
 200c56c:	ddc00c15 	stw	r23,48(sp)
 200c570:	dcc00815 	stw	r19,32(sp)
 200c574:	dfc00e15 	stw	ra,56(sp)
 200c578:	dd800b15 	stw	r22,44(sp)
 200c57c:	dd400a15 	stw	r21,40(sp)
 200c580:	dd000915 	stw	r20,36(sp)
 200c584:	dc800715 	stw	r18,28(sp)
 200c588:	dc400615 	stw	r17,24(sp)
 200c58c:	dc000515 	stw	r16,20(sp)
 200c590:	d9400215 	stw	r5,8(sp)
 200c594:	d9000115 	stw	r4,4(sp)
 200c598:	d9800315 	stw	r6,12(sp)
 200c59c:	382f883a 	mov	r23,r7
 200c5a0:	2827883a 	mov	r19,r5
 200c5a4:	9d000007 	ldb	r20,0(r19)
 200c5a8:	9cc00044 	addi	r19,r19,1
 200c5ac:	e507883a 	add	r3,fp,r20
 200c5b0:	18800003 	ldbu	r2,0(r3)
 200c5b4:	1080020c 	andi	r2,r2,8
 200c5b8:	103ffa1e 	bne	r2,zero,200c5a4 <_strtoull_r+0x4c>
 200c5bc:	00800b44 	movi	r2,45
 200c5c0:	a0807a26 	beq	r20,r2,200c7ac <_strtoull_r+0x254>
 200c5c4:	00800ac4 	movi	r2,43
 200c5c8:	a0807526 	beq	r20,r2,200c7a0 <_strtoull_r+0x248>
 200c5cc:	d8000015 	stw	zero,0(sp)
 200c5d0:	b807003a 	cmpeq	r3,r23,zero
 200c5d4:	18005a1e 	bne	r3,zero,200c740 <_strtoull_r+0x1e8>
 200c5d8:	00800404 	movi	r2,16
 200c5dc:	b8805826 	beq	r23,r2,200c740 <_strtoull_r+0x1e8>
 200c5e0:	b82dd7fa 	srai	r22,r23,31
 200c5e4:	043fffc4 	movi	r16,-1
 200c5e8:	8009883a 	mov	r4,r16
 200c5ec:	800b883a 	mov	r5,r16
 200c5f0:	b80d883a 	mov	r6,r23
 200c5f4:	b00f883a 	mov	r7,r22
 200c5f8:	200d9380 	call	200d938 <__udivdi3>
 200c5fc:	8009883a 	mov	r4,r16
 200c600:	800b883a 	mov	r5,r16
 200c604:	b80d883a 	mov	r6,r23
 200c608:	b00f883a 	mov	r7,r22
 200c60c:	1023883a 	mov	r17,r2
 200c610:	1825883a 	mov	r18,r3
 200c614:	200dfa40 	call	200dfa4 <__umoddi3>
 200c618:	b82b883a 	mov	r21,r23
 200c61c:	1019883a 	mov	r12,r2
 200c620:	e505883a 	add	r2,fp,r20
 200c624:	11000003 	ldbu	r4,0(r2)
 200c628:	0015883a 	mov	r10,zero
 200c62c:	0017883a 	mov	r11,zero
 200c630:	20c0010c 	andi	r3,r4,4
 200c634:	000d883a 	mov	r6,zero
 200c638:	18001c26 	beq	r3,zero,200c6ac <_strtoull_r+0x154>
 200c63c:	a43ff404 	addi	r16,r20,-48
 200c640:	85c0220e 	bge	r16,r23,200c6cc <_strtoull_r+0x174>
 200c644:	30003c16 	blt	r6,zero,200c738 <_strtoull_r+0x1e0>
 200c648:	92c03b36 	bltu	r18,r11,200c738 <_strtoull_r+0x1e0>
 200c64c:	5c803926 	beq	r11,r18,200c734 <_strtoull_r+0x1dc>
 200c650:	54404c26 	beq	r10,r17,200c784 <_strtoull_r+0x22c>
 200c654:	580b883a 	mov	r5,r11
 200c658:	5009883a 	mov	r4,r10
 200c65c:	a80d883a 	mov	r6,r21
 200c660:	b00f883a 	mov	r7,r22
 200c664:	db000415 	stw	r12,16(sp)
 200c668:	200d7700 	call	200d770 <__muldi3>
 200c66c:	8013d7fa 	srai	r9,r16,31
 200c670:	100d883a 	mov	r6,r2
 200c674:	1405883a 	add	r2,r2,r16
 200c678:	118d803a 	cmpltu	r6,r2,r6
 200c67c:	1a47883a 	add	r3,r3,r9
 200c680:	db000417 	ldw	r12,16(sp)
 200c684:	30cd883a 	add	r6,r6,r3
 200c688:	3017883a 	mov	r11,r6
 200c68c:	1015883a 	mov	r10,r2
 200c690:	01800044 	movi	r6,1
 200c694:	9d000007 	ldb	r20,0(r19)
 200c698:	9cc00044 	addi	r19,r19,1
 200c69c:	e505883a 	add	r2,fp,r20
 200c6a0:	11000003 	ldbu	r4,0(r2)
 200c6a4:	20c0010c 	andi	r3,r4,4
 200c6a8:	183fe41e 	bne	r3,zero,200c63c <_strtoull_r+0xe4>
 200c6ac:	208000cc 	andi	r2,r4,3
 200c6b0:	10000626 	beq	r2,zero,200c6cc <_strtoull_r+0x174>
 200c6b4:	2080004c 	andi	r2,r4,1
 200c6b8:	1005003a 	cmpeq	r2,r2,zero
 200c6bc:	10002e1e 	bne	r2,zero,200c778 <_strtoull_r+0x220>
 200c6c0:	02000dc4 	movi	r8,55
 200c6c4:	a221c83a 	sub	r16,r20,r8
 200c6c8:	85ffde16 	blt	r16,r23,200c644 <_strtoull_r+0xec>
 200c6cc:	3000530e 	bge	r6,zero,200c81c <_strtoull_r+0x2c4>
 200c6d0:	d8c00117 	ldw	r3,4(sp)
 200c6d4:	02bfffc4 	movi	r10,-1
 200c6d8:	00800884 	movi	r2,34
 200c6dc:	5017883a 	mov	r11,r10
 200c6e0:	18800015 	stw	r2,0(r3)
 200c6e4:	d8800317 	ldw	r2,12(sp)
 200c6e8:	10000426 	beq	r2,zero,200c6fc <_strtoull_r+0x1a4>
 200c6ec:	3000291e 	bne	r6,zero,200c794 <_strtoull_r+0x23c>
 200c6f0:	d8800217 	ldw	r2,8(sp)
 200c6f4:	d8c00317 	ldw	r3,12(sp)
 200c6f8:	18800015 	stw	r2,0(r3)
 200c6fc:	5005883a 	mov	r2,r10
 200c700:	5807883a 	mov	r3,r11
 200c704:	dfc00e17 	ldw	ra,56(sp)
 200c708:	df000d17 	ldw	fp,52(sp)
 200c70c:	ddc00c17 	ldw	r23,48(sp)
 200c710:	dd800b17 	ldw	r22,44(sp)
 200c714:	dd400a17 	ldw	r21,40(sp)
 200c718:	dd000917 	ldw	r20,36(sp)
 200c71c:	dcc00817 	ldw	r19,32(sp)
 200c720:	dc800717 	ldw	r18,28(sp)
 200c724:	dc400617 	ldw	r17,24(sp)
 200c728:	dc000517 	ldw	r16,20(sp)
 200c72c:	dec00f04 	addi	sp,sp,60
 200c730:	f800283a 	ret
 200c734:	8abfc62e 	bgeu	r17,r10,200c650 <_strtoull_r+0xf8>
 200c738:	01bfffc4 	movi	r6,-1
 200c73c:	003fd506 	br	200c694 <_strtoull_r+0x13c>
 200c740:	00800c04 	movi	r2,48
 200c744:	a0801e26 	beq	r20,r2,200c7c0 <_strtoull_r+0x268>
 200c748:	183fa526 	beq	r3,zero,200c5e0 <_strtoull_r+0x88>
 200c74c:	00800c04 	movi	r2,48
 200c750:	a0802a26 	beq	r20,r2,200c7fc <_strtoull_r+0x2a4>
 200c754:	05c00284 	movi	r23,10
 200c758:	b82b883a 	mov	r21,r23
 200c75c:	046666b4 	movhi	r17,39322
 200c760:	8c666644 	addi	r17,r17,-26215
 200c764:	002d883a 	mov	r22,zero
 200c768:	048666b4 	movhi	r18,6554
 200c76c:	94a66644 	addi	r18,r18,-26215
 200c770:	03000144 	movi	r12,5
 200c774:	003faa06 	br	200c620 <_strtoull_r+0xc8>
 200c778:	020015c4 	movi	r8,87
 200c77c:	a221c83a 	sub	r16,r20,r8
 200c780:	003fd106 	br	200c6c8 <_strtoull_r+0x170>
 200c784:	5cbfb31e 	bne	r11,r18,200c654 <_strtoull_r+0xfc>
 200c788:	643fb20e 	bge	r12,r16,200c654 <_strtoull_r+0xfc>
 200c78c:	01bfffc4 	movi	r6,-1
 200c790:	003fc006 	br	200c694 <_strtoull_r+0x13c>
 200c794:	9cffffc4 	addi	r19,r19,-1
 200c798:	dcc00215 	stw	r19,8(sp)
 200c79c:	003fd406 	br	200c6f0 <_strtoull_r+0x198>
 200c7a0:	9d000007 	ldb	r20,0(r19)
 200c7a4:	9cc00044 	addi	r19,r19,1
 200c7a8:	003f8806 	br	200c5cc <_strtoull_r+0x74>
 200c7ac:	9d000007 	ldb	r20,0(r19)
 200c7b0:	00800044 	movi	r2,1
 200c7b4:	9cc00044 	addi	r19,r19,1
 200c7b8:	d8800015 	stw	r2,0(sp)
 200c7bc:	003f8406 	br	200c5d0 <_strtoull_r+0x78>
 200c7c0:	99000007 	ldb	r4,0(r19)
 200c7c4:	00801e04 	movi	r2,120
 200c7c8:	20800226 	beq	r4,r2,200c7d4 <_strtoull_r+0x27c>
 200c7cc:	00801604 	movi	r2,88
 200c7d0:	20bfdd1e 	bne	r4,r2,200c748 <_strtoull_r+0x1f0>
 200c7d4:	9d000047 	ldb	r20,1(r19)
 200c7d8:	05c00404 	movi	r23,16
 200c7dc:	b82b883a 	mov	r21,r23
 200c7e0:	047fffc4 	movi	r17,-1
 200c7e4:	9cc00084 	addi	r19,r19,2
 200c7e8:	002d883a 	mov	r22,zero
 200c7ec:	04840034 	movhi	r18,4096
 200c7f0:	94bfffc4 	addi	r18,r18,-1
 200c7f4:	030003c4 	movi	r12,15
 200c7f8:	003f8906 	br	200c620 <_strtoull_r+0xc8>
 200c7fc:	05c00204 	movi	r23,8
 200c800:	b82b883a 	mov	r21,r23
 200c804:	047fffc4 	movi	r17,-1
 200c808:	002d883a 	mov	r22,zero
 200c80c:	04880034 	movhi	r18,8192
 200c810:	94bfffc4 	addi	r18,r18,-1
 200c814:	030001c4 	movi	r12,7
 200c818:	003f8106 	br	200c620 <_strtoull_r+0xc8>
 200c81c:	d8c00017 	ldw	r3,0(sp)
 200c820:	1805003a 	cmpeq	r2,r3,zero
 200c824:	103faf1e 	bne	r2,zero,200c6e4 <_strtoull_r+0x18c>
 200c828:	0009883a 	mov	r4,zero
 200c82c:	2285c83a 	sub	r2,r4,r10
 200c830:	02c7c83a 	sub	r3,zero,r11
 200c834:	2089803a 	cmpltu	r4,r4,r2
 200c838:	1909c83a 	sub	r4,r3,r4
 200c83c:	1015883a 	mov	r10,r2
 200c840:	2017883a 	mov	r11,r4
 200c844:	003fa706 	br	200c6e4 <_strtoull_r+0x18c>

0200c848 <__submore>:
 200c848:	defffa04 	addi	sp,sp,-24
 200c84c:	28c00c17 	ldw	r3,48(r5)
 200c850:	dc800215 	stw	r18,8(sp)
 200c854:	2825883a 	mov	r18,r5
 200c858:	dc000015 	stw	r16,0(sp)
 200c85c:	90801004 	addi	r2,r18,64
 200c860:	04010004 	movi	r16,1024
 200c864:	dfc00515 	stw	ra,20(sp)
 200c868:	dd000415 	stw	r20,16(sp)
 200c86c:	dcc00315 	stw	r19,12(sp)
 200c870:	dc400115 	stw	r17,4(sp)
 200c874:	800b883a 	mov	r5,r16
 200c878:	18801b26 	beq	r3,r2,200c8e8 <__submore+0xa0>
 200c87c:	94400d17 	ldw	r17,52(r18)
 200c880:	180b883a 	mov	r5,r3
 200c884:	8c69883a 	add	r20,r17,r17
 200c888:	a00d883a 	mov	r6,r20
 200c88c:	2009d580 	call	2009d58 <_realloc_r>
 200c890:	1467883a 	add	r19,r2,r17
 200c894:	1021883a 	mov	r16,r2
 200c898:	880d883a 	mov	r6,r17
 200c89c:	9809883a 	mov	r4,r19
 200c8a0:	100b883a 	mov	r5,r2
 200c8a4:	10000e26 	beq	r2,zero,200c8e0 <__submore+0x98>
 200c8a8:	20029140 	call	2002914 <memcpy>
 200c8ac:	000d883a 	mov	r6,zero
 200c8b0:	95000d15 	stw	r20,52(r18)
 200c8b4:	94c00015 	stw	r19,0(r18)
 200c8b8:	94000c15 	stw	r16,48(r18)
 200c8bc:	3005883a 	mov	r2,r6
 200c8c0:	dfc00517 	ldw	ra,20(sp)
 200c8c4:	dd000417 	ldw	r20,16(sp)
 200c8c8:	dcc00317 	ldw	r19,12(sp)
 200c8cc:	dc800217 	ldw	r18,8(sp)
 200c8d0:	dc400117 	ldw	r17,4(sp)
 200c8d4:	dc000017 	ldw	r16,0(sp)
 200c8d8:	dec00604 	addi	sp,sp,24
 200c8dc:	f800283a 	ret
 200c8e0:	01bfffc4 	movi	r6,-1
 200c8e4:	003ff506 	br	200c8bc <__submore+0x74>
 200c8e8:	20021d40 	call	20021d4 <_malloc_r>
 200c8ec:	1009883a 	mov	r4,r2
 200c8f0:	1140ff44 	addi	r5,r2,1021
 200c8f4:	000d883a 	mov	r6,zero
 200c8f8:	103ff926 	beq	r2,zero,200c8e0 <__submore+0x98>
 200c8fc:	90801083 	ldbu	r2,66(r18)
 200c900:	94000d15 	stw	r16,52(r18)
 200c904:	91000c15 	stw	r4,48(r18)
 200c908:	28800085 	stb	r2,2(r5)
 200c90c:	90c01043 	ldbu	r3,65(r18)
 200c910:	28c00045 	stb	r3,1(r5)
 200c914:	90801003 	ldbu	r2,64(r18)
 200c918:	2080ff45 	stb	r2,1021(r4)
 200c91c:	91400015 	stw	r5,0(r18)
 200c920:	003fe606 	br	200c8bc <__submore+0x74>

0200c924 <_ungetc_r>:
 200c924:	defffc04 	addi	sp,sp,-16
 200c928:	00bfffc4 	movi	r2,-1
 200c92c:	dc400215 	stw	r17,8(sp)
 200c930:	dc000115 	stw	r16,4(sp)
 200c934:	dfc00315 	stw	ra,12(sp)
 200c938:	2821883a 	mov	r16,r5
 200c93c:	2023883a 	mov	r17,r4
 200c940:	28801826 	beq	r5,r2,200c9a4 <_ungetc_r+0x80>
 200c944:	20000226 	beq	r4,zero,200c950 <_ungetc_r+0x2c>
 200c948:	20800e17 	ldw	r2,56(r4)
 200c94c:	10001b26 	beq	r2,zero,200c9bc <_ungetc_r+0x98>
 200c950:	3100030b 	ldhu	r4,12(r6)
 200c954:	00bff7c4 	movi	r2,-33
 200c958:	2084703a 	and	r2,r4,r2
 200c95c:	117fffcc 	andi	r5,r2,65535
 200c960:	28c0010c 	andi	r3,r5,4
 200c964:	1009883a 	mov	r4,r2
 200c968:	3080030d 	sth	r2,12(r6)
 200c96c:	18003526 	beq	r3,zero,200ca44 <_ungetc_r+0x120>
 200c970:	30800c17 	ldw	r2,48(r6)
 200c974:	84003fcc 	andi	r16,r16,255
 200c978:	10001426 	beq	r2,zero,200c9cc <_ungetc_r+0xa8>
 200c97c:	30c00117 	ldw	r3,4(r6)
 200c980:	30800d17 	ldw	r2,52(r6)
 200c984:	1880380e 	bge	r3,r2,200ca68 <_ungetc_r+0x144>
 200c988:	30c00017 	ldw	r3,0(r6)
 200c98c:	19ffffc4 	addi	r7,r3,-1
 200c990:	31c00015 	stw	r7,0(r6)
 200c994:	1c3fffc5 	stb	r16,-1(r3)
 200c998:	30800117 	ldw	r2,4(r6)
 200c99c:	10800044 	addi	r2,r2,1
 200c9a0:	30800115 	stw	r2,4(r6)
 200c9a4:	8005883a 	mov	r2,r16
 200c9a8:	dfc00317 	ldw	ra,12(sp)
 200c9ac:	dc400217 	ldw	r17,8(sp)
 200c9b0:	dc000117 	ldw	r16,4(sp)
 200c9b4:	dec00404 	addi	sp,sp,16
 200c9b8:	f800283a 	ret
 200c9bc:	d9800015 	stw	r6,0(sp)
 200c9c0:	2000eb00 	call	2000eb0 <__sinit>
 200c9c4:	d9800017 	ldw	r6,0(sp)
 200c9c8:	003fe106 	br	200c950 <_ungetc_r+0x2c>
 200c9cc:	30800417 	ldw	r2,16(r6)
 200c9d0:	10002326 	beq	r2,zero,200ca60 <_ungetc_r+0x13c>
 200c9d4:	31c00017 	ldw	r7,0(r6)
 200c9d8:	11c0022e 	bgeu	r2,r7,200c9e4 <_ungetc_r+0xc0>
 200c9dc:	38bfffc3 	ldbu	r2,-1(r7)
 200c9e0:	80801226 	beq	r16,r2,200ca2c <_ungetc_r+0x108>
 200c9e4:	30c00117 	ldw	r3,4(r6)
 200c9e8:	00800044 	movi	r2,1
 200c9ec:	30800115 	stw	r2,4(r6)
 200c9f0:	008000c4 	movi	r2,3
 200c9f4:	31001004 	addi	r4,r6,64
 200c9f8:	31401084 	addi	r5,r6,66
 200c9fc:	30800d15 	stw	r2,52(r6)
 200ca00:	8005883a 	mov	r2,r16
 200ca04:	30c00f15 	stw	r3,60(r6)
 200ca08:	31c00e15 	stw	r7,56(r6)
 200ca0c:	31000c15 	stw	r4,48(r6)
 200ca10:	31400015 	stw	r5,0(r6)
 200ca14:	34001085 	stb	r16,66(r6)
 200ca18:	dfc00317 	ldw	ra,12(sp)
 200ca1c:	dc400217 	ldw	r17,8(sp)
 200ca20:	dc000117 	ldw	r16,4(sp)
 200ca24:	dec00404 	addi	sp,sp,16
 200ca28:	f800283a 	ret
 200ca2c:	30800117 	ldw	r2,4(r6)
 200ca30:	39ffffc4 	addi	r7,r7,-1
 200ca34:	31c00015 	stw	r7,0(r6)
 200ca38:	10800044 	addi	r2,r2,1
 200ca3c:	30800115 	stw	r2,4(r6)
 200ca40:	003fd806 	br	200c9a4 <_ungetc_r+0x80>
 200ca44:	2880040c 	andi	r2,r5,16
 200ca48:	10000d26 	beq	r2,zero,200ca80 <_ungetc_r+0x15c>
 200ca4c:	2880020c 	andi	r2,r5,8
 200ca50:	10000d1e 	bne	r2,zero,200ca88 <_ungetc_r+0x164>
 200ca54:	20800114 	ori	r2,r4,4
 200ca58:	3080030d 	sth	r2,12(r6)
 200ca5c:	003fc406 	br	200c970 <_ungetc_r+0x4c>
 200ca60:	31c00017 	ldw	r7,0(r6)
 200ca64:	003fdf06 	br	200c9e4 <_ungetc_r+0xc0>
 200ca68:	300b883a 	mov	r5,r6
 200ca6c:	8809883a 	mov	r4,r17
 200ca70:	d9800015 	stw	r6,0(sp)
 200ca74:	200c8480 	call	200c848 <__submore>
 200ca78:	d9800017 	ldw	r6,0(sp)
 200ca7c:	103fc226 	beq	r2,zero,200c988 <_ungetc_r+0x64>
 200ca80:	043fffc4 	movi	r16,-1
 200ca84:	003fc706 	br	200c9a4 <_ungetc_r+0x80>
 200ca88:	300b883a 	mov	r5,r6
 200ca8c:	8809883a 	mov	r4,r17
 200ca90:	d9800015 	stw	r6,0(sp)
 200ca94:	2000c180 	call	2000c18 <_fflush_r>
 200ca98:	d9800017 	ldw	r6,0(sp)
 200ca9c:	103ff81e 	bne	r2,zero,200ca80 <_ungetc_r+0x15c>
 200caa0:	3100030b 	ldhu	r4,12(r6)
 200caa4:	00bffdc4 	movi	r2,-9
 200caa8:	30000215 	stw	zero,8(r6)
 200caac:	2084703a 	and	r2,r4,r2
 200cab0:	1009883a 	mov	r4,r2
 200cab4:	3080030d 	sth	r2,12(r6)
 200cab8:	30000615 	stw	zero,24(r6)
 200cabc:	003fe506 	br	200ca54 <_ungetc_r+0x130>

0200cac0 <ungetc>:
 200cac0:	01808074 	movhi	r6,513
 200cac4:	31968904 	addi	r6,r6,23076
 200cac8:	2007883a 	mov	r3,r4
 200cacc:	31000017 	ldw	r4,0(r6)
 200cad0:	280d883a 	mov	r6,r5
 200cad4:	180b883a 	mov	r5,r3
 200cad8:	200c9241 	jmpi	200c924 <_ungetc_r>

0200cadc <_calloc_r>:
 200cadc:	defffe04 	addi	sp,sp,-8
 200cae0:	dc400015 	stw	r17,0(sp)
 200cae4:	2023883a 	mov	r17,r4
 200cae8:	2809883a 	mov	r4,r5
 200caec:	300b883a 	mov	r5,r6
 200caf0:	dfc00115 	stw	ra,4(sp)
 200caf4:	2000abc0 	call	2000abc <__mulsi3>
 200caf8:	100b883a 	mov	r5,r2
 200cafc:	8809883a 	mov	r4,r17
 200cb00:	20021d40 	call	20021d4 <_malloc_r>
 200cb04:	1023883a 	mov	r17,r2
 200cb08:	01c00904 	movi	r7,36
 200cb0c:	10000d26 	beq	r2,zero,200cb44 <_calloc_r+0x68>
 200cb10:	10ffff17 	ldw	r3,-4(r2)
 200cb14:	1009883a 	mov	r4,r2
 200cb18:	00bfff04 	movi	r2,-4
 200cb1c:	1886703a 	and	r3,r3,r2
 200cb20:	1887883a 	add	r3,r3,r2
 200cb24:	180d883a 	mov	r6,r3
 200cb28:	000b883a 	mov	r5,zero
 200cb2c:	38c01736 	bltu	r7,r3,200cb8c <_calloc_r+0xb0>
 200cb30:	008004c4 	movi	r2,19
 200cb34:	10c00836 	bltu	r2,r3,200cb58 <_calloc_r+0x7c>
 200cb38:	20000215 	stw	zero,8(r4)
 200cb3c:	20000015 	stw	zero,0(r4)
 200cb40:	20000115 	stw	zero,4(r4)
 200cb44:	8805883a 	mov	r2,r17
 200cb48:	dfc00117 	ldw	ra,4(sp)
 200cb4c:	dc400017 	ldw	r17,0(sp)
 200cb50:	dec00204 	addi	sp,sp,8
 200cb54:	f800283a 	ret
 200cb58:	008006c4 	movi	r2,27
 200cb5c:	88000015 	stw	zero,0(r17)
 200cb60:	88000115 	stw	zero,4(r17)
 200cb64:	89000204 	addi	r4,r17,8
 200cb68:	10fff32e 	bgeu	r2,r3,200cb38 <_calloc_r+0x5c>
 200cb6c:	88000215 	stw	zero,8(r17)
 200cb70:	88000315 	stw	zero,12(r17)
 200cb74:	89000404 	addi	r4,r17,16
 200cb78:	19ffef1e 	bne	r3,r7,200cb38 <_calloc_r+0x5c>
 200cb7c:	89000604 	addi	r4,r17,24
 200cb80:	88000415 	stw	zero,16(r17)
 200cb84:	88000515 	stw	zero,20(r17)
 200cb88:	003feb06 	br	200cb38 <_calloc_r+0x5c>
 200cb8c:	20029b40 	call	20029b4 <memset>
 200cb90:	8805883a 	mov	r2,r17
 200cb94:	dfc00117 	ldw	ra,4(sp)
 200cb98:	dc400017 	ldw	r17,0(sp)
 200cb9c:	dec00204 	addi	sp,sp,8
 200cba0:	f800283a 	ret

0200cba4 <htinit>:
 200cba4:	28800003 	ldbu	r2,0(r5)
 200cba8:	10000626 	beq	r2,zero,200cbc4 <htinit+0x20>
 200cbac:	1105883a 	add	r2,r2,r4
 200cbb0:	11800005 	stb	r6,0(r2)
 200cbb4:	28800043 	ldbu	r2,1(r5)
 200cbb8:	31800044 	addi	r6,r6,1
 200cbbc:	29400044 	addi	r5,r5,1
 200cbc0:	103ffa1e 	bne	r2,zero,200cbac <htinit+0x8>
 200cbc4:	f800283a 	ret

0200cbc8 <__hexdig_init>:
 200cbc8:	defffd04 	addi	sp,sp,-12
 200cbcc:	dc400015 	stw	r17,0(sp)
 200cbd0:	04408074 	movhi	r17,513
 200cbd4:	8c5d8104 	addi	r17,r17,30212
 200cbd8:	dcc00115 	stw	r19,4(sp)
 200cbdc:	8809883a 	mov	r4,r17
 200cbe0:	04c00684 	movi	r19,26
 200cbe4:	01408074 	movhi	r5,513
 200cbe8:	294f5404 	addi	r5,r5,15696
 200cbec:	01800404 	movi	r6,16
 200cbf0:	dfc00215 	stw	ra,8(sp)
 200cbf4:	200cba40 	call	200cba4 <htinit>
 200cbf8:	980d883a 	mov	r6,r19
 200cbfc:	8809883a 	mov	r4,r17
 200cc00:	01408074 	movhi	r5,513
 200cc04:	294f5704 	addi	r5,r5,15708
 200cc08:	200cba40 	call	200cba4 <htinit>
 200cc0c:	8809883a 	mov	r4,r17
 200cc10:	980d883a 	mov	r6,r19
 200cc14:	01408074 	movhi	r5,513
 200cc18:	294f5904 	addi	r5,r5,15716
 200cc1c:	dfc00217 	ldw	ra,8(sp)
 200cc20:	dcc00117 	ldw	r19,4(sp)
 200cc24:	dc400017 	ldw	r17,0(sp)
 200cc28:	dec00304 	addi	sp,sp,12
 200cc2c:	200cba41 	jmpi	200cba4 <htinit>

0200cc30 <rshift>:
 200cc30:	2807d17a 	srai	r3,r5,5
 200cc34:	20800417 	ldw	r2,16(r4)
 200cc38:	22400504 	addi	r9,r4,20
 200cc3c:	480f883a 	mov	r7,r9
 200cc40:	1880190e 	bge	r3,r2,200cca8 <rshift+0x78>
 200cc44:	1085883a 	add	r2,r2,r2
 200cc48:	18c7883a 	add	r3,r3,r3
 200cc4c:	1085883a 	add	r2,r2,r2
 200cc50:	18c7883a 	add	r3,r3,r3
 200cc54:	294007cc 	andi	r5,r5,31
 200cc58:	4891883a 	add	r8,r9,r2
 200cc5c:	48cd883a 	add	r6,r9,r3
 200cc60:	28001726 	beq	r5,zero,200ccc0 <rshift+0x90>
 200cc64:	30c00017 	ldw	r3,0(r6)
 200cc68:	00800804 	movi	r2,32
 200cc6c:	31800104 	addi	r6,r6,4
 200cc70:	1155c83a 	sub	r10,r2,r5
 200cc74:	1946d83a 	srl	r3,r3,r5
 200cc78:	3200092e 	bgeu	r6,r8,200cca0 <rshift+0x70>
 200cc7c:	30800017 	ldw	r2,0(r6)
 200cc80:	1284983a 	sll	r2,r2,r10
 200cc84:	10c4b03a 	or	r2,r2,r3
 200cc88:	38800015 	stw	r2,0(r7)
 200cc8c:	30c00017 	ldw	r3,0(r6)
 200cc90:	31800104 	addi	r6,r6,4
 200cc94:	39c00104 	addi	r7,r7,4
 200cc98:	1946d83a 	srl	r3,r3,r5
 200cc9c:	323ff736 	bltu	r6,r8,200cc7c <rshift+0x4c>
 200cca0:	38c00015 	stw	r3,0(r7)
 200cca4:	18000c1e 	bne	r3,zero,200ccd8 <rshift+0xa8>
 200cca8:	3a45c83a 	sub	r2,r7,r9
 200ccac:	1005d0ba 	srai	r2,r2,2
 200ccb0:	20800415 	stw	r2,16(r4)
 200ccb4:	1000011e 	bne	r2,zero,200ccbc <rshift+0x8c>
 200ccb8:	20000515 	stw	zero,20(r4)
 200ccbc:	f800283a 	ret
 200ccc0:	323ff92e 	bgeu	r6,r8,200cca8 <rshift+0x78>
 200ccc4:	30800017 	ldw	r2,0(r6)
 200ccc8:	31800104 	addi	r6,r6,4
 200cccc:	38800015 	stw	r2,0(r7)
 200ccd0:	39c00104 	addi	r7,r7,4
 200ccd4:	003ffa06 	br	200ccc0 <rshift+0x90>
 200ccd8:	39c00104 	addi	r7,r7,4
 200ccdc:	003ff206 	br	200cca8 <rshift+0x78>

0200cce0 <__gethex>:
 200cce0:	defff104 	addi	sp,sp,-60
 200cce4:	df000d15 	stw	fp,52(sp)
 200cce8:	dcc00815 	stw	r19,32(sp)
 200ccec:	dfc00e15 	stw	ra,56(sp)
 200ccf0:	ddc00c15 	stw	r23,48(sp)
 200ccf4:	dd800b15 	stw	r22,44(sp)
 200ccf8:	dd400a15 	stw	r21,40(sp)
 200ccfc:	dd000915 	stw	r20,36(sp)
 200cd00:	dc800715 	stw	r18,28(sp)
 200cd04:	dc400615 	stw	r17,24(sp)
 200cd08:	dc000515 	stw	r16,20(sp)
 200cd0c:	04c08074 	movhi	r19,513
 200cd10:	9cdd8104 	addi	r19,r19,30212
 200cd14:	98800c03 	ldbu	r2,48(r19)
 200cd18:	d9000115 	stw	r4,4(sp)
 200cd1c:	2839883a 	mov	fp,r5
 200cd20:	d9800215 	stw	r6,8(sp)
 200cd24:	d9c00315 	stw	r7,12(sp)
 200cd28:	10007526 	beq	r2,zero,200cf00 <__gethex+0x220>
 200cd2c:	e1800017 	ldw	r6,0(fp)
 200cd30:	00800c04 	movi	r2,48
 200cd34:	31000083 	ldbu	r4,2(r6)
 200cd38:	30c00084 	addi	r3,r6,2
 200cd3c:	2080761e 	bne	r4,r2,200cf18 <__gethex+0x238>
 200cd40:	200b883a 	mov	r5,r4
 200cd44:	3007883a 	mov	r3,r6
 200cd48:	188000c3 	ldbu	r2,3(r3)
 200cd4c:	18c00044 	addi	r3,r3,1
 200cd50:	1009883a 	mov	r4,r2
 200cd54:	117ffc26 	beq	r2,r5,200cd48 <__gethex+0x68>
 200cd58:	198fc83a 	sub	r7,r3,r6
 200cd5c:	19400084 	addi	r5,r3,2
 200cd60:	24c5883a 	add	r2,r4,r19
 200cd64:	10c00003 	ldbu	r3,0(r2)
 200cd68:	18002e26 	beq	r3,zero,200ce24 <__gethex+0x144>
 200cd6c:	29000003 	ldbu	r4,0(r5)
 200cd70:	282b883a 	mov	r21,r5
 200cd74:	000d883a 	mov	r6,zero
 200cd78:	002d883a 	mov	r22,zero
 200cd7c:	21003fcc 	andi	r4,r4,255
 200cd80:	24c5883a 	add	r2,r4,r19
 200cd84:	10c00003 	ldbu	r3,0(r2)
 200cd88:	18000526 	beq	r3,zero,200cda0 <__gethex+0xc0>
 200cd8c:	29400044 	addi	r5,r5,1
 200cd90:	29000003 	ldbu	r4,0(r5)
 200cd94:	24c5883a 	add	r2,r4,r19
 200cd98:	10c00003 	ldbu	r3,0(r2)
 200cd9c:	183ffb1e 	bne	r3,zero,200cd8c <__gethex+0xac>
 200cda0:	00800b84 	movi	r2,46
 200cda4:	20805f26 	beq	r4,r2,200cf24 <__gethex+0x244>
 200cda8:	30008226 	beq	r6,zero,200cfb4 <__gethex+0x2d4>
 200cdac:	2985c83a 	sub	r2,r5,r6
 200cdb0:	1085883a 	add	r2,r2,r2
 200cdb4:	1085883a 	add	r2,r2,r2
 200cdb8:	0085c83a 	sub	r2,zero,r2
 200cdbc:	d8800015 	stw	r2,0(sp)
 200cdc0:	2825883a 	mov	r18,r5
 200cdc4:	90c00003 	ldbu	r3,0(r18)
 200cdc8:	00801404 	movi	r2,80
 200cdcc:	18801e26 	beq	r3,r2,200ce48 <__gethex+0x168>
 200cdd0:	00801c04 	movi	r2,112
 200cdd4:	18801c26 	beq	r3,r2,200ce48 <__gethex+0x168>
 200cdd8:	9023883a 	mov	r17,r18
 200cddc:	b005003a 	cmpeq	r2,r22,zero
 200cde0:	e4400015 	stw	r17,0(fp)
 200cde4:	10008d1e 	bne	r2,zero,200d01c <__gethex+0x33c>
 200cde8:	38004326 	beq	r7,zero,200cef8 <__gethex+0x218>
 200cdec:	0025883a 	mov	r18,zero
 200cdf0:	9005883a 	mov	r2,r18
 200cdf4:	dfc00e17 	ldw	ra,56(sp)
 200cdf8:	df000d17 	ldw	fp,52(sp)
 200cdfc:	ddc00c17 	ldw	r23,48(sp)
 200ce00:	dd800b17 	ldw	r22,44(sp)
 200ce04:	dd400a17 	ldw	r21,40(sp)
 200ce08:	dd000917 	ldw	r20,36(sp)
 200ce0c:	dcc00817 	ldw	r19,32(sp)
 200ce10:	dc800717 	ldw	r18,28(sp)
 200ce14:	dc400617 	ldw	r17,24(sp)
 200ce18:	dc000517 	ldw	r16,20(sp)
 200ce1c:	dec00f04 	addi	sp,sp,60
 200ce20:	f800283a 	ret
 200ce24:	00800b84 	movi	r2,46
 200ce28:	20805126 	beq	r4,r2,200cf70 <__gethex+0x290>
 200ce2c:	2825883a 	mov	r18,r5
 200ce30:	d8000015 	stw	zero,0(sp)
 200ce34:	90c00003 	ldbu	r3,0(r18)
 200ce38:	00801404 	movi	r2,80
 200ce3c:	282b883a 	mov	r21,r5
 200ce40:	05800044 	movi	r22,1
 200ce44:	18bfe21e 	bne	r3,r2,200cdd0 <__gethex+0xf0>
 200ce48:	90c00043 	ldbu	r3,1(r18)
 200ce4c:	00800ac4 	movi	r2,43
 200ce50:	91400044 	addi	r5,r18,1
 200ce54:	18805126 	beq	r3,r2,200cf9c <__gethex+0x2bc>
 200ce58:	00800b44 	movi	r2,45
 200ce5c:	18805326 	beq	r3,r2,200cfac <__gethex+0x2cc>
 200ce60:	002f883a 	mov	r23,zero
 200ce64:	1cc5883a 	add	r2,r3,r19
 200ce68:	10800003 	ldbu	r2,0(r2)
 200ce6c:	103fda26 	beq	r2,zero,200cdd8 <__gethex+0xf8>
 200ce70:	01800644 	movi	r6,25
 200ce74:	30bfd816 	blt	r6,r2,200cdd8 <__gethex+0xf8>
 200ce78:	28c00043 	ldbu	r3,1(r5)
 200ce7c:	113ffc04 	addi	r4,r2,-16
 200ce80:	00808074 	movhi	r2,513
 200ce84:	109d8104 	addi	r2,r2,30212
 200ce88:	1887883a 	add	r3,r3,r2
 200ce8c:	18800003 	ldbu	r2,0(r3)
 200ce90:	2c400044 	addi	r17,r5,1
 200ce94:	10001126 	beq	r2,zero,200cedc <__gethex+0x1fc>
 200ce98:	1021883a 	mov	r16,r2
 200ce9c:	30800f16 	blt	r6,r2,200cedc <__gethex+0x1fc>
 200cea0:	3029883a 	mov	r20,r6
 200cea4:	00000106 	br	200ceac <__gethex+0x1cc>
 200cea8:	a0800c16 	blt	r20,r2,200cedc <__gethex+0x1fc>
 200ceac:	8c400044 	addi	r17,r17,1
 200ceb0:	01400284 	movi	r5,10
 200ceb4:	d9c00415 	stw	r7,16(sp)
 200ceb8:	2000abc0 	call	2000abc <__mulsi3>
 200cebc:	88c00003 	ldbu	r3,0(r17)
 200cec0:	1405883a 	add	r2,r2,r16
 200cec4:	113ffc04 	addi	r4,r2,-16
 200cec8:	1cc7883a 	add	r3,r3,r19
 200cecc:	18800003 	ldbu	r2,0(r3)
 200ced0:	d9c00417 	ldw	r7,16(sp)
 200ced4:	1021883a 	mov	r16,r2
 200ced8:	103ff31e 	bne	r2,zero,200cea8 <__gethex+0x1c8>
 200cedc:	b805003a 	cmpeq	r2,r23,zero
 200cee0:	1000011e 	bne	r2,zero,200cee8 <__gethex+0x208>
 200cee4:	0109c83a 	sub	r4,zero,r4
 200cee8:	d8800017 	ldw	r2,0(sp)
 200ceec:	1105883a 	add	r2,r2,r4
 200cef0:	d8800015 	stw	r2,0(sp)
 200cef4:	003fb906 	br	200cddc <__gethex+0xfc>
 200cef8:	04800184 	movi	r18,6
 200cefc:	003fbc06 	br	200cdf0 <__gethex+0x110>
 200cf00:	200cbc80 	call	200cbc8 <__hexdig_init>
 200cf04:	e1800017 	ldw	r6,0(fp)
 200cf08:	00800c04 	movi	r2,48
 200cf0c:	31000083 	ldbu	r4,2(r6)
 200cf10:	30c00084 	addi	r3,r6,2
 200cf14:	20bf8a26 	beq	r4,r2,200cd40 <__gethex+0x60>
 200cf18:	180b883a 	mov	r5,r3
 200cf1c:	000f883a 	mov	r7,zero
 200cf20:	003f8f06 	br	200cd60 <__gethex+0x80>
 200cf24:	303fa11e 	bne	r6,zero,200cdac <__gethex+0xcc>
 200cf28:	29400044 	addi	r5,r5,1
 200cf2c:	28800003 	ldbu	r2,0(r5)
 200cf30:	14c5883a 	add	r2,r2,r19
 200cf34:	10c00003 	ldbu	r3,0(r2)
 200cf38:	1800b526 	beq	r3,zero,200d210 <__gethex+0x530>
 200cf3c:	2809883a 	mov	r4,r5
 200cf40:	21000044 	addi	r4,r4,1
 200cf44:	20800003 	ldbu	r2,0(r4)
 200cf48:	14c5883a 	add	r2,r2,r19
 200cf4c:	10c00003 	ldbu	r3,0(r2)
 200cf50:	183ffb1e 	bne	r3,zero,200cf40 <__gethex+0x260>
 200cf54:	2145c83a 	sub	r2,r4,r5
 200cf58:	1085883a 	add	r2,r2,r2
 200cf5c:	1085883a 	add	r2,r2,r2
 200cf60:	0085c83a 	sub	r2,zero,r2
 200cf64:	200b883a 	mov	r5,r4
 200cf68:	d8800015 	stw	r2,0(sp)
 200cf6c:	003f9406 	br	200cdc0 <__gethex+0xe0>
 200cf70:	29000043 	ldbu	r4,1(r5)
 200cf74:	00808074 	movhi	r2,513
 200cf78:	109d8104 	addi	r2,r2,30212
 200cf7c:	2c800044 	addi	r18,r5,1
 200cf80:	2085883a 	add	r2,r4,r2
 200cf84:	10c00003 	ldbu	r3,0(r2)
 200cf88:	18000d1e 	bne	r3,zero,200cfc0 <__gethex+0x2e0>
 200cf8c:	282b883a 	mov	r21,r5
 200cf90:	05800044 	movi	r22,1
 200cf94:	d8000015 	stw	zero,0(sp)
 200cf98:	003f8a06 	br	200cdc4 <__gethex+0xe4>
 200cf9c:	002f883a 	mov	r23,zero
 200cfa0:	29400044 	addi	r5,r5,1
 200cfa4:	28c00003 	ldbu	r3,0(r5)
 200cfa8:	003fae06 	br	200ce64 <__gethex+0x184>
 200cfac:	05c00044 	movi	r23,1
 200cfb0:	003ffb06 	br	200cfa0 <__gethex+0x2c0>
 200cfb4:	2825883a 	mov	r18,r5
 200cfb8:	d8000015 	stw	zero,0(sp)
 200cfbc:	003f8106 	br	200cdc4 <__gethex+0xe4>
 200cfc0:	00800c04 	movi	r2,48
 200cfc4:	20800e1e 	bne	r4,r2,200d000 <__gethex+0x320>
 200cfc8:	2007883a 	mov	r3,r4
 200cfcc:	900b883a 	mov	r5,r18
 200cfd0:	29400044 	addi	r5,r5,1
 200cfd4:	29000003 	ldbu	r4,0(r5)
 200cfd8:	20803fcc 	andi	r2,r4,255
 200cfdc:	10fffc26 	beq	r2,r3,200cfd0 <__gethex+0x2f0>
 200cfe0:	14c5883a 	add	r2,r2,r19
 200cfe4:	10c00003 	ldbu	r3,0(r2)
 200cfe8:	1800071e 	bne	r3,zero,200d008 <__gethex+0x328>
 200cfec:	01c00044 	movi	r7,1
 200cff0:	900d883a 	mov	r6,r18
 200cff4:	282b883a 	mov	r21,r5
 200cff8:	382d883a 	mov	r22,r7
 200cffc:	003f5f06 	br	200cd7c <__gethex+0x9c>
 200d000:	91000003 	ldbu	r4,0(r18)
 200d004:	900b883a 	mov	r5,r18
 200d008:	900d883a 	mov	r6,r18
 200d00c:	282b883a 	mov	r21,r5
 200d010:	01c00044 	movi	r7,1
 200d014:	002d883a 	mov	r22,zero
 200d018:	003f5806 	br	200cd7c <__gethex+0x9c>
 200d01c:	9545c83a 	sub	r2,r18,r21
 200d020:	10bfffc4 	addi	r2,r2,-1
 200d024:	00c001c4 	movi	r3,7
 200d028:	1880770e 	bge	r3,r2,200d208 <__gethex+0x528>
 200d02c:	000b883a 	mov	r5,zero
 200d030:	1005d07a 	srai	r2,r2,1
 200d034:	29400044 	addi	r5,r5,1
 200d038:	18bffd16 	blt	r3,r2,200d030 <__gethex+0x350>
 200d03c:	d9000117 	ldw	r4,4(sp)
 200d040:	20091d40 	call	20091d4 <_Balloc>
 200d044:	1029883a 	mov	r20,r2
 200d048:	15800504 	addi	r22,r2,20
 200d04c:	ac80562e 	bgeu	r21,r18,200d1a8 <__gethex+0x4c8>
 200d050:	900b883a 	mov	r5,r18
 200d054:	b011883a 	mov	r8,r22
 200d058:	000f883a 	mov	r7,zero
 200d05c:	0009883a 	mov	r4,zero
 200d060:	02400b84 	movi	r9,46
 200d064:	02800804 	movi	r10,32
 200d068:	297fffc4 	addi	r5,r5,-1
 200d06c:	28c00003 	ldbu	r3,0(r5)
 200d070:	1a400826 	beq	r3,r9,200d094 <__gethex+0x3b4>
 200d074:	380d883a 	mov	r6,r7
 200d078:	3a802a26 	beq	r7,r10,200d124 <__gethex+0x444>
 200d07c:	39c00104 	addi	r7,r7,4
 200d080:	1cc7883a 	add	r3,r3,r19
 200d084:	18800003 	ldbu	r2,0(r3)
 200d088:	108003cc 	andi	r2,r2,15
 200d08c:	1184983a 	sll	r2,r2,r6
 200d090:	2088b03a 	or	r4,r4,r2
 200d094:	a97ff436 	bltu	r21,r5,200d068 <__gethex+0x388>
 200d098:	40800104 	addi	r2,r8,4
 200d09c:	1585c83a 	sub	r2,r2,r22
 200d0a0:	1021d0ba 	srai	r16,r2,2
 200d0a4:	41000015 	stw	r4,0(r8)
 200d0a8:	a4000415 	stw	r16,16(r20)
 200d0ac:	2008c7c0 	call	2008c7c <__hi0bits>
 200d0b0:	d9000217 	ldw	r4,8(sp)
 200d0b4:	8006917a 	slli	r3,r16,5
 200d0b8:	24c00017 	ldw	r19,0(r4)
 200d0bc:	1885c83a 	sub	r2,r3,r2
 200d0c0:	98801f16 	blt	r19,r2,200d140 <__gethex+0x460>
 200d0c4:	14c00c16 	blt	r2,r19,200d0f8 <__gethex+0x418>
 200d0c8:	002b883a 	mov	r21,zero
 200d0cc:	d9000217 	ldw	r4,8(sp)
 200d0d0:	d8c00017 	ldw	r3,0(sp)
 200d0d4:	20800217 	ldw	r2,8(r4)
 200d0d8:	10c0360e 	bge	r2,r3,200d1b4 <__gethex+0x4d4>
 200d0dc:	d9000117 	ldw	r4,4(sp)
 200d0e0:	a00b883a 	mov	r5,r20
 200d0e4:	048028c4 	movi	r18,163
 200d0e8:	2008c540 	call	2008c54 <_Bfree>
 200d0ec:	d9000f17 	ldw	r4,60(sp)
 200d0f0:	20000015 	stw	zero,0(r4)
 200d0f4:	003f3e06 	br	200cdf0 <__gethex+0x110>
 200d0f8:	d9000117 	ldw	r4,4(sp)
 200d0fc:	98a1c83a 	sub	r16,r19,r2
 200d100:	a00b883a 	mov	r5,r20
 200d104:	800d883a 	mov	r6,r16
 200d108:	20095980 	call	2009598 <__lshift>
 200d10c:	d8c00017 	ldw	r3,0(sp)
 200d110:	1029883a 	mov	r20,r2
 200d114:	15800504 	addi	r22,r2,20
 200d118:	1c07c83a 	sub	r3,r3,r16
 200d11c:	d8c00015 	stw	r3,0(sp)
 200d120:	003fe906 	br	200d0c8 <__gethex+0x3e8>
 200d124:	41000015 	stw	r4,0(r8)
 200d128:	28c00003 	ldbu	r3,0(r5)
 200d12c:	01c00104 	movi	r7,4
 200d130:	000d883a 	mov	r6,zero
 200d134:	41d1883a 	add	r8,r8,r7
 200d138:	0009883a 	mov	r4,zero
 200d13c:	003fd006 	br	200d080 <__gethex+0x3a0>
 200d140:	14e1c83a 	sub	r16,r2,r19
 200d144:	a009883a 	mov	r4,r20
 200d148:	800b883a 	mov	r5,r16
 200d14c:	200914c0 	call	200914c <__any_on>
 200d150:	1000081e 	bne	r2,zero,200d174 <__gethex+0x494>
 200d154:	002b883a 	mov	r21,zero
 200d158:	a009883a 	mov	r4,r20
 200d15c:	800b883a 	mov	r5,r16
 200d160:	200cc300 	call	200cc30 <rshift>
 200d164:	d8800017 	ldw	r2,0(sp)
 200d168:	1405883a 	add	r2,r2,r16
 200d16c:	d8800015 	stw	r2,0(sp)
 200d170:	003fd606 	br	200d0cc <__gethex+0x3ec>
 200d174:	817fffc4 	addi	r5,r16,-1
 200d178:	2805d17a 	srai	r2,r5,5
 200d17c:	290007cc 	andi	r4,r5,31
 200d180:	01800044 	movi	r6,1
 200d184:	1085883a 	add	r2,r2,r2
 200d188:	1085883a 	add	r2,r2,r2
 200d18c:	1585883a 	add	r2,r2,r22
 200d190:	3108983a 	sll	r4,r6,r4
 200d194:	10c00017 	ldw	r3,0(r2)
 200d198:	20c8703a 	and	r4,r4,r3
 200d19c:	20001e1e 	bne	r4,zero,200d218 <__gethex+0x538>
 200d1a0:	302b883a 	mov	r21,r6
 200d1a4:	003fec06 	br	200d158 <__gethex+0x478>
 200d1a8:	b011883a 	mov	r8,r22
 200d1ac:	0009883a 	mov	r4,zero
 200d1b0:	003fb906 	br	200d098 <__gethex+0x3b8>
 200d1b4:	d8800217 	ldw	r2,8(sp)
 200d1b8:	d8c00017 	ldw	r3,0(sp)
 200d1bc:	11000117 	ldw	r4,4(r2)
 200d1c0:	19001c16 	blt	r3,r4,200d234 <__gethex+0x554>
 200d1c4:	04800044 	movi	r18,1
 200d1c8:	a8000926 	beq	r21,zero,200d1f0 <__gethex+0x510>
 200d1cc:	d8c00217 	ldw	r3,8(sp)
 200d1d0:	00800084 	movi	r2,2
 200d1d4:	19000317 	ldw	r4,12(r3)
 200d1d8:	20809826 	beq	r4,r2,200d43c <__gethex+0x75c>
 200d1dc:	008000c4 	movi	r2,3
 200d1e0:	20805b26 	beq	r4,r2,200d350 <__gethex+0x670>
 200d1e4:	00800044 	movi	r2,1
 200d1e8:	20804326 	beq	r4,r2,200d2f8 <__gethex+0x618>
 200d1ec:	94800414 	ori	r18,r18,16
 200d1f0:	d9000f17 	ldw	r4,60(sp)
 200d1f4:	d8800017 	ldw	r2,0(sp)
 200d1f8:	d8c00317 	ldw	r3,12(sp)
 200d1fc:	25000015 	stw	r20,0(r4)
 200d200:	18800015 	stw	r2,0(r3)
 200d204:	003efa06 	br	200cdf0 <__gethex+0x110>
 200d208:	000b883a 	mov	r5,zero
 200d20c:	003f8b06 	br	200d03c <__gethex+0x35c>
 200d210:	d8000015 	stw	zero,0(sp)
 200d214:	003eea06 	br	200cdc0 <__gethex+0xe0>
 200d218:	3140180e 	bge	r6,r5,200d27c <__gethex+0x59c>
 200d21c:	a009883a 	mov	r4,r20
 200d220:	817fff84 	addi	r5,r16,-2
 200d224:	200914c0 	call	200914c <__any_on>
 200d228:	10001426 	beq	r2,zero,200d27c <__gethex+0x59c>
 200d22c:	054000c4 	movi	r21,3
 200d230:	003fc906 	br	200d158 <__gethex+0x478>
 200d234:	d8800017 	ldw	r2,0(sp)
 200d238:	20a3c83a 	sub	r17,r4,r2
 200d23c:	8cc01116 	blt	r17,r19,200d284 <__gethex+0x5a4>
 200d240:	d8800217 	ldw	r2,8(sp)
 200d244:	10c00317 	ldw	r3,12(r2)
 200d248:	00800084 	movi	r2,2
 200d24c:	18809426 	beq	r3,r2,200d4a0 <__gethex+0x7c0>
 200d250:	008000c4 	movi	r2,3
 200d254:	18808f26 	beq	r3,r2,200d494 <__gethex+0x7b4>
 200d258:	00800044 	movi	r2,1
 200d25c:	18807c26 	beq	r3,r2,200d450 <__gethex+0x770>
 200d260:	d9000117 	ldw	r4,4(sp)
 200d264:	a00b883a 	mov	r5,r20
 200d268:	04801404 	movi	r18,80
 200d26c:	2008c540 	call	2008c54 <_Bfree>
 200d270:	d9000f17 	ldw	r4,60(sp)
 200d274:	20000015 	stw	zero,0(r4)
 200d278:	003edd06 	br	200cdf0 <__gethex+0x110>
 200d27c:	05400084 	movi	r21,2
 200d280:	003fb506 	br	200d158 <__gethex+0x478>
 200d284:	8c3fffc4 	addi	r16,r17,-1
 200d288:	a8001526 	beq	r21,zero,200d2e0 <__gethex+0x600>
 200d28c:	05400044 	movi	r21,1
 200d290:	8005d17a 	srai	r2,r16,5
 200d294:	814007cc 	andi	r5,r16,31
 200d298:	00c00044 	movi	r3,1
 200d29c:	1085883a 	add	r2,r2,r2
 200d2a0:	1085883a 	add	r2,r2,r2
 200d2a4:	1585883a 	add	r2,r2,r22
 200d2a8:	1946983a 	sll	r3,r3,r5
 200d2ac:	11000017 	ldw	r4,0(r2)
 200d2b0:	1906703a 	and	r3,r3,r4
 200d2b4:	18000126 	beq	r3,zero,200d2bc <__gethex+0x5dc>
 200d2b8:	ad400094 	ori	r21,r21,2
 200d2bc:	880b883a 	mov	r5,r17
 200d2c0:	a009883a 	mov	r4,r20
 200d2c4:	200cc300 	call	200cc30 <rshift>
 200d2c8:	d8800217 	ldw	r2,8(sp)
 200d2cc:	9c67c83a 	sub	r19,r19,r17
 200d2d0:	04800084 	movi	r18,2
 200d2d4:	10800117 	ldw	r2,4(r2)
 200d2d8:	d8800015 	stw	r2,0(sp)
 200d2dc:	003fba06 	br	200d1c8 <__gethex+0x4e8>
 200d2e0:	043feb0e 	bge	zero,r16,200d290 <__gethex+0x5b0>
 200d2e4:	a009883a 	mov	r4,r20
 200d2e8:	800b883a 	mov	r5,r16
 200d2ec:	200914c0 	call	200914c <__any_on>
 200d2f0:	102b883a 	mov	r21,r2
 200d2f4:	003fe606 	br	200d290 <__gethex+0x5b0>
 200d2f8:	a880008c 	andi	r2,r21,2
 200d2fc:	103fbb26 	beq	r2,zero,200d1ec <__gethex+0x50c>
 200d300:	b0800017 	ldw	r2,0(r22)
 200d304:	a884b03a 	or	r2,r21,r2
 200d308:	1104703a 	and	r2,r2,r4
 200d30c:	103fb726 	beq	r2,zero,200d1ec <__gethex+0x50c>
 200d310:	a4000417 	ldw	r16,16(r20)
 200d314:	b007883a 	mov	r3,r22
 200d318:	017fffc4 	movi	r5,-1
 200d31c:	8405883a 	add	r2,r16,r16
 200d320:	10ab883a 	add	r21,r2,r2
 200d324:	802f883a 	mov	r23,r16
 200d328:	b549883a 	add	r4,r22,r21
 200d32c:	00000306 	br	200d33c <__gethex+0x65c>
 200d330:	18000015 	stw	zero,0(r3)
 200d334:	18c00104 	addi	r3,r3,4
 200d338:	1900082e 	bgeu	r3,r4,200d35c <__gethex+0x67c>
 200d33c:	18800017 	ldw	r2,0(r3)
 200d340:	117ffb26 	beq	r2,r5,200d330 <__gethex+0x650>
 200d344:	10800044 	addi	r2,r2,1
 200d348:	18800015 	stw	r2,0(r3)
 200d34c:	00001e06 	br	200d3c8 <__gethex+0x6e8>
 200d350:	d8801017 	ldw	r2,64(sp)
 200d354:	103fa526 	beq	r2,zero,200d1ec <__gethex+0x50c>
 200d358:	003fed06 	br	200d310 <__gethex+0x630>
 200d35c:	a0800217 	ldw	r2,8(r20)
 200d360:	80801216 	blt	r16,r2,200d3ac <__gethex+0x6cc>
 200d364:	a1400117 	ldw	r5,4(r20)
 200d368:	d9000117 	ldw	r4,4(sp)
 200d36c:	29400044 	addi	r5,r5,1
 200d370:	20091d40 	call	20091d4 <_Balloc>
 200d374:	a1800417 	ldw	r6,16(r20)
 200d378:	a1400304 	addi	r5,r20,12
 200d37c:	11000304 	addi	r4,r2,12
 200d380:	318d883a 	add	r6,r6,r6
 200d384:	318d883a 	add	r6,r6,r6
 200d388:	31800204 	addi	r6,r6,8
 200d38c:	1023883a 	mov	r17,r2
 200d390:	20029140 	call	2002914 <memcpy>
 200d394:	d9000117 	ldw	r4,4(sp)
 200d398:	a00b883a 	mov	r5,r20
 200d39c:	8d800504 	addi	r22,r17,20
 200d3a0:	2008c540 	call	2008c54 <_Bfree>
 200d3a4:	8c000417 	ldw	r16,16(r17)
 200d3a8:	8829883a 	mov	r20,r17
 200d3ac:	8405883a 	add	r2,r16,r16
 200d3b0:	1085883a 	add	r2,r2,r2
 200d3b4:	1505883a 	add	r2,r2,r20
 200d3b8:	84000044 	addi	r16,r16,1
 200d3bc:	00c00044 	movi	r3,1
 200d3c0:	10c00515 	stw	r3,20(r2)
 200d3c4:	a4000415 	stw	r16,16(r20)
 200d3c8:	00800084 	movi	r2,2
 200d3cc:	90801526 	beq	r18,r2,200d424 <__gethex+0x744>
 200d3d0:	bc000a16 	blt	r23,r16,200d3fc <__gethex+0x71c>
 200d3d4:	9c0007cc 	andi	r16,r19,31
 200d3d8:	8000021e 	bne	r16,zero,200d3e4 <__gethex+0x704>
 200d3dc:	94800814 	ori	r18,r18,32
 200d3e0:	003f8306 	br	200d1f0 <__gethex+0x510>
 200d3e4:	b545883a 	add	r2,r22,r21
 200d3e8:	113fff17 	ldw	r4,-4(r2)
 200d3ec:	2008c7c0 	call	2008c7c <__hi0bits>
 200d3f0:	00c00804 	movi	r3,32
 200d3f4:	1c07c83a 	sub	r3,r3,r16
 200d3f8:	10fff80e 	bge	r2,r3,200d3dc <__gethex+0x6fc>
 200d3fc:	a009883a 	mov	r4,r20
 200d400:	01400044 	movi	r5,1
 200d404:	200cc300 	call	200cc30 <rshift>
 200d408:	d9000217 	ldw	r4,8(sp)
 200d40c:	d8c00017 	ldw	r3,0(sp)
 200d410:	20800217 	ldw	r2,8(r4)
 200d414:	18c00044 	addi	r3,r3,1
 200d418:	d8c00015 	stw	r3,0(sp)
 200d41c:	10ff2f16 	blt	r2,r3,200d0dc <__gethex+0x3fc>
 200d420:	003fee06 	br	200d3dc <__gethex+0x6fc>
 200d424:	d8c00217 	ldw	r3,8(sp)
 200d428:	18800017 	ldw	r2,0(r3)
 200d42c:	10bfffc4 	addi	r2,r2,-1
 200d430:	98801e26 	beq	r19,r2,200d4ac <__gethex+0x7cc>
 200d434:	04800884 	movi	r18,34
 200d438:	003f6d06 	br	200d1f0 <__gethex+0x510>
 200d43c:	d9001017 	ldw	r4,64(sp)
 200d440:	00800044 	movi	r2,1
 200d444:	1105c83a 	sub	r2,r2,r4
 200d448:	103f6826 	beq	r2,zero,200d1ec <__gethex+0x50c>
 200d44c:	003fb006 	br	200d310 <__gethex+0x630>
 200d450:	9c7f831e 	bne	r19,r17,200d260 <__gethex+0x580>
 200d454:	1cc0060e 	bge	r3,r19,200d470 <__gethex+0x790>
 200d458:	98cbc83a 	sub	r5,r19,r3
 200d45c:	a009883a 	mov	r4,r20
 200d460:	200914c0 	call	200914c <__any_on>
 200d464:	103f7e26 	beq	r2,zero,200d260 <__gethex+0x580>
 200d468:	d8c00217 	ldw	r3,8(sp)
 200d46c:	19000117 	ldw	r4,4(r3)
 200d470:	d8800317 	ldw	r2,12(sp)
 200d474:	d8c00f17 	ldw	r3,60(sp)
 200d478:	04000044 	movi	r16,1
 200d47c:	11000015 	stw	r4,0(r2)
 200d480:	04801884 	movi	r18,98
 200d484:	b4000015 	stw	r16,0(r22)
 200d488:	1d000015 	stw	r20,0(r3)
 200d48c:	a4000415 	stw	r16,16(r20)
 200d490:	003e5706 	br	200cdf0 <__gethex+0x110>
 200d494:	d8801017 	ldw	r2,64(sp)
 200d498:	103f7126 	beq	r2,zero,200d260 <__gethex+0x580>
 200d49c:	003ff406 	br	200d470 <__gethex+0x790>
 200d4a0:	d8c01017 	ldw	r3,64(sp)
 200d4a4:	183ff226 	beq	r3,zero,200d470 <__gethex+0x790>
 200d4a8:	003f6d06 	br	200d260 <__gethex+0x580>
 200d4ac:	9805d17a 	srai	r2,r19,5
 200d4b0:	994007cc 	andi	r5,r19,31
 200d4b4:	00c00044 	movi	r3,1
 200d4b8:	1085883a 	add	r2,r2,r2
 200d4bc:	1085883a 	add	r2,r2,r2
 200d4c0:	1585883a 	add	r2,r2,r22
 200d4c4:	1946983a 	sll	r3,r3,r5
 200d4c8:	11000017 	ldw	r4,0(r2)
 200d4cc:	1906703a 	and	r3,r3,r4
 200d4d0:	183fd826 	beq	r3,zero,200d434 <__gethex+0x754>
 200d4d4:	04800844 	movi	r18,33
 200d4d8:	003f4506 	br	200d1f0 <__gethex+0x510>

0200d4dc <L_shift>:
 200d4dc:	00800204 	movi	r2,8
 200d4e0:	1185c83a 	sub	r2,r2,r6
 200d4e4:	1085883a 	add	r2,r2,r2
 200d4e8:	21c00017 	ldw	r7,0(r4)
 200d4ec:	1093883a 	add	r9,r2,r2
 200d4f0:	00800804 	movi	r2,32
 200d4f4:	200d883a 	mov	r6,r4
 200d4f8:	1251c83a 	sub	r8,r2,r9
 200d4fc:	31800104 	addi	r6,r6,4
 200d500:	3805883a 	mov	r2,r7
 200d504:	31c00017 	ldw	r7,0(r6)
 200d508:	3a08983a 	sll	r4,r7,r8
 200d50c:	3a46d83a 	srl	r3,r7,r9
 200d510:	1104b03a 	or	r2,r2,r4
 200d514:	180f883a 	mov	r7,r3
 200d518:	30bfff15 	stw	r2,-4(r6)
 200d51c:	30c00015 	stw	r3,0(r6)
 200d520:	317ff636 	bltu	r6,r5,200d4fc <L_shift+0x20>
 200d524:	f800283a 	ret

0200d528 <__hexnan>:
 200d528:	defff404 	addi	sp,sp,-48
 200d52c:	dd800815 	stw	r22,32(sp)
 200d530:	05808074 	movhi	r22,513
 200d534:	b59d8104 	addi	r22,r22,30212
 200d538:	b0800c03 	ldbu	r2,48(r22)
 200d53c:	dcc00515 	stw	r19,20(sp)
 200d540:	dc000215 	stw	r16,8(sp)
 200d544:	dfc00b15 	stw	ra,44(sp)
 200d548:	df000a15 	stw	fp,40(sp)
 200d54c:	ddc00915 	stw	r23,36(sp)
 200d550:	dd400715 	stw	r21,28(sp)
 200d554:	dd000615 	stw	r20,24(sp)
 200d558:	dc800415 	stw	r18,16(sp)
 200d55c:	dc400315 	stw	r17,12(sp)
 200d560:	d9000115 	stw	r4,4(sp)
 200d564:	2821883a 	mov	r16,r5
 200d568:	3027883a 	mov	r19,r6
 200d56c:	10007426 	beq	r2,zero,200d740 <__hexnan+0x218>
 200d570:	80c00017 	ldw	r3,0(r16)
 200d574:	1805d17a 	srai	r2,r3,5
 200d578:	18c007cc 	andi	r3,r3,31
 200d57c:	1839003a 	cmpeq	fp,r3,zero
 200d580:	1085883a 	add	r2,r2,r2
 200d584:	1085883a 	add	r2,r2,r2
 200d588:	d8c00015 	stw	r3,0(sp)
 200d58c:	14c5883a 	add	r2,r2,r19
 200d590:	e000011e 	bne	fp,zero,200d598 <__hexnan+0x70>
 200d594:	10800104 	addi	r2,r2,4
 200d598:	d8c00117 	ldw	r3,4(sp)
 200d59c:	153fff04 	addi	r20,r2,-4
 200d5a0:	a021883a 	mov	r16,r20
 200d5a4:	1c400017 	ldw	r17,0(r3)
 200d5a8:	a02b883a 	mov	r21,r20
 200d5ac:	0025883a 	mov	r18,zero
 200d5b0:	002f883a 	mov	r23,zero
 200d5b4:	000d883a 	mov	r6,zero
 200d5b8:	103fff15 	stw	zero,-4(r2)
 200d5bc:	8c400044 	addi	r17,r17,1
 200d5c0:	89000003 	ldbu	r4,0(r17)
 200d5c4:	20000e26 	beq	r4,zero,200d600 <__hexnan+0xd8>
 200d5c8:	2585883a 	add	r2,r4,r22
 200d5cc:	10c00003 	ldbu	r3,0(r2)
 200d5d0:	18002e1e 	bne	r3,zero,200d68c <__hexnan+0x164>
 200d5d4:	00800804 	movi	r2,32
 200d5d8:	11005536 	bltu	r2,r4,200d730 <__hexnan+0x208>
 200d5dc:	bcbff70e 	bge	r23,r18,200d5bc <__hexnan+0x94>
 200d5e0:	8540022e 	bgeu	r16,r21,200d5ec <__hexnan+0xc4>
 200d5e4:	008001c4 	movi	r2,7
 200d5e8:	11803c0e 	bge	r2,r6,200d6dc <__hexnan+0x1b4>
 200d5ec:	9c003536 	bltu	r19,r16,200d6c4 <__hexnan+0x19c>
 200d5f0:	8c400044 	addi	r17,r17,1
 200d5f4:	89000003 	ldbu	r4,0(r17)
 200d5f8:	01800204 	movi	r6,8
 200d5fc:	203ff21e 	bne	r4,zero,200d5c8 <__hexnan+0xa0>
 200d600:	90004d26 	beq	r18,zero,200d738 <__hexnan+0x210>
 200d604:	85404336 	bltu	r16,r21,200d714 <__hexnan+0x1ec>
 200d608:	9c00382e 	bgeu	r19,r16,200d6ec <__hexnan+0x1c4>
 200d60c:	9807883a 	mov	r3,r19
 200d610:	80800017 	ldw	r2,0(r16)
 200d614:	84000104 	addi	r16,r16,4
 200d618:	18800015 	stw	r2,0(r3)
 200d61c:	18c00104 	addi	r3,r3,4
 200d620:	a43ffb2e 	bgeu	r20,r16,200d610 <__hexnan+0xe8>
 200d624:	18000015 	stw	zero,0(r3)
 200d628:	18c00104 	addi	r3,r3,4
 200d62c:	a0fffd2e 	bgeu	r20,r3,200d624 <__hexnan+0xfc>
 200d630:	a0800017 	ldw	r2,0(r20)
 200d634:	1000071e 	bne	r2,zero,200d654 <__hexnan+0x12c>
 200d638:	9d004326 	beq	r19,r20,200d748 <__hexnan+0x220>
 200d63c:	a007883a 	mov	r3,r20
 200d640:	00000106 	br	200d648 <__hexnan+0x120>
 200d644:	98c04026 	beq	r19,r3,200d748 <__hexnan+0x220>
 200d648:	18ffff04 	addi	r3,r3,-4
 200d64c:	18800017 	ldw	r2,0(r3)
 200d650:	103ffc26 	beq	r2,zero,200d644 <__hexnan+0x11c>
 200d654:	00c00144 	movi	r3,5
 200d658:	1805883a 	mov	r2,r3
 200d65c:	dfc00b17 	ldw	ra,44(sp)
 200d660:	df000a17 	ldw	fp,40(sp)
 200d664:	ddc00917 	ldw	r23,36(sp)
 200d668:	dd800817 	ldw	r22,32(sp)
 200d66c:	dd400717 	ldw	r21,28(sp)
 200d670:	dd000617 	ldw	r20,24(sp)
 200d674:	dcc00517 	ldw	r19,20(sp)
 200d678:	dc800417 	ldw	r18,16(sp)
 200d67c:	dc400317 	ldw	r17,12(sp)
 200d680:	dc000217 	ldw	r16,8(sp)
 200d684:	dec00c04 	addi	sp,sp,48
 200d688:	f800283a 	ret
 200d68c:	31800044 	addi	r6,r6,1
 200d690:	00800204 	movi	r2,8
 200d694:	94800044 	addi	r18,r18,1
 200d698:	1180040e 	bge	r2,r6,200d6ac <__hexnan+0x184>
 200d69c:	9c3fc72e 	bgeu	r19,r16,200d5bc <__hexnan+0x94>
 200d6a0:	843fff04 	addi	r16,r16,-4
 200d6a4:	80000015 	stw	zero,0(r16)
 200d6a8:	01800044 	movi	r6,1
 200d6ac:	80800017 	ldw	r2,0(r16)
 200d6b0:	18c003cc 	andi	r3,r3,15
 200d6b4:	1004913a 	slli	r2,r2,4
 200d6b8:	10c4b03a 	or	r2,r2,r3
 200d6bc:	80800015 	stw	r2,0(r16)
 200d6c0:	003fbe06 	br	200d5bc <__hexnan+0x94>
 200d6c4:	843fff04 	addi	r16,r16,-4
 200d6c8:	802b883a 	mov	r21,r16
 200d6cc:	902f883a 	mov	r23,r18
 200d6d0:	000d883a 	mov	r6,zero
 200d6d4:	80000015 	stw	zero,0(r16)
 200d6d8:	003fb806 	br	200d5bc <__hexnan+0x94>
 200d6dc:	8009883a 	mov	r4,r16
 200d6e0:	a80b883a 	mov	r5,r21
 200d6e4:	200d4dc0 	call	200d4dc <L_shift>
 200d6e8:	003fc006 	br	200d5ec <__hexnan+0xc4>
 200d6ec:	e03fd01e 	bne	fp,zero,200d630 <__hexnan+0x108>
 200d6f0:	d8c00017 	ldw	r3,0(sp)
 200d6f4:	00800804 	movi	r2,32
 200d6f8:	10c5c83a 	sub	r2,r2,r3
 200d6fc:	00ffffc4 	movi	r3,-1
 200d700:	1886d83a 	srl	r3,r3,r2
 200d704:	a0800017 	ldw	r2,0(r20)
 200d708:	10c4703a 	and	r2,r2,r3
 200d70c:	a0800015 	stw	r2,0(r20)
 200d710:	003fc806 	br	200d634 <__hexnan+0x10c>
 200d714:	008001c4 	movi	r2,7
 200d718:	11bfbb16 	blt	r2,r6,200d608 <__hexnan+0xe0>
 200d71c:	a80b883a 	mov	r5,r21
 200d720:	8009883a 	mov	r4,r16
 200d724:	200d4dc0 	call	200d4dc <L_shift>
 200d728:	9c3ff02e 	bgeu	r19,r16,200d6ec <__hexnan+0x1c4>
 200d72c:	003fb706 	br	200d60c <__hexnan+0xe4>
 200d730:	00800a44 	movi	r2,41
 200d734:	20800826 	beq	r4,r2,200d758 <__hexnan+0x230>
 200d738:	00c00104 	movi	r3,4
 200d73c:	003fc606 	br	200d658 <__hexnan+0x130>
 200d740:	200cbc80 	call	200cbc8 <__hexdig_init>
 200d744:	003f8a06 	br	200d570 <__hexnan+0x48>
 200d748:	00800044 	movi	r2,1
 200d74c:	00c00144 	movi	r3,5
 200d750:	98800015 	stw	r2,0(r19)
 200d754:	003fc006 	br	200d658 <__hexnan+0x130>
 200d758:	903ff726 	beq	r18,zero,200d738 <__hexnan+0x210>
 200d75c:	d8c00117 	ldw	r3,4(sp)
 200d760:	88800044 	addi	r2,r17,1
 200d764:	18800015 	stw	r2,0(r3)
 200d768:	857fa72e 	bgeu	r16,r21,200d608 <__hexnan+0xe0>
 200d76c:	003fe906 	br	200d714 <__hexnan+0x1ec>

0200d770 <__muldi3>:
 200d770:	defff204 	addi	sp,sp,-56
 200d774:	df000c15 	stw	fp,48(sp)
 200d778:	3038d43a 	srli	fp,r6,16
 200d77c:	dd000815 	stw	r20,32(sp)
 200d780:	dc400515 	stw	r17,20(sp)
 200d784:	2028d43a 	srli	r20,r4,16
 200d788:	247fffcc 	andi	r17,r4,65535
 200d78c:	dc000415 	stw	r16,16(sp)
 200d790:	343fffcc 	andi	r16,r6,65535
 200d794:	dcc00715 	stw	r19,28(sp)
 200d798:	d9000015 	stw	r4,0(sp)
 200d79c:	2827883a 	mov	r19,r5
 200d7a0:	8809883a 	mov	r4,r17
 200d7a4:	d9400115 	stw	r5,4(sp)
 200d7a8:	800b883a 	mov	r5,r16
 200d7ac:	d9800215 	stw	r6,8(sp)
 200d7b0:	dfc00d15 	stw	ra,52(sp)
 200d7b4:	d9c00315 	stw	r7,12(sp)
 200d7b8:	dd800a15 	stw	r22,40(sp)
 200d7bc:	dd400915 	stw	r21,36(sp)
 200d7c0:	302d883a 	mov	r22,r6
 200d7c4:	ddc00b15 	stw	r23,44(sp)
 200d7c8:	dc800615 	stw	r18,24(sp)
 200d7cc:	2000abc0 	call	2000abc <__mulsi3>
 200d7d0:	8809883a 	mov	r4,r17
 200d7d4:	e00b883a 	mov	r5,fp
 200d7d8:	102b883a 	mov	r21,r2
 200d7dc:	2000abc0 	call	2000abc <__mulsi3>
 200d7e0:	800b883a 	mov	r5,r16
 200d7e4:	a009883a 	mov	r4,r20
 200d7e8:	1023883a 	mov	r17,r2
 200d7ec:	2000abc0 	call	2000abc <__mulsi3>
 200d7f0:	a009883a 	mov	r4,r20
 200d7f4:	e00b883a 	mov	r5,fp
 200d7f8:	1021883a 	mov	r16,r2
 200d7fc:	2000abc0 	call	2000abc <__mulsi3>
 200d800:	a8ffffcc 	andi	r3,r21,65535
 200d804:	a82ad43a 	srli	r21,r21,16
 200d808:	8c23883a 	add	r17,r17,r16
 200d80c:	1011883a 	mov	r8,r2
 200d810:	ac6b883a 	add	r21,r21,r17
 200d814:	a804943a 	slli	r2,r21,16
 200d818:	b009883a 	mov	r4,r22
 200d81c:	980b883a 	mov	r5,r19
 200d820:	10c7883a 	add	r3,r2,r3
 200d824:	a812d43a 	srli	r9,r21,16
 200d828:	180d883a 	mov	r6,r3
 200d82c:	ac00022e 	bgeu	r21,r16,200d838 <__muldi3+0xc8>
 200d830:	00800074 	movhi	r2,1
 200d834:	4091883a 	add	r8,r8,r2
 200d838:	4267883a 	add	r19,r8,r9
 200d83c:	302d883a 	mov	r22,r6
 200d840:	2000abc0 	call	2000abc <__mulsi3>
 200d844:	d9400317 	ldw	r5,12(sp)
 200d848:	d9000017 	ldw	r4,0(sp)
 200d84c:	1023883a 	mov	r17,r2
 200d850:	2000abc0 	call	2000abc <__mulsi3>
 200d854:	14cb883a 	add	r5,r2,r19
 200d858:	894b883a 	add	r5,r17,r5
 200d85c:	b005883a 	mov	r2,r22
 200d860:	2807883a 	mov	r3,r5
 200d864:	dfc00d17 	ldw	ra,52(sp)
 200d868:	df000c17 	ldw	fp,48(sp)
 200d86c:	ddc00b17 	ldw	r23,44(sp)
 200d870:	dd800a17 	ldw	r22,40(sp)
 200d874:	dd400917 	ldw	r21,36(sp)
 200d878:	dd000817 	ldw	r20,32(sp)
 200d87c:	dcc00717 	ldw	r19,28(sp)
 200d880:	dc800617 	ldw	r18,24(sp)
 200d884:	dc400517 	ldw	r17,20(sp)
 200d888:	dc000417 	ldw	r16,16(sp)
 200d88c:	dec00e04 	addi	sp,sp,56
 200d890:	f800283a 	ret

0200d894 <__fixunsdfsi>:
 200d894:	defffb04 	addi	sp,sp,-20
 200d898:	dc400115 	stw	r17,4(sp)
 200d89c:	dc000015 	stw	r16,0(sp)
 200d8a0:	04507834 	movhi	r17,16864
 200d8a4:	0021883a 	mov	r16,zero
 200d8a8:	800d883a 	mov	r6,r16
 200d8ac:	880f883a 	mov	r7,r17
 200d8b0:	dcc00315 	stw	r19,12(sp)
 200d8b4:	dc800215 	stw	r18,8(sp)
 200d8b8:	2827883a 	mov	r19,r5
 200d8bc:	2025883a 	mov	r18,r4
 200d8c0:	dfc00415 	stw	ra,16(sp)
 200d8c4:	200f4240 	call	200f424 <__gedf2>
 200d8c8:	000d883a 	mov	r6,zero
 200d8cc:	880f883a 	mov	r7,r17
 200d8d0:	980b883a 	mov	r5,r19
 200d8d4:	9009883a 	mov	r4,r18
 200d8d8:	10000d16 	blt	r2,zero,200d910 <__fixunsdfsi+0x7c>
 200d8dc:	200eb7c0 	call	200eb7c <__subdf3>
 200d8e0:	180b883a 	mov	r5,r3
 200d8e4:	1009883a 	mov	r4,r2
 200d8e8:	200f6b40 	call	200f6b4 <__fixdfsi>
 200d8ec:	00e00034 	movhi	r3,32768
 200d8f0:	10c5883a 	add	r2,r2,r3
 200d8f4:	dfc00417 	ldw	ra,16(sp)
 200d8f8:	dcc00317 	ldw	r19,12(sp)
 200d8fc:	dc800217 	ldw	r18,8(sp)
 200d900:	dc400117 	ldw	r17,4(sp)
 200d904:	dc000017 	ldw	r16,0(sp)
 200d908:	dec00504 	addi	sp,sp,20
 200d90c:	f800283a 	ret
 200d910:	980b883a 	mov	r5,r19
 200d914:	9009883a 	mov	r4,r18
 200d918:	200f6b40 	call	200f6b4 <__fixdfsi>
 200d91c:	dfc00417 	ldw	ra,16(sp)
 200d920:	dcc00317 	ldw	r19,12(sp)
 200d924:	dc800217 	ldw	r18,8(sp)
 200d928:	dc400117 	ldw	r17,4(sp)
 200d92c:	dc000017 	ldw	r16,0(sp)
 200d930:	dec00504 	addi	sp,sp,20
 200d934:	f800283a 	ret

0200d938 <__udivdi3>:
 200d938:	defff104 	addi	sp,sp,-60
 200d93c:	0015883a 	mov	r10,zero
 200d940:	2005883a 	mov	r2,r4
 200d944:	3011883a 	mov	r8,r6
 200d948:	df000d15 	stw	fp,52(sp)
 200d94c:	dd400a15 	stw	r21,40(sp)
 200d950:	dcc00815 	stw	r19,32(sp)
 200d954:	dfc00e15 	stw	ra,56(sp)
 200d958:	ddc00c15 	stw	r23,48(sp)
 200d95c:	dd800b15 	stw	r22,44(sp)
 200d960:	dd000915 	stw	r20,36(sp)
 200d964:	dc800715 	stw	r18,28(sp)
 200d968:	dc400615 	stw	r17,24(sp)
 200d96c:	dc000515 	stw	r16,20(sp)
 200d970:	da800315 	stw	r10,12(sp)
 200d974:	4027883a 	mov	r19,r8
 200d978:	1039883a 	mov	fp,r2
 200d97c:	282b883a 	mov	r21,r5
 200d980:	da800415 	stw	r10,16(sp)
 200d984:	3800401e 	bne	r7,zero,200da88 <__udivdi3+0x150>
 200d988:	2a006536 	bltu	r5,r8,200db20 <__udivdi3+0x1e8>
 200d98c:	4000b526 	beq	r8,zero,200dc64 <__udivdi3+0x32c>
 200d990:	00bfffd4 	movui	r2,65535
 200d994:	14c0ad36 	bltu	r2,r19,200dc4c <__udivdi3+0x314>
 200d998:	00803fc4 	movi	r2,255
 200d99c:	14c15e36 	bltu	r2,r19,200df18 <__udivdi3+0x5e0>
 200d9a0:	000b883a 	mov	r5,zero
 200d9a4:	0005883a 	mov	r2,zero
 200d9a8:	9884d83a 	srl	r2,r19,r2
 200d9ac:	01008074 	movhi	r4,513
 200d9b0:	210f6004 	addi	r4,r4,15744
 200d9b4:	01800804 	movi	r6,32
 200d9b8:	1105883a 	add	r2,r2,r4
 200d9bc:	10c00003 	ldbu	r3,0(r2)
 200d9c0:	28c7883a 	add	r3,r5,r3
 200d9c4:	30e9c83a 	sub	r20,r6,r3
 200d9c8:	a0010a1e 	bne	r20,zero,200ddf4 <__udivdi3+0x4bc>
 200d9cc:	982ed43a 	srli	r23,r19,16
 200d9d0:	acebc83a 	sub	r21,r21,r19
 200d9d4:	9dbfffcc 	andi	r22,r19,65535
 200d9d8:	05000044 	movi	r20,1
 200d9dc:	a809883a 	mov	r4,r21
 200d9e0:	b80b883a 	mov	r5,r23
 200d9e4:	200fad00 	call	200fad0 <__udivsi3>
 200d9e8:	100b883a 	mov	r5,r2
 200d9ec:	b009883a 	mov	r4,r22
 200d9f0:	1021883a 	mov	r16,r2
 200d9f4:	2000abc0 	call	2000abc <__mulsi3>
 200d9f8:	a809883a 	mov	r4,r21
 200d9fc:	b80b883a 	mov	r5,r23
 200da00:	1023883a 	mov	r17,r2
 200da04:	200fad80 	call	200fad8 <__umodsi3>
 200da08:	1004943a 	slli	r2,r2,16
 200da0c:	e006d43a 	srli	r3,fp,16
 200da10:	10c4b03a 	or	r2,r2,r3
 200da14:	1440042e 	bgeu	r2,r17,200da28 <__udivdi3+0xf0>
 200da18:	14c5883a 	add	r2,r2,r19
 200da1c:	843fffc4 	addi	r16,r16,-1
 200da20:	14c00136 	bltu	r2,r19,200da28 <__udivdi3+0xf0>
 200da24:	14415c36 	bltu	r2,r17,200df98 <__udivdi3+0x660>
 200da28:	1463c83a 	sub	r17,r2,r17
 200da2c:	8809883a 	mov	r4,r17
 200da30:	b80b883a 	mov	r5,r23
 200da34:	200fad00 	call	200fad0 <__udivsi3>
 200da38:	100b883a 	mov	r5,r2
 200da3c:	b009883a 	mov	r4,r22
 200da40:	102b883a 	mov	r21,r2
 200da44:	2000abc0 	call	2000abc <__mulsi3>
 200da48:	8809883a 	mov	r4,r17
 200da4c:	b80b883a 	mov	r5,r23
 200da50:	1025883a 	mov	r18,r2
 200da54:	200fad80 	call	200fad8 <__umodsi3>
 200da58:	1004943a 	slli	r2,r2,16
 200da5c:	e0ffffcc 	andi	r3,fp,65535
 200da60:	10c4b03a 	or	r2,r2,r3
 200da64:	1480042e 	bgeu	r2,r18,200da78 <__udivdi3+0x140>
 200da68:	9885883a 	add	r2,r19,r2
 200da6c:	ad7fffc4 	addi	r21,r21,-1
 200da70:	14c00136 	bltu	r2,r19,200da78 <__udivdi3+0x140>
 200da74:	14813c36 	bltu	r2,r18,200df68 <__udivdi3+0x630>
 200da78:	8004943a 	slli	r2,r16,16
 200da7c:	a009883a 	mov	r4,r20
 200da80:	a884b03a 	or	r2,r21,r2
 200da84:	00001506 	br	200dadc <__udivdi3+0x1a4>
 200da88:	380d883a 	mov	r6,r7
 200da8c:	29c06c36 	bltu	r5,r7,200dc40 <__udivdi3+0x308>
 200da90:	00bfffd4 	movui	r2,65535
 200da94:	11c06436 	bltu	r2,r7,200dc28 <__udivdi3+0x2f0>
 200da98:	00803fc4 	movi	r2,255
 200da9c:	11c11836 	bltu	r2,r7,200df00 <__udivdi3+0x5c8>
 200daa0:	000b883a 	mov	r5,zero
 200daa4:	0005883a 	mov	r2,zero
 200daa8:	3084d83a 	srl	r2,r6,r2
 200daac:	01008074 	movhi	r4,513
 200dab0:	210f6004 	addi	r4,r4,15744
 200dab4:	01c00804 	movi	r7,32
 200dab8:	1105883a 	add	r2,r2,r4
 200dabc:	10c00003 	ldbu	r3,0(r2)
 200dac0:	28c7883a 	add	r3,r5,r3
 200dac4:	38edc83a 	sub	r22,r7,r3
 200dac8:	b000731e 	bne	r22,zero,200dc98 <__udivdi3+0x360>
 200dacc:	35400136 	bltu	r6,r21,200dad4 <__udivdi3+0x19c>
 200dad0:	e4c05b36 	bltu	fp,r19,200dc40 <__udivdi3+0x308>
 200dad4:	00800044 	movi	r2,1
 200dad8:	0009883a 	mov	r4,zero
 200dadc:	d8800315 	stw	r2,12(sp)
 200dae0:	d9400317 	ldw	r5,12(sp)
 200dae4:	2007883a 	mov	r3,r4
 200dae8:	d9000415 	stw	r4,16(sp)
 200daec:	2805883a 	mov	r2,r5
 200daf0:	dfc00e17 	ldw	ra,56(sp)
 200daf4:	df000d17 	ldw	fp,52(sp)
 200daf8:	ddc00c17 	ldw	r23,48(sp)
 200dafc:	dd800b17 	ldw	r22,44(sp)
 200db00:	dd400a17 	ldw	r21,40(sp)
 200db04:	dd000917 	ldw	r20,36(sp)
 200db08:	dcc00817 	ldw	r19,32(sp)
 200db0c:	dc800717 	ldw	r18,28(sp)
 200db10:	dc400617 	ldw	r17,24(sp)
 200db14:	dc000517 	ldw	r16,20(sp)
 200db18:	dec00f04 	addi	sp,sp,60
 200db1c:	f800283a 	ret
 200db20:	00bfffd4 	movui	r2,65535
 200db24:	12005636 	bltu	r2,r8,200dc80 <__udivdi3+0x348>
 200db28:	00803fc4 	movi	r2,255
 200db2c:	12010036 	bltu	r2,r8,200df30 <__udivdi3+0x5f8>
 200db30:	000b883a 	mov	r5,zero
 200db34:	0005883a 	mov	r2,zero
 200db38:	9884d83a 	srl	r2,r19,r2
 200db3c:	01008074 	movhi	r4,513
 200db40:	210f6004 	addi	r4,r4,15744
 200db44:	01800804 	movi	r6,32
 200db48:	1105883a 	add	r2,r2,r4
 200db4c:	10c00003 	ldbu	r3,0(r2)
 200db50:	28c7883a 	add	r3,r5,r3
 200db54:	30cbc83a 	sub	r5,r6,r3
 200db58:	28000626 	beq	r5,zero,200db74 <__udivdi3+0x23c>
 200db5c:	3145c83a 	sub	r2,r6,r5
 200db60:	e084d83a 	srl	r2,fp,r2
 200db64:	a946983a 	sll	r3,r21,r5
 200db68:	e178983a 	sll	fp,fp,r5
 200db6c:	9966983a 	sll	r19,r19,r5
 200db70:	18aab03a 	or	r21,r3,r2
 200db74:	982ed43a 	srli	r23,r19,16
 200db78:	a809883a 	mov	r4,r21
 200db7c:	9cbfffcc 	andi	r18,r19,65535
 200db80:	b80b883a 	mov	r5,r23
 200db84:	200fad00 	call	200fad0 <__udivsi3>
 200db88:	100b883a 	mov	r5,r2
 200db8c:	9009883a 	mov	r4,r18
 200db90:	1021883a 	mov	r16,r2
 200db94:	2000abc0 	call	2000abc <__mulsi3>
 200db98:	a809883a 	mov	r4,r21
 200db9c:	b80b883a 	mov	r5,r23
 200dba0:	1023883a 	mov	r17,r2
 200dba4:	200fad80 	call	200fad8 <__umodsi3>
 200dba8:	1004943a 	slli	r2,r2,16
 200dbac:	e006d43a 	srli	r3,fp,16
 200dbb0:	10c4b03a 	or	r2,r2,r3
 200dbb4:	1440042e 	bgeu	r2,r17,200dbc8 <__udivdi3+0x290>
 200dbb8:	14c5883a 	add	r2,r2,r19
 200dbbc:	843fffc4 	addi	r16,r16,-1
 200dbc0:	14c00136 	bltu	r2,r19,200dbc8 <__udivdi3+0x290>
 200dbc4:	1440ea36 	bltu	r2,r17,200df70 <__udivdi3+0x638>
 200dbc8:	1463c83a 	sub	r17,r2,r17
 200dbcc:	8809883a 	mov	r4,r17
 200dbd0:	b80b883a 	mov	r5,r23
 200dbd4:	200fad00 	call	200fad0 <__udivsi3>
 200dbd8:	100b883a 	mov	r5,r2
 200dbdc:	9009883a 	mov	r4,r18
 200dbe0:	102b883a 	mov	r21,r2
 200dbe4:	2000abc0 	call	2000abc <__mulsi3>
 200dbe8:	8809883a 	mov	r4,r17
 200dbec:	b80b883a 	mov	r5,r23
 200dbf0:	1025883a 	mov	r18,r2
 200dbf4:	200fad80 	call	200fad8 <__umodsi3>
 200dbf8:	1004943a 	slli	r2,r2,16
 200dbfc:	e0ffffcc 	andi	r3,fp,65535
 200dc00:	10c4b03a 	or	r2,r2,r3
 200dc04:	1480042e 	bgeu	r2,r18,200dc18 <__udivdi3+0x2e0>
 200dc08:	9885883a 	add	r2,r19,r2
 200dc0c:	ad7fffc4 	addi	r21,r21,-1
 200dc10:	14c00136 	bltu	r2,r19,200dc18 <__udivdi3+0x2e0>
 200dc14:	1480d936 	bltu	r2,r18,200df7c <__udivdi3+0x644>
 200dc18:	8004943a 	slli	r2,r16,16
 200dc1c:	0009883a 	mov	r4,zero
 200dc20:	a884b03a 	or	r2,r21,r2
 200dc24:	003fad06 	br	200dadc <__udivdi3+0x1a4>
 200dc28:	00804034 	movhi	r2,256
 200dc2c:	10bfffc4 	addi	r2,r2,-1
 200dc30:	11c0b636 	bltu	r2,r7,200df0c <__udivdi3+0x5d4>
 200dc34:	01400404 	movi	r5,16
 200dc38:	2805883a 	mov	r2,r5
 200dc3c:	003f9a06 	br	200daa8 <__udivdi3+0x170>
 200dc40:	0005883a 	mov	r2,zero
 200dc44:	0009883a 	mov	r4,zero
 200dc48:	003fa406 	br	200dadc <__udivdi3+0x1a4>
 200dc4c:	00804034 	movhi	r2,256
 200dc50:	10bfffc4 	addi	r2,r2,-1
 200dc54:	14c0b336 	bltu	r2,r19,200df24 <__udivdi3+0x5ec>
 200dc58:	01400404 	movi	r5,16
 200dc5c:	2805883a 	mov	r2,r5
 200dc60:	003f5106 	br	200d9a8 <__udivdi3+0x70>
 200dc64:	01000044 	movi	r4,1
 200dc68:	000b883a 	mov	r5,zero
 200dc6c:	200fad00 	call	200fad0 <__udivsi3>
 200dc70:	1027883a 	mov	r19,r2
 200dc74:	00bfffd4 	movui	r2,65535
 200dc78:	14fff436 	bltu	r2,r19,200dc4c <__udivdi3+0x314>
 200dc7c:	003f4606 	br	200d998 <__udivdi3+0x60>
 200dc80:	00804034 	movhi	r2,256
 200dc84:	10bfffc4 	addi	r2,r2,-1
 200dc88:	1200ac36 	bltu	r2,r8,200df3c <__udivdi3+0x604>
 200dc8c:	01400404 	movi	r5,16
 200dc90:	2805883a 	mov	r2,r5
 200dc94:	003fa806 	br	200db38 <__udivdi3+0x200>
 200dc98:	3d85c83a 	sub	r2,r7,r22
 200dc9c:	3588983a 	sll	r4,r6,r22
 200dca0:	9886d83a 	srl	r3,r19,r2
 200dca4:	a8a2d83a 	srl	r17,r21,r2
 200dca8:	e084d83a 	srl	r2,fp,r2
 200dcac:	20eeb03a 	or	r23,r4,r3
 200dcb0:	b824d43a 	srli	r18,r23,16
 200dcb4:	ad86983a 	sll	r3,r21,r22
 200dcb8:	8809883a 	mov	r4,r17
 200dcbc:	900b883a 	mov	r5,r18
 200dcc0:	1886b03a 	or	r3,r3,r2
 200dcc4:	d8c00115 	stw	r3,4(sp)
 200dcc8:	bc3fffcc 	andi	r16,r23,65535
 200dccc:	200fad00 	call	200fad0 <__udivsi3>
 200dcd0:	100b883a 	mov	r5,r2
 200dcd4:	8009883a 	mov	r4,r16
 200dcd8:	1029883a 	mov	r20,r2
 200dcdc:	2000abc0 	call	2000abc <__mulsi3>
 200dce0:	900b883a 	mov	r5,r18
 200dce4:	8809883a 	mov	r4,r17
 200dce8:	102b883a 	mov	r21,r2
 200dcec:	200fad80 	call	200fad8 <__umodsi3>
 200dcf0:	d9400117 	ldw	r5,4(sp)
 200dcf4:	1004943a 	slli	r2,r2,16
 200dcf8:	9da6983a 	sll	r19,r19,r22
 200dcfc:	2806d43a 	srli	r3,r5,16
 200dd00:	10c4b03a 	or	r2,r2,r3
 200dd04:	1540032e 	bgeu	r2,r21,200dd14 <__udivdi3+0x3dc>
 200dd08:	15c5883a 	add	r2,r2,r23
 200dd0c:	a53fffc4 	addi	r20,r20,-1
 200dd10:	15c0912e 	bgeu	r2,r23,200df58 <__udivdi3+0x620>
 200dd14:	1563c83a 	sub	r17,r2,r21
 200dd18:	8809883a 	mov	r4,r17
 200dd1c:	900b883a 	mov	r5,r18
 200dd20:	200fad00 	call	200fad0 <__udivsi3>
 200dd24:	100b883a 	mov	r5,r2
 200dd28:	8009883a 	mov	r4,r16
 200dd2c:	102b883a 	mov	r21,r2
 200dd30:	2000abc0 	call	2000abc <__mulsi3>
 200dd34:	8809883a 	mov	r4,r17
 200dd38:	900b883a 	mov	r5,r18
 200dd3c:	1021883a 	mov	r16,r2
 200dd40:	200fad80 	call	200fad8 <__umodsi3>
 200dd44:	da800117 	ldw	r10,4(sp)
 200dd48:	1004943a 	slli	r2,r2,16
 200dd4c:	50ffffcc 	andi	r3,r10,65535
 200dd50:	10c6b03a 	or	r3,r2,r3
 200dd54:	1c00032e 	bgeu	r3,r16,200dd64 <__udivdi3+0x42c>
 200dd58:	1dc7883a 	add	r3,r3,r23
 200dd5c:	ad7fffc4 	addi	r21,r21,-1
 200dd60:	1dc0792e 	bgeu	r3,r23,200df48 <__udivdi3+0x610>
 200dd64:	a004943a 	slli	r2,r20,16
 200dd68:	982ed43a 	srli	r23,r19,16
 200dd6c:	9cffffcc 	andi	r19,r19,65535
 200dd70:	a8a4b03a 	or	r18,r21,r2
 200dd74:	947fffcc 	andi	r17,r18,65535
 200dd78:	902ad43a 	srli	r21,r18,16
 200dd7c:	8809883a 	mov	r4,r17
 200dd80:	980b883a 	mov	r5,r19
 200dd84:	1c21c83a 	sub	r16,r3,r16
 200dd88:	2000abc0 	call	2000abc <__mulsi3>
 200dd8c:	8809883a 	mov	r4,r17
 200dd90:	b80b883a 	mov	r5,r23
 200dd94:	1029883a 	mov	r20,r2
 200dd98:	2000abc0 	call	2000abc <__mulsi3>
 200dd9c:	980b883a 	mov	r5,r19
 200dda0:	a809883a 	mov	r4,r21
 200dda4:	1023883a 	mov	r17,r2
 200dda8:	2000abc0 	call	2000abc <__mulsi3>
 200ddac:	a809883a 	mov	r4,r21
 200ddb0:	b80b883a 	mov	r5,r23
 200ddb4:	1027883a 	mov	r19,r2
 200ddb8:	2000abc0 	call	2000abc <__mulsi3>
 200ddbc:	1009883a 	mov	r4,r2
 200ddc0:	a004d43a 	srli	r2,r20,16
 200ddc4:	8ce3883a 	add	r17,r17,r19
 200ddc8:	1447883a 	add	r3,r2,r17
 200ddcc:	1cc0022e 	bgeu	r3,r19,200ddd8 <__udivdi3+0x4a0>
 200ddd0:	00800074 	movhi	r2,1
 200ddd4:	2089883a 	add	r4,r4,r2
 200ddd8:	1804d43a 	srli	r2,r3,16
 200dddc:	2085883a 	add	r2,r4,r2
 200dde0:	80804436 	bltu	r16,r2,200def4 <__udivdi3+0x5bc>
 200dde4:	80803e26 	beq	r16,r2,200dee0 <__udivdi3+0x5a8>
 200dde8:	9005883a 	mov	r2,r18
 200ddec:	0009883a 	mov	r4,zero
 200ddf0:	003f3a06 	br	200dadc <__udivdi3+0x1a4>
 200ddf4:	9d26983a 	sll	r19,r19,r20
 200ddf8:	3505c83a 	sub	r2,r6,r20
 200ddfc:	a8a2d83a 	srl	r17,r21,r2
 200de00:	982ed43a 	srli	r23,r19,16
 200de04:	e084d83a 	srl	r2,fp,r2
 200de08:	ad06983a 	sll	r3,r21,r20
 200de0c:	8809883a 	mov	r4,r17
 200de10:	b80b883a 	mov	r5,r23
 200de14:	1886b03a 	or	r3,r3,r2
 200de18:	d8c00015 	stw	r3,0(sp)
 200de1c:	9dbfffcc 	andi	r22,r19,65535
 200de20:	200fad00 	call	200fad0 <__udivsi3>
 200de24:	100b883a 	mov	r5,r2
 200de28:	b009883a 	mov	r4,r22
 200de2c:	d8800215 	stw	r2,8(sp)
 200de30:	2000abc0 	call	2000abc <__mulsi3>
 200de34:	8809883a 	mov	r4,r17
 200de38:	b80b883a 	mov	r5,r23
 200de3c:	102b883a 	mov	r21,r2
 200de40:	200fad80 	call	200fad8 <__umodsi3>
 200de44:	d9000017 	ldw	r4,0(sp)
 200de48:	1004943a 	slli	r2,r2,16
 200de4c:	2006d43a 	srli	r3,r4,16
 200de50:	10c4b03a 	or	r2,r2,r3
 200de54:	1540052e 	bgeu	r2,r21,200de6c <__udivdi3+0x534>
 200de58:	d9400217 	ldw	r5,8(sp)
 200de5c:	14c5883a 	add	r2,r2,r19
 200de60:	297fffc4 	addi	r5,r5,-1
 200de64:	d9400215 	stw	r5,8(sp)
 200de68:	14c0462e 	bgeu	r2,r19,200df84 <__udivdi3+0x64c>
 200de6c:	1563c83a 	sub	r17,r2,r21
 200de70:	8809883a 	mov	r4,r17
 200de74:	b80b883a 	mov	r5,r23
 200de78:	200fad00 	call	200fad0 <__udivsi3>
 200de7c:	100b883a 	mov	r5,r2
 200de80:	b009883a 	mov	r4,r22
 200de84:	1025883a 	mov	r18,r2
 200de88:	2000abc0 	call	2000abc <__mulsi3>
 200de8c:	8809883a 	mov	r4,r17
 200de90:	b80b883a 	mov	r5,r23
 200de94:	1021883a 	mov	r16,r2
 200de98:	200fad80 	call	200fad8 <__umodsi3>
 200de9c:	da800017 	ldw	r10,0(sp)
 200dea0:	1004943a 	slli	r2,r2,16
 200dea4:	50ffffcc 	andi	r3,r10,65535
 200dea8:	10c6b03a 	or	r3,r2,r3
 200deac:	1c00062e 	bgeu	r3,r16,200dec8 <__udivdi3+0x590>
 200deb0:	1cc7883a 	add	r3,r3,r19
 200deb4:	94bfffc4 	addi	r18,r18,-1
 200deb8:	1cc00336 	bltu	r3,r19,200dec8 <__udivdi3+0x590>
 200debc:	1c00022e 	bgeu	r3,r16,200dec8 <__udivdi3+0x590>
 200dec0:	94bfffc4 	addi	r18,r18,-1
 200dec4:	1cc7883a 	add	r3,r3,r19
 200dec8:	d9000217 	ldw	r4,8(sp)
 200decc:	e538983a 	sll	fp,fp,r20
 200ded0:	1c2bc83a 	sub	r21,r3,r16
 200ded4:	2004943a 	slli	r2,r4,16
 200ded8:	90a8b03a 	or	r20,r18,r2
 200dedc:	003ebf06 	br	200d9dc <__udivdi3+0xa4>
 200dee0:	1804943a 	slli	r2,r3,16
 200dee4:	e588983a 	sll	r4,fp,r22
 200dee8:	a0ffffcc 	andi	r3,r20,65535
 200deec:	10c5883a 	add	r2,r2,r3
 200def0:	20bfbd2e 	bgeu	r4,r2,200dde8 <__udivdi3+0x4b0>
 200def4:	90bfffc4 	addi	r2,r18,-1
 200def8:	0009883a 	mov	r4,zero
 200defc:	003ef706 	br	200dadc <__udivdi3+0x1a4>
 200df00:	01400204 	movi	r5,8
 200df04:	2805883a 	mov	r2,r5
 200df08:	003ee706 	br	200daa8 <__udivdi3+0x170>
 200df0c:	01400604 	movi	r5,24
 200df10:	2805883a 	mov	r2,r5
 200df14:	003ee406 	br	200daa8 <__udivdi3+0x170>
 200df18:	01400204 	movi	r5,8
 200df1c:	2805883a 	mov	r2,r5
 200df20:	003ea106 	br	200d9a8 <__udivdi3+0x70>
 200df24:	01400604 	movi	r5,24
 200df28:	2805883a 	mov	r2,r5
 200df2c:	003e9e06 	br	200d9a8 <__udivdi3+0x70>
 200df30:	01400204 	movi	r5,8
 200df34:	2805883a 	mov	r2,r5
 200df38:	003eff06 	br	200db38 <__udivdi3+0x200>
 200df3c:	01400604 	movi	r5,24
 200df40:	2805883a 	mov	r2,r5
 200df44:	003efc06 	br	200db38 <__udivdi3+0x200>
 200df48:	1c3f862e 	bgeu	r3,r16,200dd64 <__udivdi3+0x42c>
 200df4c:	1dc7883a 	add	r3,r3,r23
 200df50:	ad7fffc4 	addi	r21,r21,-1
 200df54:	003f8306 	br	200dd64 <__udivdi3+0x42c>
 200df58:	157f6e2e 	bgeu	r2,r21,200dd14 <__udivdi3+0x3dc>
 200df5c:	a53fffc4 	addi	r20,r20,-1
 200df60:	15c5883a 	add	r2,r2,r23
 200df64:	003f6b06 	br	200dd14 <__udivdi3+0x3dc>
 200df68:	ad7fffc4 	addi	r21,r21,-1
 200df6c:	003ec206 	br	200da78 <__udivdi3+0x140>
 200df70:	843fffc4 	addi	r16,r16,-1
 200df74:	14c5883a 	add	r2,r2,r19
 200df78:	003f1306 	br	200dbc8 <__udivdi3+0x290>
 200df7c:	ad7fffc4 	addi	r21,r21,-1
 200df80:	003f2506 	br	200dc18 <__udivdi3+0x2e0>
 200df84:	157fb92e 	bgeu	r2,r21,200de6c <__udivdi3+0x534>
 200df88:	297fffc4 	addi	r5,r5,-1
 200df8c:	14c5883a 	add	r2,r2,r19
 200df90:	d9400215 	stw	r5,8(sp)
 200df94:	003fb506 	br	200de6c <__udivdi3+0x534>
 200df98:	843fffc4 	addi	r16,r16,-1
 200df9c:	14c5883a 	add	r2,r2,r19
 200dfa0:	003ea106 	br	200da28 <__udivdi3+0xf0>

0200dfa4 <__umoddi3>:
 200dfa4:	defff004 	addi	sp,sp,-64
 200dfa8:	3011883a 	mov	r8,r6
 200dfac:	000d883a 	mov	r6,zero
 200dfb0:	dd400b15 	stw	r21,44(sp)
 200dfb4:	dcc00915 	stw	r19,36(sp)
 200dfb8:	dc000615 	stw	r16,24(sp)
 200dfbc:	dfc00f15 	stw	ra,60(sp)
 200dfc0:	df000e15 	stw	fp,56(sp)
 200dfc4:	ddc00d15 	stw	r23,52(sp)
 200dfc8:	dd800c15 	stw	r22,48(sp)
 200dfcc:	dd000a15 	stw	r20,40(sp)
 200dfd0:	dc800815 	stw	r18,32(sp)
 200dfd4:	dc400715 	stw	r17,28(sp)
 200dfd8:	2817883a 	mov	r11,r5
 200dfdc:	d9800415 	stw	r6,16(sp)
 200dfe0:	4027883a 	mov	r19,r8
 200dfe4:	d9800515 	stw	r6,20(sp)
 200dfe8:	2021883a 	mov	r16,r4
 200dfec:	282b883a 	mov	r21,r5
 200dff0:	38002c1e 	bne	r7,zero,200e0a4 <__umoddi3+0x100>
 200dff4:	2a005636 	bltu	r5,r8,200e150 <__umoddi3+0x1ac>
 200dff8:	40009a26 	beq	r8,zero,200e264 <__umoddi3+0x2c0>
 200dffc:	00bfffd4 	movui	r2,65535
 200e000:	14c09236 	bltu	r2,r19,200e24c <__umoddi3+0x2a8>
 200e004:	00803fc4 	movi	r2,255
 200e008:	14c15c36 	bltu	r2,r19,200e57c <__umoddi3+0x5d8>
 200e00c:	000b883a 	mov	r5,zero
 200e010:	0005883a 	mov	r2,zero
 200e014:	9884d83a 	srl	r2,r19,r2
 200e018:	01008074 	movhi	r4,513
 200e01c:	210f6004 	addi	r4,r4,15744
 200e020:	01800804 	movi	r6,32
 200e024:	1105883a 	add	r2,r2,r4
 200e028:	10c00003 	ldbu	r3,0(r2)
 200e02c:	28c7883a 	add	r3,r5,r3
 200e030:	30e5c83a 	sub	r18,r6,r3
 200e034:	9000a41e 	bne	r18,zero,200e2c8 <__umoddi3+0x324>
 200e038:	982ed43a 	srli	r23,r19,16
 200e03c:	acebc83a 	sub	r21,r21,r19
 200e040:	9d3fffcc 	andi	r20,r19,65535
 200e044:	002d883a 	mov	r22,zero
 200e048:	a809883a 	mov	r4,r21
 200e04c:	b80b883a 	mov	r5,r23
 200e050:	200fad00 	call	200fad0 <__udivsi3>
 200e054:	100b883a 	mov	r5,r2
 200e058:	a009883a 	mov	r4,r20
 200e05c:	2000abc0 	call	2000abc <__mulsi3>
 200e060:	a809883a 	mov	r4,r21
 200e064:	b80b883a 	mov	r5,r23
 200e068:	1023883a 	mov	r17,r2
 200e06c:	200fad80 	call	200fad8 <__umodsi3>
 200e070:	1004943a 	slli	r2,r2,16
 200e074:	8006d43a 	srli	r3,r16,16
 200e078:	10c4b03a 	or	r2,r2,r3
 200e07c:	1440032e 	bgeu	r2,r17,200e08c <__umoddi3+0xe8>
 200e080:	14c5883a 	add	r2,r2,r19
 200e084:	14c00136 	bltu	r2,r19,200e08c <__umoddi3+0xe8>
 200e088:	14415836 	bltu	r2,r17,200e5ec <__umoddi3+0x648>
 200e08c:	1463c83a 	sub	r17,r2,r17
 200e090:	8809883a 	mov	r4,r17
 200e094:	b80b883a 	mov	r5,r23
 200e098:	200fad00 	call	200fad0 <__udivsi3>
 200e09c:	a009883a 	mov	r4,r20
 200e0a0:	00005306 	br	200e1f0 <__umoddi3+0x24c>
 200e0a4:	380d883a 	mov	r6,r7
 200e0a8:	29c0132e 	bgeu	r5,r7,200e0f8 <__umoddi3+0x154>
 200e0ac:	d9000415 	stw	r4,16(sp)
 200e0b0:	d9400515 	stw	r5,20(sp)
 200e0b4:	d9400417 	ldw	r5,16(sp)
 200e0b8:	5813883a 	mov	r9,r11
 200e0bc:	2811883a 	mov	r8,r5
 200e0c0:	4005883a 	mov	r2,r8
 200e0c4:	4807883a 	mov	r3,r9
 200e0c8:	dfc00f17 	ldw	ra,60(sp)
 200e0cc:	df000e17 	ldw	fp,56(sp)
 200e0d0:	ddc00d17 	ldw	r23,52(sp)
 200e0d4:	dd800c17 	ldw	r22,48(sp)
 200e0d8:	dd400b17 	ldw	r21,44(sp)
 200e0dc:	dd000a17 	ldw	r20,40(sp)
 200e0e0:	dcc00917 	ldw	r19,36(sp)
 200e0e4:	dc800817 	ldw	r18,32(sp)
 200e0e8:	dc400717 	ldw	r17,28(sp)
 200e0ec:	dc000617 	ldw	r16,24(sp)
 200e0f0:	dec01004 	addi	sp,sp,64
 200e0f4:	f800283a 	ret
 200e0f8:	00bfffd4 	movui	r2,65535
 200e0fc:	11c06636 	bltu	r2,r7,200e298 <__umoddi3+0x2f4>
 200e100:	00803fc4 	movi	r2,255
 200e104:	11c12036 	bltu	r2,r7,200e588 <__umoddi3+0x5e4>
 200e108:	000b883a 	mov	r5,zero
 200e10c:	0005883a 	mov	r2,zero
 200e110:	3084d83a 	srl	r2,r6,r2
 200e114:	01008074 	movhi	r4,513
 200e118:	210f6004 	addi	r4,r4,15744
 200e11c:	01c00804 	movi	r7,32
 200e120:	1105883a 	add	r2,r2,r4
 200e124:	10c00003 	ldbu	r3,0(r2)
 200e128:	28c7883a 	add	r3,r5,r3
 200e12c:	38e5c83a 	sub	r18,r7,r3
 200e130:	9000941e 	bne	r18,zero,200e384 <__umoddi3+0x3e0>
 200e134:	35405e36 	bltu	r6,r21,200e2b0 <__umoddi3+0x30c>
 200e138:	84c05d2e 	bgeu	r16,r19,200e2b0 <__umoddi3+0x30c>
 200e13c:	8011883a 	mov	r8,r16
 200e140:	a813883a 	mov	r9,r21
 200e144:	dc000415 	stw	r16,16(sp)
 200e148:	dd400515 	stw	r21,20(sp)
 200e14c:	003fdc06 	br	200e0c0 <__umoddi3+0x11c>
 200e150:	00bfffd4 	movui	r2,65535
 200e154:	12004a36 	bltu	r2,r8,200e280 <__umoddi3+0x2dc>
 200e158:	00803fc4 	movi	r2,255
 200e15c:	12010d36 	bltu	r2,r8,200e594 <__umoddi3+0x5f0>
 200e160:	000b883a 	mov	r5,zero
 200e164:	0005883a 	mov	r2,zero
 200e168:	9884d83a 	srl	r2,r19,r2
 200e16c:	01008074 	movhi	r4,513
 200e170:	210f6004 	addi	r4,r4,15744
 200e174:	01800804 	movi	r6,32
 200e178:	1105883a 	add	r2,r2,r4
 200e17c:	10c00003 	ldbu	r3,0(r2)
 200e180:	28c7883a 	add	r3,r5,r3
 200e184:	30c7c83a 	sub	r3,r6,r3
 200e188:	1800dc1e 	bne	r3,zero,200e4fc <__umoddi3+0x558>
 200e18c:	002d883a 	mov	r22,zero
 200e190:	982ed43a 	srli	r23,r19,16
 200e194:	a809883a 	mov	r4,r21
 200e198:	9cbfffcc 	andi	r18,r19,65535
 200e19c:	b80b883a 	mov	r5,r23
 200e1a0:	200fad00 	call	200fad0 <__udivsi3>
 200e1a4:	100b883a 	mov	r5,r2
 200e1a8:	9009883a 	mov	r4,r18
 200e1ac:	2000abc0 	call	2000abc <__mulsi3>
 200e1b0:	a809883a 	mov	r4,r21
 200e1b4:	b80b883a 	mov	r5,r23
 200e1b8:	1023883a 	mov	r17,r2
 200e1bc:	200fad80 	call	200fad8 <__umodsi3>
 200e1c0:	1004943a 	slli	r2,r2,16
 200e1c4:	8006d43a 	srli	r3,r16,16
 200e1c8:	10c4b03a 	or	r2,r2,r3
 200e1cc:	1440032e 	bgeu	r2,r17,200e1dc <__umoddi3+0x238>
 200e1d0:	14c5883a 	add	r2,r2,r19
 200e1d4:	14c00136 	bltu	r2,r19,200e1dc <__umoddi3+0x238>
 200e1d8:	14410236 	bltu	r2,r17,200e5e4 <__umoddi3+0x640>
 200e1dc:	1463c83a 	sub	r17,r2,r17
 200e1e0:	8809883a 	mov	r4,r17
 200e1e4:	b80b883a 	mov	r5,r23
 200e1e8:	200fad00 	call	200fad0 <__udivsi3>
 200e1ec:	9009883a 	mov	r4,r18
 200e1f0:	100b883a 	mov	r5,r2
 200e1f4:	2000abc0 	call	2000abc <__mulsi3>
 200e1f8:	8809883a 	mov	r4,r17
 200e1fc:	b80b883a 	mov	r5,r23
 200e200:	102b883a 	mov	r21,r2
 200e204:	200fad80 	call	200fad8 <__umodsi3>
 200e208:	1004943a 	slli	r2,r2,16
 200e20c:	80ffffcc 	andi	r3,r16,65535
 200e210:	10c4b03a 	or	r2,r2,r3
 200e214:	1540042e 	bgeu	r2,r21,200e228 <__umoddi3+0x284>
 200e218:	14c5883a 	add	r2,r2,r19
 200e21c:	14c00236 	bltu	r2,r19,200e228 <__umoddi3+0x284>
 200e220:	1540012e 	bgeu	r2,r21,200e228 <__umoddi3+0x284>
 200e224:	14c5883a 	add	r2,r2,r19
 200e228:	1545c83a 	sub	r2,r2,r21
 200e22c:	1584d83a 	srl	r2,r2,r22
 200e230:	0013883a 	mov	r9,zero
 200e234:	d8800415 	stw	r2,16(sp)
 200e238:	d8c00417 	ldw	r3,16(sp)
 200e23c:	0005883a 	mov	r2,zero
 200e240:	d8800515 	stw	r2,20(sp)
 200e244:	1811883a 	mov	r8,r3
 200e248:	003f9d06 	br	200e0c0 <__umoddi3+0x11c>
 200e24c:	00804034 	movhi	r2,256
 200e250:	10bfffc4 	addi	r2,r2,-1
 200e254:	14c0c636 	bltu	r2,r19,200e570 <__umoddi3+0x5cc>
 200e258:	01400404 	movi	r5,16
 200e25c:	2805883a 	mov	r2,r5
 200e260:	003f6c06 	br	200e014 <__umoddi3+0x70>
 200e264:	01000044 	movi	r4,1
 200e268:	000b883a 	mov	r5,zero
 200e26c:	200fad00 	call	200fad0 <__udivsi3>
 200e270:	1027883a 	mov	r19,r2
 200e274:	00bfffd4 	movui	r2,65535
 200e278:	14fff436 	bltu	r2,r19,200e24c <__umoddi3+0x2a8>
 200e27c:	003f6106 	br	200e004 <__umoddi3+0x60>
 200e280:	00804034 	movhi	r2,256
 200e284:	10bfffc4 	addi	r2,r2,-1
 200e288:	1200c536 	bltu	r2,r8,200e5a0 <__umoddi3+0x5fc>
 200e28c:	01400404 	movi	r5,16
 200e290:	2805883a 	mov	r2,r5
 200e294:	003fb406 	br	200e168 <__umoddi3+0x1c4>
 200e298:	00804034 	movhi	r2,256
 200e29c:	10bfffc4 	addi	r2,r2,-1
 200e2a0:	11c0c236 	bltu	r2,r7,200e5ac <__umoddi3+0x608>
 200e2a4:	01400404 	movi	r5,16
 200e2a8:	2805883a 	mov	r2,r5
 200e2ac:	003f9806 	br	200e110 <__umoddi3+0x16c>
 200e2b0:	84c9c83a 	sub	r4,r16,r19
 200e2b4:	8105803a 	cmpltu	r2,r16,r4
 200e2b8:	a987c83a 	sub	r3,r21,r6
 200e2bc:	18abc83a 	sub	r21,r3,r2
 200e2c0:	2021883a 	mov	r16,r4
 200e2c4:	003f9d06 	br	200e13c <__umoddi3+0x198>
 200e2c8:	9ca6983a 	sll	r19,r19,r18
 200e2cc:	3485c83a 	sub	r2,r6,r18
 200e2d0:	a8a2d83a 	srl	r17,r21,r2
 200e2d4:	982ed43a 	srli	r23,r19,16
 200e2d8:	ac86983a 	sll	r3,r21,r18
 200e2dc:	8084d83a 	srl	r2,r16,r2
 200e2e0:	8809883a 	mov	r4,r17
 200e2e4:	b80b883a 	mov	r5,r23
 200e2e8:	18b8b03a 	or	fp,r3,r2
 200e2ec:	9d3fffcc 	andi	r20,r19,65535
 200e2f0:	200fad00 	call	200fad0 <__udivsi3>
 200e2f4:	100b883a 	mov	r5,r2
 200e2f8:	a009883a 	mov	r4,r20
 200e2fc:	2000abc0 	call	2000abc <__mulsi3>
 200e300:	8809883a 	mov	r4,r17
 200e304:	b80b883a 	mov	r5,r23
 200e308:	102b883a 	mov	r21,r2
 200e30c:	200fad80 	call	200fad8 <__umodsi3>
 200e310:	1004943a 	slli	r2,r2,16
 200e314:	e006d43a 	srli	r3,fp,16
 200e318:	902d883a 	mov	r22,r18
 200e31c:	10c4b03a 	or	r2,r2,r3
 200e320:	1540022e 	bgeu	r2,r21,200e32c <__umoddi3+0x388>
 200e324:	14c5883a 	add	r2,r2,r19
 200e328:	14c0ab2e 	bgeu	r2,r19,200e5d8 <__umoddi3+0x634>
 200e32c:	1563c83a 	sub	r17,r2,r21
 200e330:	8809883a 	mov	r4,r17
 200e334:	b80b883a 	mov	r5,r23
 200e338:	200fad00 	call	200fad0 <__udivsi3>
 200e33c:	100b883a 	mov	r5,r2
 200e340:	a009883a 	mov	r4,r20
 200e344:	2000abc0 	call	2000abc <__mulsi3>
 200e348:	8809883a 	mov	r4,r17
 200e34c:	b80b883a 	mov	r5,r23
 200e350:	102b883a 	mov	r21,r2
 200e354:	200fad80 	call	200fad8 <__umodsi3>
 200e358:	1004943a 	slli	r2,r2,16
 200e35c:	e0ffffcc 	andi	r3,fp,65535
 200e360:	10c4b03a 	or	r2,r2,r3
 200e364:	1540042e 	bgeu	r2,r21,200e378 <__umoddi3+0x3d4>
 200e368:	14c5883a 	add	r2,r2,r19
 200e36c:	14c00236 	bltu	r2,r19,200e378 <__umoddi3+0x3d4>
 200e370:	1540012e 	bgeu	r2,r21,200e378 <__umoddi3+0x3d4>
 200e374:	14c5883a 	add	r2,r2,r19
 200e378:	84a0983a 	sll	r16,r16,r18
 200e37c:	156bc83a 	sub	r21,r2,r21
 200e380:	003f3106 	br	200e048 <__umoddi3+0xa4>
 200e384:	3c8fc83a 	sub	r7,r7,r18
 200e388:	3486983a 	sll	r3,r6,r18
 200e38c:	99c4d83a 	srl	r2,r19,r7
 200e390:	a9e2d83a 	srl	r17,r21,r7
 200e394:	ac8c983a 	sll	r6,r21,r18
 200e398:	18acb03a 	or	r22,r3,r2
 200e39c:	b02ed43a 	srli	r23,r22,16
 200e3a0:	81c4d83a 	srl	r2,r16,r7
 200e3a4:	8809883a 	mov	r4,r17
 200e3a8:	b80b883a 	mov	r5,r23
 200e3ac:	308cb03a 	or	r6,r6,r2
 200e3b0:	d9c00315 	stw	r7,12(sp)
 200e3b4:	d9800215 	stw	r6,8(sp)
 200e3b8:	b53fffcc 	andi	r20,r22,65535
 200e3bc:	200fad00 	call	200fad0 <__udivsi3>
 200e3c0:	100b883a 	mov	r5,r2
 200e3c4:	a009883a 	mov	r4,r20
 200e3c8:	1039883a 	mov	fp,r2
 200e3cc:	2000abc0 	call	2000abc <__mulsi3>
 200e3d0:	8809883a 	mov	r4,r17
 200e3d4:	b80b883a 	mov	r5,r23
 200e3d8:	102b883a 	mov	r21,r2
 200e3dc:	200fad80 	call	200fad8 <__umodsi3>
 200e3e0:	d9000217 	ldw	r4,8(sp)
 200e3e4:	1004943a 	slli	r2,r2,16
 200e3e8:	9ca6983a 	sll	r19,r19,r18
 200e3ec:	2006d43a 	srli	r3,r4,16
 200e3f0:	84a0983a 	sll	r16,r16,r18
 200e3f4:	dcc00015 	stw	r19,0(sp)
 200e3f8:	10c4b03a 	or	r2,r2,r3
 200e3fc:	dc000115 	stw	r16,4(sp)
 200e400:	1540032e 	bgeu	r2,r21,200e410 <__umoddi3+0x46c>
 200e404:	1585883a 	add	r2,r2,r22
 200e408:	e73fffc4 	addi	fp,fp,-1
 200e40c:	15806e2e 	bgeu	r2,r22,200e5c8 <__umoddi3+0x624>
 200e410:	1563c83a 	sub	r17,r2,r21
 200e414:	8809883a 	mov	r4,r17
 200e418:	b80b883a 	mov	r5,r23
 200e41c:	200fad00 	call	200fad0 <__udivsi3>
 200e420:	100b883a 	mov	r5,r2
 200e424:	a009883a 	mov	r4,r20
 200e428:	1021883a 	mov	r16,r2
 200e42c:	2000abc0 	call	2000abc <__mulsi3>
 200e430:	b80b883a 	mov	r5,r23
 200e434:	8809883a 	mov	r4,r17
 200e438:	1029883a 	mov	r20,r2
 200e43c:	200fad80 	call	200fad8 <__umodsi3>
 200e440:	d9400217 	ldw	r5,8(sp)
 200e444:	1004943a 	slli	r2,r2,16
 200e448:	28ffffcc 	andi	r3,r5,65535
 200e44c:	10c4b03a 	or	r2,r2,r3
 200e450:	1500032e 	bgeu	r2,r20,200e460 <__umoddi3+0x4bc>
 200e454:	1585883a 	add	r2,r2,r22
 200e458:	843fffc4 	addi	r16,r16,-1
 200e45c:	1580562e 	bgeu	r2,r22,200e5b8 <__umoddi3+0x614>
 200e460:	d9800017 	ldw	r6,0(sp)
 200e464:	e022943a 	slli	r17,fp,16
 200e468:	302ed43a 	srli	r23,r6,16
 200e46c:	8462b03a 	or	r17,r16,r17
 200e470:	34ffffcc 	andi	r19,r6,65535
 200e474:	882ad43a 	srli	r21,r17,16
 200e478:	8c7fffcc 	andi	r17,r17,65535
 200e47c:	8809883a 	mov	r4,r17
 200e480:	980b883a 	mov	r5,r19
 200e484:	1521c83a 	sub	r16,r2,r20
 200e488:	2000abc0 	call	2000abc <__mulsi3>
 200e48c:	8809883a 	mov	r4,r17
 200e490:	b80b883a 	mov	r5,r23
 200e494:	1029883a 	mov	r20,r2
 200e498:	2000abc0 	call	2000abc <__mulsi3>
 200e49c:	980b883a 	mov	r5,r19
 200e4a0:	a809883a 	mov	r4,r21
 200e4a4:	1023883a 	mov	r17,r2
 200e4a8:	2000abc0 	call	2000abc <__mulsi3>
 200e4ac:	a809883a 	mov	r4,r21
 200e4b0:	b80b883a 	mov	r5,r23
 200e4b4:	1027883a 	mov	r19,r2
 200e4b8:	2000abc0 	call	2000abc <__mulsi3>
 200e4bc:	100b883a 	mov	r5,r2
 200e4c0:	a004d43a 	srli	r2,r20,16
 200e4c4:	8ce3883a 	add	r17,r17,r19
 200e4c8:	1449883a 	add	r4,r2,r17
 200e4cc:	24c0022e 	bgeu	r4,r19,200e4d8 <__umoddi3+0x534>
 200e4d0:	00800074 	movhi	r2,1
 200e4d4:	288b883a 	add	r5,r5,r2
 200e4d8:	2004d43a 	srli	r2,r4,16
 200e4dc:	2008943a 	slli	r4,r4,16
 200e4e0:	a0ffffcc 	andi	r3,r20,65535
 200e4e4:	288d883a 	add	r6,r5,r2
 200e4e8:	20c9883a 	add	r4,r4,r3
 200e4ec:	81800b36 	bltu	r16,r6,200e51c <__umoddi3+0x578>
 200e4f0:	81804026 	beq	r16,r6,200e5f4 <__umoddi3+0x650>
 200e4f4:	818dc83a 	sub	r6,r16,r6
 200e4f8:	00000f06 	br	200e538 <__umoddi3+0x594>
 200e4fc:	30c5c83a 	sub	r2,r6,r3
 200e500:	182d883a 	mov	r22,r3
 200e504:	8084d83a 	srl	r2,r16,r2
 200e508:	a8c6983a 	sll	r3,r21,r3
 200e50c:	9da6983a 	sll	r19,r19,r22
 200e510:	85a0983a 	sll	r16,r16,r22
 200e514:	18aab03a 	or	r21,r3,r2
 200e518:	003f1d06 	br	200e190 <__umoddi3+0x1ec>
 200e51c:	d8c00017 	ldw	r3,0(sp)
 200e520:	20c5c83a 	sub	r2,r4,r3
 200e524:	2089803a 	cmpltu	r4,r4,r2
 200e528:	3587c83a 	sub	r3,r6,r22
 200e52c:	1907c83a 	sub	r3,r3,r4
 200e530:	80cdc83a 	sub	r6,r16,r3
 200e534:	1009883a 	mov	r4,r2
 200e538:	d9400117 	ldw	r5,4(sp)
 200e53c:	2905c83a 	sub	r2,r5,r4
 200e540:	2887803a 	cmpltu	r3,r5,r2
 200e544:	30c7c83a 	sub	r3,r6,r3
 200e548:	d9800317 	ldw	r6,12(sp)
 200e54c:	1484d83a 	srl	r2,r2,r18
 200e550:	1988983a 	sll	r4,r3,r6
 200e554:	1c86d83a 	srl	r3,r3,r18
 200e558:	2088b03a 	or	r4,r4,r2
 200e55c:	2011883a 	mov	r8,r4
 200e560:	1813883a 	mov	r9,r3
 200e564:	d9000415 	stw	r4,16(sp)
 200e568:	d8c00515 	stw	r3,20(sp)
 200e56c:	003ed406 	br	200e0c0 <__umoddi3+0x11c>
 200e570:	01400604 	movi	r5,24
 200e574:	2805883a 	mov	r2,r5
 200e578:	003ea606 	br	200e014 <__umoddi3+0x70>
 200e57c:	01400204 	movi	r5,8
 200e580:	2805883a 	mov	r2,r5
 200e584:	003ea306 	br	200e014 <__umoddi3+0x70>
 200e588:	01400204 	movi	r5,8
 200e58c:	2805883a 	mov	r2,r5
 200e590:	003edf06 	br	200e110 <__umoddi3+0x16c>
 200e594:	01400204 	movi	r5,8
 200e598:	2805883a 	mov	r2,r5
 200e59c:	003ef206 	br	200e168 <__umoddi3+0x1c4>
 200e5a0:	01400604 	movi	r5,24
 200e5a4:	2805883a 	mov	r2,r5
 200e5a8:	003eef06 	br	200e168 <__umoddi3+0x1c4>
 200e5ac:	01400604 	movi	r5,24
 200e5b0:	2805883a 	mov	r2,r5
 200e5b4:	003ed606 	br	200e110 <__umoddi3+0x16c>
 200e5b8:	153fa92e 	bgeu	r2,r20,200e460 <__umoddi3+0x4bc>
 200e5bc:	843fffc4 	addi	r16,r16,-1
 200e5c0:	1585883a 	add	r2,r2,r22
 200e5c4:	003fa606 	br	200e460 <__umoddi3+0x4bc>
 200e5c8:	157f912e 	bgeu	r2,r21,200e410 <__umoddi3+0x46c>
 200e5cc:	e73fffc4 	addi	fp,fp,-1
 200e5d0:	1585883a 	add	r2,r2,r22
 200e5d4:	003f8e06 	br	200e410 <__umoddi3+0x46c>
 200e5d8:	157f542e 	bgeu	r2,r21,200e32c <__umoddi3+0x388>
 200e5dc:	14c5883a 	add	r2,r2,r19
 200e5e0:	003f5206 	br	200e32c <__umoddi3+0x388>
 200e5e4:	14c5883a 	add	r2,r2,r19
 200e5e8:	003efc06 	br	200e1dc <__umoddi3+0x238>
 200e5ec:	14c5883a 	add	r2,r2,r19
 200e5f0:	003ea606 	br	200e08c <__umoddi3+0xe8>
 200e5f4:	d8800117 	ldw	r2,4(sp)
 200e5f8:	113fc836 	bltu	r2,r4,200e51c <__umoddi3+0x578>
 200e5fc:	000d883a 	mov	r6,zero
 200e600:	003fcd06 	br	200e538 <__umoddi3+0x594>

0200e604 <__nesf2>:
 200e604:	defff304 	addi	sp,sp,-52
 200e608:	dc400b15 	stw	r17,44(sp)
 200e60c:	dc400204 	addi	r17,sp,8
 200e610:	dc000a15 	stw	r16,40(sp)
 200e614:	d9000015 	stw	r4,0(sp)
 200e618:	d9400115 	stw	r5,4(sp)
 200e61c:	d809883a 	mov	r4,sp
 200e620:	880b883a 	mov	r5,r17
 200e624:	dc000604 	addi	r16,sp,24
 200e628:	dfc00c15 	stw	ra,48(sp)
 200e62c:	200fb600 	call	200fb60 <__unpack_f>
 200e630:	d9000104 	addi	r4,sp,4
 200e634:	800b883a 	mov	r5,r16
 200e638:	200fb600 	call	200fb60 <__unpack_f>
 200e63c:	d8800217 	ldw	r2,8(sp)
 200e640:	00c00044 	movi	r3,1
 200e644:	180d883a 	mov	r6,r3
 200e648:	1880062e 	bgeu	r3,r2,200e664 <__nesf2+0x60>
 200e64c:	d8800617 	ldw	r2,24(sp)
 200e650:	8809883a 	mov	r4,r17
 200e654:	800b883a 	mov	r5,r16
 200e658:	1880022e 	bgeu	r3,r2,200e664 <__nesf2+0x60>
 200e65c:	200fc280 	call	200fc28 <__fpcmp_parts_f>
 200e660:	100d883a 	mov	r6,r2
 200e664:	3005883a 	mov	r2,r6
 200e668:	dfc00c17 	ldw	ra,48(sp)
 200e66c:	dc400b17 	ldw	r17,44(sp)
 200e670:	dc000a17 	ldw	r16,40(sp)
 200e674:	dec00d04 	addi	sp,sp,52
 200e678:	f800283a 	ret

0200e67c <__gtsf2>:
 200e67c:	defff304 	addi	sp,sp,-52
 200e680:	dc400b15 	stw	r17,44(sp)
 200e684:	dc400204 	addi	r17,sp,8
 200e688:	dc000a15 	stw	r16,40(sp)
 200e68c:	d9000015 	stw	r4,0(sp)
 200e690:	d9400115 	stw	r5,4(sp)
 200e694:	d809883a 	mov	r4,sp
 200e698:	880b883a 	mov	r5,r17
 200e69c:	dc000604 	addi	r16,sp,24
 200e6a0:	dfc00c15 	stw	ra,48(sp)
 200e6a4:	200fb600 	call	200fb60 <__unpack_f>
 200e6a8:	d9000104 	addi	r4,sp,4
 200e6ac:	800b883a 	mov	r5,r16
 200e6b0:	200fb600 	call	200fb60 <__unpack_f>
 200e6b4:	d8800217 	ldw	r2,8(sp)
 200e6b8:	00c00044 	movi	r3,1
 200e6bc:	01bfffc4 	movi	r6,-1
 200e6c0:	1880062e 	bgeu	r3,r2,200e6dc <__gtsf2+0x60>
 200e6c4:	d8800617 	ldw	r2,24(sp)
 200e6c8:	8809883a 	mov	r4,r17
 200e6cc:	800b883a 	mov	r5,r16
 200e6d0:	1880022e 	bgeu	r3,r2,200e6dc <__gtsf2+0x60>
 200e6d4:	200fc280 	call	200fc28 <__fpcmp_parts_f>
 200e6d8:	100d883a 	mov	r6,r2
 200e6dc:	3005883a 	mov	r2,r6
 200e6e0:	dfc00c17 	ldw	ra,48(sp)
 200e6e4:	dc400b17 	ldw	r17,44(sp)
 200e6e8:	dc000a17 	ldw	r16,40(sp)
 200e6ec:	dec00d04 	addi	sp,sp,52
 200e6f0:	f800283a 	ret

0200e6f4 <__ltsf2>:
 200e6f4:	defff304 	addi	sp,sp,-52
 200e6f8:	dc400b15 	stw	r17,44(sp)
 200e6fc:	dc400204 	addi	r17,sp,8
 200e700:	dc000a15 	stw	r16,40(sp)
 200e704:	d9000015 	stw	r4,0(sp)
 200e708:	d9400115 	stw	r5,4(sp)
 200e70c:	d809883a 	mov	r4,sp
 200e710:	880b883a 	mov	r5,r17
 200e714:	dc000604 	addi	r16,sp,24
 200e718:	dfc00c15 	stw	ra,48(sp)
 200e71c:	200fb600 	call	200fb60 <__unpack_f>
 200e720:	d9000104 	addi	r4,sp,4
 200e724:	800b883a 	mov	r5,r16
 200e728:	200fb600 	call	200fb60 <__unpack_f>
 200e72c:	d8800217 	ldw	r2,8(sp)
 200e730:	00c00044 	movi	r3,1
 200e734:	180d883a 	mov	r6,r3
 200e738:	1880062e 	bgeu	r3,r2,200e754 <__ltsf2+0x60>
 200e73c:	d8800617 	ldw	r2,24(sp)
 200e740:	8809883a 	mov	r4,r17
 200e744:	800b883a 	mov	r5,r16
 200e748:	1880022e 	bgeu	r3,r2,200e754 <__ltsf2+0x60>
 200e74c:	200fc280 	call	200fc28 <__fpcmp_parts_f>
 200e750:	100d883a 	mov	r6,r2
 200e754:	3005883a 	mov	r2,r6
 200e758:	dfc00c17 	ldw	ra,48(sp)
 200e75c:	dc400b17 	ldw	r17,44(sp)
 200e760:	dc000a17 	ldw	r16,40(sp)
 200e764:	dec00d04 	addi	sp,sp,52
 200e768:	f800283a 	ret

0200e76c <_fpadd_parts>:
 200e76c:	defff804 	addi	sp,sp,-32
 200e770:	dcc00315 	stw	r19,12(sp)
 200e774:	2027883a 	mov	r19,r4
 200e778:	21000017 	ldw	r4,0(r4)
 200e77c:	00c00044 	movi	r3,1
 200e780:	dd400515 	stw	r21,20(sp)
 200e784:	dd000415 	stw	r20,16(sp)
 200e788:	ddc00715 	stw	r23,28(sp)
 200e78c:	dd800615 	stw	r22,24(sp)
 200e790:	dc800215 	stw	r18,8(sp)
 200e794:	dc400115 	stw	r17,4(sp)
 200e798:	dc000015 	stw	r16,0(sp)
 200e79c:	282b883a 	mov	r21,r5
 200e7a0:	3029883a 	mov	r20,r6
 200e7a4:	1900632e 	bgeu	r3,r4,200e934 <_fpadd_parts+0x1c8>
 200e7a8:	28800017 	ldw	r2,0(r5)
 200e7ac:	1880812e 	bgeu	r3,r2,200e9b4 <_fpadd_parts+0x248>
 200e7b0:	00c00104 	movi	r3,4
 200e7b4:	20c0dc26 	beq	r4,r3,200eb28 <_fpadd_parts+0x3bc>
 200e7b8:	10c07e26 	beq	r2,r3,200e9b4 <_fpadd_parts+0x248>
 200e7bc:	00c00084 	movi	r3,2
 200e7c0:	10c06726 	beq	r2,r3,200e960 <_fpadd_parts+0x1f4>
 200e7c4:	20c07b26 	beq	r4,r3,200e9b4 <_fpadd_parts+0x248>
 200e7c8:	9dc00217 	ldw	r23,8(r19)
 200e7cc:	28c00217 	ldw	r3,8(r5)
 200e7d0:	9c400317 	ldw	r17,12(r19)
 200e7d4:	2bc00317 	ldw	r15,12(r5)
 200e7d8:	b8cdc83a 	sub	r6,r23,r3
 200e7dc:	9c800417 	ldw	r18,16(r19)
 200e7e0:	2c000417 	ldw	r16,16(r5)
 200e7e4:	3009883a 	mov	r4,r6
 200e7e8:	30009716 	blt	r6,zero,200ea48 <_fpadd_parts+0x2dc>
 200e7ec:	00800fc4 	movi	r2,63
 200e7f0:	11806b16 	blt	r2,r6,200e9a0 <_fpadd_parts+0x234>
 200e7f4:	0100a40e 	bge	zero,r4,200ea88 <_fpadd_parts+0x31c>
 200e7f8:	35bff804 	addi	r22,r6,-32
 200e7fc:	b000bc16 	blt	r22,zero,200eaf0 <_fpadd_parts+0x384>
 200e800:	8596d83a 	srl	r11,r16,r22
 200e804:	0019883a 	mov	r12,zero
 200e808:	0013883a 	mov	r9,zero
 200e80c:	01000044 	movi	r4,1
 200e810:	0015883a 	mov	r10,zero
 200e814:	b000be16 	blt	r22,zero,200eb10 <_fpadd_parts+0x3a4>
 200e818:	2590983a 	sll	r8,r4,r22
 200e81c:	000f883a 	mov	r7,zero
 200e820:	00bfffc4 	movi	r2,-1
 200e824:	3889883a 	add	r4,r7,r2
 200e828:	408b883a 	add	r5,r8,r2
 200e82c:	21cd803a 	cmpltu	r6,r4,r7
 200e830:	314b883a 	add	r5,r6,r5
 200e834:	7904703a 	and	r2,r15,r4
 200e838:	8146703a 	and	r3,r16,r5
 200e83c:	10c4b03a 	or	r2,r2,r3
 200e840:	10000226 	beq	r2,zero,200e84c <_fpadd_parts+0xe0>
 200e844:	02400044 	movi	r9,1
 200e848:	0015883a 	mov	r10,zero
 200e84c:	5a5eb03a 	or	r15,r11,r9
 200e850:	62a0b03a 	or	r16,r12,r10
 200e854:	99400117 	ldw	r5,4(r19)
 200e858:	a8800117 	ldw	r2,4(r21)
 200e85c:	28806e26 	beq	r5,r2,200ea18 <_fpadd_parts+0x2ac>
 200e860:	28006626 	beq	r5,zero,200e9fc <_fpadd_parts+0x290>
 200e864:	7c45c83a 	sub	r2,r15,r17
 200e868:	7889803a 	cmpltu	r4,r15,r2
 200e86c:	8487c83a 	sub	r3,r16,r18
 200e870:	1909c83a 	sub	r4,r3,r4
 200e874:	100d883a 	mov	r6,r2
 200e878:	200f883a 	mov	r7,r4
 200e87c:	38007716 	blt	r7,zero,200ea5c <_fpadd_parts+0x2f0>
 200e880:	a5c00215 	stw	r23,8(r20)
 200e884:	a1c00415 	stw	r7,16(r20)
 200e888:	a0000115 	stw	zero,4(r20)
 200e88c:	a1800315 	stw	r6,12(r20)
 200e890:	a2000317 	ldw	r8,12(r20)
 200e894:	a2400417 	ldw	r9,16(r20)
 200e898:	00bfffc4 	movi	r2,-1
 200e89c:	408b883a 	add	r5,r8,r2
 200e8a0:	2a09803a 	cmpltu	r4,r5,r8
 200e8a4:	488d883a 	add	r6,r9,r2
 200e8a8:	01c40034 	movhi	r7,4096
 200e8ac:	39ffffc4 	addi	r7,r7,-1
 200e8b0:	218d883a 	add	r6,r4,r6
 200e8b4:	39801736 	bltu	r7,r6,200e914 <_fpadd_parts+0x1a8>
 200e8b8:	31c06526 	beq	r6,r7,200ea50 <_fpadd_parts+0x2e4>
 200e8bc:	a3000217 	ldw	r12,8(r20)
 200e8c0:	4209883a 	add	r4,r8,r8
 200e8c4:	00bfffc4 	movi	r2,-1
 200e8c8:	220f803a 	cmpltu	r7,r4,r8
 200e8cc:	4a4b883a 	add	r5,r9,r9
 200e8d0:	394f883a 	add	r7,r7,r5
 200e8d4:	2095883a 	add	r10,r4,r2
 200e8d8:	3897883a 	add	r11,r7,r2
 200e8dc:	510d803a 	cmpltu	r6,r10,r4
 200e8e0:	6099883a 	add	r12,r12,r2
 200e8e4:	32d7883a 	add	r11,r6,r11
 200e8e8:	00840034 	movhi	r2,4096
 200e8ec:	10bfffc4 	addi	r2,r2,-1
 200e8f0:	2011883a 	mov	r8,r4
 200e8f4:	3813883a 	mov	r9,r7
 200e8f8:	a1000315 	stw	r4,12(r20)
 200e8fc:	a1c00415 	stw	r7,16(r20)
 200e900:	a3000215 	stw	r12,8(r20)
 200e904:	12c00336 	bltu	r2,r11,200e914 <_fpadd_parts+0x1a8>
 200e908:	58bfed1e 	bne	r11,r2,200e8c0 <_fpadd_parts+0x154>
 200e90c:	00bfff84 	movi	r2,-2
 200e910:	12bfeb2e 	bgeu	r2,r10,200e8c0 <_fpadd_parts+0x154>
 200e914:	a2800417 	ldw	r10,16(r20)
 200e918:	008000c4 	movi	r2,3
 200e91c:	00c80034 	movhi	r3,8192
 200e920:	18ffffc4 	addi	r3,r3,-1
 200e924:	a2400317 	ldw	r9,12(r20)
 200e928:	a0800015 	stw	r2,0(r20)
 200e92c:	1a802336 	bltu	r3,r10,200e9bc <_fpadd_parts+0x250>
 200e930:	a027883a 	mov	r19,r20
 200e934:	9805883a 	mov	r2,r19
 200e938:	ddc00717 	ldw	r23,28(sp)
 200e93c:	dd800617 	ldw	r22,24(sp)
 200e940:	dd400517 	ldw	r21,20(sp)
 200e944:	dd000417 	ldw	r20,16(sp)
 200e948:	dcc00317 	ldw	r19,12(sp)
 200e94c:	dc800217 	ldw	r18,8(sp)
 200e950:	dc400117 	ldw	r17,4(sp)
 200e954:	dc000017 	ldw	r16,0(sp)
 200e958:	dec00804 	addi	sp,sp,32
 200e95c:	f800283a 	ret
 200e960:	20fff41e 	bne	r4,r3,200e934 <_fpadd_parts+0x1c8>
 200e964:	31000015 	stw	r4,0(r6)
 200e968:	98800117 	ldw	r2,4(r19)
 200e96c:	30800115 	stw	r2,4(r6)
 200e970:	98c00217 	ldw	r3,8(r19)
 200e974:	30c00215 	stw	r3,8(r6)
 200e978:	98800317 	ldw	r2,12(r19)
 200e97c:	30800315 	stw	r2,12(r6)
 200e980:	98c00417 	ldw	r3,16(r19)
 200e984:	30c00415 	stw	r3,16(r6)
 200e988:	98800117 	ldw	r2,4(r19)
 200e98c:	28c00117 	ldw	r3,4(r5)
 200e990:	3027883a 	mov	r19,r6
 200e994:	10c4703a 	and	r2,r2,r3
 200e998:	30800115 	stw	r2,4(r6)
 200e99c:	003fe506 	br	200e934 <_fpadd_parts+0x1c8>
 200e9a0:	1dc02616 	blt	r3,r23,200ea3c <_fpadd_parts+0x2d0>
 200e9a4:	0023883a 	mov	r17,zero
 200e9a8:	182f883a 	mov	r23,r3
 200e9ac:	0025883a 	mov	r18,zero
 200e9b0:	003fa806 	br	200e854 <_fpadd_parts+0xe8>
 200e9b4:	a827883a 	mov	r19,r21
 200e9b8:	003fde06 	br	200e934 <_fpadd_parts+0x1c8>
 200e9bc:	01800044 	movi	r6,1
 200e9c0:	500497fa 	slli	r2,r10,31
 200e9c4:	4808d07a 	srli	r4,r9,1
 200e9c8:	518ad83a 	srl	r5,r10,r6
 200e9cc:	a2000217 	ldw	r8,8(r20)
 200e9d0:	1108b03a 	or	r4,r2,r4
 200e9d4:	0007883a 	mov	r3,zero
 200e9d8:	4984703a 	and	r2,r9,r6
 200e9dc:	208cb03a 	or	r6,r4,r2
 200e9e0:	28ceb03a 	or	r7,r5,r3
 200e9e4:	42000044 	addi	r8,r8,1
 200e9e8:	a027883a 	mov	r19,r20
 200e9ec:	a1c00415 	stw	r7,16(r20)
 200e9f0:	a2000215 	stw	r8,8(r20)
 200e9f4:	a1800315 	stw	r6,12(r20)
 200e9f8:	003fce06 	br	200e934 <_fpadd_parts+0x1c8>
 200e9fc:	8bc5c83a 	sub	r2,r17,r15
 200ea00:	8889803a 	cmpltu	r4,r17,r2
 200ea04:	9407c83a 	sub	r3,r18,r16
 200ea08:	1909c83a 	sub	r4,r3,r4
 200ea0c:	100d883a 	mov	r6,r2
 200ea10:	200f883a 	mov	r7,r4
 200ea14:	003f9906 	br	200e87c <_fpadd_parts+0x110>
 200ea18:	7c45883a 	add	r2,r15,r17
 200ea1c:	13c9803a 	cmpltu	r4,r2,r15
 200ea20:	8487883a 	add	r3,r16,r18
 200ea24:	20c9883a 	add	r4,r4,r3
 200ea28:	a1400115 	stw	r5,4(r20)
 200ea2c:	a5c00215 	stw	r23,8(r20)
 200ea30:	a0800315 	stw	r2,12(r20)
 200ea34:	a1000415 	stw	r4,16(r20)
 200ea38:	003fb606 	br	200e914 <_fpadd_parts+0x1a8>
 200ea3c:	001f883a 	mov	r15,zero
 200ea40:	0021883a 	mov	r16,zero
 200ea44:	003f8306 	br	200e854 <_fpadd_parts+0xe8>
 200ea48:	018dc83a 	sub	r6,zero,r6
 200ea4c:	003f6706 	br	200e7ec <_fpadd_parts+0x80>
 200ea50:	00bfff84 	movi	r2,-2
 200ea54:	117faf36 	bltu	r2,r5,200e914 <_fpadd_parts+0x1a8>
 200ea58:	003f9806 	br	200e8bc <_fpadd_parts+0x150>
 200ea5c:	0005883a 	mov	r2,zero
 200ea60:	1189c83a 	sub	r4,r2,r6
 200ea64:	1105803a 	cmpltu	r2,r2,r4
 200ea68:	01cbc83a 	sub	r5,zero,r7
 200ea6c:	2885c83a 	sub	r2,r5,r2
 200ea70:	01800044 	movi	r6,1
 200ea74:	a1800115 	stw	r6,4(r20)
 200ea78:	a5c00215 	stw	r23,8(r20)
 200ea7c:	a1000315 	stw	r4,12(r20)
 200ea80:	a0800415 	stw	r2,16(r20)
 200ea84:	003f8206 	br	200e890 <_fpadd_parts+0x124>
 200ea88:	203f7226 	beq	r4,zero,200e854 <_fpadd_parts+0xe8>
 200ea8c:	35bff804 	addi	r22,r6,-32
 200ea90:	b9af883a 	add	r23,r23,r6
 200ea94:	b0003116 	blt	r22,zero,200eb5c <_fpadd_parts+0x3f0>
 200ea98:	959ad83a 	srl	r13,r18,r22
 200ea9c:	001d883a 	mov	r14,zero
 200eaa0:	000f883a 	mov	r7,zero
 200eaa4:	01000044 	movi	r4,1
 200eaa8:	0011883a 	mov	r8,zero
 200eaac:	b0002516 	blt	r22,zero,200eb44 <_fpadd_parts+0x3d8>
 200eab0:	2594983a 	sll	r10,r4,r22
 200eab4:	0013883a 	mov	r9,zero
 200eab8:	00bfffc4 	movi	r2,-1
 200eabc:	4889883a 	add	r4,r9,r2
 200eac0:	508b883a 	add	r5,r10,r2
 200eac4:	224d803a 	cmpltu	r6,r4,r9
 200eac8:	314b883a 	add	r5,r6,r5
 200eacc:	8904703a 	and	r2,r17,r4
 200ead0:	9146703a 	and	r3,r18,r5
 200ead4:	10c4b03a 	or	r2,r2,r3
 200ead8:	10000226 	beq	r2,zero,200eae4 <_fpadd_parts+0x378>
 200eadc:	01c00044 	movi	r7,1
 200eae0:	0011883a 	mov	r8,zero
 200eae4:	69e2b03a 	or	r17,r13,r7
 200eae8:	7224b03a 	or	r18,r14,r8
 200eaec:	003f5906 	br	200e854 <_fpadd_parts+0xe8>
 200eaf0:	8407883a 	add	r3,r16,r16
 200eaf4:	008007c4 	movi	r2,31
 200eaf8:	1185c83a 	sub	r2,r2,r6
 200eafc:	1886983a 	sll	r3,r3,r2
 200eb00:	7996d83a 	srl	r11,r15,r6
 200eb04:	8198d83a 	srl	r12,r16,r6
 200eb08:	1ad6b03a 	or	r11,r3,r11
 200eb0c:	003f3e06 	br	200e808 <_fpadd_parts+0x9c>
 200eb10:	2006d07a 	srli	r3,r4,1
 200eb14:	008007c4 	movi	r2,31
 200eb18:	1185c83a 	sub	r2,r2,r6
 200eb1c:	1890d83a 	srl	r8,r3,r2
 200eb20:	218e983a 	sll	r7,r4,r6
 200eb24:	003f3e06 	br	200e820 <_fpadd_parts+0xb4>
 200eb28:	113f821e 	bne	r2,r4,200e934 <_fpadd_parts+0x1c8>
 200eb2c:	28c00117 	ldw	r3,4(r5)
 200eb30:	98800117 	ldw	r2,4(r19)
 200eb34:	10ff7f26 	beq	r2,r3,200e934 <_fpadd_parts+0x1c8>
 200eb38:	04c08074 	movhi	r19,513
 200eb3c:	9ccf5b04 	addi	r19,r19,15724
 200eb40:	003f7c06 	br	200e934 <_fpadd_parts+0x1c8>
 200eb44:	2006d07a 	srli	r3,r4,1
 200eb48:	008007c4 	movi	r2,31
 200eb4c:	1185c83a 	sub	r2,r2,r6
 200eb50:	1894d83a 	srl	r10,r3,r2
 200eb54:	2192983a 	sll	r9,r4,r6
 200eb58:	003fd706 	br	200eab8 <_fpadd_parts+0x34c>
 200eb5c:	9487883a 	add	r3,r18,r18
 200eb60:	008007c4 	movi	r2,31
 200eb64:	1185c83a 	sub	r2,r2,r6
 200eb68:	1886983a 	sll	r3,r3,r2
 200eb6c:	899ad83a 	srl	r13,r17,r6
 200eb70:	919cd83a 	srl	r14,r18,r6
 200eb74:	1b5ab03a 	or	r13,r3,r13
 200eb78:	003fc906 	br	200eaa0 <_fpadd_parts+0x334>

0200eb7c <__subdf3>:
 200eb7c:	deffea04 	addi	sp,sp,-88
 200eb80:	dcc01415 	stw	r19,80(sp)
 200eb84:	dcc00404 	addi	r19,sp,16
 200eb88:	2011883a 	mov	r8,r4
 200eb8c:	2813883a 	mov	r9,r5
 200eb90:	dc401315 	stw	r17,76(sp)
 200eb94:	d809883a 	mov	r4,sp
 200eb98:	980b883a 	mov	r5,r19
 200eb9c:	dc400904 	addi	r17,sp,36
 200eba0:	dfc01515 	stw	ra,84(sp)
 200eba4:	da400115 	stw	r9,4(sp)
 200eba8:	d9c00315 	stw	r7,12(sp)
 200ebac:	da000015 	stw	r8,0(sp)
 200ebb0:	d9800215 	stw	r6,8(sp)
 200ebb4:	20100100 	call	2010010 <__unpack_d>
 200ebb8:	d9000204 	addi	r4,sp,8
 200ebbc:	880b883a 	mov	r5,r17
 200ebc0:	20100100 	call	2010010 <__unpack_d>
 200ebc4:	d8800a17 	ldw	r2,40(sp)
 200ebc8:	880b883a 	mov	r5,r17
 200ebcc:	9809883a 	mov	r4,r19
 200ebd0:	d9800e04 	addi	r6,sp,56
 200ebd4:	1080005c 	xori	r2,r2,1
 200ebd8:	d8800a15 	stw	r2,40(sp)
 200ebdc:	200e76c0 	call	200e76c <_fpadd_parts>
 200ebe0:	1009883a 	mov	r4,r2
 200ebe4:	200fcfc0 	call	200fcfc <__pack_d>
 200ebe8:	dfc01517 	ldw	ra,84(sp)
 200ebec:	dcc01417 	ldw	r19,80(sp)
 200ebf0:	dc401317 	ldw	r17,76(sp)
 200ebf4:	dec01604 	addi	sp,sp,88
 200ebf8:	f800283a 	ret

0200ebfc <__adddf3>:
 200ebfc:	deffea04 	addi	sp,sp,-88
 200ec00:	dcc01415 	stw	r19,80(sp)
 200ec04:	dcc00404 	addi	r19,sp,16
 200ec08:	2011883a 	mov	r8,r4
 200ec0c:	2813883a 	mov	r9,r5
 200ec10:	dc401315 	stw	r17,76(sp)
 200ec14:	d809883a 	mov	r4,sp
 200ec18:	980b883a 	mov	r5,r19
 200ec1c:	dc400904 	addi	r17,sp,36
 200ec20:	dfc01515 	stw	ra,84(sp)
 200ec24:	da400115 	stw	r9,4(sp)
 200ec28:	d9c00315 	stw	r7,12(sp)
 200ec2c:	da000015 	stw	r8,0(sp)
 200ec30:	d9800215 	stw	r6,8(sp)
 200ec34:	20100100 	call	2010010 <__unpack_d>
 200ec38:	d9000204 	addi	r4,sp,8
 200ec3c:	880b883a 	mov	r5,r17
 200ec40:	20100100 	call	2010010 <__unpack_d>
 200ec44:	d9800e04 	addi	r6,sp,56
 200ec48:	9809883a 	mov	r4,r19
 200ec4c:	880b883a 	mov	r5,r17
 200ec50:	200e76c0 	call	200e76c <_fpadd_parts>
 200ec54:	1009883a 	mov	r4,r2
 200ec58:	200fcfc0 	call	200fcfc <__pack_d>
 200ec5c:	dfc01517 	ldw	ra,84(sp)
 200ec60:	dcc01417 	ldw	r19,80(sp)
 200ec64:	dc401317 	ldw	r17,76(sp)
 200ec68:	dec01604 	addi	sp,sp,88
 200ec6c:	f800283a 	ret

0200ec70 <__muldf3>:
 200ec70:	deffe004 	addi	sp,sp,-128
 200ec74:	dc401815 	stw	r17,96(sp)
 200ec78:	dc400404 	addi	r17,sp,16
 200ec7c:	2011883a 	mov	r8,r4
 200ec80:	2813883a 	mov	r9,r5
 200ec84:	dc001715 	stw	r16,92(sp)
 200ec88:	d809883a 	mov	r4,sp
 200ec8c:	880b883a 	mov	r5,r17
 200ec90:	dc000904 	addi	r16,sp,36
 200ec94:	dfc01f15 	stw	ra,124(sp)
 200ec98:	da400115 	stw	r9,4(sp)
 200ec9c:	d9c00315 	stw	r7,12(sp)
 200eca0:	da000015 	stw	r8,0(sp)
 200eca4:	d9800215 	stw	r6,8(sp)
 200eca8:	ddc01e15 	stw	r23,120(sp)
 200ecac:	dd801d15 	stw	r22,116(sp)
 200ecb0:	dd401c15 	stw	r21,112(sp)
 200ecb4:	dd001b15 	stw	r20,108(sp)
 200ecb8:	dcc01a15 	stw	r19,104(sp)
 200ecbc:	dc801915 	stw	r18,100(sp)
 200ecc0:	20100100 	call	2010010 <__unpack_d>
 200ecc4:	d9000204 	addi	r4,sp,8
 200ecc8:	800b883a 	mov	r5,r16
 200eccc:	20100100 	call	2010010 <__unpack_d>
 200ecd0:	d9000417 	ldw	r4,16(sp)
 200ecd4:	00800044 	movi	r2,1
 200ecd8:	1100102e 	bgeu	r2,r4,200ed1c <__muldf3+0xac>
 200ecdc:	d8c00917 	ldw	r3,36(sp)
 200ece0:	10c0062e 	bgeu	r2,r3,200ecfc <__muldf3+0x8c>
 200ece4:	00800104 	movi	r2,4
 200ece8:	20800a26 	beq	r4,r2,200ed14 <__muldf3+0xa4>
 200ecec:	1880cc26 	beq	r3,r2,200f020 <__muldf3+0x3b0>
 200ecf0:	00800084 	movi	r2,2
 200ecf4:	20800926 	beq	r4,r2,200ed1c <__muldf3+0xac>
 200ecf8:	1880191e 	bne	r3,r2,200ed60 <__muldf3+0xf0>
 200ecfc:	d8c00a17 	ldw	r3,40(sp)
 200ed00:	d8800517 	ldw	r2,20(sp)
 200ed04:	8009883a 	mov	r4,r16
 200ed08:	10c4c03a 	cmpne	r2,r2,r3
 200ed0c:	d8800a15 	stw	r2,40(sp)
 200ed10:	00000706 	br	200ed30 <__muldf3+0xc0>
 200ed14:	00800084 	movi	r2,2
 200ed18:	1880c326 	beq	r3,r2,200f028 <__muldf3+0x3b8>
 200ed1c:	d8800517 	ldw	r2,20(sp)
 200ed20:	d8c00a17 	ldw	r3,40(sp)
 200ed24:	8809883a 	mov	r4,r17
 200ed28:	10c4c03a 	cmpne	r2,r2,r3
 200ed2c:	d8800515 	stw	r2,20(sp)
 200ed30:	200fcfc0 	call	200fcfc <__pack_d>
 200ed34:	dfc01f17 	ldw	ra,124(sp)
 200ed38:	ddc01e17 	ldw	r23,120(sp)
 200ed3c:	dd801d17 	ldw	r22,116(sp)
 200ed40:	dd401c17 	ldw	r21,112(sp)
 200ed44:	dd001b17 	ldw	r20,108(sp)
 200ed48:	dcc01a17 	ldw	r19,104(sp)
 200ed4c:	dc801917 	ldw	r18,100(sp)
 200ed50:	dc401817 	ldw	r17,96(sp)
 200ed54:	dc001717 	ldw	r16,92(sp)
 200ed58:	dec02004 	addi	sp,sp,128
 200ed5c:	f800283a 	ret
 200ed60:	dd800717 	ldw	r22,28(sp)
 200ed64:	dc800c17 	ldw	r18,48(sp)
 200ed68:	002b883a 	mov	r21,zero
 200ed6c:	0023883a 	mov	r17,zero
 200ed70:	a80b883a 	mov	r5,r21
 200ed74:	b00d883a 	mov	r6,r22
 200ed78:	880f883a 	mov	r7,r17
 200ed7c:	ddc00817 	ldw	r23,32(sp)
 200ed80:	dcc00d17 	ldw	r19,52(sp)
 200ed84:	9009883a 	mov	r4,r18
 200ed88:	200d7700 	call	200d770 <__muldi3>
 200ed8c:	001b883a 	mov	r13,zero
 200ed90:	680f883a 	mov	r7,r13
 200ed94:	b009883a 	mov	r4,r22
 200ed98:	000b883a 	mov	r5,zero
 200ed9c:	980d883a 	mov	r6,r19
 200eda0:	b82d883a 	mov	r22,r23
 200eda4:	002f883a 	mov	r23,zero
 200eda8:	db401615 	stw	r13,88(sp)
 200edac:	d8801315 	stw	r2,76(sp)
 200edb0:	d8c01415 	stw	r3,80(sp)
 200edb4:	dcc01515 	stw	r19,84(sp)
 200edb8:	200d7700 	call	200d770 <__muldi3>
 200edbc:	b00d883a 	mov	r6,r22
 200edc0:	000b883a 	mov	r5,zero
 200edc4:	9009883a 	mov	r4,r18
 200edc8:	b80f883a 	mov	r7,r23
 200edcc:	1021883a 	mov	r16,r2
 200edd0:	1823883a 	mov	r17,r3
 200edd4:	200d7700 	call	200d770 <__muldi3>
 200edd8:	8085883a 	add	r2,r16,r2
 200eddc:	140d803a 	cmpltu	r6,r2,r16
 200ede0:	88c7883a 	add	r3,r17,r3
 200ede4:	30cd883a 	add	r6,r6,r3
 200ede8:	1029883a 	mov	r20,r2
 200edec:	302b883a 	mov	r21,r6
 200edf0:	da801317 	ldw	r10,76(sp)
 200edf4:	dac01417 	ldw	r11,80(sp)
 200edf8:	db001517 	ldw	r12,84(sp)
 200edfc:	db401617 	ldw	r13,88(sp)
 200ee00:	3440612e 	bgeu	r6,r17,200ef88 <__muldf3+0x318>
 200ee04:	0009883a 	mov	r4,zero
 200ee08:	5105883a 	add	r2,r10,r4
 200ee0c:	128d803a 	cmpltu	r6,r2,r10
 200ee10:	5d07883a 	add	r3,r11,r20
 200ee14:	30cd883a 	add	r6,r6,r3
 200ee18:	0021883a 	mov	r16,zero
 200ee1c:	04400044 	movi	r17,1
 200ee20:	1025883a 	mov	r18,r2
 200ee24:	3027883a 	mov	r19,r6
 200ee28:	32c06236 	bltu	r6,r11,200efb4 <__muldf3+0x344>
 200ee2c:	59807a26 	beq	r11,r6,200f018 <__muldf3+0x3a8>
 200ee30:	680b883a 	mov	r5,r13
 200ee34:	b80f883a 	mov	r7,r23
 200ee38:	6009883a 	mov	r4,r12
 200ee3c:	b00d883a 	mov	r6,r22
 200ee40:	200d7700 	call	200d770 <__muldi3>
 200ee44:	1009883a 	mov	r4,r2
 200ee48:	000f883a 	mov	r7,zero
 200ee4c:	1545883a 	add	r2,r2,r21
 200ee50:	1111803a 	cmpltu	r8,r2,r4
 200ee54:	19c7883a 	add	r3,r3,r7
 200ee58:	40c7883a 	add	r3,r8,r3
 200ee5c:	88cb883a 	add	r5,r17,r3
 200ee60:	d8c00617 	ldw	r3,24(sp)
 200ee64:	8089883a 	add	r4,r16,r2
 200ee68:	d8800b17 	ldw	r2,44(sp)
 200ee6c:	18c00104 	addi	r3,r3,4
 200ee70:	240d803a 	cmpltu	r6,r4,r16
 200ee74:	10c7883a 	add	r3,r2,r3
 200ee78:	2013883a 	mov	r9,r4
 200ee7c:	d8800a17 	ldw	r2,40(sp)
 200ee80:	d9000517 	ldw	r4,20(sp)
 200ee84:	314d883a 	add	r6,r6,r5
 200ee88:	3015883a 	mov	r10,r6
 200ee8c:	2088c03a 	cmpne	r4,r4,r2
 200ee90:	00880034 	movhi	r2,8192
 200ee94:	10bfffc4 	addi	r2,r2,-1
 200ee98:	d9000f15 	stw	r4,60(sp)
 200ee9c:	d8c01015 	stw	r3,64(sp)
 200eea0:	1180162e 	bgeu	r2,r6,200eefc <__muldf3+0x28c>
 200eea4:	1811883a 	mov	r8,r3
 200eea8:	101f883a 	mov	r15,r2
 200eeac:	980497fa 	slli	r2,r19,31
 200eeb0:	9016d07a 	srli	r11,r18,1
 200eeb4:	500697fa 	slli	r3,r10,31
 200eeb8:	480cd07a 	srli	r6,r9,1
 200eebc:	500ed07a 	srli	r7,r10,1
 200eec0:	12d6b03a 	or	r11,r2,r11
 200eec4:	00800044 	movi	r2,1
 200eec8:	198cb03a 	or	r6,r3,r6
 200eecc:	4888703a 	and	r4,r9,r2
 200eed0:	9818d07a 	srli	r12,r19,1
 200eed4:	001b883a 	mov	r13,zero
 200eed8:	03a00034 	movhi	r14,32768
 200eedc:	3013883a 	mov	r9,r6
 200eee0:	3815883a 	mov	r10,r7
 200eee4:	4091883a 	add	r8,r8,r2
 200eee8:	20000226 	beq	r4,zero,200eef4 <__muldf3+0x284>
 200eeec:	5b64b03a 	or	r18,r11,r13
 200eef0:	63a6b03a 	or	r19,r12,r14
 200eef4:	7abfed36 	bltu	r15,r10,200eeac <__muldf3+0x23c>
 200eef8:	da001015 	stw	r8,64(sp)
 200eefc:	00840034 	movhi	r2,4096
 200ef00:	10bfffc4 	addi	r2,r2,-1
 200ef04:	12801436 	bltu	r2,r10,200ef58 <__muldf3+0x2e8>
 200ef08:	da001017 	ldw	r8,64(sp)
 200ef0c:	101f883a 	mov	r15,r2
 200ef10:	4a45883a 	add	r2,r9,r9
 200ef14:	124d803a 	cmpltu	r6,r2,r9
 200ef18:	5287883a 	add	r3,r10,r10
 200ef1c:	9497883a 	add	r11,r18,r18
 200ef20:	5c8f803a 	cmpltu	r7,r11,r18
 200ef24:	9cd9883a 	add	r12,r19,r19
 200ef28:	01000044 	movi	r4,1
 200ef2c:	30cd883a 	add	r6,r6,r3
 200ef30:	3b0f883a 	add	r7,r7,r12
 200ef34:	423fffc4 	addi	r8,r8,-1
 200ef38:	1013883a 	mov	r9,r2
 200ef3c:	3015883a 	mov	r10,r6
 200ef40:	111ab03a 	or	r13,r2,r4
 200ef44:	98003016 	blt	r19,zero,200f008 <__muldf3+0x398>
 200ef48:	5825883a 	mov	r18,r11
 200ef4c:	3827883a 	mov	r19,r7
 200ef50:	7abfef2e 	bgeu	r15,r10,200ef10 <__muldf3+0x2a0>
 200ef54:	da001015 	stw	r8,64(sp)
 200ef58:	00803fc4 	movi	r2,255
 200ef5c:	488e703a 	and	r7,r9,r2
 200ef60:	00802004 	movi	r2,128
 200ef64:	0007883a 	mov	r3,zero
 200ef68:	0011883a 	mov	r8,zero
 200ef6c:	38801826 	beq	r7,r2,200efd0 <__muldf3+0x360>
 200ef70:	008000c4 	movi	r2,3
 200ef74:	d9000e04 	addi	r4,sp,56
 200ef78:	da801215 	stw	r10,72(sp)
 200ef7c:	d8800e15 	stw	r2,56(sp)
 200ef80:	da401115 	stw	r9,68(sp)
 200ef84:	003f6a06 	br	200ed30 <__muldf3+0xc0>
 200ef88:	89802126 	beq	r17,r6,200f010 <__muldf3+0x3a0>
 200ef8c:	0009883a 	mov	r4,zero
 200ef90:	5105883a 	add	r2,r10,r4
 200ef94:	128d803a 	cmpltu	r6,r2,r10
 200ef98:	5d07883a 	add	r3,r11,r20
 200ef9c:	30cd883a 	add	r6,r6,r3
 200efa0:	0021883a 	mov	r16,zero
 200efa4:	0023883a 	mov	r17,zero
 200efa8:	1025883a 	mov	r18,r2
 200efac:	3027883a 	mov	r19,r6
 200efb0:	32ff9e2e 	bgeu	r6,r11,200ee2c <__muldf3+0x1bc>
 200efb4:	00800044 	movi	r2,1
 200efb8:	8089883a 	add	r4,r16,r2
 200efbc:	240d803a 	cmpltu	r6,r4,r16
 200efc0:	344d883a 	add	r6,r6,r17
 200efc4:	2021883a 	mov	r16,r4
 200efc8:	3023883a 	mov	r17,r6
 200efcc:	003f9806 	br	200ee30 <__muldf3+0x1c0>
 200efd0:	403fe71e 	bne	r8,zero,200ef70 <__muldf3+0x300>
 200efd4:	01004004 	movi	r4,256
 200efd8:	4904703a 	and	r2,r9,r4
 200efdc:	10c4b03a 	or	r2,r2,r3
 200efe0:	103fe31e 	bne	r2,zero,200ef70 <__muldf3+0x300>
 200efe4:	94c4b03a 	or	r2,r18,r19
 200efe8:	103fe126 	beq	r2,zero,200ef70 <__muldf3+0x300>
 200efec:	49c5883a 	add	r2,r9,r7
 200eff0:	1251803a 	cmpltu	r8,r2,r9
 200eff4:	4291883a 	add	r8,r8,r10
 200eff8:	013fc004 	movi	r4,-256
 200effc:	1112703a 	and	r9,r2,r4
 200f000:	4015883a 	mov	r10,r8
 200f004:	003fda06 	br	200ef70 <__muldf3+0x300>
 200f008:	6813883a 	mov	r9,r13
 200f00c:	003fce06 	br	200ef48 <__muldf3+0x2d8>
 200f010:	143f7c36 	bltu	r2,r16,200ee04 <__muldf3+0x194>
 200f014:	003fdd06 	br	200ef8c <__muldf3+0x31c>
 200f018:	12bf852e 	bgeu	r2,r10,200ee30 <__muldf3+0x1c0>
 200f01c:	003fe506 	br	200efb4 <__muldf3+0x344>
 200f020:	00800084 	movi	r2,2
 200f024:	20bf351e 	bne	r4,r2,200ecfc <__muldf3+0x8c>
 200f028:	01008074 	movhi	r4,513
 200f02c:	210f5b04 	addi	r4,r4,15724
 200f030:	003f3f06 	br	200ed30 <__muldf3+0xc0>

0200f034 <__divdf3>:
 200f034:	deffed04 	addi	sp,sp,-76
 200f038:	dcc01115 	stw	r19,68(sp)
 200f03c:	dcc00404 	addi	r19,sp,16
 200f040:	2011883a 	mov	r8,r4
 200f044:	2813883a 	mov	r9,r5
 200f048:	dc000e15 	stw	r16,56(sp)
 200f04c:	d809883a 	mov	r4,sp
 200f050:	980b883a 	mov	r5,r19
 200f054:	dc000904 	addi	r16,sp,36
 200f058:	dfc01215 	stw	ra,72(sp)
 200f05c:	da400115 	stw	r9,4(sp)
 200f060:	d9c00315 	stw	r7,12(sp)
 200f064:	da000015 	stw	r8,0(sp)
 200f068:	d9800215 	stw	r6,8(sp)
 200f06c:	dc801015 	stw	r18,64(sp)
 200f070:	dc400f15 	stw	r17,60(sp)
 200f074:	20100100 	call	2010010 <__unpack_d>
 200f078:	d9000204 	addi	r4,sp,8
 200f07c:	800b883a 	mov	r5,r16
 200f080:	20100100 	call	2010010 <__unpack_d>
 200f084:	d9000417 	ldw	r4,16(sp)
 200f088:	00800044 	movi	r2,1
 200f08c:	11000b2e 	bgeu	r2,r4,200f0bc <__divdf3+0x88>
 200f090:	d9400917 	ldw	r5,36(sp)
 200f094:	1140762e 	bgeu	r2,r5,200f270 <__divdf3+0x23c>
 200f098:	d8800517 	ldw	r2,20(sp)
 200f09c:	d8c00a17 	ldw	r3,40(sp)
 200f0a0:	01800104 	movi	r6,4
 200f0a4:	10c4f03a 	xor	r2,r2,r3
 200f0a8:	d8800515 	stw	r2,20(sp)
 200f0ac:	21800226 	beq	r4,r6,200f0b8 <__divdf3+0x84>
 200f0b0:	00800084 	movi	r2,2
 200f0b4:	2080141e 	bne	r4,r2,200f108 <__divdf3+0xd4>
 200f0b8:	29000926 	beq	r5,r4,200f0e0 <__divdf3+0xac>
 200f0bc:	9809883a 	mov	r4,r19
 200f0c0:	200fcfc0 	call	200fcfc <__pack_d>
 200f0c4:	dfc01217 	ldw	ra,72(sp)
 200f0c8:	dcc01117 	ldw	r19,68(sp)
 200f0cc:	dc801017 	ldw	r18,64(sp)
 200f0d0:	dc400f17 	ldw	r17,60(sp)
 200f0d4:	dc000e17 	ldw	r16,56(sp)
 200f0d8:	dec01304 	addi	sp,sp,76
 200f0dc:	f800283a 	ret
 200f0e0:	01008074 	movhi	r4,513
 200f0e4:	210f5b04 	addi	r4,r4,15724
 200f0e8:	200fcfc0 	call	200fcfc <__pack_d>
 200f0ec:	dfc01217 	ldw	ra,72(sp)
 200f0f0:	dcc01117 	ldw	r19,68(sp)
 200f0f4:	dc801017 	ldw	r18,64(sp)
 200f0f8:	dc400f17 	ldw	r17,60(sp)
 200f0fc:	dc000e17 	ldw	r16,56(sp)
 200f100:	dec01304 	addi	sp,sp,76
 200f104:	f800283a 	ret
 200f108:	29805b26 	beq	r5,r6,200f278 <__divdf3+0x244>
 200f10c:	28802d26 	beq	r5,r2,200f1c4 <__divdf3+0x190>
 200f110:	d8c00617 	ldw	r3,24(sp)
 200f114:	d8800b17 	ldw	r2,44(sp)
 200f118:	d9c00817 	ldw	r7,32(sp)
 200f11c:	dc400d17 	ldw	r17,52(sp)
 200f120:	188bc83a 	sub	r5,r3,r2
 200f124:	d9800717 	ldw	r6,28(sp)
 200f128:	dc000c17 	ldw	r16,48(sp)
 200f12c:	d9400615 	stw	r5,24(sp)
 200f130:	3c403836 	bltu	r7,r17,200f214 <__divdf3+0x1e0>
 200f134:	89c03626 	beq	r17,r7,200f210 <__divdf3+0x1dc>
 200f138:	0015883a 	mov	r10,zero
 200f13c:	001d883a 	mov	r14,zero
 200f140:	02c40034 	movhi	r11,4096
 200f144:	001f883a 	mov	r15,zero
 200f148:	003f883a 	mov	ra,zero
 200f14c:	04800f44 	movi	r18,61
 200f150:	00000f06 	br	200f190 <__divdf3+0x15c>
 200f154:	601d883a 	mov	r14,r12
 200f158:	681f883a 	mov	r15,r13
 200f15c:	400d883a 	mov	r6,r8
 200f160:	100f883a 	mov	r7,r2
 200f164:	3191883a 	add	r8,r6,r6
 200f168:	5808d07a 	srli	r4,r11,1
 200f16c:	4185803a 	cmpltu	r2,r8,r6
 200f170:	39d3883a 	add	r9,r7,r7
 200f174:	28c6b03a 	or	r3,r5,r3
 200f178:	1245883a 	add	r2,r2,r9
 200f17c:	1815883a 	mov	r10,r3
 200f180:	2017883a 	mov	r11,r4
 200f184:	400d883a 	mov	r6,r8
 200f188:	100f883a 	mov	r7,r2
 200f18c:	fc801726 	beq	ra,r18,200f1ec <__divdf3+0x1b8>
 200f190:	580a97fa 	slli	r5,r11,31
 200f194:	5006d07a 	srli	r3,r10,1
 200f198:	ffc00044 	addi	ra,ra,1
 200f19c:	3c7ff136 	bltu	r7,r17,200f164 <__divdf3+0x130>
 200f1a0:	3411c83a 	sub	r8,r6,r16
 200f1a4:	3205803a 	cmpltu	r2,r6,r8
 200f1a8:	3c53c83a 	sub	r9,r7,r17
 200f1ac:	7298b03a 	or	r12,r14,r10
 200f1b0:	7adab03a 	or	r13,r15,r11
 200f1b4:	4885c83a 	sub	r2,r9,r2
 200f1b8:	89ffe61e 	bne	r17,r7,200f154 <__divdf3+0x120>
 200f1bc:	343fe936 	bltu	r6,r16,200f164 <__divdf3+0x130>
 200f1c0:	003fe406 	br	200f154 <__divdf3+0x120>
 200f1c4:	9809883a 	mov	r4,r19
 200f1c8:	d9800415 	stw	r6,16(sp)
 200f1cc:	200fcfc0 	call	200fcfc <__pack_d>
 200f1d0:	dfc01217 	ldw	ra,72(sp)
 200f1d4:	dcc01117 	ldw	r19,68(sp)
 200f1d8:	dc801017 	ldw	r18,64(sp)
 200f1dc:	dc400f17 	ldw	r17,60(sp)
 200f1e0:	dc000e17 	ldw	r16,56(sp)
 200f1e4:	dec01304 	addi	sp,sp,76
 200f1e8:	f800283a 	ret
 200f1ec:	00803fc4 	movi	r2,255
 200f1f0:	7090703a 	and	r8,r14,r2
 200f1f4:	00802004 	movi	r2,128
 200f1f8:	0007883a 	mov	r3,zero
 200f1fc:	0013883a 	mov	r9,zero
 200f200:	40800d26 	beq	r8,r2,200f238 <__divdf3+0x204>
 200f204:	dbc00815 	stw	r15,32(sp)
 200f208:	db800715 	stw	r14,28(sp)
 200f20c:	003fab06 	br	200f0bc <__divdf3+0x88>
 200f210:	343fc92e 	bgeu	r6,r16,200f138 <__divdf3+0x104>
 200f214:	3185883a 	add	r2,r6,r6
 200f218:	1189803a 	cmpltu	r4,r2,r6
 200f21c:	39c7883a 	add	r3,r7,r7
 200f220:	20c9883a 	add	r4,r4,r3
 200f224:	297fffc4 	addi	r5,r5,-1
 200f228:	100d883a 	mov	r6,r2
 200f22c:	200f883a 	mov	r7,r4
 200f230:	d9400615 	stw	r5,24(sp)
 200f234:	003fc006 	br	200f138 <__divdf3+0x104>
 200f238:	483ff21e 	bne	r9,zero,200f204 <__divdf3+0x1d0>
 200f23c:	01004004 	movi	r4,256
 200f240:	7104703a 	and	r2,r14,r4
 200f244:	10c4b03a 	or	r2,r2,r3
 200f248:	103fee1e 	bne	r2,zero,200f204 <__divdf3+0x1d0>
 200f24c:	31c4b03a 	or	r2,r6,r7
 200f250:	103fec26 	beq	r2,zero,200f204 <__divdf3+0x1d0>
 200f254:	7205883a 	add	r2,r14,r8
 200f258:	1391803a 	cmpltu	r8,r2,r14
 200f25c:	43d1883a 	add	r8,r8,r15
 200f260:	013fc004 	movi	r4,-256
 200f264:	111c703a 	and	r14,r2,r4
 200f268:	401f883a 	mov	r15,r8
 200f26c:	003fe506 	br	200f204 <__divdf3+0x1d0>
 200f270:	8009883a 	mov	r4,r16
 200f274:	003f9206 	br	200f0c0 <__divdf3+0x8c>
 200f278:	9809883a 	mov	r4,r19
 200f27c:	d8000715 	stw	zero,28(sp)
 200f280:	d8000815 	stw	zero,32(sp)
 200f284:	d8000615 	stw	zero,24(sp)
 200f288:	003f8d06 	br	200f0c0 <__divdf3+0x8c>

0200f28c <__eqdf2>:
 200f28c:	deffef04 	addi	sp,sp,-68
 200f290:	dc400f15 	stw	r17,60(sp)
 200f294:	dc400404 	addi	r17,sp,16
 200f298:	2005883a 	mov	r2,r4
 200f29c:	2807883a 	mov	r3,r5
 200f2a0:	dc000e15 	stw	r16,56(sp)
 200f2a4:	d809883a 	mov	r4,sp
 200f2a8:	880b883a 	mov	r5,r17
 200f2ac:	dc000904 	addi	r16,sp,36
 200f2b0:	d8c00115 	stw	r3,4(sp)
 200f2b4:	d8800015 	stw	r2,0(sp)
 200f2b8:	d9800215 	stw	r6,8(sp)
 200f2bc:	dfc01015 	stw	ra,64(sp)
 200f2c0:	d9c00315 	stw	r7,12(sp)
 200f2c4:	20100100 	call	2010010 <__unpack_d>
 200f2c8:	d9000204 	addi	r4,sp,8
 200f2cc:	800b883a 	mov	r5,r16
 200f2d0:	20100100 	call	2010010 <__unpack_d>
 200f2d4:	d8800417 	ldw	r2,16(sp)
 200f2d8:	00c00044 	movi	r3,1
 200f2dc:	180d883a 	mov	r6,r3
 200f2e0:	1880062e 	bgeu	r3,r2,200f2fc <__eqdf2+0x70>
 200f2e4:	d8800917 	ldw	r2,36(sp)
 200f2e8:	8809883a 	mov	r4,r17
 200f2ec:	800b883a 	mov	r5,r16
 200f2f0:	1880022e 	bgeu	r3,r2,200f2fc <__eqdf2+0x70>
 200f2f4:	20101480 	call	2010148 <__fpcmp_parts_d>
 200f2f8:	100d883a 	mov	r6,r2
 200f2fc:	3005883a 	mov	r2,r6
 200f300:	dfc01017 	ldw	ra,64(sp)
 200f304:	dc400f17 	ldw	r17,60(sp)
 200f308:	dc000e17 	ldw	r16,56(sp)
 200f30c:	dec01104 	addi	sp,sp,68
 200f310:	f800283a 	ret

0200f314 <__nedf2>:
 200f314:	deffef04 	addi	sp,sp,-68
 200f318:	dc400f15 	stw	r17,60(sp)
 200f31c:	dc400404 	addi	r17,sp,16
 200f320:	2005883a 	mov	r2,r4
 200f324:	2807883a 	mov	r3,r5
 200f328:	dc000e15 	stw	r16,56(sp)
 200f32c:	d809883a 	mov	r4,sp
 200f330:	880b883a 	mov	r5,r17
 200f334:	dc000904 	addi	r16,sp,36
 200f338:	d8c00115 	stw	r3,4(sp)
 200f33c:	d8800015 	stw	r2,0(sp)
 200f340:	d9800215 	stw	r6,8(sp)
 200f344:	dfc01015 	stw	ra,64(sp)
 200f348:	d9c00315 	stw	r7,12(sp)
 200f34c:	20100100 	call	2010010 <__unpack_d>
 200f350:	d9000204 	addi	r4,sp,8
 200f354:	800b883a 	mov	r5,r16
 200f358:	20100100 	call	2010010 <__unpack_d>
 200f35c:	d8800417 	ldw	r2,16(sp)
 200f360:	00c00044 	movi	r3,1
 200f364:	180d883a 	mov	r6,r3
 200f368:	1880062e 	bgeu	r3,r2,200f384 <__nedf2+0x70>
 200f36c:	d8800917 	ldw	r2,36(sp)
 200f370:	8809883a 	mov	r4,r17
 200f374:	800b883a 	mov	r5,r16
 200f378:	1880022e 	bgeu	r3,r2,200f384 <__nedf2+0x70>
 200f37c:	20101480 	call	2010148 <__fpcmp_parts_d>
 200f380:	100d883a 	mov	r6,r2
 200f384:	3005883a 	mov	r2,r6
 200f388:	dfc01017 	ldw	ra,64(sp)
 200f38c:	dc400f17 	ldw	r17,60(sp)
 200f390:	dc000e17 	ldw	r16,56(sp)
 200f394:	dec01104 	addi	sp,sp,68
 200f398:	f800283a 	ret

0200f39c <__gtdf2>:
 200f39c:	deffef04 	addi	sp,sp,-68
 200f3a0:	dc400f15 	stw	r17,60(sp)
 200f3a4:	dc400404 	addi	r17,sp,16
 200f3a8:	2005883a 	mov	r2,r4
 200f3ac:	2807883a 	mov	r3,r5
 200f3b0:	dc000e15 	stw	r16,56(sp)
 200f3b4:	d809883a 	mov	r4,sp
 200f3b8:	880b883a 	mov	r5,r17
 200f3bc:	dc000904 	addi	r16,sp,36
 200f3c0:	d8c00115 	stw	r3,4(sp)
 200f3c4:	d8800015 	stw	r2,0(sp)
 200f3c8:	d9800215 	stw	r6,8(sp)
 200f3cc:	dfc01015 	stw	ra,64(sp)
 200f3d0:	d9c00315 	stw	r7,12(sp)
 200f3d4:	20100100 	call	2010010 <__unpack_d>
 200f3d8:	d9000204 	addi	r4,sp,8
 200f3dc:	800b883a 	mov	r5,r16
 200f3e0:	20100100 	call	2010010 <__unpack_d>
 200f3e4:	d8800417 	ldw	r2,16(sp)
 200f3e8:	00c00044 	movi	r3,1
 200f3ec:	01bfffc4 	movi	r6,-1
 200f3f0:	1880062e 	bgeu	r3,r2,200f40c <__gtdf2+0x70>
 200f3f4:	d8800917 	ldw	r2,36(sp)
 200f3f8:	8809883a 	mov	r4,r17
 200f3fc:	800b883a 	mov	r5,r16
 200f400:	1880022e 	bgeu	r3,r2,200f40c <__gtdf2+0x70>
 200f404:	20101480 	call	2010148 <__fpcmp_parts_d>
 200f408:	100d883a 	mov	r6,r2
 200f40c:	3005883a 	mov	r2,r6
 200f410:	dfc01017 	ldw	ra,64(sp)
 200f414:	dc400f17 	ldw	r17,60(sp)
 200f418:	dc000e17 	ldw	r16,56(sp)
 200f41c:	dec01104 	addi	sp,sp,68
 200f420:	f800283a 	ret

0200f424 <__gedf2>:
 200f424:	deffef04 	addi	sp,sp,-68
 200f428:	dc400f15 	stw	r17,60(sp)
 200f42c:	dc400404 	addi	r17,sp,16
 200f430:	2005883a 	mov	r2,r4
 200f434:	2807883a 	mov	r3,r5
 200f438:	dc000e15 	stw	r16,56(sp)
 200f43c:	d809883a 	mov	r4,sp
 200f440:	880b883a 	mov	r5,r17
 200f444:	dc000904 	addi	r16,sp,36
 200f448:	d8c00115 	stw	r3,4(sp)
 200f44c:	d8800015 	stw	r2,0(sp)
 200f450:	d9800215 	stw	r6,8(sp)
 200f454:	dfc01015 	stw	ra,64(sp)
 200f458:	d9c00315 	stw	r7,12(sp)
 200f45c:	20100100 	call	2010010 <__unpack_d>
 200f460:	d9000204 	addi	r4,sp,8
 200f464:	800b883a 	mov	r5,r16
 200f468:	20100100 	call	2010010 <__unpack_d>
 200f46c:	d8800417 	ldw	r2,16(sp)
 200f470:	00c00044 	movi	r3,1
 200f474:	01bfffc4 	movi	r6,-1
 200f478:	1880062e 	bgeu	r3,r2,200f494 <__gedf2+0x70>
 200f47c:	d8800917 	ldw	r2,36(sp)
 200f480:	8809883a 	mov	r4,r17
 200f484:	800b883a 	mov	r5,r16
 200f488:	1880022e 	bgeu	r3,r2,200f494 <__gedf2+0x70>
 200f48c:	20101480 	call	2010148 <__fpcmp_parts_d>
 200f490:	100d883a 	mov	r6,r2
 200f494:	3005883a 	mov	r2,r6
 200f498:	dfc01017 	ldw	ra,64(sp)
 200f49c:	dc400f17 	ldw	r17,60(sp)
 200f4a0:	dc000e17 	ldw	r16,56(sp)
 200f4a4:	dec01104 	addi	sp,sp,68
 200f4a8:	f800283a 	ret

0200f4ac <__ltdf2>:
 200f4ac:	deffef04 	addi	sp,sp,-68
 200f4b0:	dc400f15 	stw	r17,60(sp)
 200f4b4:	dc400404 	addi	r17,sp,16
 200f4b8:	2005883a 	mov	r2,r4
 200f4bc:	2807883a 	mov	r3,r5
 200f4c0:	dc000e15 	stw	r16,56(sp)
 200f4c4:	d809883a 	mov	r4,sp
 200f4c8:	880b883a 	mov	r5,r17
 200f4cc:	dc000904 	addi	r16,sp,36
 200f4d0:	d8c00115 	stw	r3,4(sp)
 200f4d4:	d8800015 	stw	r2,0(sp)
 200f4d8:	d9800215 	stw	r6,8(sp)
 200f4dc:	dfc01015 	stw	ra,64(sp)
 200f4e0:	d9c00315 	stw	r7,12(sp)
 200f4e4:	20100100 	call	2010010 <__unpack_d>
 200f4e8:	d9000204 	addi	r4,sp,8
 200f4ec:	800b883a 	mov	r5,r16
 200f4f0:	20100100 	call	2010010 <__unpack_d>
 200f4f4:	d8800417 	ldw	r2,16(sp)
 200f4f8:	00c00044 	movi	r3,1
 200f4fc:	180d883a 	mov	r6,r3
 200f500:	1880062e 	bgeu	r3,r2,200f51c <__ltdf2+0x70>
 200f504:	d8800917 	ldw	r2,36(sp)
 200f508:	8809883a 	mov	r4,r17
 200f50c:	800b883a 	mov	r5,r16
 200f510:	1880022e 	bgeu	r3,r2,200f51c <__ltdf2+0x70>
 200f514:	20101480 	call	2010148 <__fpcmp_parts_d>
 200f518:	100d883a 	mov	r6,r2
 200f51c:	3005883a 	mov	r2,r6
 200f520:	dfc01017 	ldw	ra,64(sp)
 200f524:	dc400f17 	ldw	r17,60(sp)
 200f528:	dc000e17 	ldw	r16,56(sp)
 200f52c:	dec01104 	addi	sp,sp,68
 200f530:	f800283a 	ret

0200f534 <__ledf2>:
 200f534:	deffef04 	addi	sp,sp,-68
 200f538:	dc400f15 	stw	r17,60(sp)
 200f53c:	dc400404 	addi	r17,sp,16
 200f540:	2005883a 	mov	r2,r4
 200f544:	2807883a 	mov	r3,r5
 200f548:	dc000e15 	stw	r16,56(sp)
 200f54c:	d809883a 	mov	r4,sp
 200f550:	880b883a 	mov	r5,r17
 200f554:	dc000904 	addi	r16,sp,36
 200f558:	d8c00115 	stw	r3,4(sp)
 200f55c:	d8800015 	stw	r2,0(sp)
 200f560:	d9800215 	stw	r6,8(sp)
 200f564:	dfc01015 	stw	ra,64(sp)
 200f568:	d9c00315 	stw	r7,12(sp)
 200f56c:	20100100 	call	2010010 <__unpack_d>
 200f570:	d9000204 	addi	r4,sp,8
 200f574:	800b883a 	mov	r5,r16
 200f578:	20100100 	call	2010010 <__unpack_d>
 200f57c:	d8800417 	ldw	r2,16(sp)
 200f580:	00c00044 	movi	r3,1
 200f584:	180d883a 	mov	r6,r3
 200f588:	1880062e 	bgeu	r3,r2,200f5a4 <__ledf2+0x70>
 200f58c:	d8800917 	ldw	r2,36(sp)
 200f590:	8809883a 	mov	r4,r17
 200f594:	800b883a 	mov	r5,r16
 200f598:	1880022e 	bgeu	r3,r2,200f5a4 <__ledf2+0x70>
 200f59c:	20101480 	call	2010148 <__fpcmp_parts_d>
 200f5a0:	100d883a 	mov	r6,r2
 200f5a4:	3005883a 	mov	r2,r6
 200f5a8:	dfc01017 	ldw	ra,64(sp)
 200f5ac:	dc400f17 	ldw	r17,60(sp)
 200f5b0:	dc000e17 	ldw	r16,56(sp)
 200f5b4:	dec01104 	addi	sp,sp,68
 200f5b8:	f800283a 	ret

0200f5bc <__floatsidf>:
 200f5bc:	2006d7fa 	srli	r3,r4,31
 200f5c0:	defff604 	addi	sp,sp,-40
 200f5c4:	008000c4 	movi	r2,3
 200f5c8:	dfc00915 	stw	ra,36(sp)
 200f5cc:	dcc00815 	stw	r19,32(sp)
 200f5d0:	dc800715 	stw	r18,28(sp)
 200f5d4:	dc400615 	stw	r17,24(sp)
 200f5d8:	dc000515 	stw	r16,20(sp)
 200f5dc:	d8800015 	stw	r2,0(sp)
 200f5e0:	d8c00115 	stw	r3,4(sp)
 200f5e4:	20000f1e 	bne	r4,zero,200f624 <__floatsidf+0x68>
 200f5e8:	00800084 	movi	r2,2
 200f5ec:	d8800015 	stw	r2,0(sp)
 200f5f0:	d809883a 	mov	r4,sp
 200f5f4:	200fcfc0 	call	200fcfc <__pack_d>
 200f5f8:	1009883a 	mov	r4,r2
 200f5fc:	180b883a 	mov	r5,r3
 200f600:	2005883a 	mov	r2,r4
 200f604:	2807883a 	mov	r3,r5
 200f608:	dfc00917 	ldw	ra,36(sp)
 200f60c:	dcc00817 	ldw	r19,32(sp)
 200f610:	dc800717 	ldw	r18,28(sp)
 200f614:	dc400617 	ldw	r17,24(sp)
 200f618:	dc000517 	ldw	r16,20(sp)
 200f61c:	dec00a04 	addi	sp,sp,40
 200f620:	f800283a 	ret
 200f624:	00800f04 	movi	r2,60
 200f628:	1807003a 	cmpeq	r3,r3,zero
 200f62c:	d8800215 	stw	r2,8(sp)
 200f630:	18001126 	beq	r3,zero,200f678 <__floatsidf+0xbc>
 200f634:	0027883a 	mov	r19,zero
 200f638:	2025883a 	mov	r18,r4
 200f63c:	d9000315 	stw	r4,12(sp)
 200f640:	dcc00415 	stw	r19,16(sp)
 200f644:	200fae00 	call	200fae0 <__clzsi2>
 200f648:	11000744 	addi	r4,r2,29
 200f64c:	013fe80e 	bge	zero,r4,200f5f0 <__floatsidf+0x34>
 200f650:	10bfff44 	addi	r2,r2,-3
 200f654:	10000c16 	blt	r2,zero,200f688 <__floatsidf+0xcc>
 200f658:	90a2983a 	sll	r17,r18,r2
 200f65c:	0021883a 	mov	r16,zero
 200f660:	d8800217 	ldw	r2,8(sp)
 200f664:	dc400415 	stw	r17,16(sp)
 200f668:	dc000315 	stw	r16,12(sp)
 200f66c:	1105c83a 	sub	r2,r2,r4
 200f670:	d8800215 	stw	r2,8(sp)
 200f674:	003fde06 	br	200f5f0 <__floatsidf+0x34>
 200f678:	00a00034 	movhi	r2,32768
 200f67c:	20800a26 	beq	r4,r2,200f6a8 <__floatsidf+0xec>
 200f680:	0109c83a 	sub	r4,zero,r4
 200f684:	003feb06 	br	200f634 <__floatsidf+0x78>
 200f688:	9006d07a 	srli	r3,r18,1
 200f68c:	008007c4 	movi	r2,31
 200f690:	1105c83a 	sub	r2,r2,r4
 200f694:	1886d83a 	srl	r3,r3,r2
 200f698:	9922983a 	sll	r17,r19,r4
 200f69c:	9120983a 	sll	r16,r18,r4
 200f6a0:	1c62b03a 	or	r17,r3,r17
 200f6a4:	003fee06 	br	200f660 <__floatsidf+0xa4>
 200f6a8:	0009883a 	mov	r4,zero
 200f6ac:	01707834 	movhi	r5,49632
 200f6b0:	003fd306 	br	200f600 <__floatsidf+0x44>

0200f6b4 <__fixdfsi>:
 200f6b4:	defff804 	addi	sp,sp,-32
 200f6b8:	2005883a 	mov	r2,r4
 200f6bc:	2807883a 	mov	r3,r5
 200f6c0:	d809883a 	mov	r4,sp
 200f6c4:	d9400204 	addi	r5,sp,8
 200f6c8:	d8c00115 	stw	r3,4(sp)
 200f6cc:	d8800015 	stw	r2,0(sp)
 200f6d0:	dfc00715 	stw	ra,28(sp)
 200f6d4:	20100100 	call	2010010 <__unpack_d>
 200f6d8:	d8c00217 	ldw	r3,8(sp)
 200f6dc:	00800084 	movi	r2,2
 200f6e0:	1880051e 	bne	r3,r2,200f6f8 <__fixdfsi+0x44>
 200f6e4:	0007883a 	mov	r3,zero
 200f6e8:	1805883a 	mov	r2,r3
 200f6ec:	dfc00717 	ldw	ra,28(sp)
 200f6f0:	dec00804 	addi	sp,sp,32
 200f6f4:	f800283a 	ret
 200f6f8:	00800044 	movi	r2,1
 200f6fc:	10fff92e 	bgeu	r2,r3,200f6e4 <__fixdfsi+0x30>
 200f700:	00800104 	movi	r2,4
 200f704:	18800426 	beq	r3,r2,200f718 <__fixdfsi+0x64>
 200f708:	d8c00417 	ldw	r3,16(sp)
 200f70c:	183ff516 	blt	r3,zero,200f6e4 <__fixdfsi+0x30>
 200f710:	00800784 	movi	r2,30
 200f714:	10c0080e 	bge	r2,r3,200f738 <__fixdfsi+0x84>
 200f718:	d8800317 	ldw	r2,12(sp)
 200f71c:	1000121e 	bne	r2,zero,200f768 <__fixdfsi+0xb4>
 200f720:	00e00034 	movhi	r3,32768
 200f724:	18ffffc4 	addi	r3,r3,-1
 200f728:	1805883a 	mov	r2,r3
 200f72c:	dfc00717 	ldw	ra,28(sp)
 200f730:	dec00804 	addi	sp,sp,32
 200f734:	f800283a 	ret
 200f738:	00800f04 	movi	r2,60
 200f73c:	10d1c83a 	sub	r8,r2,r3
 200f740:	40bff804 	addi	r2,r8,-32
 200f744:	d9800517 	ldw	r6,20(sp)
 200f748:	d9c00617 	ldw	r7,24(sp)
 200f74c:	10000816 	blt	r2,zero,200f770 <__fixdfsi+0xbc>
 200f750:	3888d83a 	srl	r4,r7,r2
 200f754:	d8800317 	ldw	r2,12(sp)
 200f758:	2007883a 	mov	r3,r4
 200f75c:	103fe226 	beq	r2,zero,200f6e8 <__fixdfsi+0x34>
 200f760:	0107c83a 	sub	r3,zero,r4
 200f764:	003fe006 	br	200f6e8 <__fixdfsi+0x34>
 200f768:	00e00034 	movhi	r3,32768
 200f76c:	003fde06 	br	200f6e8 <__fixdfsi+0x34>
 200f770:	39c7883a 	add	r3,r7,r7
 200f774:	008007c4 	movi	r2,31
 200f778:	1205c83a 	sub	r2,r2,r8
 200f77c:	1886983a 	sll	r3,r3,r2
 200f780:	3208d83a 	srl	r4,r6,r8
 200f784:	1908b03a 	or	r4,r3,r4
 200f788:	003ff206 	br	200f754 <__fixdfsi+0xa0>

0200f78c <__truncdfsf2>:
 200f78c:	defff804 	addi	sp,sp,-32
 200f790:	2005883a 	mov	r2,r4
 200f794:	2807883a 	mov	r3,r5
 200f798:	d809883a 	mov	r4,sp
 200f79c:	d9400204 	addi	r5,sp,8
 200f7a0:	d8c00115 	stw	r3,4(sp)
 200f7a4:	d8800015 	stw	r2,0(sp)
 200f7a8:	dfc00715 	stw	ra,28(sp)
 200f7ac:	20100100 	call	2010010 <__unpack_d>
 200f7b0:	d9c00517 	ldw	r7,20(sp)
 200f7b4:	da000617 	ldw	r8,24(sp)
 200f7b8:	02d00034 	movhi	r11,16384
 200f7bc:	5affffc4 	addi	r11,r11,-1
 200f7c0:	3812d7ba 	srli	r9,r7,30
 200f7c4:	401a90ba 	slli	r13,r8,2
 200f7c8:	3ac4703a 	and	r2,r7,r11
 200f7cc:	0007883a 	mov	r3,zero
 200f7d0:	6a52b03a 	or	r9,r13,r9
 200f7d4:	10c4b03a 	or	r2,r2,r3
 200f7d8:	d9000217 	ldw	r4,8(sp)
 200f7dc:	d9400317 	ldw	r5,12(sp)
 200f7e0:	d9800417 	ldw	r6,16(sp)
 200f7e4:	480f883a 	mov	r7,r9
 200f7e8:	10000126 	beq	r2,zero,200f7f0 <__truncdfsf2+0x64>
 200f7ec:	49c00054 	ori	r7,r9,1
 200f7f0:	200fcd00 	call	200fcd0 <__make_fp>
 200f7f4:	dfc00717 	ldw	ra,28(sp)
 200f7f8:	dec00804 	addi	sp,sp,32
 200f7fc:	f800283a 	ret

0200f800 <__floatunsidf>:
 200f800:	defff204 	addi	sp,sp,-56
 200f804:	dfc00d15 	stw	ra,52(sp)
 200f808:	ddc00c15 	stw	r23,48(sp)
 200f80c:	dd800b15 	stw	r22,44(sp)
 200f810:	dd400a15 	stw	r21,40(sp)
 200f814:	dd000915 	stw	r20,36(sp)
 200f818:	dcc00815 	stw	r19,32(sp)
 200f81c:	dc800715 	stw	r18,28(sp)
 200f820:	dc400615 	stw	r17,24(sp)
 200f824:	dc000515 	stw	r16,20(sp)
 200f828:	d8000115 	stw	zero,4(sp)
 200f82c:	20000f1e 	bne	r4,zero,200f86c <__floatunsidf+0x6c>
 200f830:	00800084 	movi	r2,2
 200f834:	d8800015 	stw	r2,0(sp)
 200f838:	d809883a 	mov	r4,sp
 200f83c:	200fcfc0 	call	200fcfc <__pack_d>
 200f840:	dfc00d17 	ldw	ra,52(sp)
 200f844:	ddc00c17 	ldw	r23,48(sp)
 200f848:	dd800b17 	ldw	r22,44(sp)
 200f84c:	dd400a17 	ldw	r21,40(sp)
 200f850:	dd000917 	ldw	r20,36(sp)
 200f854:	dcc00817 	ldw	r19,32(sp)
 200f858:	dc800717 	ldw	r18,28(sp)
 200f85c:	dc400617 	ldw	r17,24(sp)
 200f860:	dc000517 	ldw	r16,20(sp)
 200f864:	dec00e04 	addi	sp,sp,56
 200f868:	f800283a 	ret
 200f86c:	008000c4 	movi	r2,3
 200f870:	00c00f04 	movi	r3,60
 200f874:	002f883a 	mov	r23,zero
 200f878:	202d883a 	mov	r22,r4
 200f87c:	d8800015 	stw	r2,0(sp)
 200f880:	d8c00215 	stw	r3,8(sp)
 200f884:	d9000315 	stw	r4,12(sp)
 200f888:	ddc00415 	stw	r23,16(sp)
 200f88c:	200fae00 	call	200fae0 <__clzsi2>
 200f890:	12400744 	addi	r9,r2,29
 200f894:	48000b16 	blt	r9,zero,200f8c4 <__floatunsidf+0xc4>
 200f898:	483fe726 	beq	r9,zero,200f838 <__floatunsidf+0x38>
 200f89c:	10bfff44 	addi	r2,r2,-3
 200f8a0:	10002e16 	blt	r2,zero,200f95c <__floatunsidf+0x15c>
 200f8a4:	b0a2983a 	sll	r17,r22,r2
 200f8a8:	0021883a 	mov	r16,zero
 200f8ac:	d8800217 	ldw	r2,8(sp)
 200f8b0:	dc400415 	stw	r17,16(sp)
 200f8b4:	dc000315 	stw	r16,12(sp)
 200f8b8:	1245c83a 	sub	r2,r2,r9
 200f8bc:	d8800215 	stw	r2,8(sp)
 200f8c0:	003fdd06 	br	200f838 <__floatunsidf+0x38>
 200f8c4:	0255c83a 	sub	r10,zero,r9
 200f8c8:	51bff804 	addi	r6,r10,-32
 200f8cc:	30001b16 	blt	r6,zero,200f93c <__floatunsidf+0x13c>
 200f8d0:	b9a8d83a 	srl	r20,r23,r6
 200f8d4:	002b883a 	mov	r21,zero
 200f8d8:	000f883a 	mov	r7,zero
 200f8dc:	01000044 	movi	r4,1
 200f8e0:	0011883a 	mov	r8,zero
 200f8e4:	30002516 	blt	r6,zero,200f97c <__floatunsidf+0x17c>
 200f8e8:	21a6983a 	sll	r19,r4,r6
 200f8ec:	0025883a 	mov	r18,zero
 200f8f0:	00bfffc4 	movi	r2,-1
 200f8f4:	9089883a 	add	r4,r18,r2
 200f8f8:	988b883a 	add	r5,r19,r2
 200f8fc:	248d803a 	cmpltu	r6,r4,r18
 200f900:	314b883a 	add	r5,r6,r5
 200f904:	b104703a 	and	r2,r22,r4
 200f908:	b946703a 	and	r3,r23,r5
 200f90c:	10c4b03a 	or	r2,r2,r3
 200f910:	10000226 	beq	r2,zero,200f91c <__floatunsidf+0x11c>
 200f914:	01c00044 	movi	r7,1
 200f918:	0011883a 	mov	r8,zero
 200f91c:	d9000217 	ldw	r4,8(sp)
 200f920:	a1c4b03a 	or	r2,r20,r7
 200f924:	aa06b03a 	or	r3,r21,r8
 200f928:	2249c83a 	sub	r4,r4,r9
 200f92c:	d8c00415 	stw	r3,16(sp)
 200f930:	d9000215 	stw	r4,8(sp)
 200f934:	d8800315 	stw	r2,12(sp)
 200f938:	003fbf06 	br	200f838 <__floatunsidf+0x38>
 200f93c:	bdc7883a 	add	r3,r23,r23
 200f940:	008007c4 	movi	r2,31
 200f944:	1285c83a 	sub	r2,r2,r10
 200f948:	1886983a 	sll	r3,r3,r2
 200f94c:	b2a8d83a 	srl	r20,r22,r10
 200f950:	baaad83a 	srl	r21,r23,r10
 200f954:	1d28b03a 	or	r20,r3,r20
 200f958:	003fdf06 	br	200f8d8 <__floatunsidf+0xd8>
 200f95c:	b006d07a 	srli	r3,r22,1
 200f960:	008007c4 	movi	r2,31
 200f964:	1245c83a 	sub	r2,r2,r9
 200f968:	1886d83a 	srl	r3,r3,r2
 200f96c:	ba62983a 	sll	r17,r23,r9
 200f970:	b260983a 	sll	r16,r22,r9
 200f974:	1c62b03a 	or	r17,r3,r17
 200f978:	003fcc06 	br	200f8ac <__floatunsidf+0xac>
 200f97c:	2006d07a 	srli	r3,r4,1
 200f980:	008007c4 	movi	r2,31
 200f984:	1285c83a 	sub	r2,r2,r10
 200f988:	18a6d83a 	srl	r19,r3,r2
 200f98c:	22a4983a 	sll	r18,r4,r10
 200f990:	003fd706 	br	200f8f0 <__floatunsidf+0xf0>

0200f994 <udivmodsi4>:
 200f994:	29001b2e 	bgeu	r5,r4,200fa04 <udivmodsi4+0x70>
 200f998:	28001a16 	blt	r5,zero,200fa04 <udivmodsi4+0x70>
 200f99c:	00800044 	movi	r2,1
 200f9a0:	0007883a 	mov	r3,zero
 200f9a4:	01c007c4 	movi	r7,31
 200f9a8:	00000306 	br	200f9b8 <udivmodsi4+0x24>
 200f9ac:	19c01326 	beq	r3,r7,200f9fc <udivmodsi4+0x68>
 200f9b0:	18c00044 	addi	r3,r3,1
 200f9b4:	28000416 	blt	r5,zero,200f9c8 <udivmodsi4+0x34>
 200f9b8:	294b883a 	add	r5,r5,r5
 200f9bc:	1085883a 	add	r2,r2,r2
 200f9c0:	293ffa36 	bltu	r5,r4,200f9ac <udivmodsi4+0x18>
 200f9c4:	10000d26 	beq	r2,zero,200f9fc <udivmodsi4+0x68>
 200f9c8:	0007883a 	mov	r3,zero
 200f9cc:	21400236 	bltu	r4,r5,200f9d8 <udivmodsi4+0x44>
 200f9d0:	2149c83a 	sub	r4,r4,r5
 200f9d4:	1886b03a 	or	r3,r3,r2
 200f9d8:	1004d07a 	srli	r2,r2,1
 200f9dc:	280ad07a 	srli	r5,r5,1
 200f9e0:	103ffa1e 	bne	r2,zero,200f9cc <udivmodsi4+0x38>
 200f9e4:	30000226 	beq	r6,zero,200f9f0 <udivmodsi4+0x5c>
 200f9e8:	2005883a 	mov	r2,r4
 200f9ec:	f800283a 	ret
 200f9f0:	1809883a 	mov	r4,r3
 200f9f4:	2005883a 	mov	r2,r4
 200f9f8:	f800283a 	ret
 200f9fc:	0007883a 	mov	r3,zero
 200fa00:	003ff806 	br	200f9e4 <udivmodsi4+0x50>
 200fa04:	00800044 	movi	r2,1
 200fa08:	0007883a 	mov	r3,zero
 200fa0c:	003fef06 	br	200f9cc <udivmodsi4+0x38>

0200fa10 <__divsi3>:
 200fa10:	defffe04 	addi	sp,sp,-8
 200fa14:	dc000015 	stw	r16,0(sp)
 200fa18:	dfc00115 	stw	ra,4(sp)
 200fa1c:	0021883a 	mov	r16,zero
 200fa20:	20000c16 	blt	r4,zero,200fa54 <__divsi3+0x44>
 200fa24:	000d883a 	mov	r6,zero
 200fa28:	28000e16 	blt	r5,zero,200fa64 <__divsi3+0x54>
 200fa2c:	200f9940 	call	200f994 <udivmodsi4>
 200fa30:	1007883a 	mov	r3,r2
 200fa34:	8005003a 	cmpeq	r2,r16,zero
 200fa38:	1000011e 	bne	r2,zero,200fa40 <__divsi3+0x30>
 200fa3c:	00c7c83a 	sub	r3,zero,r3
 200fa40:	1805883a 	mov	r2,r3
 200fa44:	dfc00117 	ldw	ra,4(sp)
 200fa48:	dc000017 	ldw	r16,0(sp)
 200fa4c:	dec00204 	addi	sp,sp,8
 200fa50:	f800283a 	ret
 200fa54:	0109c83a 	sub	r4,zero,r4
 200fa58:	04000044 	movi	r16,1
 200fa5c:	000d883a 	mov	r6,zero
 200fa60:	283ff20e 	bge	r5,zero,200fa2c <__divsi3+0x1c>
 200fa64:	014bc83a 	sub	r5,zero,r5
 200fa68:	8021003a 	cmpeq	r16,r16,zero
 200fa6c:	003fef06 	br	200fa2c <__divsi3+0x1c>

0200fa70 <__modsi3>:
 200fa70:	deffff04 	addi	sp,sp,-4
 200fa74:	dfc00015 	stw	ra,0(sp)
 200fa78:	01800044 	movi	r6,1
 200fa7c:	2807883a 	mov	r3,r5
 200fa80:	20000416 	blt	r4,zero,200fa94 <__modsi3+0x24>
 200fa84:	28000c16 	blt	r5,zero,200fab8 <__modsi3+0x48>
 200fa88:	dfc00017 	ldw	ra,0(sp)
 200fa8c:	dec00104 	addi	sp,sp,4
 200fa90:	200f9941 	jmpi	200f994 <udivmodsi4>
 200fa94:	0109c83a 	sub	r4,zero,r4
 200fa98:	28000b16 	blt	r5,zero,200fac8 <__modsi3+0x58>
 200fa9c:	180b883a 	mov	r5,r3
 200faa0:	01800044 	movi	r6,1
 200faa4:	200f9940 	call	200f994 <udivmodsi4>
 200faa8:	0085c83a 	sub	r2,zero,r2
 200faac:	dfc00017 	ldw	ra,0(sp)
 200fab0:	dec00104 	addi	sp,sp,4
 200fab4:	f800283a 	ret
 200fab8:	014bc83a 	sub	r5,zero,r5
 200fabc:	dfc00017 	ldw	ra,0(sp)
 200fac0:	dec00104 	addi	sp,sp,4
 200fac4:	200f9941 	jmpi	200f994 <udivmodsi4>
 200fac8:	0147c83a 	sub	r3,zero,r5
 200facc:	003ff306 	br	200fa9c <__modsi3+0x2c>

0200fad0 <__udivsi3>:
 200fad0:	000d883a 	mov	r6,zero
 200fad4:	200f9941 	jmpi	200f994 <udivmodsi4>

0200fad8 <__umodsi3>:
 200fad8:	01800044 	movi	r6,1
 200fadc:	200f9941 	jmpi	200f994 <udivmodsi4>

0200fae0 <__clzsi2>:
 200fae0:	00bfffd4 	movui	r2,65535
 200fae4:	11000e36 	bltu	r2,r4,200fb20 <__clzsi2+0x40>
 200fae8:	00803fc4 	movi	r2,255
 200faec:	01400204 	movi	r5,8
 200faf0:	0007883a 	mov	r3,zero
 200faf4:	11001036 	bltu	r2,r4,200fb38 <__clzsi2+0x58>
 200faf8:	000b883a 	mov	r5,zero
 200fafc:	20c6d83a 	srl	r3,r4,r3
 200fb00:	00808074 	movhi	r2,513
 200fb04:	108f6004 	addi	r2,r2,15744
 200fb08:	1887883a 	add	r3,r3,r2
 200fb0c:	18800003 	ldbu	r2,0(r3)
 200fb10:	00c00804 	movi	r3,32
 200fb14:	2885883a 	add	r2,r5,r2
 200fb18:	1885c83a 	sub	r2,r3,r2
 200fb1c:	f800283a 	ret
 200fb20:	01400404 	movi	r5,16
 200fb24:	00804034 	movhi	r2,256
 200fb28:	10bfffc4 	addi	r2,r2,-1
 200fb2c:	2807883a 	mov	r3,r5
 200fb30:	113ff22e 	bgeu	r2,r4,200fafc <__clzsi2+0x1c>
 200fb34:	01400604 	movi	r5,24
 200fb38:	2807883a 	mov	r3,r5
 200fb3c:	20c6d83a 	srl	r3,r4,r3
 200fb40:	00808074 	movhi	r2,513
 200fb44:	108f6004 	addi	r2,r2,15744
 200fb48:	1887883a 	add	r3,r3,r2
 200fb4c:	18800003 	ldbu	r2,0(r3)
 200fb50:	00c00804 	movi	r3,32
 200fb54:	2885883a 	add	r2,r5,r2
 200fb58:	1885c83a 	sub	r2,r3,r2
 200fb5c:	f800283a 	ret

0200fb60 <__unpack_f>:
 200fb60:	21800017 	ldw	r6,0(r4)
 200fb64:	00c02034 	movhi	r3,128
 200fb68:	18ffffc4 	addi	r3,r3,-1
 200fb6c:	3004d5fa 	srli	r2,r6,23
 200fb70:	3008d7fa 	srli	r4,r6,31
 200fb74:	30ce703a 	and	r7,r6,r3
 200fb78:	10c03fcc 	andi	r3,r2,255
 200fb7c:	29000115 	stw	r4,4(r5)
 200fb80:	1800131e 	bne	r3,zero,200fbd0 <__unpack_f+0x70>
 200fb84:	38000f26 	beq	r7,zero,200fbc4 <__unpack_f+0x64>
 200fb88:	380691fa 	slli	r3,r7,7
 200fb8c:	01bfe084 	movi	r6,-126
 200fb90:	008000c4 	movi	r2,3
 200fb94:	01100034 	movhi	r4,16384
 200fb98:	213fffc4 	addi	r4,r4,-1
 200fb9c:	28800015 	stw	r2,0(r5)
 200fba0:	29800215 	stw	r6,8(r5)
 200fba4:	20c00536 	bltu	r4,r3,200fbbc <__unpack_f+0x5c>
 200fba8:	3005883a 	mov	r2,r6
 200fbac:	18c7883a 	add	r3,r3,r3
 200fbb0:	10bfffc4 	addi	r2,r2,-1
 200fbb4:	20fffd2e 	bgeu	r4,r3,200fbac <__unpack_f+0x4c>
 200fbb8:	28800215 	stw	r2,8(r5)
 200fbbc:	28c00315 	stw	r3,12(r5)
 200fbc0:	f800283a 	ret
 200fbc4:	00800084 	movi	r2,2
 200fbc8:	28800015 	stw	r2,0(r5)
 200fbcc:	f800283a 	ret
 200fbd0:	00803fc4 	movi	r2,255
 200fbd4:	18800826 	beq	r3,r2,200fbf8 <__unpack_f+0x98>
 200fbd8:	380491fa 	slli	r2,r7,7
 200fbdc:	18ffe044 	addi	r3,r3,-127
 200fbe0:	28c00215 	stw	r3,8(r5)
 200fbe4:	10900034 	orhi	r2,r2,16384
 200fbe8:	28800315 	stw	r2,12(r5)
 200fbec:	008000c4 	movi	r2,3
 200fbf0:	28800015 	stw	r2,0(r5)
 200fbf4:	f800283a 	ret
 200fbf8:	3800031e 	bne	r7,zero,200fc08 <__unpack_f+0xa8>
 200fbfc:	00800104 	movi	r2,4
 200fc00:	28800015 	stw	r2,0(r5)
 200fc04:	f800283a 	ret
 200fc08:	3080042c 	andhi	r2,r6,16
 200fc0c:	10000426 	beq	r2,zero,200fc20 <__unpack_f+0xc0>
 200fc10:	00800044 	movi	r2,1
 200fc14:	28800015 	stw	r2,0(r5)
 200fc18:	29c00315 	stw	r7,12(r5)
 200fc1c:	f800283a 	ret
 200fc20:	28000015 	stw	zero,0(r5)
 200fc24:	003ffc06 	br	200fc18 <__unpack_f+0xb8>

0200fc28 <__fpcmp_parts_f>:
 200fc28:	21800017 	ldw	r6,0(r4)
 200fc2c:	00c00044 	movi	r3,1
 200fc30:	19800a2e 	bgeu	r3,r6,200fc5c <__fpcmp_parts_f+0x34>
 200fc34:	28800017 	ldw	r2,0(r5)
 200fc38:	1880082e 	bgeu	r3,r2,200fc5c <__fpcmp_parts_f+0x34>
 200fc3c:	00c00104 	movi	r3,4
 200fc40:	30c01e26 	beq	r6,r3,200fcbc <__fpcmp_parts_f+0x94>
 200fc44:	10c01a26 	beq	r2,r3,200fcb0 <__fpcmp_parts_f+0x88>
 200fc48:	00c00084 	movi	r3,2
 200fc4c:	30c00526 	beq	r6,r3,200fc64 <__fpcmp_parts_f+0x3c>
 200fc50:	10c0071e 	bne	r2,r3,200fc70 <__fpcmp_parts_f+0x48>
 200fc54:	20800117 	ldw	r2,4(r4)
 200fc58:	1000091e 	bne	r2,zero,200fc80 <__fpcmp_parts_f+0x58>
 200fc5c:	00800044 	movi	r2,1
 200fc60:	f800283a 	ret
 200fc64:	10c0121e 	bne	r2,r3,200fcb0 <__fpcmp_parts_f+0x88>
 200fc68:	0005883a 	mov	r2,zero
 200fc6c:	f800283a 	ret
 200fc70:	20c00117 	ldw	r3,4(r4)
 200fc74:	28800117 	ldw	r2,4(r5)
 200fc78:	18800326 	beq	r3,r2,200fc88 <__fpcmp_parts_f+0x60>
 200fc7c:	183ff726 	beq	r3,zero,200fc5c <__fpcmp_parts_f+0x34>
 200fc80:	00bfffc4 	movi	r2,-1
 200fc84:	f800283a 	ret
 200fc88:	21800217 	ldw	r6,8(r4)
 200fc8c:	28800217 	ldw	r2,8(r5)
 200fc90:	11bffa16 	blt	r2,r6,200fc7c <__fpcmp_parts_f+0x54>
 200fc94:	30800416 	blt	r6,r2,200fca8 <__fpcmp_parts_f+0x80>
 200fc98:	21000317 	ldw	r4,12(r4)
 200fc9c:	29400317 	ldw	r5,12(r5)
 200fca0:	293ff636 	bltu	r5,r4,200fc7c <__fpcmp_parts_f+0x54>
 200fca4:	217ff02e 	bgeu	r4,r5,200fc68 <__fpcmp_parts_f+0x40>
 200fca8:	183fec1e 	bne	r3,zero,200fc5c <__fpcmp_parts_f+0x34>
 200fcac:	003ff406 	br	200fc80 <__fpcmp_parts_f+0x58>
 200fcb0:	28800117 	ldw	r2,4(r5)
 200fcb4:	103fe91e 	bne	r2,zero,200fc5c <__fpcmp_parts_f+0x34>
 200fcb8:	003ff106 	br	200fc80 <__fpcmp_parts_f+0x58>
 200fcbc:	11bfe51e 	bne	r2,r6,200fc54 <__fpcmp_parts_f+0x2c>
 200fcc0:	28c00117 	ldw	r3,4(r5)
 200fcc4:	20800117 	ldw	r2,4(r4)
 200fcc8:	1885c83a 	sub	r2,r3,r2
 200fccc:	f800283a 	ret

0200fcd0 <__make_fp>:
 200fcd0:	defffb04 	addi	sp,sp,-20
 200fcd4:	d9000015 	stw	r4,0(sp)
 200fcd8:	d809883a 	mov	r4,sp
 200fcdc:	dfc00415 	stw	ra,16(sp)
 200fce0:	d9400115 	stw	r5,4(sp)
 200fce4:	d9800215 	stw	r6,8(sp)
 200fce8:	d9c00315 	stw	r7,12(sp)
 200fcec:	20102100 	call	2010210 <__pack_f>
 200fcf0:	dfc00417 	ldw	ra,16(sp)
 200fcf4:	dec00504 	addi	sp,sp,20
 200fcf8:	f800283a 	ret

0200fcfc <__pack_d>:
 200fcfc:	20c00017 	ldw	r3,0(r4)
 200fd00:	defffd04 	addi	sp,sp,-12
 200fd04:	dc000015 	stw	r16,0(sp)
 200fd08:	dc800215 	stw	r18,8(sp)
 200fd0c:	dc400115 	stw	r17,4(sp)
 200fd10:	00800044 	movi	r2,1
 200fd14:	22000317 	ldw	r8,12(r4)
 200fd18:	001f883a 	mov	r15,zero
 200fd1c:	22400417 	ldw	r9,16(r4)
 200fd20:	24000117 	ldw	r16,4(r4)
 200fd24:	10c0552e 	bgeu	r2,r3,200fe7c <__pack_d+0x180>
 200fd28:	00800104 	movi	r2,4
 200fd2c:	18804f26 	beq	r3,r2,200fe6c <__pack_d+0x170>
 200fd30:	00800084 	movi	r2,2
 200fd34:	18800226 	beq	r3,r2,200fd40 <__pack_d+0x44>
 200fd38:	4244b03a 	or	r2,r8,r9
 200fd3c:	10001a1e 	bne	r2,zero,200fda8 <__pack_d+0xac>
 200fd40:	000d883a 	mov	r6,zero
 200fd44:	000f883a 	mov	r7,zero
 200fd48:	0011883a 	mov	r8,zero
 200fd4c:	00800434 	movhi	r2,16
 200fd50:	10bfffc4 	addi	r2,r2,-1
 200fd54:	301d883a 	mov	r14,r6
 200fd58:	3884703a 	and	r2,r7,r2
 200fd5c:	400a953a 	slli	r5,r8,20
 200fd60:	79bffc2c 	andhi	r6,r15,65520
 200fd64:	308cb03a 	or	r6,r6,r2
 200fd68:	00e00434 	movhi	r3,32784
 200fd6c:	18ffffc4 	addi	r3,r3,-1
 200fd70:	800497fa 	slli	r2,r16,31
 200fd74:	30c6703a 	and	r3,r6,r3
 200fd78:	1946b03a 	or	r3,r3,r5
 200fd7c:	01600034 	movhi	r5,32768
 200fd80:	297fffc4 	addi	r5,r5,-1
 200fd84:	194a703a 	and	r5,r3,r5
 200fd88:	288ab03a 	or	r5,r5,r2
 200fd8c:	2807883a 	mov	r3,r5
 200fd90:	7005883a 	mov	r2,r14
 200fd94:	dc800217 	ldw	r18,8(sp)
 200fd98:	dc400117 	ldw	r17,4(sp)
 200fd9c:	dc000017 	ldw	r16,0(sp)
 200fda0:	dec00304 	addi	sp,sp,12
 200fda4:	f800283a 	ret
 200fda8:	21000217 	ldw	r4,8(r4)
 200fdac:	00bf0084 	movi	r2,-1022
 200fdb0:	20803f16 	blt	r4,r2,200feb0 <__pack_d+0x1b4>
 200fdb4:	0080ffc4 	movi	r2,1023
 200fdb8:	11002c16 	blt	r2,r4,200fe6c <__pack_d+0x170>
 200fdbc:	00803fc4 	movi	r2,255
 200fdc0:	408c703a 	and	r6,r8,r2
 200fdc4:	00802004 	movi	r2,128
 200fdc8:	0007883a 	mov	r3,zero
 200fdcc:	000f883a 	mov	r7,zero
 200fdd0:	2280ffc4 	addi	r10,r4,1023
 200fdd4:	30801e26 	beq	r6,r2,200fe50 <__pack_d+0x154>
 200fdd8:	00801fc4 	movi	r2,127
 200fddc:	4089883a 	add	r4,r8,r2
 200fde0:	220d803a 	cmpltu	r6,r4,r8
 200fde4:	324d883a 	add	r6,r6,r9
 200fde8:	2011883a 	mov	r8,r4
 200fdec:	3013883a 	mov	r9,r6
 200fdf0:	00880034 	movhi	r2,8192
 200fdf4:	10bfffc4 	addi	r2,r2,-1
 200fdf8:	12400d36 	bltu	r2,r9,200fe30 <__pack_d+0x134>
 200fdfc:	4804963a 	slli	r2,r9,24
 200fe00:	400cd23a 	srli	r6,r8,8
 200fe04:	480ed23a 	srli	r7,r9,8
 200fe08:	013fffc4 	movi	r4,-1
 200fe0c:	118cb03a 	or	r6,r2,r6
 200fe10:	01400434 	movhi	r5,16
 200fe14:	297fffc4 	addi	r5,r5,-1
 200fe18:	3104703a 	and	r2,r6,r4
 200fe1c:	3946703a 	and	r3,r7,r5
 200fe20:	5201ffcc 	andi	r8,r10,2047
 200fe24:	100d883a 	mov	r6,r2
 200fe28:	180f883a 	mov	r7,r3
 200fe2c:	003fc706 	br	200fd4c <__pack_d+0x50>
 200fe30:	480897fa 	slli	r4,r9,31
 200fe34:	4004d07a 	srli	r2,r8,1
 200fe38:	4806d07a 	srli	r3,r9,1
 200fe3c:	52800044 	addi	r10,r10,1
 200fe40:	2084b03a 	or	r2,r4,r2
 200fe44:	1011883a 	mov	r8,r2
 200fe48:	1813883a 	mov	r9,r3
 200fe4c:	003feb06 	br	200fdfc <__pack_d+0x100>
 200fe50:	383fe11e 	bne	r7,zero,200fdd8 <__pack_d+0xdc>
 200fe54:	01004004 	movi	r4,256
 200fe58:	4104703a 	and	r2,r8,r4
 200fe5c:	10c4b03a 	or	r2,r2,r3
 200fe60:	103fe326 	beq	r2,zero,200fdf0 <__pack_d+0xf4>
 200fe64:	3005883a 	mov	r2,r6
 200fe68:	003fdc06 	br	200fddc <__pack_d+0xe0>
 200fe6c:	000d883a 	mov	r6,zero
 200fe70:	000f883a 	mov	r7,zero
 200fe74:	0201ffc4 	movi	r8,2047
 200fe78:	003fb406 	br	200fd4c <__pack_d+0x50>
 200fe7c:	0005883a 	mov	r2,zero
 200fe80:	00c00234 	movhi	r3,8
 200fe84:	408cb03a 	or	r6,r8,r2
 200fe88:	48ceb03a 	or	r7,r9,r3
 200fe8c:	013fffc4 	movi	r4,-1
 200fe90:	01400434 	movhi	r5,16
 200fe94:	297fffc4 	addi	r5,r5,-1
 200fe98:	3104703a 	and	r2,r6,r4
 200fe9c:	3946703a 	and	r3,r7,r5
 200fea0:	100d883a 	mov	r6,r2
 200fea4:	180f883a 	mov	r7,r3
 200fea8:	0201ffc4 	movi	r8,2047
 200feac:	003fa706 	br	200fd4c <__pack_d+0x50>
 200feb0:	1109c83a 	sub	r4,r2,r4
 200feb4:	00800e04 	movi	r2,56
 200feb8:	11004316 	blt	r2,r4,200ffc8 <__pack_d+0x2cc>
 200febc:	21fff804 	addi	r7,r4,-32
 200fec0:	38004516 	blt	r7,zero,200ffd8 <__pack_d+0x2dc>
 200fec4:	49d8d83a 	srl	r12,r9,r7
 200fec8:	001b883a 	mov	r13,zero
 200fecc:	0023883a 	mov	r17,zero
 200fed0:	01400044 	movi	r5,1
 200fed4:	0025883a 	mov	r18,zero
 200fed8:	38004716 	blt	r7,zero,200fff8 <__pack_d+0x2fc>
 200fedc:	29d6983a 	sll	r11,r5,r7
 200fee0:	0015883a 	mov	r10,zero
 200fee4:	00bfffc4 	movi	r2,-1
 200fee8:	5089883a 	add	r4,r10,r2
 200feec:	588b883a 	add	r5,r11,r2
 200fef0:	228d803a 	cmpltu	r6,r4,r10
 200fef4:	314b883a 	add	r5,r6,r5
 200fef8:	4104703a 	and	r2,r8,r4
 200fefc:	4946703a 	and	r3,r9,r5
 200ff00:	10c4b03a 	or	r2,r2,r3
 200ff04:	10000226 	beq	r2,zero,200ff10 <__pack_d+0x214>
 200ff08:	04400044 	movi	r17,1
 200ff0c:	0025883a 	mov	r18,zero
 200ff10:	00803fc4 	movi	r2,255
 200ff14:	644eb03a 	or	r7,r12,r17
 200ff18:	3892703a 	and	r9,r7,r2
 200ff1c:	00802004 	movi	r2,128
 200ff20:	6c90b03a 	or	r8,r13,r18
 200ff24:	0015883a 	mov	r10,zero
 200ff28:	48801626 	beq	r9,r2,200ff84 <__pack_d+0x288>
 200ff2c:	01001fc4 	movi	r4,127
 200ff30:	3905883a 	add	r2,r7,r4
 200ff34:	11cd803a 	cmpltu	r6,r2,r7
 200ff38:	320d883a 	add	r6,r6,r8
 200ff3c:	100f883a 	mov	r7,r2
 200ff40:	00840034 	movhi	r2,4096
 200ff44:	10bfffc4 	addi	r2,r2,-1
 200ff48:	3011883a 	mov	r8,r6
 200ff4c:	0007883a 	mov	r3,zero
 200ff50:	11801b36 	bltu	r2,r6,200ffc0 <__pack_d+0x2c4>
 200ff54:	4004963a 	slli	r2,r8,24
 200ff58:	3808d23a 	srli	r4,r7,8
 200ff5c:	400ad23a 	srli	r5,r8,8
 200ff60:	1813883a 	mov	r9,r3
 200ff64:	1108b03a 	or	r4,r2,r4
 200ff68:	00bfffc4 	movi	r2,-1
 200ff6c:	00c00434 	movhi	r3,16
 200ff70:	18ffffc4 	addi	r3,r3,-1
 200ff74:	208c703a 	and	r6,r4,r2
 200ff78:	28ce703a 	and	r7,r5,r3
 200ff7c:	4a01ffcc 	andi	r8,r9,2047
 200ff80:	003f7206 	br	200fd4c <__pack_d+0x50>
 200ff84:	503fe91e 	bne	r10,zero,200ff2c <__pack_d+0x230>
 200ff88:	01004004 	movi	r4,256
 200ff8c:	3904703a 	and	r2,r7,r4
 200ff90:	0007883a 	mov	r3,zero
 200ff94:	10c4b03a 	or	r2,r2,r3
 200ff98:	10000626 	beq	r2,zero,200ffb4 <__pack_d+0x2b8>
 200ff9c:	3a45883a 	add	r2,r7,r9
 200ffa0:	11cd803a 	cmpltu	r6,r2,r7
 200ffa4:	320d883a 	add	r6,r6,r8
 200ffa8:	100f883a 	mov	r7,r2
 200ffac:	3011883a 	mov	r8,r6
 200ffb0:	0007883a 	mov	r3,zero
 200ffb4:	00840034 	movhi	r2,4096
 200ffb8:	10bfffc4 	addi	r2,r2,-1
 200ffbc:	123fe52e 	bgeu	r2,r8,200ff54 <__pack_d+0x258>
 200ffc0:	00c00044 	movi	r3,1
 200ffc4:	003fe306 	br	200ff54 <__pack_d+0x258>
 200ffc8:	0009883a 	mov	r4,zero
 200ffcc:	0013883a 	mov	r9,zero
 200ffd0:	000b883a 	mov	r5,zero
 200ffd4:	003fe406 	br	200ff68 <__pack_d+0x26c>
 200ffd8:	4a47883a 	add	r3,r9,r9
 200ffdc:	008007c4 	movi	r2,31
 200ffe0:	1105c83a 	sub	r2,r2,r4
 200ffe4:	1886983a 	sll	r3,r3,r2
 200ffe8:	4118d83a 	srl	r12,r8,r4
 200ffec:	491ad83a 	srl	r13,r9,r4
 200fff0:	1b18b03a 	or	r12,r3,r12
 200fff4:	003fb506 	br	200fecc <__pack_d+0x1d0>
 200fff8:	2806d07a 	srli	r3,r5,1
 200fffc:	008007c4 	movi	r2,31
 2010000:	1105c83a 	sub	r2,r2,r4
 2010004:	1896d83a 	srl	r11,r3,r2
 2010008:	2914983a 	sll	r10,r5,r4
 201000c:	003fb506 	br	200fee4 <__pack_d+0x1e8>

02010010 <__unpack_d>:
 2010010:	20c00117 	ldw	r3,4(r4)
 2010014:	22400017 	ldw	r9,0(r4)
 2010018:	00800434 	movhi	r2,16
 201001c:	10bfffc4 	addi	r2,r2,-1
 2010020:	1808d53a 	srli	r4,r3,20
 2010024:	180cd7fa 	srli	r6,r3,31
 2010028:	1894703a 	and	r10,r3,r2
 201002c:	2201ffcc 	andi	r8,r4,2047
 2010030:	281b883a 	mov	r13,r5
 2010034:	4817883a 	mov	r11,r9
 2010038:	29800115 	stw	r6,4(r5)
 201003c:	5019883a 	mov	r12,r10
 2010040:	40001e1e 	bne	r8,zero,20100bc <__unpack_d+0xac>
 2010044:	4a84b03a 	or	r2,r9,r10
 2010048:	10001926 	beq	r2,zero,20100b0 <__unpack_d+0xa0>
 201004c:	4804d63a 	srli	r2,r9,24
 2010050:	500c923a 	slli	r6,r10,8
 2010054:	013f0084 	movi	r4,-1022
 2010058:	00c40034 	movhi	r3,4096
 201005c:	18ffffc4 	addi	r3,r3,-1
 2010060:	118cb03a 	or	r6,r2,r6
 2010064:	008000c4 	movi	r2,3
 2010068:	480a923a 	slli	r5,r9,8
 201006c:	68800015 	stw	r2,0(r13)
 2010070:	69000215 	stw	r4,8(r13)
 2010074:	19800b36 	bltu	r3,r6,20100a4 <__unpack_d+0x94>
 2010078:	200f883a 	mov	r7,r4
 201007c:	1811883a 	mov	r8,r3
 2010080:	2945883a 	add	r2,r5,r5
 2010084:	1149803a 	cmpltu	r4,r2,r5
 2010088:	3187883a 	add	r3,r6,r6
 201008c:	20c9883a 	add	r4,r4,r3
 2010090:	100b883a 	mov	r5,r2
 2010094:	200d883a 	mov	r6,r4
 2010098:	39ffffc4 	addi	r7,r7,-1
 201009c:	413ff82e 	bgeu	r8,r4,2010080 <__unpack_d+0x70>
 20100a0:	69c00215 	stw	r7,8(r13)
 20100a4:	69800415 	stw	r6,16(r13)
 20100a8:	69400315 	stw	r5,12(r13)
 20100ac:	f800283a 	ret
 20100b0:	00800084 	movi	r2,2
 20100b4:	28800015 	stw	r2,0(r5)
 20100b8:	f800283a 	ret
 20100bc:	0081ffc4 	movi	r2,2047
 20100c0:	40800f26 	beq	r8,r2,2010100 <__unpack_d+0xf0>
 20100c4:	480cd63a 	srli	r6,r9,24
 20100c8:	5006923a 	slli	r3,r10,8
 20100cc:	4804923a 	slli	r2,r9,8
 20100d0:	0009883a 	mov	r4,zero
 20100d4:	30c6b03a 	or	r3,r6,r3
 20100d8:	01440034 	movhi	r5,4096
 20100dc:	110cb03a 	or	r6,r2,r4
 20100e0:	423f0044 	addi	r8,r8,-1023
 20100e4:	194eb03a 	or	r7,r3,r5
 20100e8:	008000c4 	movi	r2,3
 20100ec:	69c00415 	stw	r7,16(r13)
 20100f0:	6a000215 	stw	r8,8(r13)
 20100f4:	68800015 	stw	r2,0(r13)
 20100f8:	69800315 	stw	r6,12(r13)
 20100fc:	f800283a 	ret
 2010100:	4a84b03a 	or	r2,r9,r10
 2010104:	1000031e 	bne	r2,zero,2010114 <__unpack_d+0x104>
 2010108:	00800104 	movi	r2,4
 201010c:	28800015 	stw	r2,0(r5)
 2010110:	f800283a 	ret
 2010114:	0009883a 	mov	r4,zero
 2010118:	01400234 	movhi	r5,8
 201011c:	4904703a 	and	r2,r9,r4
 2010120:	5146703a 	and	r3,r10,r5
 2010124:	10c4b03a 	or	r2,r2,r3
 2010128:	10000526 	beq	r2,zero,2010140 <__unpack_d+0x130>
 201012c:	00800044 	movi	r2,1
 2010130:	68800015 	stw	r2,0(r13)
 2010134:	6b000415 	stw	r12,16(r13)
 2010138:	6ac00315 	stw	r11,12(r13)
 201013c:	f800283a 	ret
 2010140:	68000015 	stw	zero,0(r13)
 2010144:	003ffb06 	br	2010134 <__unpack_d+0x124>

02010148 <__fpcmp_parts_d>:
 2010148:	21800017 	ldw	r6,0(r4)
 201014c:	00c00044 	movi	r3,1
 2010150:	19800a2e 	bgeu	r3,r6,201017c <__fpcmp_parts_d+0x34>
 2010154:	28800017 	ldw	r2,0(r5)
 2010158:	1880082e 	bgeu	r3,r2,201017c <__fpcmp_parts_d+0x34>
 201015c:	00c00104 	movi	r3,4
 2010160:	30c02626 	beq	r6,r3,20101fc <__fpcmp_parts_d+0xb4>
 2010164:	10c02226 	beq	r2,r3,20101f0 <__fpcmp_parts_d+0xa8>
 2010168:	00c00084 	movi	r3,2
 201016c:	30c00526 	beq	r6,r3,2010184 <__fpcmp_parts_d+0x3c>
 2010170:	10c0071e 	bne	r2,r3,2010190 <__fpcmp_parts_d+0x48>
 2010174:	20800117 	ldw	r2,4(r4)
 2010178:	1000091e 	bne	r2,zero,20101a0 <__fpcmp_parts_d+0x58>
 201017c:	00800044 	movi	r2,1
 2010180:	f800283a 	ret
 2010184:	10c01a1e 	bne	r2,r3,20101f0 <__fpcmp_parts_d+0xa8>
 2010188:	0005883a 	mov	r2,zero
 201018c:	f800283a 	ret
 2010190:	22000117 	ldw	r8,4(r4)
 2010194:	28800117 	ldw	r2,4(r5)
 2010198:	40800326 	beq	r8,r2,20101a8 <__fpcmp_parts_d+0x60>
 201019c:	403ff726 	beq	r8,zero,201017c <__fpcmp_parts_d+0x34>
 20101a0:	00bfffc4 	movi	r2,-1
 20101a4:	f800283a 	ret
 20101a8:	20c00217 	ldw	r3,8(r4)
 20101ac:	28800217 	ldw	r2,8(r5)
 20101b0:	10fffa16 	blt	r2,r3,201019c <__fpcmp_parts_d+0x54>
 20101b4:	18800916 	blt	r3,r2,20101dc <__fpcmp_parts_d+0x94>
 20101b8:	21c00417 	ldw	r7,16(r4)
 20101bc:	28c00417 	ldw	r3,16(r5)
 20101c0:	21800317 	ldw	r6,12(r4)
 20101c4:	28800317 	ldw	r2,12(r5)
 20101c8:	19fff436 	bltu	r3,r7,201019c <__fpcmp_parts_d+0x54>
 20101cc:	38c00526 	beq	r7,r3,20101e4 <__fpcmp_parts_d+0x9c>
 20101d0:	38c00236 	bltu	r7,r3,20101dc <__fpcmp_parts_d+0x94>
 20101d4:	19ffec1e 	bne	r3,r7,2010188 <__fpcmp_parts_d+0x40>
 20101d8:	30bfeb2e 	bgeu	r6,r2,2010188 <__fpcmp_parts_d+0x40>
 20101dc:	403fe71e 	bne	r8,zero,201017c <__fpcmp_parts_d+0x34>
 20101e0:	003fef06 	br	20101a0 <__fpcmp_parts_d+0x58>
 20101e4:	11bffa2e 	bgeu	r2,r6,20101d0 <__fpcmp_parts_d+0x88>
 20101e8:	403fe426 	beq	r8,zero,201017c <__fpcmp_parts_d+0x34>
 20101ec:	003fec06 	br	20101a0 <__fpcmp_parts_d+0x58>
 20101f0:	28800117 	ldw	r2,4(r5)
 20101f4:	103fe11e 	bne	r2,zero,201017c <__fpcmp_parts_d+0x34>
 20101f8:	003fe906 	br	20101a0 <__fpcmp_parts_d+0x58>
 20101fc:	11bfdd1e 	bne	r2,r6,2010174 <__fpcmp_parts_d+0x2c>
 2010200:	28c00117 	ldw	r3,4(r5)
 2010204:	20800117 	ldw	r2,4(r4)
 2010208:	1885c83a 	sub	r2,r3,r2
 201020c:	f800283a 	ret

02010210 <__pack_f>:
 2010210:	20c00017 	ldw	r3,0(r4)
 2010214:	01c00044 	movi	r7,1
 2010218:	21800317 	ldw	r6,12(r4)
 201021c:	21400117 	ldw	r5,4(r4)
 2010220:	38c02d2e 	bgeu	r7,r3,20102d8 <__pack_f+0xc8>
 2010224:	00800104 	movi	r2,4
 2010228:	18802826 	beq	r3,r2,20102cc <__pack_f+0xbc>
 201022c:	00800084 	movi	r2,2
 2010230:	18800126 	beq	r3,r2,2010238 <__pack_f+0x28>
 2010234:	3000101e 	bne	r6,zero,2010278 <__pack_f+0x68>
 2010238:	000d883a 	mov	r6,zero
 201023c:	0007883a 	mov	r3,zero
 2010240:	19003fcc 	andi	r4,r3,255
 2010244:	200895fa 	slli	r4,r4,23
 2010248:	00c02034 	movhi	r3,128
 201024c:	18ffffc4 	addi	r3,r3,-1
 2010250:	30c6703a 	and	r3,r6,r3
 2010254:	10a0002c 	andhi	r2,r2,32768
 2010258:	10c4b03a 	or	r2,r2,r3
 201025c:	280a97fa 	slli	r5,r5,31
 2010260:	1104b03a 	or	r2,r2,r4
 2010264:	00e00034 	movhi	r3,32768
 2010268:	18ffffc4 	addi	r3,r3,-1
 201026c:	10c4703a 	and	r2,r2,r3
 2010270:	1144b03a 	or	r2,r2,r5
 2010274:	f800283a 	ret
 2010278:	21000217 	ldw	r4,8(r4)
 201027c:	00bfe084 	movi	r2,-126
 2010280:	20801b16 	blt	r4,r2,20102f0 <__pack_f+0xe0>
 2010284:	00801fc4 	movi	r2,127
 2010288:	11001016 	blt	r2,r4,20102cc <__pack_f+0xbc>
 201028c:	308e703a 	and	r7,r6,r2
 2010290:	2087883a 	add	r3,r4,r2
 2010294:	00801004 	movi	r2,64
 2010298:	38800526 	beq	r7,r2,20102b0 <__pack_f+0xa0>
 201029c:	31800fc4 	addi	r6,r6,63
 20102a0:	30000716 	blt	r6,zero,20102c0 <__pack_f+0xb0>
 20102a4:	300490ba 	slli	r2,r6,2
 20102a8:	100cd27a 	srli	r6,r2,9
 20102ac:	003fe406 	br	2010240 <__pack_f+0x30>
 20102b0:	3080200c 	andi	r2,r6,128
 20102b4:	103ffa26 	beq	r2,zero,20102a0 <__pack_f+0x90>
 20102b8:	31cd883a 	add	r6,r6,r7
 20102bc:	003ff806 	br	20102a0 <__pack_f+0x90>
 20102c0:	300cd07a 	srli	r6,r6,1
 20102c4:	18c00044 	addi	r3,r3,1
 20102c8:	003ff606 	br	20102a4 <__pack_f+0x94>
 20102cc:	000d883a 	mov	r6,zero
 20102d0:	00ffffc4 	movi	r3,-1
 20102d4:	003fda06 	br	2010240 <__pack_f+0x30>
 20102d8:	31800434 	orhi	r6,r6,16
 20102dc:	00802034 	movhi	r2,128
 20102e0:	10bfffc4 	addi	r2,r2,-1
 20102e4:	308c703a 	and	r6,r6,r2
 20102e8:	00ffffc4 	movi	r3,-1
 20102ec:	003fd406 	br	2010240 <__pack_f+0x30>
 20102f0:	1109c83a 	sub	r4,r2,r4
 20102f4:	00800644 	movi	r2,25
 20102f8:	11001216 	blt	r2,r4,2010344 <__pack_f+0x134>
 20102fc:	3904983a 	sll	r2,r7,r4
 2010300:	3106d83a 	srl	r3,r6,r4
 2010304:	10bfffc4 	addi	r2,r2,-1
 2010308:	3084703a 	and	r2,r6,r2
 201030c:	1004c03a 	cmpne	r2,r2,zero
 2010310:	1886b03a 	or	r3,r3,r2
 2010314:	19001fcc 	andi	r4,r3,127
 2010318:	00801004 	movi	r2,64
 201031c:	20800c26 	beq	r4,r2,2010350 <__pack_f+0x140>
 2010320:	18c00fc4 	addi	r3,r3,63
 2010324:	00900034 	movhi	r2,16384
 2010328:	10bfffc4 	addi	r2,r2,-1
 201032c:	180cd1fa 	srli	r6,r3,7
 2010330:	10c7803a 	cmpltu	r3,r2,r3
 2010334:	00802034 	movhi	r2,128
 2010338:	10bfffc4 	addi	r2,r2,-1
 201033c:	308c703a 	and	r6,r6,r2
 2010340:	003fbf06 	br	2010240 <__pack_f+0x30>
 2010344:	0007883a 	mov	r3,zero
 2010348:	000d883a 	mov	r6,zero
 201034c:	003ff906 	br	2010334 <__pack_f+0x124>
 2010350:	1880200c 	andi	r2,r3,128
 2010354:	10000126 	beq	r2,zero,201035c <__pack_f+0x14c>
 2010358:	1907883a 	add	r3,r3,r4
 201035c:	180cd1fa 	srli	r6,r3,7
 2010360:	00900034 	movhi	r2,16384
 2010364:	10bfffc4 	addi	r2,r2,-1
 2010368:	10c7803a 	cmpltu	r3,r2,r3
 201036c:	003ff106 	br	2010334 <__pack_f+0x124>

02010370 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 2010370:	defff804 	addi	sp,sp,-32
 2010374:	dfc00715 	stw	ra,28(sp)
 2010378:	df000615 	stw	fp,24(sp)
 201037c:	df000604 	addi	fp,sp,24
 2010380:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 2010384:	e0bffc17 	ldw	r2,-16(fp)
 2010388:	1004803a 	cmplt	r2,r2,zero
 201038c:	1000091e 	bne	r2,zero,20103b4 <close+0x44>
 2010390:	e13ffc17 	ldw	r4,-16(fp)
 2010394:	01400304 	movi	r5,12
 2010398:	2000abc0 	call	2000abc <__mulsi3>
 201039c:	1007883a 	mov	r3,r2
 20103a0:	00808074 	movhi	r2,513
 20103a4:	10920704 	addi	r2,r2,18460
 20103a8:	1887883a 	add	r3,r3,r2
 20103ac:	e0ffff15 	stw	r3,-4(fp)
 20103b0:	00000106 	br	20103b8 <close+0x48>
 20103b4:	e03fff15 	stw	zero,-4(fp)
 20103b8:	e0bfff17 	ldw	r2,-4(fp)
 20103bc:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
 20103c0:	e0bffb17 	ldw	r2,-20(fp)
 20103c4:	1005003a 	cmpeq	r2,r2,zero
 20103c8:	10001d1e 	bne	r2,zero,2010440 <close+0xd0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 20103cc:	e0bffb17 	ldw	r2,-20(fp)
 20103d0:	10800017 	ldw	r2,0(r2)
 20103d4:	10800417 	ldw	r2,16(r2)
 20103d8:	1005003a 	cmpeq	r2,r2,zero
 20103dc:	1000071e 	bne	r2,zero,20103fc <close+0x8c>
 20103e0:	e0bffb17 	ldw	r2,-20(fp)
 20103e4:	10800017 	ldw	r2,0(r2)
 20103e8:	10800417 	ldw	r2,16(r2)
 20103ec:	e13ffb17 	ldw	r4,-20(fp)
 20103f0:	103ee83a 	callr	r2
 20103f4:	e0bffe15 	stw	r2,-8(fp)
 20103f8:	00000106 	br	2010400 <close+0x90>
 20103fc:	e03ffe15 	stw	zero,-8(fp)
 2010400:	e0bffe17 	ldw	r2,-8(fp)
 2010404:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 2010408:	e13ffc17 	ldw	r4,-16(fp)
 201040c:	2010eac0 	call	2010eac <alt_release_fd>
    if (rval < 0)
 2010410:	e0bffa17 	ldw	r2,-24(fp)
 2010414:	1004403a 	cmpge	r2,r2,zero
 2010418:	1000071e 	bne	r2,zero,2010438 <close+0xc8>
    {
      ALT_ERRNO = -rval;
 201041c:	20104700 	call	2010470 <alt_get_errno>
 2010420:	e0fffa17 	ldw	r3,-24(fp)
 2010424:	00c7c83a 	sub	r3,zero,r3
 2010428:	10c00015 	stw	r3,0(r2)
      return -1;
 201042c:	00bfffc4 	movi	r2,-1
 2010430:	e0bffd15 	stw	r2,-12(fp)
 2010434:	00000806 	br	2010458 <close+0xe8>
    }
    return 0;
 2010438:	e03ffd15 	stw	zero,-12(fp)
 201043c:	00000606 	br	2010458 <close+0xe8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 2010440:	20104700 	call	2010470 <alt_get_errno>
 2010444:	1007883a 	mov	r3,r2
 2010448:	00801444 	movi	r2,81
 201044c:	18800015 	stw	r2,0(r3)
    return -1;
 2010450:	00bfffc4 	movi	r2,-1
 2010454:	e0bffd15 	stw	r2,-12(fp)
 2010458:	e0bffd17 	ldw	r2,-12(fp)
  }
}
 201045c:	e037883a 	mov	sp,fp
 2010460:	dfc00117 	ldw	ra,4(sp)
 2010464:	df000017 	ldw	fp,0(sp)
 2010468:	dec00204 	addi	sp,sp,8
 201046c:	f800283a 	ret

02010470 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010470:	defffd04 	addi	sp,sp,-12
 2010474:	dfc00215 	stw	ra,8(sp)
 2010478:	df000115 	stw	fp,4(sp)
 201047c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010480:	00808074 	movhi	r2,513
 2010484:	10969504 	addi	r2,r2,23124
 2010488:	10800017 	ldw	r2,0(r2)
 201048c:	1005003a 	cmpeq	r2,r2,zero
 2010490:	1000061e 	bne	r2,zero,20104ac <alt_get_errno+0x3c>
 2010494:	00808074 	movhi	r2,513
 2010498:	10969504 	addi	r2,r2,23124
 201049c:	10800017 	ldw	r2,0(r2)
 20104a0:	103ee83a 	callr	r2
 20104a4:	e0bfff15 	stw	r2,-4(fp)
 20104a8:	00000306 	br	20104b8 <alt_get_errno+0x48>
 20104ac:	00808074 	movhi	r2,513
 20104b0:	109d6a04 	addi	r2,r2,30120
 20104b4:	e0bfff15 	stw	r2,-4(fp)
 20104b8:	e0bfff17 	ldw	r2,-4(fp)
}
 20104bc:	e037883a 	mov	sp,fp
 20104c0:	dfc00117 	ldw	ra,4(sp)
 20104c4:	df000017 	ldw	fp,0(sp)
 20104c8:	dec00204 	addi	sp,sp,8
 20104cc:	f800283a 	ret

020104d0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 20104d0:	defffc04 	addi	sp,sp,-16
 20104d4:	df000315 	stw	fp,12(sp)
 20104d8:	df000304 	addi	fp,sp,12
 20104dc:	e13ffd15 	stw	r4,-12(fp)
 20104e0:	e17ffe15 	stw	r5,-8(fp)
 20104e4:	e1bfff15 	stw	r6,-4(fp)
  return len;
 20104e8:	e0bfff17 	ldw	r2,-4(fp)
}
 20104ec:	e037883a 	mov	sp,fp
 20104f0:	df000017 	ldw	fp,0(sp)
 20104f4:	dec00104 	addi	sp,sp,4
 20104f8:	f800283a 	ret

020104fc <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 20104fc:	defff904 	addi	sp,sp,-28
 2010500:	dfc00615 	stw	ra,24(sp)
 2010504:	df000515 	stw	fp,20(sp)
 2010508:	df000504 	addi	fp,sp,20
 201050c:	e13ffc15 	stw	r4,-16(fp)
 2010510:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 2010514:	e0bffc17 	ldw	r2,-16(fp)
 2010518:	1004803a 	cmplt	r2,r2,zero
 201051c:	1000091e 	bne	r2,zero,2010544 <fstat+0x48>
 2010520:	e13ffc17 	ldw	r4,-16(fp)
 2010524:	01400304 	movi	r5,12
 2010528:	2000abc0 	call	2000abc <__mulsi3>
 201052c:	1007883a 	mov	r3,r2
 2010530:	00808074 	movhi	r2,513
 2010534:	10920704 	addi	r2,r2,18460
 2010538:	1887883a 	add	r3,r3,r2
 201053c:	e0ffff15 	stw	r3,-4(fp)
 2010540:	00000106 	br	2010548 <fstat+0x4c>
 2010544:	e03fff15 	stw	zero,-4(fp)
 2010548:	e0bfff17 	ldw	r2,-4(fp)
 201054c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 2010550:	e0bffb17 	ldw	r2,-20(fp)
 2010554:	1005003a 	cmpeq	r2,r2,zero
 2010558:	1000121e 	bne	r2,zero,20105a4 <fstat+0xa8>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 201055c:	e0bffb17 	ldw	r2,-20(fp)
 2010560:	10800017 	ldw	r2,0(r2)
 2010564:	10800817 	ldw	r2,32(r2)
 2010568:	1005003a 	cmpeq	r2,r2,zero
 201056c:	1000081e 	bne	r2,zero,2010590 <fstat+0x94>
    {
      return fd->dev->fstat(fd, st);
 2010570:	e0bffb17 	ldw	r2,-20(fp)
 2010574:	10800017 	ldw	r2,0(r2)
 2010578:	10800817 	ldw	r2,32(r2)
 201057c:	e13ffb17 	ldw	r4,-20(fp)
 2010580:	e17ffd17 	ldw	r5,-12(fp)
 2010584:	103ee83a 	callr	r2
 2010588:	e0bffe15 	stw	r2,-8(fp)
 201058c:	00000b06 	br	20105bc <fstat+0xc0>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 2010590:	e0fffd17 	ldw	r3,-12(fp)
 2010594:	00880004 	movi	r2,8192
 2010598:	18800115 	stw	r2,4(r3)
      return 0;
 201059c:	e03ffe15 	stw	zero,-8(fp)
 20105a0:	00000606 	br	20105bc <fstat+0xc0>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 20105a4:	20105d40 	call	20105d4 <alt_get_errno>
 20105a8:	1007883a 	mov	r3,r2
 20105ac:	00801444 	movi	r2,81
 20105b0:	18800015 	stw	r2,0(r3)
    return -1;
 20105b4:	00bfffc4 	movi	r2,-1
 20105b8:	e0bffe15 	stw	r2,-8(fp)
 20105bc:	e0bffe17 	ldw	r2,-8(fp)
  }
}
 20105c0:	e037883a 	mov	sp,fp
 20105c4:	dfc00117 	ldw	ra,4(sp)
 20105c8:	df000017 	ldw	fp,0(sp)
 20105cc:	dec00204 	addi	sp,sp,8
 20105d0:	f800283a 	ret

020105d4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 20105d4:	defffd04 	addi	sp,sp,-12
 20105d8:	dfc00215 	stw	ra,8(sp)
 20105dc:	df000115 	stw	fp,4(sp)
 20105e0:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 20105e4:	00808074 	movhi	r2,513
 20105e8:	10969504 	addi	r2,r2,23124
 20105ec:	10800017 	ldw	r2,0(r2)
 20105f0:	1005003a 	cmpeq	r2,r2,zero
 20105f4:	1000061e 	bne	r2,zero,2010610 <alt_get_errno+0x3c>
 20105f8:	00808074 	movhi	r2,513
 20105fc:	10969504 	addi	r2,r2,23124
 2010600:	10800017 	ldw	r2,0(r2)
 2010604:	103ee83a 	callr	r2
 2010608:	e0bfff15 	stw	r2,-4(fp)
 201060c:	00000306 	br	201061c <alt_get_errno+0x48>
 2010610:	00808074 	movhi	r2,513
 2010614:	109d6a04 	addi	r2,r2,30120
 2010618:	e0bfff15 	stw	r2,-4(fp)
 201061c:	e0bfff17 	ldw	r2,-4(fp)
}
 2010620:	e037883a 	mov	sp,fp
 2010624:	dfc00117 	ldw	ra,4(sp)
 2010628:	df000017 	ldw	fp,0(sp)
 201062c:	dec00204 	addi	sp,sp,8
 2010630:	f800283a 	ret

02010634 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 2010634:	deffeb04 	addi	sp,sp,-84
 2010638:	dfc01415 	stw	ra,80(sp)
 201063c:	df001315 	stw	fp,76(sp)
 2010640:	df001304 	addi	fp,sp,76
 2010644:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 2010648:	e0bffd17 	ldw	r2,-12(fp)
 201064c:	1004803a 	cmplt	r2,r2,zero
 2010650:	1000091e 	bne	r2,zero,2010678 <isatty+0x44>
 2010654:	e13ffd17 	ldw	r4,-12(fp)
 2010658:	01400304 	movi	r5,12
 201065c:	2000abc0 	call	2000abc <__mulsi3>
 2010660:	1007883a 	mov	r3,r2
 2010664:	00808074 	movhi	r2,513
 2010668:	10920704 	addi	r2,r2,18460
 201066c:	1887883a 	add	r3,r3,r2
 2010670:	e0ffff15 	stw	r3,-4(fp)
 2010674:	00000106 	br	201067c <isatty+0x48>
 2010678:	e03fff15 	stw	zero,-4(fp)
 201067c:	e0bfff17 	ldw	r2,-4(fp)
 2010680:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
 2010684:	e0bfed17 	ldw	r2,-76(fp)
 2010688:	1005003a 	cmpeq	r2,r2,zero
 201068c:	10000f1e 	bne	r2,zero,20106cc <isatty+0x98>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 2010690:	e0bfed17 	ldw	r2,-76(fp)
 2010694:	10800017 	ldw	r2,0(r2)
 2010698:	10800817 	ldw	r2,32(r2)
 201069c:	1004c03a 	cmpne	r2,r2,zero
 20106a0:	1000031e 	bne	r2,zero,20106b0 <isatty+0x7c>
    {
      return 1;
 20106a4:	00800044 	movi	r2,1
 20106a8:	e0bffe15 	stw	r2,-8(fp)
 20106ac:	00000c06 	br	20106e0 <isatty+0xac>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 20106b0:	e17fee04 	addi	r5,fp,-72
 20106b4:	e13ffd17 	ldw	r4,-12(fp)
 20106b8:	20104fc0 	call	20104fc <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 20106bc:	e0bfef17 	ldw	r2,-68(fp)
 20106c0:	10880020 	cmpeqi	r2,r2,8192
 20106c4:	e0bffe15 	stw	r2,-8(fp)
 20106c8:	00000506 	br	20106e0 <isatty+0xac>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 20106cc:	20106f80 	call	20106f8 <alt_get_errno>
 20106d0:	1007883a 	mov	r3,r2
 20106d4:	00801444 	movi	r2,81
 20106d8:	18800015 	stw	r2,0(r3)
    return 0;
 20106dc:	e03ffe15 	stw	zero,-8(fp)
 20106e0:	e0bffe17 	ldw	r2,-8(fp)
  }
}
 20106e4:	e037883a 	mov	sp,fp
 20106e8:	dfc00117 	ldw	ra,4(sp)
 20106ec:	df000017 	ldw	fp,0(sp)
 20106f0:	dec00204 	addi	sp,sp,8
 20106f4:	f800283a 	ret

020106f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 20106f8:	defffd04 	addi	sp,sp,-12
 20106fc:	dfc00215 	stw	ra,8(sp)
 2010700:	df000115 	stw	fp,4(sp)
 2010704:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010708:	00808074 	movhi	r2,513
 201070c:	10969504 	addi	r2,r2,23124
 2010710:	10800017 	ldw	r2,0(r2)
 2010714:	1005003a 	cmpeq	r2,r2,zero
 2010718:	1000061e 	bne	r2,zero,2010734 <alt_get_errno+0x3c>
 201071c:	00808074 	movhi	r2,513
 2010720:	10969504 	addi	r2,r2,23124
 2010724:	10800017 	ldw	r2,0(r2)
 2010728:	103ee83a 	callr	r2
 201072c:	e0bfff15 	stw	r2,-4(fp)
 2010730:	00000306 	br	2010740 <alt_get_errno+0x48>
 2010734:	00808074 	movhi	r2,513
 2010738:	109d6a04 	addi	r2,r2,30120
 201073c:	e0bfff15 	stw	r2,-4(fp)
 2010740:	e0bfff17 	ldw	r2,-4(fp)
}
 2010744:	e037883a 	mov	sp,fp
 2010748:	dfc00117 	ldw	ra,4(sp)
 201074c:	df000017 	ldw	fp,0(sp)
 2010750:	dec00204 	addi	sp,sp,8
 2010754:	f800283a 	ret

02010758 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 2010758:	defffe04 	addi	sp,sp,-8
 201075c:	dfc00115 	stw	ra,4(sp)
 2010760:	df000015 	stw	fp,0(sp)
 2010764:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 2010768:	01008074 	movhi	r4,513
 201076c:	2116ac04 	addi	r4,r4,23216
 2010770:	01408074 	movhi	r5,513
 2010774:	294fee04 	addi	r5,r5,16312
 2010778:	01808074 	movhi	r6,513
 201077c:	3196ac04 	addi	r6,r6,23216
 2010780:	20107d80 	call	20107d8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 2010784:	01008034 	movhi	r4,512
 2010788:	21000804 	addi	r4,r4,32
 201078c:	01408034 	movhi	r5,512
 2010790:	29400804 	addi	r5,r5,32
 2010794:	01808034 	movhi	r6,512
 2010798:	31806d04 	addi	r6,r6,436
 201079c:	20107d80 	call	20107d8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 20107a0:	01008074 	movhi	r4,513
 20107a4:	210de304 	addi	r4,r4,14220
 20107a8:	01408074 	movhi	r5,513
 20107ac:	294de304 	addi	r5,r5,14220
 20107b0:	01808074 	movhi	r6,513
 20107b4:	318fee04 	addi	r6,r6,16312
 20107b8:	20107d80 	call	20107d8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 20107bc:	20127f00 	call	20127f0 <alt_dcache_flush_all>
  alt_icache_flush_all();
 20107c0:	2012cfc0 	call	2012cfc <alt_icache_flush_all>
}
 20107c4:	e037883a 	mov	sp,fp
 20107c8:	dfc00117 	ldw	ra,4(sp)
 20107cc:	df000017 	ldw	fp,0(sp)
 20107d0:	dec00204 	addi	sp,sp,8
 20107d4:	f800283a 	ret

020107d8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 20107d8:	defffc04 	addi	sp,sp,-16
 20107dc:	df000315 	stw	fp,12(sp)
 20107e0:	df000304 	addi	fp,sp,12
 20107e4:	e13ffd15 	stw	r4,-12(fp)
 20107e8:	e17ffe15 	stw	r5,-8(fp)
 20107ec:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 20107f0:	e0fffe17 	ldw	r3,-8(fp)
 20107f4:	e0bffd17 	ldw	r2,-12(fp)
 20107f8:	18800e26 	beq	r3,r2,2010834 <alt_load_section+0x5c>
  {
    while( to != end )
 20107fc:	00000a06 	br	2010828 <alt_load_section+0x50>
    {
      *to++ = *from++;
 2010800:	e0bffd17 	ldw	r2,-12(fp)
 2010804:	10c00017 	ldw	r3,0(r2)
 2010808:	e0bffe17 	ldw	r2,-8(fp)
 201080c:	10c00015 	stw	r3,0(r2)
 2010810:	e0bffe17 	ldw	r2,-8(fp)
 2010814:	10800104 	addi	r2,r2,4
 2010818:	e0bffe15 	stw	r2,-8(fp)
 201081c:	e0bffd17 	ldw	r2,-12(fp)
 2010820:	10800104 	addi	r2,r2,4
 2010824:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 2010828:	e0fffe17 	ldw	r3,-8(fp)
 201082c:	e0bfff17 	ldw	r2,-4(fp)
 2010830:	18bff31e 	bne	r3,r2,2010800 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
 2010834:	e037883a 	mov	sp,fp
 2010838:	df000017 	ldw	fp,0(sp)
 201083c:	dec00104 	addi	sp,sp,4
 2010840:	f800283a 	ret

02010844 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 2010844:	defff804 	addi	sp,sp,-32
 2010848:	dfc00715 	stw	ra,28(sp)
 201084c:	df000615 	stw	fp,24(sp)
 2010850:	df000604 	addi	fp,sp,24
 2010854:	e13ffc15 	stw	r4,-16(fp)
 2010858:	e17ffd15 	stw	r5,-12(fp)
 201085c:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 2010860:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 2010864:	e0bffc17 	ldw	r2,-16(fp)
 2010868:	1004803a 	cmplt	r2,r2,zero
 201086c:	1000091e 	bne	r2,zero,2010894 <lseek+0x50>
 2010870:	e13ffc17 	ldw	r4,-16(fp)
 2010874:	01400304 	movi	r5,12
 2010878:	2000abc0 	call	2000abc <__mulsi3>
 201087c:	1007883a 	mov	r3,r2
 2010880:	00808074 	movhi	r2,513
 2010884:	10920704 	addi	r2,r2,18460
 2010888:	1887883a 	add	r3,r3,r2
 201088c:	e0ffff15 	stw	r3,-4(fp)
 2010890:	00000106 	br	2010898 <lseek+0x54>
 2010894:	e03fff15 	stw	zero,-4(fp)
 2010898:	e0bfff17 	ldw	r2,-4(fp)
 201089c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
 20108a0:	e0bffb17 	ldw	r2,-20(fp)
 20108a4:	1005003a 	cmpeq	r2,r2,zero
 20108a8:	1000111e 	bne	r2,zero,20108f0 <lseek+0xac>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 20108ac:	e0bffb17 	ldw	r2,-20(fp)
 20108b0:	10800017 	ldw	r2,0(r2)
 20108b4:	10800717 	ldw	r2,28(r2)
 20108b8:	1005003a 	cmpeq	r2,r2,zero
 20108bc:	1000091e 	bne	r2,zero,20108e4 <lseek+0xa0>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 20108c0:	e0bffb17 	ldw	r2,-20(fp)
 20108c4:	10800017 	ldw	r2,0(r2)
 20108c8:	10800717 	ldw	r2,28(r2)
 20108cc:	e13ffb17 	ldw	r4,-20(fp)
 20108d0:	e17ffd17 	ldw	r5,-12(fp)
 20108d4:	e1bffe17 	ldw	r6,-8(fp)
 20108d8:	103ee83a 	callr	r2
 20108dc:	e0bffa15 	stw	r2,-24(fp)
 20108e0:	00000506 	br	20108f8 <lseek+0xb4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 20108e4:	00bfde84 	movi	r2,-134
 20108e8:	e0bffa15 	stw	r2,-24(fp)
 20108ec:	00000206 	br	20108f8 <lseek+0xb4>
    }
  }
  else  
  {
    rc = -EBADFD;
 20108f0:	00bfebc4 	movi	r2,-81
 20108f4:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
 20108f8:	e0bffa17 	ldw	r2,-24(fp)
 20108fc:	1004403a 	cmpge	r2,r2,zero
 2010900:	1000071e 	bne	r2,zero,2010920 <lseek+0xdc>
  {
    ALT_ERRNO = -rc;
 2010904:	20109380 	call	2010938 <alt_get_errno>
 2010908:	1007883a 	mov	r3,r2
 201090c:	e0bffa17 	ldw	r2,-24(fp)
 2010910:	0085c83a 	sub	r2,zero,r2
 2010914:	18800015 	stw	r2,0(r3)
    rc = -1;
 2010918:	00bfffc4 	movi	r2,-1
 201091c:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
 2010920:	e0bffa17 	ldw	r2,-24(fp)
}
 2010924:	e037883a 	mov	sp,fp
 2010928:	dfc00117 	ldw	ra,4(sp)
 201092c:	df000017 	ldw	fp,0(sp)
 2010930:	dec00204 	addi	sp,sp,8
 2010934:	f800283a 	ret

02010938 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010938:	defffd04 	addi	sp,sp,-12
 201093c:	dfc00215 	stw	ra,8(sp)
 2010940:	df000115 	stw	fp,4(sp)
 2010944:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010948:	00808074 	movhi	r2,513
 201094c:	10969504 	addi	r2,r2,23124
 2010950:	10800017 	ldw	r2,0(r2)
 2010954:	1005003a 	cmpeq	r2,r2,zero
 2010958:	1000061e 	bne	r2,zero,2010974 <alt_get_errno+0x3c>
 201095c:	00808074 	movhi	r2,513
 2010960:	10969504 	addi	r2,r2,23124
 2010964:	10800017 	ldw	r2,0(r2)
 2010968:	103ee83a 	callr	r2
 201096c:	e0bfff15 	stw	r2,-4(fp)
 2010970:	00000306 	br	2010980 <alt_get_errno+0x48>
 2010974:	00808074 	movhi	r2,513
 2010978:	109d6a04 	addi	r2,r2,30120
 201097c:	e0bfff15 	stw	r2,-4(fp)
 2010980:	e0bfff17 	ldw	r2,-4(fp)
}
 2010984:	e037883a 	mov	sp,fp
 2010988:	dfc00117 	ldw	ra,4(sp)
 201098c:	df000017 	ldw	fp,0(sp)
 2010990:	dec00204 	addi	sp,sp,8
 2010994:	f800283a 	ret

02010998 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 2010998:	defffd04 	addi	sp,sp,-12
 201099c:	dfc00215 	stw	ra,8(sp)
 20109a0:	df000115 	stw	fp,4(sp)
 20109a4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 20109a8:	0009883a 	mov	r4,zero
 20109ac:	20111640 	call	2011164 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 20109b0:	20111980 	call	2011198 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 20109b4:	01008074 	movhi	r4,513
 20109b8:	210fa304 	addi	r4,r4,16012
 20109bc:	01408074 	movhi	r5,513
 20109c0:	294fa304 	addi	r5,r5,16012
 20109c4:	01808074 	movhi	r6,513
 20109c8:	318fa304 	addi	r6,r6,16012
 20109cc:	20130bc0 	call	20130bc <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 20109d0:	20129200 	call	2012920 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 20109d4:	01008074 	movhi	r4,513
 20109d8:	210a6104 	addi	r4,r4,10628
 20109dc:	20132f80 	call	20132f8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 20109e0:	d126e817 	ldw	r4,-25696(gp)
 20109e4:	d166e917 	ldw	r5,-25692(gp)
 20109e8:	d1a6ea17 	ldw	r6,-25688(gp)
 20109ec:	20002a40 	call	20002a4 <main>
 20109f0:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 20109f4:	01000044 	movi	r4,1
 20109f8:	20103700 	call	2010370 <close>
  exit (result);
 20109fc:	e13fff17 	ldw	r4,-4(fp)
 2010a00:	201330c0 	call	201330c <exit>

02010a04 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 2010a04:	defffe04 	addi	sp,sp,-8
 2010a08:	df000115 	stw	fp,4(sp)
 2010a0c:	df000104 	addi	fp,sp,4
 2010a10:	e13fff15 	stw	r4,-4(fp)
}
 2010a14:	e037883a 	mov	sp,fp
 2010a18:	df000017 	ldw	fp,0(sp)
 2010a1c:	dec00104 	addi	sp,sp,4
 2010a20:	f800283a 	ret

02010a24 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 2010a24:	defffe04 	addi	sp,sp,-8
 2010a28:	df000115 	stw	fp,4(sp)
 2010a2c:	df000104 	addi	fp,sp,4
 2010a30:	e13fff15 	stw	r4,-4(fp)
}
 2010a34:	e037883a 	mov	sp,fp
 2010a38:	df000017 	ldw	fp,0(sp)
 2010a3c:	dec00104 	addi	sp,sp,4
 2010a40:	f800283a 	ret

02010a44 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 2010a44:	defffa04 	addi	sp,sp,-24
 2010a48:	dfc00515 	stw	ra,20(sp)
 2010a4c:	df000415 	stw	fp,16(sp)
 2010a50:	dc000315 	stw	r16,12(sp)
 2010a54:	df000304 	addi	fp,sp,12
 2010a58:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 2010a5c:	e0bffe17 	ldw	r2,-8(fp)
 2010a60:	10800217 	ldw	r2,8(r2)
 2010a64:	10d00034 	orhi	r3,r2,16384
 2010a68:	e0bffe17 	ldw	r2,-8(fp)
 2010a6c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 2010a70:	e03ffd15 	stw	zero,-12(fp)
 2010a74:	00002306 	br	2010b04 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 2010a78:	e13ffd17 	ldw	r4,-12(fp)
 2010a7c:	04008074 	movhi	r16,513
 2010a80:	84120704 	addi	r16,r16,18460
 2010a84:	01400304 	movi	r5,12
 2010a88:	2000abc0 	call	2000abc <__mulsi3>
 2010a8c:	1405883a 	add	r2,r2,r16
 2010a90:	10c00017 	ldw	r3,0(r2)
 2010a94:	e0bffe17 	ldw	r2,-8(fp)
 2010a98:	10800017 	ldw	r2,0(r2)
 2010a9c:	1880161e 	bne	r3,r2,2010af8 <alt_file_locked+0xb4>
 2010aa0:	e13ffd17 	ldw	r4,-12(fp)
 2010aa4:	04008074 	movhi	r16,513
 2010aa8:	84120704 	addi	r16,r16,18460
 2010aac:	01400304 	movi	r5,12
 2010ab0:	2000abc0 	call	2000abc <__mulsi3>
 2010ab4:	1405883a 	add	r2,r2,r16
 2010ab8:	10800204 	addi	r2,r2,8
 2010abc:	10800017 	ldw	r2,0(r2)
 2010ac0:	1004403a 	cmpge	r2,r2,zero
 2010ac4:	10000c1e 	bne	r2,zero,2010af8 <alt_file_locked+0xb4>
 2010ac8:	e13ffd17 	ldw	r4,-12(fp)
 2010acc:	01400304 	movi	r5,12
 2010ad0:	2000abc0 	call	2000abc <__mulsi3>
 2010ad4:	1007883a 	mov	r3,r2
 2010ad8:	00808074 	movhi	r2,513
 2010adc:	10920704 	addi	r2,r2,18460
 2010ae0:	1887883a 	add	r3,r3,r2
 2010ae4:	e0bffe17 	ldw	r2,-8(fp)
 2010ae8:	18800326 	beq	r3,r2,2010af8 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 2010aec:	00bffcc4 	movi	r2,-13
 2010af0:	e0bfff15 	stw	r2,-4(fp)
 2010af4:	00000a06 	br	2010b20 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 2010af8:	e0bffd17 	ldw	r2,-12(fp)
 2010afc:	10800044 	addi	r2,r2,1
 2010b00:	e0bffd15 	stw	r2,-12(fp)
 2010b04:	00808074 	movhi	r2,513
 2010b08:	10969404 	addi	r2,r2,23120
 2010b0c:	10800017 	ldw	r2,0(r2)
 2010b10:	1007883a 	mov	r3,r2
 2010b14:	e0bffd17 	ldw	r2,-12(fp)
 2010b18:	18bfd72e 	bgeu	r3,r2,2010a78 <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 2010b1c:	e03fff15 	stw	zero,-4(fp)
 2010b20:	e0bfff17 	ldw	r2,-4(fp)
}
 2010b24:	e037883a 	mov	sp,fp
 2010b28:	dfc00217 	ldw	ra,8(sp)
 2010b2c:	df000117 	ldw	fp,4(sp)
 2010b30:	dc000017 	ldw	r16,0(sp)
 2010b34:	dec00304 	addi	sp,sp,12
 2010b38:	f800283a 	ret

02010b3c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 2010b3c:	defff404 	addi	sp,sp,-48
 2010b40:	dfc00b15 	stw	ra,44(sp)
 2010b44:	df000a15 	stw	fp,40(sp)
 2010b48:	df000a04 	addi	fp,sp,40
 2010b4c:	e13ffb15 	stw	r4,-20(fp)
 2010b50:	e17ffc15 	stw	r5,-16(fp)
 2010b54:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 2010b58:	00bfffc4 	movi	r2,-1
 2010b5c:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
 2010b60:	00bffb44 	movi	r2,-19
 2010b64:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
 2010b68:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 2010b6c:	e13ffb17 	ldw	r4,-20(fp)
 2010b70:	01408074 	movhi	r5,513
 2010b74:	29569204 	addi	r5,r5,23112
 2010b78:	20129e80 	call	20129e8 <alt_find_dev>
 2010b7c:	e0bffa15 	stw	r2,-24(fp)
 2010b80:	e0bffa17 	ldw	r2,-24(fp)
 2010b84:	1004c03a 	cmpne	r2,r2,zero
 2010b88:	1000051e 	bne	r2,zero,2010ba0 <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 2010b8c:	e13ffb17 	ldw	r4,-20(fp)
 2010b90:	2012a7c0 	call	2012a7c <alt_find_file>
 2010b94:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
 2010b98:	00800044 	movi	r2,1
 2010b9c:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 2010ba0:	e0bffa17 	ldw	r2,-24(fp)
 2010ba4:	1005003a 	cmpeq	r2,r2,zero
 2010ba8:	1000311e 	bne	r2,zero,2010c70 <open+0x134>
  {
    if ((index = alt_get_fd (dev)) < 0)
 2010bac:	e13ffa17 	ldw	r4,-24(fp)
 2010bb0:	2012c2c0 	call	2012c2c <alt_get_fd>
 2010bb4:	e0bff815 	stw	r2,-32(fp)
 2010bb8:	e0bff817 	ldw	r2,-32(fp)
 2010bbc:	1004403a 	cmpge	r2,r2,zero
 2010bc0:	1000031e 	bne	r2,zero,2010bd0 <open+0x94>
    {
      status = index;
 2010bc4:	e0bff817 	ldw	r2,-32(fp)
 2010bc8:	e0bff715 	stw	r2,-36(fp)
 2010bcc:	00002a06 	br	2010c78 <open+0x13c>
    }
    else
    {
      fd = &alt_fd_list[index];
 2010bd0:	e13ff817 	ldw	r4,-32(fp)
 2010bd4:	01400304 	movi	r5,12
 2010bd8:	2000abc0 	call	2000abc <__mulsi3>
 2010bdc:	1007883a 	mov	r3,r2
 2010be0:	00808074 	movhi	r2,513
 2010be4:	10920704 	addi	r2,r2,18460
 2010be8:	1885883a 	add	r2,r3,r2
 2010bec:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 2010bf0:	e0fffc17 	ldw	r3,-16(fp)
 2010bf4:	00900034 	movhi	r2,16384
 2010bf8:	10bfffc4 	addi	r2,r2,-1
 2010bfc:	1886703a 	and	r3,r3,r2
 2010c00:	e0bff917 	ldw	r2,-28(fp)
 2010c04:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 2010c08:	e0bff617 	ldw	r2,-40(fp)
 2010c0c:	1004c03a 	cmpne	r2,r2,zero
 2010c10:	1000061e 	bne	r2,zero,2010c2c <open+0xf0>
 2010c14:	e13ff917 	ldw	r4,-28(fp)
 2010c18:	2010a440 	call	2010a44 <alt_file_locked>
 2010c1c:	e0bff715 	stw	r2,-36(fp)
 2010c20:	e0bff717 	ldw	r2,-36(fp)
 2010c24:	1004803a 	cmplt	r2,r2,zero
 2010c28:	1000131e 	bne	r2,zero,2010c78 <open+0x13c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 2010c2c:	e0bffa17 	ldw	r2,-24(fp)
 2010c30:	10800317 	ldw	r2,12(r2)
 2010c34:	1005003a 	cmpeq	r2,r2,zero
 2010c38:	1000091e 	bne	r2,zero,2010c60 <open+0x124>
 2010c3c:	e0bffa17 	ldw	r2,-24(fp)
 2010c40:	10800317 	ldw	r2,12(r2)
 2010c44:	e13ff917 	ldw	r4,-28(fp)
 2010c48:	e17ffb17 	ldw	r5,-20(fp)
 2010c4c:	e1bffc17 	ldw	r6,-16(fp)
 2010c50:	e1fffd17 	ldw	r7,-12(fp)
 2010c54:	103ee83a 	callr	r2
 2010c58:	e0bfff15 	stw	r2,-4(fp)
 2010c5c:	00000106 	br	2010c64 <open+0x128>
 2010c60:	e03fff15 	stw	zero,-4(fp)
 2010c64:	e0bfff17 	ldw	r2,-4(fp)
 2010c68:	e0bff715 	stw	r2,-36(fp)
 2010c6c:	00000206 	br	2010c78 <open+0x13c>
      }
    }
  }
  else
  {
    status = -ENODEV;
 2010c70:	00bffb44 	movi	r2,-19
 2010c74:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 2010c78:	e0bff717 	ldw	r2,-36(fp)
 2010c7c:	1004403a 	cmpge	r2,r2,zero
 2010c80:	1000091e 	bne	r2,zero,2010ca8 <open+0x16c>
  {
    alt_release_fd (index);  
 2010c84:	e13ff817 	ldw	r4,-32(fp)
 2010c88:	2010eac0 	call	2010eac <alt_release_fd>
    ALT_ERRNO = -status;
 2010c8c:	2010cc80 	call	2010cc8 <alt_get_errno>
 2010c90:	e0fff717 	ldw	r3,-36(fp)
 2010c94:	00c7c83a 	sub	r3,zero,r3
 2010c98:	10c00015 	stw	r3,0(r2)
    return -1;
 2010c9c:	00bfffc4 	movi	r2,-1
 2010ca0:	e0bffe15 	stw	r2,-8(fp)
 2010ca4:	00000206 	br	2010cb0 <open+0x174>
  }
  
  /* return the reference upon success */

  return index;
 2010ca8:	e0bff817 	ldw	r2,-32(fp)
 2010cac:	e0bffe15 	stw	r2,-8(fp)
 2010cb0:	e0bffe17 	ldw	r2,-8(fp)
}
 2010cb4:	e037883a 	mov	sp,fp
 2010cb8:	dfc00117 	ldw	ra,4(sp)
 2010cbc:	df000017 	ldw	fp,0(sp)
 2010cc0:	dec00204 	addi	sp,sp,8
 2010cc4:	f800283a 	ret

02010cc8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010cc8:	defffd04 	addi	sp,sp,-12
 2010ccc:	dfc00215 	stw	ra,8(sp)
 2010cd0:	df000115 	stw	fp,4(sp)
 2010cd4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010cd8:	00808074 	movhi	r2,513
 2010cdc:	10969504 	addi	r2,r2,23124
 2010ce0:	10800017 	ldw	r2,0(r2)
 2010ce4:	1005003a 	cmpeq	r2,r2,zero
 2010ce8:	1000061e 	bne	r2,zero,2010d04 <alt_get_errno+0x3c>
 2010cec:	00808074 	movhi	r2,513
 2010cf0:	10969504 	addi	r2,r2,23124
 2010cf4:	10800017 	ldw	r2,0(r2)
 2010cf8:	103ee83a 	callr	r2
 2010cfc:	e0bfff15 	stw	r2,-4(fp)
 2010d00:	00000306 	br	2010d10 <alt_get_errno+0x48>
 2010d04:	00808074 	movhi	r2,513
 2010d08:	109d6a04 	addi	r2,r2,30120
 2010d0c:	e0bfff15 	stw	r2,-4(fp)
 2010d10:	e0bfff17 	ldw	r2,-4(fp)
}
 2010d14:	e037883a 	mov	sp,fp
 2010d18:	dfc00117 	ldw	ra,4(sp)
 2010d1c:	df000017 	ldw	fp,0(sp)
 2010d20:	dec00204 	addi	sp,sp,8
 2010d24:	f800283a 	ret

02010d28 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 2010d28:	defff704 	addi	sp,sp,-36
 2010d2c:	dfc00815 	stw	ra,32(sp)
 2010d30:	df000715 	stw	fp,28(sp)
 2010d34:	df000704 	addi	fp,sp,28
 2010d38:	e13ffb15 	stw	r4,-20(fp)
 2010d3c:	e17ffc15 	stw	r5,-16(fp)
 2010d40:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 2010d44:	e0bffb17 	ldw	r2,-20(fp)
 2010d48:	1004803a 	cmplt	r2,r2,zero
 2010d4c:	1000091e 	bne	r2,zero,2010d74 <read+0x4c>
 2010d50:	e13ffb17 	ldw	r4,-20(fp)
 2010d54:	01400304 	movi	r5,12
 2010d58:	2000abc0 	call	2000abc <__mulsi3>
 2010d5c:	1007883a 	mov	r3,r2
 2010d60:	00808074 	movhi	r2,513
 2010d64:	10920704 	addi	r2,r2,18460
 2010d68:	1887883a 	add	r3,r3,r2
 2010d6c:	e0ffff15 	stw	r3,-4(fp)
 2010d70:	00000106 	br	2010d78 <read+0x50>
 2010d74:	e03fff15 	stw	zero,-4(fp)
 2010d78:	e0bfff17 	ldw	r2,-4(fp)
 2010d7c:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
 2010d80:	e0bffa17 	ldw	r2,-24(fp)
 2010d84:	1005003a 	cmpeq	r2,r2,zero
 2010d88:	1000241e 	bne	r2,zero,2010e1c <read+0xf4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 2010d8c:	e0bffa17 	ldw	r2,-24(fp)
 2010d90:	10800217 	ldw	r2,8(r2)
 2010d94:	108000cc 	andi	r2,r2,3
 2010d98:	10800060 	cmpeqi	r2,r2,1
 2010d9c:	10001a1e 	bne	r2,zero,2010e08 <read+0xe0>
 2010da0:	e0bffa17 	ldw	r2,-24(fp)
 2010da4:	10800017 	ldw	r2,0(r2)
 2010da8:	10800517 	ldw	r2,20(r2)
 2010dac:	1005003a 	cmpeq	r2,r2,zero
 2010db0:	1000151e 	bne	r2,zero,2010e08 <read+0xe0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 2010db4:	e0bffa17 	ldw	r2,-24(fp)
 2010db8:	10800017 	ldw	r2,0(r2)
 2010dbc:	10800517 	ldw	r2,20(r2)
 2010dc0:	e17ffc17 	ldw	r5,-16(fp)
 2010dc4:	e1bffd17 	ldw	r6,-12(fp)
 2010dc8:	e13ffa17 	ldw	r4,-24(fp)
 2010dcc:	103ee83a 	callr	r2
 2010dd0:	e0bff915 	stw	r2,-28(fp)
 2010dd4:	e0bff917 	ldw	r2,-28(fp)
 2010dd8:	1004403a 	cmpge	r2,r2,zero
 2010ddc:	1000071e 	bne	r2,zero,2010dfc <read+0xd4>
        {
          ALT_ERRNO = -rval;
 2010de0:	2010e4c0 	call	2010e4c <alt_get_errno>
 2010de4:	e0fff917 	ldw	r3,-28(fp)
 2010de8:	00c7c83a 	sub	r3,zero,r3
 2010dec:	10c00015 	stw	r3,0(r2)
          return -1;
 2010df0:	00bfffc4 	movi	r2,-1
 2010df4:	e0bffe15 	stw	r2,-8(fp)
 2010df8:	00000e06 	br	2010e34 <read+0x10c>
        }
        return rval;
 2010dfc:	e0bff917 	ldw	r2,-28(fp)
 2010e00:	e0bffe15 	stw	r2,-8(fp)
 2010e04:	00000b06 	br	2010e34 <read+0x10c>
      }
      else
      {
        ALT_ERRNO = EACCES;
 2010e08:	2010e4c0 	call	2010e4c <alt_get_errno>
 2010e0c:	1007883a 	mov	r3,r2
 2010e10:	00800344 	movi	r2,13
 2010e14:	18800015 	stw	r2,0(r3)
 2010e18:	00000406 	br	2010e2c <read+0x104>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 2010e1c:	2010e4c0 	call	2010e4c <alt_get_errno>
 2010e20:	1007883a 	mov	r3,r2
 2010e24:	00801444 	movi	r2,81
 2010e28:	18800015 	stw	r2,0(r3)
  }
  return -1;
 2010e2c:	00bfffc4 	movi	r2,-1
 2010e30:	e0bffe15 	stw	r2,-8(fp)
 2010e34:	e0bffe17 	ldw	r2,-8(fp)
}
 2010e38:	e037883a 	mov	sp,fp
 2010e3c:	dfc00117 	ldw	ra,4(sp)
 2010e40:	df000017 	ldw	fp,0(sp)
 2010e44:	dec00204 	addi	sp,sp,8
 2010e48:	f800283a 	ret

02010e4c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010e4c:	defffd04 	addi	sp,sp,-12
 2010e50:	dfc00215 	stw	ra,8(sp)
 2010e54:	df000115 	stw	fp,4(sp)
 2010e58:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010e5c:	00808074 	movhi	r2,513
 2010e60:	10969504 	addi	r2,r2,23124
 2010e64:	10800017 	ldw	r2,0(r2)
 2010e68:	1005003a 	cmpeq	r2,r2,zero
 2010e6c:	1000061e 	bne	r2,zero,2010e88 <alt_get_errno+0x3c>
 2010e70:	00808074 	movhi	r2,513
 2010e74:	10969504 	addi	r2,r2,23124
 2010e78:	10800017 	ldw	r2,0(r2)
 2010e7c:	103ee83a 	callr	r2
 2010e80:	e0bfff15 	stw	r2,-4(fp)
 2010e84:	00000306 	br	2010e94 <alt_get_errno+0x48>
 2010e88:	00808074 	movhi	r2,513
 2010e8c:	109d6a04 	addi	r2,r2,30120
 2010e90:	e0bfff15 	stw	r2,-4(fp)
 2010e94:	e0bfff17 	ldw	r2,-4(fp)
}
 2010e98:	e037883a 	mov	sp,fp
 2010e9c:	dfc00117 	ldw	ra,4(sp)
 2010ea0:	df000017 	ldw	fp,0(sp)
 2010ea4:	dec00204 	addi	sp,sp,8
 2010ea8:	f800283a 	ret

02010eac <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 2010eac:	defffc04 	addi	sp,sp,-16
 2010eb0:	dfc00315 	stw	ra,12(sp)
 2010eb4:	df000215 	stw	fp,8(sp)
 2010eb8:	dc000115 	stw	r16,4(sp)
 2010ebc:	df000104 	addi	fp,sp,4
 2010ec0:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 2010ec4:	e0bfff17 	ldw	r2,-4(fp)
 2010ec8:	108000d0 	cmplti	r2,r2,3
 2010ecc:	10000f1e 	bne	r2,zero,2010f0c <alt_release_fd+0x60>
  {
    alt_fd_list[fd].fd_flags = 0;
 2010ed0:	e13fff17 	ldw	r4,-4(fp)
 2010ed4:	04008074 	movhi	r16,513
 2010ed8:	84120704 	addi	r16,r16,18460
 2010edc:	01400304 	movi	r5,12
 2010ee0:	2000abc0 	call	2000abc <__mulsi3>
 2010ee4:	1405883a 	add	r2,r2,r16
 2010ee8:	10800204 	addi	r2,r2,8
 2010eec:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 2010ef0:	e13fff17 	ldw	r4,-4(fp)
 2010ef4:	04008074 	movhi	r16,513
 2010ef8:	84120704 	addi	r16,r16,18460
 2010efc:	01400304 	movi	r5,12
 2010f00:	2000abc0 	call	2000abc <__mulsi3>
 2010f04:	1405883a 	add	r2,r2,r16
 2010f08:	10000015 	stw	zero,0(r2)
  }
}
 2010f0c:	e037883a 	mov	sp,fp
 2010f10:	dfc00217 	ldw	ra,8(sp)
 2010f14:	df000117 	ldw	fp,4(sp)
 2010f18:	dc000017 	ldw	r16,0(sp)
 2010f1c:	dec00304 	addi	sp,sp,12
 2010f20:	f800283a 	ret

02010f24 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 2010f24:	defff804 	addi	sp,sp,-32
 2010f28:	df000715 	stw	fp,28(sp)
 2010f2c:	df000704 	addi	fp,sp,28
 2010f30:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2010f34:	0005303a 	rdctl	r2,status
 2010f38:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2010f3c:	e0fffb17 	ldw	r3,-20(fp)
 2010f40:	00bfff84 	movi	r2,-2
 2010f44:	1884703a 	and	r2,r3,r2
 2010f48:	1001703a 	wrctl	status,r2
  
  return context;
 2010f4c:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 2010f50:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 2010f54:	d0a00d17 	ldw	r2,-32716(gp)
 2010f58:	10c000c4 	addi	r3,r2,3
 2010f5c:	00bfff04 	movi	r2,-4
 2010f60:	1884703a 	and	r2,r3,r2
 2010f64:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 2010f68:	d0e00d17 	ldw	r3,-32716(gp)
 2010f6c:	e0bffe17 	ldw	r2,-8(fp)
 2010f70:	1887883a 	add	r3,r3,r2
 2010f74:	00810034 	movhi	r2,1024
 2010f78:	10800004 	addi	r2,r2,0
 2010f7c:	10c0072e 	bgeu	r2,r3,2010f9c <sbrk+0x78>
 2010f80:	e0bffd17 	ldw	r2,-12(fp)
 2010f84:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2010f88:	e0bffa17 	ldw	r2,-24(fp)
 2010f8c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 2010f90:	00bfffc4 	movi	r2,-1
 2010f94:	e0bfff15 	stw	r2,-4(fp)
 2010f98:	00000c06 	br	2010fcc <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
 2010f9c:	d0a00d17 	ldw	r2,-32716(gp)
 2010fa0:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
 2010fa4:	d0e00d17 	ldw	r3,-32716(gp)
 2010fa8:	e0bffe17 	ldw	r2,-8(fp)
 2010fac:	1885883a 	add	r2,r3,r2
 2010fb0:	d0a00d15 	stw	r2,-32716(gp)
 2010fb4:	e0bffd17 	ldw	r2,-12(fp)
 2010fb8:	e0bff915 	stw	r2,-28(fp)
 2010fbc:	e0bff917 	ldw	r2,-28(fp)
 2010fc0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 2010fc4:	e0bffc17 	ldw	r2,-16(fp)
 2010fc8:	e0bfff15 	stw	r2,-4(fp)
 2010fcc:	e0bfff17 	ldw	r2,-4(fp)
} 
 2010fd0:	e037883a 	mov	sp,fp
 2010fd4:	df000017 	ldw	fp,0(sp)
 2010fd8:	dec00104 	addi	sp,sp,4
 2010fdc:	f800283a 	ret

02010fe0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 2010fe0:	defff704 	addi	sp,sp,-36
 2010fe4:	dfc00815 	stw	ra,32(sp)
 2010fe8:	df000715 	stw	fp,28(sp)
 2010fec:	df000704 	addi	fp,sp,28
 2010ff0:	e13ffb15 	stw	r4,-20(fp)
 2010ff4:	e17ffc15 	stw	r5,-16(fp)
 2010ff8:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 2010ffc:	e0bffb17 	ldw	r2,-20(fp)
 2011000:	1004803a 	cmplt	r2,r2,zero
 2011004:	1000091e 	bne	r2,zero,201102c <write+0x4c>
 2011008:	e13ffb17 	ldw	r4,-20(fp)
 201100c:	01400304 	movi	r5,12
 2011010:	2000abc0 	call	2000abc <__mulsi3>
 2011014:	1007883a 	mov	r3,r2
 2011018:	00808074 	movhi	r2,513
 201101c:	10920704 	addi	r2,r2,18460
 2011020:	1887883a 	add	r3,r3,r2
 2011024:	e0ffff15 	stw	r3,-4(fp)
 2011028:	00000106 	br	2011030 <write+0x50>
 201102c:	e03fff15 	stw	zero,-4(fp)
 2011030:	e0bfff17 	ldw	r2,-4(fp)
 2011034:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
 2011038:	e0bffa17 	ldw	r2,-24(fp)
 201103c:	1005003a 	cmpeq	r2,r2,zero
 2011040:	1000241e 	bne	r2,zero,20110d4 <write+0xf4>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 2011044:	e0bffa17 	ldw	r2,-24(fp)
 2011048:	10800217 	ldw	r2,8(r2)
 201104c:	108000cc 	andi	r2,r2,3
 2011050:	1005003a 	cmpeq	r2,r2,zero
 2011054:	10001a1e 	bne	r2,zero,20110c0 <write+0xe0>
 2011058:	e0bffa17 	ldw	r2,-24(fp)
 201105c:	10800017 	ldw	r2,0(r2)
 2011060:	10800617 	ldw	r2,24(r2)
 2011064:	1005003a 	cmpeq	r2,r2,zero
 2011068:	1000151e 	bne	r2,zero,20110c0 <write+0xe0>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 201106c:	e0bffa17 	ldw	r2,-24(fp)
 2011070:	10800017 	ldw	r2,0(r2)
 2011074:	10800617 	ldw	r2,24(r2)
 2011078:	e17ffc17 	ldw	r5,-16(fp)
 201107c:	e1bffd17 	ldw	r6,-12(fp)
 2011080:	e13ffa17 	ldw	r4,-24(fp)
 2011084:	103ee83a 	callr	r2
 2011088:	e0bff915 	stw	r2,-28(fp)
 201108c:	e0bff917 	ldw	r2,-28(fp)
 2011090:	1004403a 	cmpge	r2,r2,zero
 2011094:	1000071e 	bne	r2,zero,20110b4 <write+0xd4>
      {
        ALT_ERRNO = -rval;
 2011098:	20111040 	call	2011104 <alt_get_errno>
 201109c:	e0fff917 	ldw	r3,-28(fp)
 20110a0:	00c7c83a 	sub	r3,zero,r3
 20110a4:	10c00015 	stw	r3,0(r2)
        return -1;
 20110a8:	00bfffc4 	movi	r2,-1
 20110ac:	e0bffe15 	stw	r2,-8(fp)
 20110b0:	00000e06 	br	20110ec <write+0x10c>
      }
      return rval;
 20110b4:	e0bff917 	ldw	r2,-28(fp)
 20110b8:	e0bffe15 	stw	r2,-8(fp)
 20110bc:	00000b06 	br	20110ec <write+0x10c>
    }
    else
    {
      ALT_ERRNO = EACCES;
 20110c0:	20111040 	call	2011104 <alt_get_errno>
 20110c4:	1007883a 	mov	r3,r2
 20110c8:	00800344 	movi	r2,13
 20110cc:	18800015 	stw	r2,0(r3)
 20110d0:	00000406 	br	20110e4 <write+0x104>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 20110d4:	20111040 	call	2011104 <alt_get_errno>
 20110d8:	1007883a 	mov	r3,r2
 20110dc:	00801444 	movi	r2,81
 20110e0:	18800015 	stw	r2,0(r3)
  }
  return -1;
 20110e4:	00bfffc4 	movi	r2,-1
 20110e8:	e0bffe15 	stw	r2,-8(fp)
 20110ec:	e0bffe17 	ldw	r2,-8(fp)
}
 20110f0:	e037883a 	mov	sp,fp
 20110f4:	dfc00117 	ldw	ra,4(sp)
 20110f8:	df000017 	ldw	fp,0(sp)
 20110fc:	dec00204 	addi	sp,sp,8
 2011100:	f800283a 	ret

02011104 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2011104:	defffd04 	addi	sp,sp,-12
 2011108:	dfc00215 	stw	ra,8(sp)
 201110c:	df000115 	stw	fp,4(sp)
 2011110:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2011114:	00808074 	movhi	r2,513
 2011118:	10969504 	addi	r2,r2,23124
 201111c:	10800017 	ldw	r2,0(r2)
 2011120:	1005003a 	cmpeq	r2,r2,zero
 2011124:	1000061e 	bne	r2,zero,2011140 <alt_get_errno+0x3c>
 2011128:	00808074 	movhi	r2,513
 201112c:	10969504 	addi	r2,r2,23124
 2011130:	10800017 	ldw	r2,0(r2)
 2011134:	103ee83a 	callr	r2
 2011138:	e0bfff15 	stw	r2,-4(fp)
 201113c:	00000306 	br	201114c <alt_get_errno+0x48>
 2011140:	00808074 	movhi	r2,513
 2011144:	109d6a04 	addi	r2,r2,30120
 2011148:	e0bfff15 	stw	r2,-4(fp)
 201114c:	e0bfff17 	ldw	r2,-4(fp)
}
 2011150:	e037883a 	mov	sp,fp
 2011154:	dfc00117 	ldw	ra,4(sp)
 2011158:	df000017 	ldw	fp,0(sp)
 201115c:	dec00204 	addi	sp,sp,8
 2011160:	f800283a 	ret

02011164 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 2011164:	defffd04 	addi	sp,sp,-12
 2011168:	dfc00215 	stw	ra,8(sp)
 201116c:	df000115 	stw	fp,4(sp)
 2011170:	df000104 	addi	fp,sp,4
 2011174:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_CPU, nios2_cpu);
 2011178:	20132d80 	call	20132d8 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 201117c:	00800044 	movi	r2,1
 2011180:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 2011184:	e037883a 	mov	sp,fp
 2011188:	dfc00117 	ldw	ra,4(sp)
 201118c:	df000017 	ldw	fp,0(sp)
 2011190:	dec00204 	addi	sp,sp,8
 2011194:	f800283a 	ret

02011198 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 2011198:	defffe04 	addi	sp,sp,-8
 201119c:	dfc00115 	stw	ra,4(sp)
 20111a0:	df000015 	stw	fp,0(sp)
 20111a4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 20111a8:	01008074 	movhi	r4,513
 20111ac:	21127104 	addi	r4,r4,18884
 20111b0:	000b883a 	mov	r5,zero
 20111b4:	000d883a 	mov	r6,zero
 20111b8:	20113780 	call	2011378 <altera_avalon_jtag_uart_init>
 20111bc:	01008074 	movhi	r4,513
 20111c0:	21126704 	addi	r4,r4,18844
 20111c4:	20111f80 	call	20111f8 <alt_dev_reg>
    ALTERA_AVALON_PERFORMANCE_COUNTER_INIT ( PERFORMANCE_COUNTER_0, performance_counter_0);
 20111c8:	00c10034 	movhi	r3,1024
 20111cc:	18c40004 	addi	r3,r3,4096
 20111d0:	00800044 	movi	r2,1
 20111d4:	18800035 	stwio	r2,0(r3)
    ALTERA_HOSTFS_INIT ( ALTERA_HOSTFS, altera_hostfs);
 20111d8:	01008074 	movhi	r4,513
 20111dc:	21167f04 	addi	r4,r4,23036
 20111e0:	2012b9c0 	call	2012b9c <alt_fs_reg>
}
 20111e4:	e037883a 	mov	sp,fp
 20111e8:	dfc00117 	ldw	ra,4(sp)
 20111ec:	df000017 	ldw	fp,0(sp)
 20111f0:	dec00204 	addi	sp,sp,8
 20111f4:	f800283a 	ret

020111f8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 20111f8:	defffd04 	addi	sp,sp,-12
 20111fc:	dfc00215 	stw	ra,8(sp)
 2011200:	df000115 	stw	fp,4(sp)
 2011204:	df000104 	addi	fp,sp,4
 2011208:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 201120c:	e13fff17 	ldw	r4,-4(fp)
 2011210:	01408074 	movhi	r5,513
 2011214:	29569204 	addi	r5,r5,23112
 2011218:	201280c0 	call	201280c <alt_dev_llist_insert>
}
 201121c:	e037883a 	mov	sp,fp
 2011220:	dfc00117 	ldw	ra,4(sp)
 2011224:	df000017 	ldw	fp,0(sp)
 2011228:	dec00204 	addi	sp,sp,8
 201122c:	f800283a 	ret

02011230 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 2011230:	defffa04 	addi	sp,sp,-24
 2011234:	dfc00515 	stw	ra,20(sp)
 2011238:	df000415 	stw	fp,16(sp)
 201123c:	df000404 	addi	fp,sp,16
 2011240:	e13ffd15 	stw	r4,-12(fp)
 2011244:	e17ffe15 	stw	r5,-8(fp)
 2011248:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 201124c:	e0bffd17 	ldw	r2,-12(fp)
 2011250:	10800017 	ldw	r2,0(r2)
 2011254:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 2011258:	e0bffc17 	ldw	r2,-16(fp)
 201125c:	11000a04 	addi	r4,r2,40
 2011260:	e0bffd17 	ldw	r2,-12(fp)
 2011264:	11c00217 	ldw	r7,8(r2)
 2011268:	e17ffe17 	ldw	r5,-8(fp)
 201126c:	e1bfff17 	ldw	r6,-4(fp)
 2011270:	20118780 	call	2011878 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 2011274:	e037883a 	mov	sp,fp
 2011278:	dfc00117 	ldw	ra,4(sp)
 201127c:	df000017 	ldw	fp,0(sp)
 2011280:	dec00204 	addi	sp,sp,8
 2011284:	f800283a 	ret

02011288 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 2011288:	defffa04 	addi	sp,sp,-24
 201128c:	dfc00515 	stw	ra,20(sp)
 2011290:	df000415 	stw	fp,16(sp)
 2011294:	df000404 	addi	fp,sp,16
 2011298:	e13ffd15 	stw	r4,-12(fp)
 201129c:	e17ffe15 	stw	r5,-8(fp)
 20112a0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 20112a4:	e0bffd17 	ldw	r2,-12(fp)
 20112a8:	10800017 	ldw	r2,0(r2)
 20112ac:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 20112b0:	e0bffc17 	ldw	r2,-16(fp)
 20112b4:	11000a04 	addi	r4,r2,40
 20112b8:	e0bffd17 	ldw	r2,-12(fp)
 20112bc:	11c00217 	ldw	r7,8(r2)
 20112c0:	e17ffe17 	ldw	r5,-8(fp)
 20112c4:	e1bfff17 	ldw	r6,-4(fp)
 20112c8:	2011a9c0 	call	2011a9c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 20112cc:	e037883a 	mov	sp,fp
 20112d0:	dfc00117 	ldw	ra,4(sp)
 20112d4:	df000017 	ldw	fp,0(sp)
 20112d8:	dec00204 	addi	sp,sp,8
 20112dc:	f800283a 	ret

020112e0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 20112e0:	defffc04 	addi	sp,sp,-16
 20112e4:	dfc00315 	stw	ra,12(sp)
 20112e8:	df000215 	stw	fp,8(sp)
 20112ec:	df000204 	addi	fp,sp,8
 20112f0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 20112f4:	e0bfff17 	ldw	r2,-4(fp)
 20112f8:	10800017 	ldw	r2,0(r2)
 20112fc:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 2011300:	e0bffe17 	ldw	r2,-8(fp)
 2011304:	11000a04 	addi	r4,r2,40
 2011308:	e0bfff17 	ldw	r2,-4(fp)
 201130c:	11400217 	ldw	r5,8(r2)
 2011310:	20117100 	call	2011710 <altera_avalon_jtag_uart_close>
}
 2011314:	e037883a 	mov	sp,fp
 2011318:	dfc00117 	ldw	ra,4(sp)
 201131c:	df000017 	ldw	fp,0(sp)
 2011320:	dec00204 	addi	sp,sp,8
 2011324:	f800283a 	ret

02011328 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 2011328:	defffa04 	addi	sp,sp,-24
 201132c:	dfc00515 	stw	ra,20(sp)
 2011330:	df000415 	stw	fp,16(sp)
 2011334:	df000404 	addi	fp,sp,16
 2011338:	e13ffd15 	stw	r4,-12(fp)
 201133c:	e17ffe15 	stw	r5,-8(fp)
 2011340:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 2011344:	e0bffd17 	ldw	r2,-12(fp)
 2011348:	10800017 	ldw	r2,0(r2)
 201134c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 2011350:	e0bffc17 	ldw	r2,-16(fp)
 2011354:	11000a04 	addi	r4,r2,40
 2011358:	e17ffe17 	ldw	r5,-8(fp)
 201135c:	e1bfff17 	ldw	r6,-4(fp)
 2011360:	20117840 	call	2011784 <altera_avalon_jtag_uart_ioctl>
}
 2011364:	e037883a 	mov	sp,fp
 2011368:	dfc00117 	ldw	ra,4(sp)
 201136c:	df000017 	ldw	fp,0(sp)
 2011370:	dec00204 	addi	sp,sp,8
 2011374:	f800283a 	ret

02011378 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 2011378:	defffa04 	addi	sp,sp,-24
 201137c:	dfc00515 	stw	ra,20(sp)
 2011380:	df000415 	stw	fp,16(sp)
 2011384:	df000404 	addi	fp,sp,16
 2011388:	e13ffd15 	stw	r4,-12(fp)
 201138c:	e17ffe15 	stw	r5,-8(fp)
 2011390:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 2011394:	e0fffd17 	ldw	r3,-12(fp)
 2011398:	00800044 	movi	r2,1
 201139c:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 20113a0:	e0bffd17 	ldw	r2,-12(fp)
 20113a4:	10800017 	ldw	r2,0(r2)
 20113a8:	11000104 	addi	r4,r2,4
 20113ac:	e0bffd17 	ldw	r2,-12(fp)
 20113b0:	10800817 	ldw	r2,32(r2)
 20113b4:	1007883a 	mov	r3,r2
 20113b8:	2005883a 	mov	r2,r4
 20113bc:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 20113c0:	e13ffe17 	ldw	r4,-8(fp)
 20113c4:	e17fff17 	ldw	r5,-4(fp)
 20113c8:	d8000015 	stw	zero,0(sp)
 20113cc:	01808074 	movhi	r6,513
 20113d0:	31850e04 	addi	r6,r6,5176
 20113d4:	e1fffd17 	ldw	r7,-12(fp)
 20113d8:	2012d180 	call	2012d18 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 20113dc:	e0bffd17 	ldw	r2,-12(fp)
 20113e0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 20113e4:	e0bffd17 	ldw	r2,-12(fp)
 20113e8:	11000204 	addi	r4,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 20113ec:	00808074 	movhi	r2,513
 20113f0:	109d7504 	addi	r2,r2,30164
 20113f4:	10800017 	ldw	r2,0(r2)
 20113f8:	100b883a 	mov	r5,r2
 20113fc:	01808074 	movhi	r6,513
 2011400:	31859804 	addi	r6,r6,5728
 2011404:	e1fffd17 	ldw	r7,-12(fp)
 2011408:	201269c0 	call	201269c <alt_alarm_start>
 201140c:	1004403a 	cmpge	r2,r2,zero
 2011410:	1000041e 	bne	r2,zero,2011424 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 2011414:	e0fffd17 	ldw	r3,-12(fp)
 2011418:	00a00034 	movhi	r2,32768
 201141c:	10bfffc4 	addi	r2,r2,-1
 2011420:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 2011424:	e037883a 	mov	sp,fp
 2011428:	dfc00117 	ldw	ra,4(sp)
 201142c:	df000017 	ldw	fp,0(sp)
 2011430:	dec00204 	addi	sp,sp,8
 2011434:	f800283a 	ret

02011438 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 2011438:	defff804 	addi	sp,sp,-32
 201143c:	df000715 	stw	fp,28(sp)
 2011440:	df000704 	addi	fp,sp,28
 2011444:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 2011448:	e0bfff17 	ldw	r2,-4(fp)
 201144c:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
 2011450:	e0bffe17 	ldw	r2,-8(fp)
 2011454:	10800017 	ldw	r2,0(r2)
 2011458:	e0bffd15 	stw	r2,-12(fp)
 201145c:	00000006 	br	2011460 <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 2011460:	e0bffd17 	ldw	r2,-12(fp)
 2011464:	10800104 	addi	r2,r2,4
 2011468:	10800037 	ldwio	r2,0(r2)
 201146c:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 2011470:	e0bffc17 	ldw	r2,-16(fp)
 2011474:	1080c00c 	andi	r2,r2,768
 2011478:	1005003a 	cmpeq	r2,r2,zero
 201147c:	1000741e 	bne	r2,zero,2011650 <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 2011480:	e0bffc17 	ldw	r2,-16(fp)
 2011484:	1080400c 	andi	r2,r2,256
 2011488:	1005003a 	cmpeq	r2,r2,zero
 201148c:	1000351e 	bne	r2,zero,2011564 <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 2011490:	00800074 	movhi	r2,1
 2011494:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 2011498:	e0bffe17 	ldw	r2,-8(fp)
 201149c:	10800a17 	ldw	r2,40(r2)
 20114a0:	10800044 	addi	r2,r2,1
 20114a4:	1081ffcc 	andi	r2,r2,2047
 20114a8:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
 20114ac:	e0bffe17 	ldw	r2,-8(fp)
 20114b0:	10c00b17 	ldw	r3,44(r2)
 20114b4:	e0bffa17 	ldw	r2,-24(fp)
 20114b8:	18801626 	beq	r3,r2,2011514 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 20114bc:	e0bffd17 	ldw	r2,-12(fp)
 20114c0:	10800037 	ldwio	r2,0(r2)
 20114c4:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 20114c8:	e0bffb17 	ldw	r2,-20(fp)
 20114cc:	10a0000c 	andi	r2,r2,32768
 20114d0:	1005003a 	cmpeq	r2,r2,zero
 20114d4:	10000f1e 	bne	r2,zero,2011514 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 20114d8:	e0bffe17 	ldw	r2,-8(fp)
 20114dc:	10c00a17 	ldw	r3,40(r2)
 20114e0:	e0bffb17 	ldw	r2,-20(fp)
 20114e4:	1009883a 	mov	r4,r2
 20114e8:	e0bffe17 	ldw	r2,-8(fp)
 20114ec:	1885883a 	add	r2,r3,r2
 20114f0:	10800e04 	addi	r2,r2,56
 20114f4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 20114f8:	e0bffe17 	ldw	r2,-8(fp)
 20114fc:	10800a17 	ldw	r2,40(r2)
 2011500:	10800044 	addi	r2,r2,1
 2011504:	10c1ffcc 	andi	r3,r2,2047
 2011508:	e0bffe17 	ldw	r2,-8(fp)
 201150c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 2011510:	003fe106 	br	2011498 <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 2011514:	e0bffb17 	ldw	r2,-20(fp)
 2011518:	10bfffec 	andhi	r2,r2,65535
 201151c:	1005003a 	cmpeq	r2,r2,zero
 2011520:	1000101e 	bne	r2,zero,2011564 <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 2011524:	e0bffe17 	ldw	r2,-8(fp)
 2011528:	10c00817 	ldw	r3,32(r2)
 201152c:	00bfff84 	movi	r2,-2
 2011530:	1886703a 	and	r3,r3,r2
 2011534:	e0bffe17 	ldw	r2,-8(fp)
 2011538:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 201153c:	e0bffd17 	ldw	r2,-12(fp)
 2011540:	11000104 	addi	r4,r2,4
 2011544:	e0bffe17 	ldw	r2,-8(fp)
 2011548:	10800817 	ldw	r2,32(r2)
 201154c:	1007883a 	mov	r3,r2
 2011550:	2005883a 	mov	r2,r4
 2011554:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 2011558:	e0bffd17 	ldw	r2,-12(fp)
 201155c:	10800104 	addi	r2,r2,4
 2011560:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 2011564:	e0bffc17 	ldw	r2,-16(fp)
 2011568:	1080800c 	andi	r2,r2,512
 201156c:	1005003a 	cmpeq	r2,r2,zero
 2011570:	103fbb1e 	bne	r2,zero,2011460 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 2011574:	e0bffc17 	ldw	r2,-16(fp)
 2011578:	10bfffec 	andhi	r2,r2,65535
 201157c:	1004d43a 	srli	r2,r2,16
 2011580:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 2011584:	00001506 	br	20115dc <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 2011588:	e13ffd17 	ldw	r4,-12(fp)
 201158c:	e0bffe17 	ldw	r2,-8(fp)
 2011590:	10c00d17 	ldw	r3,52(r2)
 2011594:	e0bffe17 	ldw	r2,-8(fp)
 2011598:	1885883a 	add	r2,r3,r2
 201159c:	10820e04 	addi	r2,r2,2104
 20115a0:	10800003 	ldbu	r2,0(r2)
 20115a4:	10c03fcc 	andi	r3,r2,255
 20115a8:	18c0201c 	xori	r3,r3,128
 20115ac:	18ffe004 	addi	r3,r3,-128
 20115b0:	2005883a 	mov	r2,r4
 20115b4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 20115b8:	e0bffe17 	ldw	r2,-8(fp)
 20115bc:	10800d17 	ldw	r2,52(r2)
 20115c0:	10800044 	addi	r2,r2,1
 20115c4:	10c1ffcc 	andi	r3,r2,2047
 20115c8:	e0bffe17 	ldw	r2,-8(fp)
 20115cc:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 20115d0:	e0bff917 	ldw	r2,-28(fp)
 20115d4:	10bfffc4 	addi	r2,r2,-1
 20115d8:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 20115dc:	e0bff917 	ldw	r2,-28(fp)
 20115e0:	1005003a 	cmpeq	r2,r2,zero
 20115e4:	1000051e 	bne	r2,zero,20115fc <altera_avalon_jtag_uart_irq+0x1c4>
 20115e8:	e0bffe17 	ldw	r2,-8(fp)
 20115ec:	10c00d17 	ldw	r3,52(r2)
 20115f0:	e0bffe17 	ldw	r2,-8(fp)
 20115f4:	10800c17 	ldw	r2,48(r2)
 20115f8:	18bfe31e 	bne	r3,r2,2011588 <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 20115fc:	e0bff917 	ldw	r2,-28(fp)
 2011600:	1005003a 	cmpeq	r2,r2,zero
 2011604:	103f961e 	bne	r2,zero,2011460 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 2011608:	e0bffe17 	ldw	r2,-8(fp)
 201160c:	10c00817 	ldw	r3,32(r2)
 2011610:	00bfff44 	movi	r2,-3
 2011614:	1886703a 	and	r3,r3,r2
 2011618:	e0bffe17 	ldw	r2,-8(fp)
 201161c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 2011620:	e0bffe17 	ldw	r2,-8(fp)
 2011624:	10800017 	ldw	r2,0(r2)
 2011628:	11000104 	addi	r4,r2,4
 201162c:	e0bffe17 	ldw	r2,-8(fp)
 2011630:	10800817 	ldw	r2,32(r2)
 2011634:	1007883a 	mov	r3,r2
 2011638:	2005883a 	mov	r2,r4
 201163c:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 2011640:	e0bffd17 	ldw	r2,-12(fp)
 2011644:	10800104 	addi	r2,r2,4
 2011648:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 201164c:	003f8406 	br	2011460 <altera_avalon_jtag_uart_irq+0x28>
}
 2011650:	e037883a 	mov	sp,fp
 2011654:	df000017 	ldw	fp,0(sp)
 2011658:	dec00104 	addi	sp,sp,4
 201165c:	f800283a 	ret

02011660 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 2011660:	defffc04 	addi	sp,sp,-16
 2011664:	df000315 	stw	fp,12(sp)
 2011668:	df000304 	addi	fp,sp,12
 201166c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 2011670:	e0bfff17 	ldw	r2,-4(fp)
 2011674:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 2011678:	e0bffe17 	ldw	r2,-8(fp)
 201167c:	10800017 	ldw	r2,0(r2)
 2011680:	10800104 	addi	r2,r2,4
 2011684:	10800037 	ldwio	r2,0(r2)
 2011688:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 201168c:	e0bffd17 	ldw	r2,-12(fp)
 2011690:	1081000c 	andi	r2,r2,1024
 2011694:	1005003a 	cmpeq	r2,r2,zero
 2011698:	10000c1e 	bne	r2,zero,20116cc <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 201169c:	e0bffe17 	ldw	r2,-8(fp)
 20116a0:	10800017 	ldw	r2,0(r2)
 20116a4:	11000104 	addi	r4,r2,4
 20116a8:	e0bffe17 	ldw	r2,-8(fp)
 20116ac:	10800817 	ldw	r2,32(r2)
 20116b0:	10810014 	ori	r2,r2,1024
 20116b4:	1007883a 	mov	r3,r2
 20116b8:	2005883a 	mov	r2,r4
 20116bc:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
 20116c0:	e0bffe17 	ldw	r2,-8(fp)
 20116c4:	10000915 	stw	zero,36(r2)
 20116c8:	00000a06 	br	20116f4 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 20116cc:	e0bffe17 	ldw	r2,-8(fp)
 20116d0:	10c00917 	ldw	r3,36(r2)
 20116d4:	00a00034 	movhi	r2,32768
 20116d8:	10bfff04 	addi	r2,r2,-4
 20116dc:	10c00536 	bltu	r2,r3,20116f4 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
 20116e0:	e0bffe17 	ldw	r2,-8(fp)
 20116e4:	10800917 	ldw	r2,36(r2)
 20116e8:	10c00044 	addi	r3,r2,1
 20116ec:	e0bffe17 	ldw	r2,-8(fp)
 20116f0:	10c00915 	stw	r3,36(r2)
 20116f4:	00808074 	movhi	r2,513
 20116f8:	109d7504 	addi	r2,r2,30164
 20116fc:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 2011700:	e037883a 	mov	sp,fp
 2011704:	df000017 	ldw	fp,0(sp)
 2011708:	dec00104 	addi	sp,sp,4
 201170c:	f800283a 	ret

02011710 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 2011710:	defffc04 	addi	sp,sp,-16
 2011714:	df000315 	stw	fp,12(sp)
 2011718:	df000304 	addi	fp,sp,12
 201171c:	e13ffd15 	stw	r4,-12(fp)
 2011720:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 2011724:	00000706 	br	2011744 <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
 2011728:	e0bffe17 	ldw	r2,-8(fp)
 201172c:	1090000c 	andi	r2,r2,16384
 2011730:	1005003a 	cmpeq	r2,r2,zero
 2011734:	1000031e 	bne	r2,zero,2011744 <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
 2011738:	00bffd44 	movi	r2,-11
 201173c:	e0bfff15 	stw	r2,-4(fp)
 2011740:	00000b06 	br	2011770 <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 2011744:	e0bffd17 	ldw	r2,-12(fp)
 2011748:	10c00d17 	ldw	r3,52(r2)
 201174c:	e0bffd17 	ldw	r2,-12(fp)
 2011750:	10800c17 	ldw	r2,48(r2)
 2011754:	18800526 	beq	r3,r2,201176c <altera_avalon_jtag_uart_close+0x5c>
 2011758:	e0bffd17 	ldw	r2,-12(fp)
 201175c:	10c00917 	ldw	r3,36(r2)
 2011760:	e0bffd17 	ldw	r2,-12(fp)
 2011764:	10800117 	ldw	r2,4(r2)
 2011768:	18bfef36 	bltu	r3,r2,2011728 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 201176c:	e03fff15 	stw	zero,-4(fp)
 2011770:	e0bfff17 	ldw	r2,-4(fp)
}
 2011774:	e037883a 	mov	sp,fp
 2011778:	df000017 	ldw	fp,0(sp)
 201177c:	dec00104 	addi	sp,sp,4
 2011780:	f800283a 	ret

02011784 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 2011784:	defff804 	addi	sp,sp,-32
 2011788:	df000715 	stw	fp,28(sp)
 201178c:	df000704 	addi	fp,sp,28
 2011790:	e13ffb15 	stw	r4,-20(fp)
 2011794:	e17ffc15 	stw	r5,-16(fp)
 2011798:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
 201179c:	00bff9c4 	movi	r2,-25
 20117a0:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
 20117a4:	e0bffc17 	ldw	r2,-16(fp)
 20117a8:	e0bfff15 	stw	r2,-4(fp)
 20117ac:	e0ffff17 	ldw	r3,-4(fp)
 20117b0:	189a8060 	cmpeqi	r2,r3,27137
 20117b4:	1000041e 	bne	r2,zero,20117c8 <altera_avalon_jtag_uart_ioctl+0x44>
 20117b8:	e0ffff17 	ldw	r3,-4(fp)
 20117bc:	189a80a0 	cmpeqi	r2,r3,27138
 20117c0:	10001b1e 	bne	r2,zero,2011830 <altera_avalon_jtag_uart_ioctl+0xac>
 20117c4:	00002706 	br	2011864 <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 20117c8:	e0bffb17 	ldw	r2,-20(fp)
 20117cc:	10c00117 	ldw	r3,4(r2)
 20117d0:	00a00034 	movhi	r2,32768
 20117d4:	10bfffc4 	addi	r2,r2,-1
 20117d8:	18802226 	beq	r3,r2,2011864 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
 20117dc:	e0bffd17 	ldw	r2,-12(fp)
 20117e0:	10800017 	ldw	r2,0(r2)
 20117e4:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 20117e8:	e0bff917 	ldw	r2,-28(fp)
 20117ec:	10800090 	cmplti	r2,r2,2
 20117f0:	1000071e 	bne	r2,zero,2011810 <altera_avalon_jtag_uart_ioctl+0x8c>
 20117f4:	e0fff917 	ldw	r3,-28(fp)
 20117f8:	00a00034 	movhi	r2,32768
 20117fc:	10bfffc4 	addi	r2,r2,-1
 2011800:	18800326 	beq	r3,r2,2011810 <altera_avalon_jtag_uart_ioctl+0x8c>
 2011804:	e0bff917 	ldw	r2,-28(fp)
 2011808:	e0bffe15 	stw	r2,-8(fp)
 201180c:	00000306 	br	201181c <altera_avalon_jtag_uart_ioctl+0x98>
 2011810:	00e00034 	movhi	r3,32768
 2011814:	18ffff84 	addi	r3,r3,-2
 2011818:	e0fffe15 	stw	r3,-8(fp)
 201181c:	e0bffb17 	ldw	r2,-20(fp)
 2011820:	e0fffe17 	ldw	r3,-8(fp)
 2011824:	10c00115 	stw	r3,4(r2)
      rc = 0;
 2011828:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
 201182c:	00000d06 	br	2011864 <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 2011830:	e0bffb17 	ldw	r2,-20(fp)
 2011834:	10c00117 	ldw	r3,4(r2)
 2011838:	00a00034 	movhi	r2,32768
 201183c:	10bfffc4 	addi	r2,r2,-1
 2011840:	18800826 	beq	r3,r2,2011864 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 2011844:	e13ffd17 	ldw	r4,-12(fp)
 2011848:	e0bffb17 	ldw	r2,-20(fp)
 201184c:	10c00917 	ldw	r3,36(r2)
 2011850:	e0bffb17 	ldw	r2,-20(fp)
 2011854:	10800117 	ldw	r2,4(r2)
 2011858:	1885803a 	cmpltu	r2,r3,r2
 201185c:	20800015 	stw	r2,0(r4)
      rc = 0;
 2011860:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
 2011864:	e0bffa17 	ldw	r2,-24(fp)
}
 2011868:	e037883a 	mov	sp,fp
 201186c:	df000017 	ldw	fp,0(sp)
 2011870:	dec00104 	addi	sp,sp,4
 2011874:	f800283a 	ret

02011878 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 2011878:	defff204 	addi	sp,sp,-56
 201187c:	dfc00d15 	stw	ra,52(sp)
 2011880:	df000c15 	stw	fp,48(sp)
 2011884:	df000c04 	addi	fp,sp,48
 2011888:	e13ffb15 	stw	r4,-20(fp)
 201188c:	e17ffc15 	stw	r5,-16(fp)
 2011890:	e1bffd15 	stw	r6,-12(fp)
 2011894:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
 2011898:	e0bffc17 	ldw	r2,-16(fp)
 201189c:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 20118a0:	00004806 	br	20119c4 <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 20118a4:	e0bffb17 	ldw	r2,-20(fp)
 20118a8:	10800a17 	ldw	r2,40(r2)
 20118ac:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 20118b0:	e0bffb17 	ldw	r2,-20(fp)
 20118b4:	10800b17 	ldw	r2,44(r2)
 20118b8:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
 20118bc:	e0fff717 	ldw	r3,-36(fp)
 20118c0:	e0bff617 	ldw	r2,-40(fp)
 20118c4:	18800536 	bltu	r3,r2,20118dc <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 20118c8:	e0bff717 	ldw	r2,-36(fp)
 20118cc:	e0fff617 	ldw	r3,-40(fp)
 20118d0:	10c5c83a 	sub	r2,r2,r3
 20118d4:	e0bff815 	stw	r2,-32(fp)
 20118d8:	00000406 	br	20118ec <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 20118dc:	00820004 	movi	r2,2048
 20118e0:	e0fff617 	ldw	r3,-40(fp)
 20118e4:	10c5c83a 	sub	r2,r2,r3
 20118e8:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
 20118ec:	e0bff817 	ldw	r2,-32(fp)
 20118f0:	1005003a 	cmpeq	r2,r2,zero
 20118f4:	10001f1e 	bne	r2,zero,2011974 <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
 20118f8:	e0fffd17 	ldw	r3,-12(fp)
 20118fc:	e0bff817 	ldw	r2,-32(fp)
 2011900:	1880022e 	bgeu	r3,r2,201190c <altera_avalon_jtag_uart_read+0x94>
        n = space;
 2011904:	e0bffd17 	ldw	r2,-12(fp)
 2011908:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 201190c:	e0bffb17 	ldw	r2,-20(fp)
 2011910:	10c00e04 	addi	r3,r2,56
 2011914:	e0bff617 	ldw	r2,-40(fp)
 2011918:	1887883a 	add	r3,r3,r2
 201191c:	e0bffa17 	ldw	r2,-24(fp)
 2011920:	1009883a 	mov	r4,r2
 2011924:	180b883a 	mov	r5,r3
 2011928:	e1bff817 	ldw	r6,-32(fp)
 201192c:	20029140 	call	2002914 <memcpy>
      ptr   += n;
 2011930:	e0fff817 	ldw	r3,-32(fp)
 2011934:	e0bffa17 	ldw	r2,-24(fp)
 2011938:	10c5883a 	add	r2,r2,r3
 201193c:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
 2011940:	e0fffd17 	ldw	r3,-12(fp)
 2011944:	e0bff817 	ldw	r2,-32(fp)
 2011948:	1885c83a 	sub	r2,r3,r2
 201194c:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 2011950:	e0fff617 	ldw	r3,-40(fp)
 2011954:	e0bff817 	ldw	r2,-32(fp)
 2011958:	1885883a 	add	r2,r3,r2
 201195c:	10c1ffcc 	andi	r3,r2,2047
 2011960:	e0bffb17 	ldw	r2,-20(fp)
 2011964:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 2011968:	e0bffd17 	ldw	r2,-12(fp)
 201196c:	10800048 	cmpgei	r2,r2,1
 2011970:	103fcc1e 	bne	r2,zero,20118a4 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
 2011974:	e0fffa17 	ldw	r3,-24(fp)
 2011978:	e0bffc17 	ldw	r2,-16(fp)
 201197c:	1880141e 	bne	r3,r2,20119d0 <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 2011980:	e0bffe17 	ldw	r2,-8(fp)
 2011984:	1090000c 	andi	r2,r2,16384
 2011988:	1004c03a 	cmpne	r2,r2,zero
 201198c:	1000101e 	bne	r2,zero,20119d0 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 2011990:	e0bffb17 	ldw	r2,-20(fp)
 2011994:	10c00a17 	ldw	r3,40(r2)
 2011998:	e0bff717 	ldw	r2,-36(fp)
 201199c:	1880051e 	bne	r3,r2,20119b4 <altera_avalon_jtag_uart_read+0x13c>
 20119a0:	e0bffb17 	ldw	r2,-20(fp)
 20119a4:	10c00917 	ldw	r3,36(r2)
 20119a8:	e0bffb17 	ldw	r2,-20(fp)
 20119ac:	10800117 	ldw	r2,4(r2)
 20119b0:	18bff736 	bltu	r3,r2,2011990 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 20119b4:	e0bffb17 	ldw	r2,-20(fp)
 20119b8:	10c00a17 	ldw	r3,40(r2)
 20119bc:	e0bff717 	ldw	r2,-36(fp)
 20119c0:	18800326 	beq	r3,r2,20119d0 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 20119c4:	e0bffd17 	ldw	r2,-12(fp)
 20119c8:	10800048 	cmpgei	r2,r2,1
 20119cc:	103fb51e 	bne	r2,zero,20118a4 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 20119d0:	e0fffa17 	ldw	r3,-24(fp)
 20119d4:	e0bffc17 	ldw	r2,-16(fp)
 20119d8:	18801926 	beq	r3,r2,2011a40 <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 20119dc:	0005303a 	rdctl	r2,status
 20119e0:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 20119e4:	e0fff517 	ldw	r3,-44(fp)
 20119e8:	00bfff84 	movi	r2,-2
 20119ec:	1884703a 	and	r2,r3,r2
 20119f0:	1001703a 	wrctl	status,r2
  
  return context;
 20119f4:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 20119f8:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 20119fc:	e0bffb17 	ldw	r2,-20(fp)
 2011a00:	10800817 	ldw	r2,32(r2)
 2011a04:	10c00054 	ori	r3,r2,1
 2011a08:	e0bffb17 	ldw	r2,-20(fp)
 2011a0c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 2011a10:	e0bffb17 	ldw	r2,-20(fp)
 2011a14:	10800017 	ldw	r2,0(r2)
 2011a18:	11000104 	addi	r4,r2,4
 2011a1c:	e0bffb17 	ldw	r2,-20(fp)
 2011a20:	10800817 	ldw	r2,32(r2)
 2011a24:	1007883a 	mov	r3,r2
 2011a28:	2005883a 	mov	r2,r4
 2011a2c:	10c00035 	stwio	r3,0(r2)
 2011a30:	e0bff917 	ldw	r2,-28(fp)
 2011a34:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2011a38:	e0bff417 	ldw	r2,-48(fp)
 2011a3c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 2011a40:	e0fffa17 	ldw	r3,-24(fp)
 2011a44:	e0bffc17 	ldw	r2,-16(fp)
 2011a48:	18800526 	beq	r3,r2,2011a60 <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
 2011a4c:	e0fffa17 	ldw	r3,-24(fp)
 2011a50:	e0bffc17 	ldw	r2,-16(fp)
 2011a54:	1887c83a 	sub	r3,r3,r2
 2011a58:	e0ffff15 	stw	r3,-4(fp)
 2011a5c:	00000906 	br	2011a84 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
 2011a60:	e0bffe17 	ldw	r2,-8(fp)
 2011a64:	1090000c 	andi	r2,r2,16384
 2011a68:	1005003a 	cmpeq	r2,r2,zero
 2011a6c:	1000031e 	bne	r2,zero,2011a7c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 2011a70:	00bffd44 	movi	r2,-11
 2011a74:	e0bfff15 	stw	r2,-4(fp)
 2011a78:	00000206 	br	2011a84 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
 2011a7c:	00bffec4 	movi	r2,-5
 2011a80:	e0bfff15 	stw	r2,-4(fp)
 2011a84:	e0bfff17 	ldw	r2,-4(fp)
}
 2011a88:	e037883a 	mov	sp,fp
 2011a8c:	dfc00117 	ldw	ra,4(sp)
 2011a90:	df000017 	ldw	fp,0(sp)
 2011a94:	dec00204 	addi	sp,sp,8
 2011a98:	f800283a 	ret

02011a9c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 2011a9c:	defff204 	addi	sp,sp,-56
 2011aa0:	dfc00d15 	stw	ra,52(sp)
 2011aa4:	df000c15 	stw	fp,48(sp)
 2011aa8:	df000c04 	addi	fp,sp,48
 2011aac:	e13ffb15 	stw	r4,-20(fp)
 2011ab0:	e17ffc15 	stw	r5,-16(fp)
 2011ab4:	e1bffd15 	stw	r6,-12(fp)
 2011ab8:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 2011abc:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 2011ac0:	e0bffc17 	ldw	r2,-16(fp)
 2011ac4:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 2011ac8:	00003a06 	br	2011bb4 <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 2011acc:	e0bffb17 	ldw	r2,-20(fp)
 2011ad0:	10800c17 	ldw	r2,48(r2)
 2011ad4:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
 2011ad8:	e0bffb17 	ldw	r2,-20(fp)
 2011adc:	10800d17 	ldw	r2,52(r2)
 2011ae0:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
 2011ae4:	e0fffa17 	ldw	r3,-24(fp)
 2011ae8:	e0bff917 	ldw	r2,-28(fp)
 2011aec:	1880062e 	bgeu	r3,r2,2011b08 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 2011af0:	e0fff917 	ldw	r3,-28(fp)
 2011af4:	e0bffa17 	ldw	r2,-24(fp)
 2011af8:	1885c83a 	sub	r2,r3,r2
 2011afc:	10bfffc4 	addi	r2,r2,-1
 2011b00:	e0bff815 	stw	r2,-32(fp)
 2011b04:	00000c06 	br	2011b38 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
 2011b08:	e0bff917 	ldw	r2,-28(fp)
 2011b0c:	1005003a 	cmpeq	r2,r2,zero
 2011b10:	1000051e 	bne	r2,zero,2011b28 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 2011b14:	00820004 	movi	r2,2048
 2011b18:	e0fffa17 	ldw	r3,-24(fp)
 2011b1c:	10c5c83a 	sub	r2,r2,r3
 2011b20:	e0bff815 	stw	r2,-32(fp)
 2011b24:	00000406 	br	2011b38 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 2011b28:	0081ffc4 	movi	r2,2047
 2011b2c:	e0fffa17 	ldw	r3,-24(fp)
 2011b30:	10c5c83a 	sub	r2,r2,r3
 2011b34:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
 2011b38:	e0bff817 	ldw	r2,-32(fp)
 2011b3c:	1005003a 	cmpeq	r2,r2,zero
 2011b40:	10001f1e 	bne	r2,zero,2011bc0 <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
 2011b44:	e0fffd17 	ldw	r3,-12(fp)
 2011b48:	e0bff817 	ldw	r2,-32(fp)
 2011b4c:	1880022e 	bgeu	r3,r2,2011b58 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
 2011b50:	e0bffd17 	ldw	r2,-12(fp)
 2011b54:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 2011b58:	e0bffb17 	ldw	r2,-20(fp)
 2011b5c:	10c20e04 	addi	r3,r2,2104
 2011b60:	e0bffa17 	ldw	r2,-24(fp)
 2011b64:	1885883a 	add	r2,r3,r2
 2011b68:	e0fffc17 	ldw	r3,-16(fp)
 2011b6c:	1009883a 	mov	r4,r2
 2011b70:	180b883a 	mov	r5,r3
 2011b74:	e1bff817 	ldw	r6,-32(fp)
 2011b78:	20029140 	call	2002914 <memcpy>
      ptr   += n;
 2011b7c:	e0fff817 	ldw	r3,-32(fp)
 2011b80:	e0bffc17 	ldw	r2,-16(fp)
 2011b84:	10c5883a 	add	r2,r2,r3
 2011b88:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
 2011b8c:	e0fffd17 	ldw	r3,-12(fp)
 2011b90:	e0bff817 	ldw	r2,-32(fp)
 2011b94:	1885c83a 	sub	r2,r3,r2
 2011b98:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 2011b9c:	e0fffa17 	ldw	r3,-24(fp)
 2011ba0:	e0bff817 	ldw	r2,-32(fp)
 2011ba4:	1885883a 	add	r2,r3,r2
 2011ba8:	10c1ffcc 	andi	r3,r2,2047
 2011bac:	e0bffb17 	ldw	r2,-20(fp)
 2011bb0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 2011bb4:	e0bffd17 	ldw	r2,-12(fp)
 2011bb8:	10800048 	cmpgei	r2,r2,1
 2011bbc:	103fc31e 	bne	r2,zero,2011acc <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2011bc0:	0005303a 	rdctl	r2,status
 2011bc4:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2011bc8:	e0fff517 	ldw	r3,-44(fp)
 2011bcc:	00bfff84 	movi	r2,-2
 2011bd0:	1884703a 	and	r2,r3,r2
 2011bd4:	1001703a 	wrctl	status,r2
  
  return context;
 2011bd8:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 2011bdc:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 2011be0:	e0bffb17 	ldw	r2,-20(fp)
 2011be4:	10800817 	ldw	r2,32(r2)
 2011be8:	10c00094 	ori	r3,r2,2
 2011bec:	e0bffb17 	ldw	r2,-20(fp)
 2011bf0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 2011bf4:	e0bffb17 	ldw	r2,-20(fp)
 2011bf8:	10800017 	ldw	r2,0(r2)
 2011bfc:	11000104 	addi	r4,r2,4
 2011c00:	e0bffb17 	ldw	r2,-20(fp)
 2011c04:	10800817 	ldw	r2,32(r2)
 2011c08:	1007883a 	mov	r3,r2
 2011c0c:	2005883a 	mov	r2,r4
 2011c10:	10c00035 	stwio	r3,0(r2)
 2011c14:	e0bff717 	ldw	r2,-36(fp)
 2011c18:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2011c1c:	e0bff417 	ldw	r2,-48(fp)
 2011c20:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 2011c24:	e0bffd17 	ldw	r2,-12(fp)
 2011c28:	10800050 	cmplti	r2,r2,1
 2011c2c:	1000111e 	bne	r2,zero,2011c74 <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
 2011c30:	e0bffe17 	ldw	r2,-8(fp)
 2011c34:	1090000c 	andi	r2,r2,16384
 2011c38:	1004c03a 	cmpne	r2,r2,zero
 2011c3c:	1000101e 	bne	r2,zero,2011c80 <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 2011c40:	e0bffb17 	ldw	r2,-20(fp)
 2011c44:	10c00d17 	ldw	r3,52(r2)
 2011c48:	e0bff917 	ldw	r2,-28(fp)
 2011c4c:	1880051e 	bne	r3,r2,2011c64 <altera_avalon_jtag_uart_write+0x1c8>
 2011c50:	e0bffb17 	ldw	r2,-20(fp)
 2011c54:	10c00917 	ldw	r3,36(r2)
 2011c58:	e0bffb17 	ldw	r2,-20(fp)
 2011c5c:	10800117 	ldw	r2,4(r2)
 2011c60:	18bff736 	bltu	r3,r2,2011c40 <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
 2011c64:	e0bffb17 	ldw	r2,-20(fp)
 2011c68:	10c00d17 	ldw	r3,52(r2)
 2011c6c:	e0bff917 	ldw	r2,-28(fp)
 2011c70:	18800326 	beq	r3,r2,2011c80 <altera_avalon_jtag_uart_write+0x1e4>
         break;
    }
  }
  while (count > 0);
 2011c74:	e0bffd17 	ldw	r2,-12(fp)
 2011c78:	10800048 	cmpgei	r2,r2,1
 2011c7c:	103fcd1e 	bne	r2,zero,2011bb4 <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 2011c80:	e0fffc17 	ldw	r3,-16(fp)
 2011c84:	e0bff617 	ldw	r2,-40(fp)
 2011c88:	18800526 	beq	r3,r2,2011ca0 <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
 2011c8c:	e0fffc17 	ldw	r3,-16(fp)
 2011c90:	e0bff617 	ldw	r2,-40(fp)
 2011c94:	1887c83a 	sub	r3,r3,r2
 2011c98:	e0ffff15 	stw	r3,-4(fp)
 2011c9c:	00000906 	br	2011cc4 <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
 2011ca0:	e0bffe17 	ldw	r2,-8(fp)
 2011ca4:	1090000c 	andi	r2,r2,16384
 2011ca8:	1005003a 	cmpeq	r2,r2,zero
 2011cac:	1000031e 	bne	r2,zero,2011cbc <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
 2011cb0:	00bffd44 	movi	r2,-11
 2011cb4:	e0bfff15 	stw	r2,-4(fp)
 2011cb8:	00000206 	br	2011cc4 <altera_avalon_jtag_uart_write+0x228>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 2011cbc:	00bffec4 	movi	r2,-5
 2011cc0:	e0bfff15 	stw	r2,-4(fp)
 2011cc4:	e0bfff17 	ldw	r2,-4(fp)
}
 2011cc8:	e037883a 	mov	sp,fp
 2011ccc:	dfc00117 	ldw	ra,4(sp)
 2011cd0:	df000017 	ldw	fp,0(sp)
 2011cd4:	dec00204 	addi	sp,sp,8
 2011cd8:	f800283a 	ret

02011cdc <perf_get_section_time>:

#include "altera_avalon_performance_counter.h"
#include "system.h"

alt_u64 perf_get_section_time (void* hw_base_address, int which_section)
{
 2011cdc:	defff904 	addi	sp,sp,-28
 2011ce0:	df000615 	stw	fp,24(sp)
 2011ce4:	df000604 	addi	fp,sp,24
 2011ce8:	e13ffe15 	stw	r4,-8(fp)
 2011cec:	e17fff15 	stw	r5,-4(fp)
  alt_u32 lo;
  alt_u32 hi;
  alt_u64 result = 0;
 2011cf0:	e03ffa15 	stw	zero,-24(fp)
 2011cf4:	e03ffb15 	stw	zero,-20(fp)

  PERF_STOP_MEASURING(hw_base_address);
 2011cf8:	e0bffe17 	ldw	r2,-8(fp)
 2011cfc:	10000035 	stwio	zero,0(r2)
  lo = IORD(hw_base_address, ( which_section*4   ));
 2011d00:	e0bfff17 	ldw	r2,-4(fp)
 2011d04:	1004913a 	slli	r2,r2,4
 2011d08:	1007883a 	mov	r3,r2
 2011d0c:	e0bffe17 	ldw	r2,-8(fp)
 2011d10:	1885883a 	add	r2,r3,r2
 2011d14:	10800037 	ldwio	r2,0(r2)
 2011d18:	e0bffd15 	stw	r2,-12(fp)
  hi = IORD(hw_base_address, ((which_section*4)+1));
 2011d1c:	e0bfff17 	ldw	r2,-4(fp)
 2011d20:	1004913a 	slli	r2,r2,4
 2011d24:	1007883a 	mov	r3,r2
 2011d28:	e0bffe17 	ldw	r2,-8(fp)
 2011d2c:	1885883a 	add	r2,r3,r2
 2011d30:	10800104 	addi	r2,r2,4
 2011d34:	10800037 	ldwio	r2,0(r2)
 2011d38:	e0bffc15 	stw	r2,-16(fp)

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
 2011d3c:	e0bffc17 	ldw	r2,-16(fp)
 2011d40:	0007883a 	mov	r3,zero
 2011d44:	100a983a 	sll	r5,r2,zero
 2011d48:	0009883a 	mov	r4,zero
 2011d4c:	e0bffd17 	ldw	r2,-12(fp)
 2011d50:	0007883a 	mov	r3,zero
 2011d54:	208cb03a 	or	r6,r4,r2
 2011d58:	e1bffa15 	stw	r6,-24(fp)
 2011d5c:	28c4b03a 	or	r2,r5,r3
 2011d60:	e0bffb15 	stw	r2,-20(fp)
           ((alt_u64)(((alt_u64) lo)                 ))  ;
  return result;
 2011d64:	e17ffa17 	ldw	r5,-24(fp)
 2011d68:	e1bffb17 	ldw	r6,-20(fp)
 2011d6c:	2807883a 	mov	r3,r5
 2011d70:	3009883a 	mov	r4,r6
}
 2011d74:	1805883a 	mov	r2,r3
 2011d78:	2007883a 	mov	r3,r4
 2011d7c:	e037883a 	mov	sp,fp
 2011d80:	df000017 	ldw	fp,0(sp)
 2011d84:	dec00104 	addi	sp,sp,4
 2011d88:	f800283a 	ret

02011d8c <perf_get_total_time>:

alt_u64 perf_get_total_time   (void* hw_base_address)
{
 2011d8c:	defffd04 	addi	sp,sp,-12
 2011d90:	dfc00215 	stw	ra,8(sp)
 2011d94:	df000115 	stw	fp,4(sp)
 2011d98:	df000104 	addi	fp,sp,4
 2011d9c:	e13fff15 	stw	r4,-4(fp)
  return perf_get_section_time (hw_base_address, 0);
 2011da0:	e13fff17 	ldw	r4,-4(fp)
 2011da4:	000b883a 	mov	r5,zero
 2011da8:	2011cdc0 	call	2011cdc <perf_get_section_time>
 2011dac:	1009883a 	mov	r4,r2
 2011db0:	180b883a 	mov	r5,r3
 2011db4:	200d883a 	mov	r6,r4
 2011db8:	280f883a 	mov	r7,r5
 2011dbc:	3007883a 	mov	r3,r6
 2011dc0:	3809883a 	mov	r4,r7
}
 2011dc4:	1805883a 	mov	r2,r3
 2011dc8:	2007883a 	mov	r3,r4
 2011dcc:	e037883a 	mov	sp,fp
 2011dd0:	dfc00117 	ldw	ra,4(sp)
 2011dd4:	df000017 	ldw	fp,0(sp)
 2011dd8:	dec00204 	addi	sp,sp,8
 2011ddc:	f800283a 	ret

02011de0 <perf_get_num_starts>:

alt_u32 perf_get_num_starts   (void* hw_base_address, int which_section)
{
 2011de0:	defffd04 	addi	sp,sp,-12
 2011de4:	df000215 	stw	fp,8(sp)
 2011de8:	df000204 	addi	fp,sp,8
 2011dec:	e13ffe15 	stw	r4,-8(fp)
 2011df0:	e17fff15 	stw	r5,-4(fp)
  return IORD(hw_base_address, ((which_section*4)+2));
 2011df4:	e0bfff17 	ldw	r2,-4(fp)
 2011df8:	1004913a 	slli	r2,r2,4
 2011dfc:	1007883a 	mov	r3,r2
 2011e00:	e0bffe17 	ldw	r2,-8(fp)
 2011e04:	1885883a 	add	r2,r3,r2
 2011e08:	10800204 	addi	r2,r2,8
 2011e0c:	10800037 	ldwio	r2,0(r2)
}
 2011e10:	e037883a 	mov	sp,fp
 2011e14:	df000017 	ldw	fp,0(sp)
 2011e18:	dec00104 	addi	sp,sp,4
 2011e1c:	f800283a 	ret

02011e20 <alt_get_performance_counter_base>:
 * in Nios II IDE just like is done for the system clock timer and
 * timestamp timer.
 */
void* 
alt_get_performance_counter_base()
{
 2011e20:	deffff04 	addi	sp,sp,-4
 2011e24:	df000015 	stw	fp,0(sp)
 2011e28:	d839883a 	mov	fp,sp
#ifdef PERFORMANCE_COUNTER_0_BASE
    return (void*)PERFORMANCE_COUNTER_0_BASE;
 2011e2c:	00810034 	movhi	r2,1024
 2011e30:	10840004 	addi	r2,r2,4096
#else
    return (void*)0;
#endif
}
 2011e34:	e037883a 	mov	sp,fp
 2011e38:	df000017 	ldw	fp,0(sp)
 2011e3c:	dec00104 	addi	sp,sp,4
 2011e40:	f800283a 	ret

02011e44 <alt_get_cpu_freq>:
 * If the performance counter peripheral is in a different time domain,
 * this won't necessarily be the same frequency of the CPU.
 */
alt_u32 
alt_get_cpu_freq()
{
 2011e44:	deffff04 	addi	sp,sp,-4
 2011e48:	df000015 	stw	fp,0(sp)
 2011e4c:	d839883a 	mov	fp,sp
    return ALT_CPU_FREQ;
 2011e50:	0080bef4 	movhi	r2,763
 2011e54:	10bc2004 	addi	r2,r2,-3968
}
 2011e58:	e037883a 	mov	sp,fp
 2011e5c:	df000017 	ldw	fp,0(sp)
 2011e60:	dec00104 	addi	sp,sp,4
 2011e64:	f800283a 	ret

02011e68 <alt_hostfs_open>:
* alt_hostfs_open
*
* If we can't find anything return -1
*/
int alt_hostfs_open(alt_fd* fd, const char * name, int flags, int mode)
{
 2011e68:	deffee04 	addi	sp,sp,-72
 2011e6c:	df001115 	stw	fp,68(sp)
 2011e70:	df001104 	addi	fp,sp,68
 2011e74:	e13ffc15 	stw	r4,-16(fp)
 2011e78:	e17ffd15 	stw	r5,-12(fp)
 2011e7c:	e1bffe15 	stw	r6,-8(fp)
 2011e80:	e1ffff15 	stw	r7,-4(fp)
  static const struct HOSTCALL_INFO hcinfo = { 0x0103, "open" };

  alt_hostfs_dev* dev= (alt_hostfs_dev*)fd->dev;
 2011e84:	e0bffc17 	ldw	r2,-16(fp)
 2011e88:	10800017 	ldw	r2,0(r2)
 2011e8c:	e0bffb15 	stw	r2,-20(fp)
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
 2011e90:	e0bffb17 	ldw	r2,-20(fp)
 2011e94:	10800217 	ldw	r2,8(r2)
 2011e98:	e0bff115 	stw	r2,-60(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
 2011e9c:	e0bff117 	ldw	r2,-60(fp)
 2011ea0:	10bfffc4 	addi	r2,r2,-1
 2011ea4:	e0bff215 	stw	r2,-56(fp)

  while (*++ptr != 0)
 2011ea8:	e0bff217 	ldw	r2,-56(fp)
 2011eac:	10800044 	addi	r2,r2,1
 2011eb0:	e0bff215 	stw	r2,-56(fp)
 2011eb4:	e0bff217 	ldw	r2,-56(fp)
 2011eb8:	10800003 	ldbu	r2,0(r2)
 2011ebc:	10803fcc 	andi	r2,r2,255
 2011ec0:	1080201c 	xori	r2,r2,128
 2011ec4:	10bfe004 	addi	r2,r2,-128
 2011ec8:	1004c03a 	cmpne	r2,r2,zero
 2011ecc:	103ff61e 	bne	r2,zero,2011ea8 <alt_hostfs_open+0x40>
    ;

  return ptr - string;
 2011ed0:	e0fff217 	ldw	r3,-56(fp)
 2011ed4:	e0bff117 	ldw	r2,-60(fp)
 2011ed8:	1885c83a 	sub	r2,r3,r2
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
 2011edc:	1007883a 	mov	r3,r2
 2011ee0:	e0bffd17 	ldw	r2,-12(fp)
 2011ee4:	1885883a 	add	r2,r3,r2
 2011ee8:	10800044 	addi	r2,r2,1
 2011eec:	e0bffd15 	stw	r2,-12(fp)

  r3 = (int)&hcinfo;
 2011ef0:	d0a00e04 	addi	r2,gp,-32712
 2011ef4:	e0bff715 	stw	r2,-36(fp)
  r4 = (int)name;
 2011ef8:	e0bffd17 	ldw	r2,-12(fp)
 2011efc:	e0bff615 	stw	r2,-40(fp)
  r5 = flags;
 2011f00:	e0bffe17 	ldw	r2,-8(fp)
 2011f04:	e0bff515 	stw	r2,-44(fp)
  r6 = mode;
 2011f08:	e0bfff17 	ldw	r2,-4(fp)
 2011f0c:	e0bff415 	stw	r2,-48(fp)
 2011f10:	e0bffd17 	ldw	r2,-12(fp)
 2011f14:	e0bfef15 	stw	r2,-68(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
 2011f18:	e0bfef17 	ldw	r2,-68(fp)
 2011f1c:	10bfffc4 	addi	r2,r2,-1
 2011f20:	e0bff015 	stw	r2,-64(fp)

  while (*++ptr != 0)
 2011f24:	e0bff017 	ldw	r2,-64(fp)
 2011f28:	10800044 	addi	r2,r2,1
 2011f2c:	e0bff015 	stw	r2,-64(fp)
 2011f30:	e0bff017 	ldw	r2,-64(fp)
 2011f34:	10800003 	ldbu	r2,0(r2)
 2011f38:	10803fcc 	andi	r2,r2,255
 2011f3c:	1080201c 	xori	r2,r2,128
 2011f40:	10bfe004 	addi	r2,r2,-128
 2011f44:	1004c03a 	cmpne	r2,r2,zero
 2011f48:	103ff61e 	bne	r2,zero,2011f24 <alt_hostfs_open+0xbc>
    ;

  return ptr - string;
 2011f4c:	e0fff017 	ldw	r3,-64(fp)
 2011f50:	e0bfef17 	ldw	r2,-68(fp)
 2011f54:	1885c83a 	sub	r2,r3,r2

  r3 = (int)&hcinfo;
  r4 = (int)name;
  r5 = flags;
  r6 = mode;
  r7 = inline_strlen(name);
 2011f58:	e0bff315 	stw	r2,-52(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6), "D07" (r7) : "memory" );
 2011f5c:	e13ff617 	ldw	r4,-40(fp)
 2011f60:	e17ff517 	ldw	r5,-44(fp)
 2011f64:	e1bff417 	ldw	r6,-48(fp)
 2011f68:	e1fff317 	ldw	r7,-52(fp)
 2011f6c:	e0fff717 	ldw	r3,-36(fp)
 2011f70:	003da07a 	break	1
 2011f74:	e0bff815 	stw	r2,-32(fp)
 2011f78:	e0fff715 	stw	r3,-36(fp)

  handle = (void *)r2;
 2011f7c:	e0bff817 	ldw	r2,-32(fp)
 2011f80:	e0bff915 	stw	r2,-28(fp)
  error = r3;
 2011f84:	e0bff717 	ldw	r2,-36(fp)
 2011f88:	e0bffa15 	stw	r2,-24(fp)

  if (error == 0)
 2011f8c:	e0bffa17 	ldw	r2,-24(fp)
 2011f90:	1004c03a 	cmpne	r2,r2,zero
 2011f94:	1000031e 	bne	r2,zero,2011fa4 <alt_hostfs_open+0x13c>
    fd->priv = handle;
 2011f98:	e0fff917 	ldw	r3,-28(fp)
 2011f9c:	e0bffc17 	ldw	r2,-16(fp)
 2011fa0:	10c00115 	stw	r3,4(r2)

  return -error;
 2011fa4:	e0bffa17 	ldw	r2,-24(fp)
 2011fa8:	0085c83a 	sub	r2,zero,r2
}
 2011fac:	e037883a 	mov	sp,fp
 2011fb0:	df000017 	ldw	fp,0(sp)
 2011fb4:	dec00104 	addi	sp,sp,4
 2011fb8:	f800283a 	ret

02011fbc <alt_hostfs_close>:
* alt_hostfs_close
*
* Read the file
*/
int alt_hostfs_close(alt_fd* fd)
{
 2011fbc:	defffb04 	addi	sp,sp,-20
 2011fc0:	df000415 	stw	fp,16(sp)
 2011fc4:	df000404 	addi	fp,sp,16
 2011fc8:	e13fff15 	stw	r4,-4(fp)
  int error;

  /* Input and output parameters for the hostcall */
  int r3, r4;

  r3 = (int)&hcinfo;
 2011fcc:	d0a01104 	addi	r2,gp,-32700
 2011fd0:	e0bffd15 	stw	r2,-12(fp)
  r4 = (int)fd->priv;
 2011fd4:	e0bfff17 	ldw	r2,-4(fp)
 2011fd8:	10800117 	ldw	r2,4(r2)
 2011fdc:	e0bffc15 	stw	r2,-16(fp)

  __asm__ volatile("break 1" : "+D03" (r3) : "D04" (r4) );
 2011fe0:	e13ffc17 	ldw	r4,-16(fp)
 2011fe4:	e0fffd17 	ldw	r3,-12(fp)
 2011fe8:	003da07a 	break	1
 2011fec:	e0fffd15 	stw	r3,-12(fp)

  error = r3;
 2011ff0:	e0bffd17 	ldw	r2,-12(fp)
 2011ff4:	e0bffe15 	stw	r2,-8(fp)

  return -error;
 2011ff8:	e0bffe17 	ldw	r2,-8(fp)
 2011ffc:	0085c83a 	sub	r2,zero,r2
}
 2012000:	e037883a 	mov	sp,fp
 2012004:	df000017 	ldw	fp,0(sp)
 2012008:	dec00104 	addi	sp,sp,4
 201200c:	f800283a 	ret

02012010 <alt_hostfs_read>:
* alt_hostfs_read
*
* Read the file
*/
int alt_hostfs_read(alt_fd* fd, char * ptr, int len)
{
 2012010:	defff404 	addi	sp,sp,-48
 2012014:	df000b15 	stw	fp,44(sp)
 2012018:	df000b04 	addi	fp,sp,44
 201201c:	e13ffc15 	stw	r4,-16(fp)
 2012020:	e17ffd15 	stw	r5,-12(fp)
 2012024:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
 2012028:	d0a01404 	addi	r2,gp,-32688
 201202c:	e0bff815 	stw	r2,-32(fp)
  r4 = (int)fd->priv;
 2012030:	e0bffc17 	ldw	r2,-16(fp)
 2012034:	10800117 	ldw	r2,4(r2)
 2012038:	e0bff715 	stw	r2,-36(fp)
  r5 = (int)ptr;
 201203c:	e0bffd17 	ldw	r2,-12(fp)
 2012040:	e0bff615 	stw	r2,-40(fp)
  r6 = len;
 2012044:	e0bffe17 	ldw	r2,-8(fp)
 2012048:	e0bff515 	stw	r2,-44(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
 201204c:	e13ff717 	ldw	r4,-36(fp)
 2012050:	e17ff617 	ldw	r5,-40(fp)
 2012054:	e1bff517 	ldw	r6,-44(fp)
 2012058:	e0fff817 	ldw	r3,-32(fp)
 201205c:	003da07a 	break	1
 2012060:	e0bff915 	stw	r2,-28(fp)
 2012064:	e0fff815 	stw	r3,-32(fp)

  rc = r2;
 2012068:	e0bff917 	ldw	r2,-28(fp)
 201206c:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
 2012070:	e0bff817 	ldw	r2,-32(fp)
 2012074:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
 2012078:	e0bffb17 	ldw	r2,-20(fp)
 201207c:	1005003a 	cmpeq	r2,r2,zero
 2012080:	1000041e 	bne	r2,zero,2012094 <alt_hostfs_read+0x84>
 2012084:	e0bffb17 	ldw	r2,-20(fp)
 2012088:	0085c83a 	sub	r2,zero,r2
 201208c:	e0bfff15 	stw	r2,-4(fp)
 2012090:	00000206 	br	201209c <alt_hostfs_read+0x8c>
 2012094:	e0bffa17 	ldw	r2,-24(fp)
 2012098:	e0bfff15 	stw	r2,-4(fp)
 201209c:	e0bfff17 	ldw	r2,-4(fp)
}
 20120a0:	e037883a 	mov	sp,fp
 20120a4:	df000017 	ldw	fp,0(sp)
 20120a8:	dec00104 	addi	sp,sp,4
 20120ac:	f800283a 	ret

020120b0 <alt_hostfs_write>:
* alt_hostfs_write
*
* Read the file
*/
int alt_hostfs_write(alt_fd* fd, const char * ptr, int len)
{
 20120b0:	defff404 	addi	sp,sp,-48
 20120b4:	df000b15 	stw	fp,44(sp)
 20120b8:	df000b04 	addi	fp,sp,44
 20120bc:	e13ffc15 	stw	r4,-16(fp)
 20120c0:	e17ffd15 	stw	r5,-12(fp)
 20120c4:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
 20120c8:	d0a01704 	addi	r2,gp,-32676
 20120cc:	e0bff815 	stw	r2,-32(fp)
  r4 = (int)fd->priv;
 20120d0:	e0bffc17 	ldw	r2,-16(fp)
 20120d4:	10800117 	ldw	r2,4(r2)
 20120d8:	e0bff715 	stw	r2,-36(fp)
  r5 = (int)ptr;
 20120dc:	e0bffd17 	ldw	r2,-12(fp)
 20120e0:	e0bff615 	stw	r2,-40(fp)
  r6 = len;
 20120e4:	e0bffe17 	ldw	r2,-8(fp)
 20120e8:	e0bff515 	stw	r2,-44(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
 20120ec:	e13ff717 	ldw	r4,-36(fp)
 20120f0:	e17ff617 	ldw	r5,-40(fp)
 20120f4:	e1bff517 	ldw	r6,-44(fp)
 20120f8:	e0fff817 	ldw	r3,-32(fp)
 20120fc:	003da07a 	break	1
 2012100:	e0bff915 	stw	r2,-28(fp)
 2012104:	e0fff815 	stw	r3,-32(fp)

  rc = r2;
 2012108:	e0bff917 	ldw	r2,-28(fp)
 201210c:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
 2012110:	e0bff817 	ldw	r2,-32(fp)
 2012114:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
 2012118:	e0bffb17 	ldw	r2,-20(fp)
 201211c:	1005003a 	cmpeq	r2,r2,zero
 2012120:	1000041e 	bne	r2,zero,2012134 <alt_hostfs_write+0x84>
 2012124:	e0bffb17 	ldw	r2,-20(fp)
 2012128:	0085c83a 	sub	r2,zero,r2
 201212c:	e0bfff15 	stw	r2,-4(fp)
 2012130:	00000206 	br	201213c <alt_hostfs_write+0x8c>
 2012134:	e0bffa17 	ldw	r2,-24(fp)
 2012138:	e0bfff15 	stw	r2,-4(fp)
 201213c:	e0bfff17 	ldw	r2,-4(fp)
}
 2012140:	e037883a 	mov	sp,fp
 2012144:	df000017 	ldw	fp,0(sp)
 2012148:	dec00104 	addi	sp,sp,4
 201214c:	f800283a 	ret

02012150 <alt_hostfs_seek>:
* Move around within a file
*
* returns -errno for an error or the offset within the file
*/
int alt_hostfs_seek(alt_fd* fd, int ptr, int dir)
{
 2012150:	defff404 	addi	sp,sp,-48
 2012154:	df000b15 	stw	fp,44(sp)
 2012158:	df000b04 	addi	fp,sp,44
 201215c:	e13ffc15 	stw	r4,-16(fp)
 2012160:	e17ffd15 	stw	r5,-12(fp)
 2012164:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
 2012168:	d0a01a04 	addi	r2,gp,-32664
 201216c:	e0bff815 	stw	r2,-32(fp)
  r4 = (int)fd->priv;
 2012170:	e0bffc17 	ldw	r2,-16(fp)
 2012174:	10800117 	ldw	r2,4(r2)
 2012178:	e0bff715 	stw	r2,-36(fp)
  r5 = ptr;
 201217c:	e0bffd17 	ldw	r2,-12(fp)
 2012180:	e0bff615 	stw	r2,-40(fp)
  r6 = dir;
 2012184:	e0bffe17 	ldw	r2,-8(fp)
 2012188:	e0bff515 	stw	r2,-44(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
 201218c:	e13ff717 	ldw	r4,-36(fp)
 2012190:	e17ff617 	ldw	r5,-40(fp)
 2012194:	e1bff517 	ldw	r6,-44(fp)
 2012198:	e0fff817 	ldw	r3,-32(fp)
 201219c:	003da07a 	break	1
 20121a0:	e0bff915 	stw	r2,-28(fp)
 20121a4:	e0fff815 	stw	r3,-32(fp)

  rc = r2;
 20121a8:	e0bff917 	ldw	r2,-28(fp)
 20121ac:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
 20121b0:	e0bff817 	ldw	r2,-32(fp)
 20121b4:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
 20121b8:	e0bffb17 	ldw	r2,-20(fp)
 20121bc:	1005003a 	cmpeq	r2,r2,zero
 20121c0:	1000041e 	bne	r2,zero,20121d4 <alt_hostfs_seek+0x84>
 20121c4:	e0bffb17 	ldw	r2,-20(fp)
 20121c8:	0085c83a 	sub	r2,zero,r2
 20121cc:	e0bfff15 	stw	r2,-4(fp)
 20121d0:	00000206 	br	20121dc <alt_hostfs_seek+0x8c>
 20121d4:	e0bffa17 	ldw	r2,-24(fp)
 20121d8:	e0bfff15 	stw	r2,-4(fp)
 20121dc:	e0bfff17 	ldw	r2,-4(fp)
}
 20121e0:	e037883a 	mov	sp,fp
 20121e4:	df000017 	ldw	fp,0(sp)
 20121e8:	dec00104 	addi	sp,sp,4
 20121ec:	f800283a 	ret

020121f0 <alt_hostfs_fstat>:
* at the lower address.
* We need to copy the structure and byte swap it to make it match our local
* layout of struct stat.
*/
int alt_hostfs_fstat(alt_fd* fd, struct stat* st)
{
 20121f0:	deffe404 	addi	sp,sp,-112
 20121f4:	df001b15 	stw	fp,108(sp)
 20121f8:	df001b04 	addi	fp,sp,108
 20121fc:	e13ffd15 	stw	r4,-12(fp)
 2012200:	e17ffe15 	stw	r5,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5;

  r3 = (int)&hcinfo;
 2012204:	d0a01d04 	addi	r2,gp,-32652
 2012208:	e0bfe915 	stw	r2,-92(fp)
  r4 = (int)fd->priv;
 201220c:	e0bffd17 	ldw	r2,-12(fp)
 2012210:	10800117 	ldw	r2,4(r2)
 2012214:	e0bfe815 	stw	r2,-96(fp)
  r5 = (int)&hoststat;
 2012218:	e0bfed04 	addi	r2,fp,-76
 201221c:	e0bfe715 	stw	r2,-100(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5) : "memory" );
 2012220:	e13fe817 	ldw	r4,-96(fp)
 2012224:	e17fe717 	ldw	r5,-100(fp)
 2012228:	e0ffe917 	ldw	r3,-92(fp)
 201222c:	003da07a 	break	1
 2012230:	e0bfea15 	stw	r2,-88(fp)
 2012234:	e0ffe915 	stw	r3,-92(fp)

  rc = r2;
 2012238:	e0bfea17 	ldw	r2,-88(fp)
 201223c:	e0bfeb15 	stw	r2,-84(fp)
  error = r3;
 2012240:	e0bfe917 	ldw	r2,-92(fp)
 2012244:	e0bfec15 	stw	r2,-80(fp)

  if (error == 0)
 2012248:	e0bfec17 	ldw	r2,-80(fp)
 201224c:	1004c03a 	cmpne	r2,r2,zero
 2012250:	1000651e 	bne	r2,zero,20123e8 <alt_hostfs_fstat+0x1f8>
     * no change is required.  On a little-endian processor we need to swap
     * the bytes in each word.
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
 2012254:	e0bfed04 	addi	r2,fp,-76
 2012258:	e0bfe615 	stw	r2,-104(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
 201225c:	e0bfe617 	ldw	r2,-104(fp)
 2012260:	10801004 	addi	r2,r2,64
 2012264:	e0bfe515 	stw	r2,-108(fp)
    for ( ; ptr < end ; ptr++)
 2012268:	00001806 	br	20122cc <alt_hostfs_fstat+0xdc>
      *ptr = ((*ptr & 0xFF000000) >> 24) |
 201226c:	e0bfe617 	ldw	r2,-104(fp)
 2012270:	10800017 	ldw	r2,0(r2)
 2012274:	10bfc02c 	andhi	r2,r2,65280
 2012278:	1006d63a 	srli	r3,r2,24
 201227c:	e0bfe617 	ldw	r2,-104(fp)
 2012280:	10800017 	ldw	r2,0(r2)
 2012284:	10803fec 	andhi	r2,r2,255
 2012288:	1004d23a 	srli	r2,r2,8
 201228c:	1886b03a 	or	r3,r3,r2
 2012290:	e0bfe617 	ldw	r2,-104(fp)
 2012294:	10800017 	ldw	r2,0(r2)
 2012298:	10bfc00c 	andi	r2,r2,65280
 201229c:	1004923a 	slli	r2,r2,8
 20122a0:	1886b03a 	or	r3,r3,r2
 20122a4:	e0bfe617 	ldw	r2,-104(fp)
 20122a8:	10800017 	ldw	r2,0(r2)
 20122ac:	10803fcc 	andi	r2,r2,255
 20122b0:	1004963a 	slli	r2,r2,24
 20122b4:	1886b03a 	or	r3,r3,r2
 20122b8:	e0bfe617 	ldw	r2,-104(fp)
 20122bc:	10c00015 	stw	r3,0(r2)
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
 20122c0:	e0bfe617 	ldw	r2,-104(fp)
 20122c4:	10800104 	addi	r2,r2,4
 20122c8:	e0bfe615 	stw	r2,-104(fp)
 20122cc:	e0ffe617 	ldw	r3,-104(fp)
 20122d0:	e0bfe517 	ldw	r2,-108(fp)
 20122d4:	18bfe536 	bltu	r3,r2,201226c <alt_hostfs_fstat+0x7c>
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
 20122d8:	e0bffe17 	ldw	r2,-8(fp)
 20122dc:	e0bfe615 	stw	r2,-104(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
 20122e0:	e0bfe617 	ldw	r2,-104(fp)
 20122e4:	10800f04 	addi	r2,r2,60
 20122e8:	e0bfe515 	stw	r2,-108(fp)
    for ( ; ptr < end ; ptr++)
 20122ec:	00000506 	br	2012304 <alt_hostfs_fstat+0x114>
      *ptr = 0;
 20122f0:	e0bfe617 	ldw	r2,-104(fp)
 20122f4:	10000015 	stw	zero,0(r2)
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
    for ( ; ptr < end ; ptr++)
 20122f8:	e0bfe617 	ldw	r2,-104(fp)
 20122fc:	10800104 	addi	r2,r2,4
 2012300:	e0bfe615 	stw	r2,-104(fp)
 2012304:	e0ffe617 	ldw	r3,-104(fp)
 2012308:	e0bfe517 	ldw	r2,-108(fp)
 201230c:	18bff836 	bltu	r3,r2,20122f0 <alt_hostfs_fstat+0x100>

    /* Copy the data provided by the host into our local copy, for data which
     * is provided as 64bit values by the host we just use the least
     * significant word.
     */
    st->st_dev     = hoststat.fst_dev;
 2012310:	e0bfed17 	ldw	r2,-76(fp)
 2012314:	1007883a 	mov	r3,r2
 2012318:	e0bffe17 	ldw	r2,-8(fp)
 201231c:	10c0000d 	sth	r3,0(r2)
    st->st_ino     = hoststat.fst_ino;
 2012320:	e0bfee17 	ldw	r2,-72(fp)
 2012324:	1007883a 	mov	r3,r2
 2012328:	e0bffe17 	ldw	r2,-8(fp)
 201232c:	10c0008d 	sth	r3,2(r2)
    st->st_mode    = hoststat.fst_mode;
 2012330:	e0ffef17 	ldw	r3,-68(fp)
 2012334:	e0bffe17 	ldw	r2,-8(fp)
 2012338:	10c00115 	stw	r3,4(r2)
    st->st_nlink   = hoststat.fst_nlink;
 201233c:	e0bff017 	ldw	r2,-64(fp)
 2012340:	1007883a 	mov	r3,r2
 2012344:	e0bffe17 	ldw	r2,-8(fp)
 2012348:	10c0020d 	sth	r3,8(r2)
    st->st_uid     = hoststat.fst_uid;
 201234c:	e0bff117 	ldw	r2,-60(fp)
 2012350:	1007883a 	mov	r3,r2
 2012354:	e0bffe17 	ldw	r2,-8(fp)
 2012358:	10c0028d 	sth	r3,10(r2)
    st->st_gid     = hoststat.fst_gid;
 201235c:	e0bff217 	ldw	r2,-56(fp)
 2012360:	1007883a 	mov	r3,r2
 2012364:	e0bffe17 	ldw	r2,-8(fp)
 2012368:	10c0030d 	sth	r3,12(r2)
    st->st_rdev    = hoststat.fst_rdev;
 201236c:	e0bff317 	ldw	r2,-52(fp)
 2012370:	1007883a 	mov	r3,r2
 2012374:	e0bffe17 	ldw	r2,-8(fp)
 2012378:	10c0038d 	sth	r3,14(r2)
    st->st_size    = hoststat.fst_size[1];
 201237c:	e0bff517 	ldw	r2,-44(fp)
 2012380:	1007883a 	mov	r3,r2
 2012384:	e0bffe17 	ldw	r2,-8(fp)
 2012388:	10c00415 	stw	r3,16(r2)

    st->st_atime   = hoststat.fst_atime;
 201238c:	e0bffa17 	ldw	r2,-24(fp)
 2012390:	1007883a 	mov	r3,r2
 2012394:	e0bffe17 	ldw	r2,-8(fp)
 2012398:	10c00515 	stw	r3,20(r2)
    st->st_mtime   = hoststat.fst_mtime;
 201239c:	e0bffb17 	ldw	r2,-20(fp)
 20123a0:	1007883a 	mov	r3,r2
 20123a4:	e0bffe17 	ldw	r2,-8(fp)
 20123a8:	10c00715 	stw	r3,28(r2)
    st->st_ctime   = hoststat.fst_ctime;
 20123ac:	e0bffc17 	ldw	r2,-16(fp)
 20123b0:	1007883a 	mov	r3,r2
 20123b4:	e0bffe17 	ldw	r2,-8(fp)
 20123b8:	10c00915 	stw	r3,36(r2)

    st->st_blksize = hoststat.fst_blksize[1];
 20123bc:	e0bff717 	ldw	r2,-36(fp)
 20123c0:	1007883a 	mov	r3,r2
 20123c4:	e0bffe17 	ldw	r2,-8(fp)
 20123c8:	10c00b15 	stw	r3,44(r2)
    st->st_blocks  = hoststat.fst_blocks[1];
 20123cc:	e0bff917 	ldw	r2,-28(fp)
 20123d0:	1007883a 	mov	r3,r2
 20123d4:	e0bffe17 	ldw	r2,-8(fp)
 20123d8:	10c00c15 	stw	r3,48(r2)

    return rc;
 20123dc:	e0bfeb17 	ldw	r2,-84(fp)
 20123e0:	e0bfff15 	stw	r2,-4(fp)
 20123e4:	00000306 	br	20123f4 <alt_hostfs_fstat+0x204>
  }
  else
    return -error;
 20123e8:	e0bfec17 	ldw	r2,-80(fp)
 20123ec:	0085c83a 	sub	r2,zero,r2
 20123f0:	e0bfff15 	stw	r2,-4(fp)
 20123f4:	e0bfff17 	ldw	r2,-4(fp)
}
 20123f8:	e037883a 	mov	sp,fp
 20123fc:	df000017 	ldw	fp,0(sp)
 2012400:	dec00104 	addi	sp,sp,4
 2012404:	f800283a 	ret

02012408 <perf_print_formatted_report>:

#ifndef SMALL_C_LIB 
int perf_print_formatted_report (void* perf_base, 
                                 alt_u32 clock_freq_hertz,
                                 int num_sections, ...)
{
 2012408:	deffe504 	addi	sp,sp,-108
 201240c:	dfc01915 	stw	ra,100(sp)
 2012410:	df001815 	stw	fp,96(sp)
 2012414:	dcc01715 	stw	r19,92(sp)
 2012418:	dc801615 	stw	r18,88(sp)
 201241c:	dc401515 	stw	r17,84(sp)
 2012420:	dc001415 	stw	r16,80(sp)
 2012424:	df001404 	addi	fp,sp,80
 2012428:	e13ffd15 	stw	r4,-12(fp)
 201242c:	e17ffe15 	stw	r5,-8(fp)
 2012430:	e1c00615 	stw	r7,24(fp)
 2012434:	e1bfff15 	stw	r6,-4(fp)
  va_list name_args;
  double total_sec;
  alt_u64 total_clocks;
  alt_u64 section_clocks;
  char* section_name;
  int section_num = 1;
 2012438:	00800044 	movi	r2,1
 201243c:	e0bff415 	stw	r2,-48(fp)

  const char* separator = 
    "+---------------+-----+-----------+---------------+-----------+\n";
 2012440:	00808074 	movhi	r2,513
 2012444:	108fae04 	addi	r2,r2,16056
 2012448:	e0bff315 	stw	r2,-52(fp)
  const char* column_header = 
    "| Section       |  %  | Time (sec)|  Time (clocks)|Occurrences|\n";
 201244c:	00808074 	movhi	r2,513
 2012450:	108fbf04 	addi	r2,r2,16124
 2012454:	e0bff215 	stw	r2,-56(fp)

  PERF_STOP_MEASURING (perf_base);
 2012458:	e0bffd17 	ldw	r2,-12(fp)
 201245c:	10000035 	stwio	zero,0(r2)

  va_start (name_args, num_sections);
 2012460:	e0800604 	addi	r2,fp,24
 2012464:	e0bffc15 	stw	r2,-16(fp)

  total_clocks = perf_get_total_time (perf_base);
 2012468:	e13ffd17 	ldw	r4,-12(fp)
 201246c:	2011d8c0 	call	2011d8c <perf_get_total_time>
 2012470:	1009883a 	mov	r4,r2
 2012474:	180b883a 	mov	r5,r3
 2012478:	e13ff815 	stw	r4,-32(fp)
 201247c:	e17ff915 	stw	r5,-28(fp)
  total_sec    = ((double)total_clocks) / clock_freq_hertz;
 2012480:	e13ff817 	ldw	r4,-32(fp)
 2012484:	e17ff917 	ldw	r5,-28(fp)
 2012488:	20136a00 	call	20136a0 <__floatundidf>
 201248c:	1021883a 	mov	r16,r2
 2012490:	1823883a 	mov	r17,r3
 2012494:	e13ffe17 	ldw	r4,-8(fp)
 2012498:	200f8000 	call	200f800 <__floatunsidf>
 201249c:	100f883a 	mov	r7,r2
 20124a0:	1811883a 	mov	r8,r3
 20124a4:	8009883a 	mov	r4,r16
 20124a8:	880b883a 	mov	r5,r17
 20124ac:	380d883a 	mov	r6,r7
 20124b0:	400f883a 	mov	r7,r8
 20124b4:	200f0340 	call	200f034 <__divdf3>
 20124b8:	1009883a 	mov	r4,r2
 20124bc:	180b883a 	mov	r5,r3
 20124c0:	e13ffa15 	stw	r4,-24(fp)
 20124c4:	e17ffb15 	stw	r5,-20(fp)

  // Print the total at the top:
  printf ("--Performance Counter Report--\nTotal Time: %3G seconds  (%lld clock-cycles)\n%s%s%s",
 20124c8:	e0bff317 	ldw	r2,-52(fp)
 20124cc:	d8800115 	stw	r2,4(sp)
 20124d0:	e0bff217 	ldw	r2,-56(fp)
 20124d4:	d8800215 	stw	r2,8(sp)
 20124d8:	e0bff317 	ldw	r2,-52(fp)
 20124dc:	d8800315 	stw	r2,12(sp)
 20124e0:	e0bff917 	ldw	r2,-28(fp)
 20124e4:	d8800015 	stw	r2,0(sp)
 20124e8:	e1fff817 	ldw	r7,-32(fp)
 20124ec:	01008074 	movhi	r4,513
 20124f0:	210fd004 	addi	r4,r4,16192
 20124f4:	e17ffa17 	ldw	r5,-24(fp)
 20124f8:	e1bffb17 	ldw	r6,-20(fp)
 20124fc:	2002ac40 	call	2002ac4 <printf>
          total_sec, total_clocks, separator, column_header, separator);

  section_name = va_arg(name_args, char*);
 2012500:	e0fffc17 	ldw	r3,-16(fp)
 2012504:	18800104 	addi	r2,r3,4
 2012508:	e0bffc15 	stw	r2,-16(fp)
 201250c:	1805883a 	mov	r2,r3
 2012510:	10800017 	ldw	r2,0(r2)
 2012514:	e0bff515 	stw	r2,-44(fp)

  for (section_num = 1; section_num <= num_sections; section_num++)
 2012518:	00800044 	movi	r2,1
 201251c:	e0bff415 	stw	r2,-48(fp)
 2012520:	00005106 	br	2012668 <perf_print_formatted_report+0x260>
    {
      section_clocks = perf_get_section_time (perf_base, section_num);
 2012524:	e13ffd17 	ldw	r4,-12(fp)
 2012528:	e17ff417 	ldw	r5,-48(fp)
 201252c:	2011cdc0 	call	2011cdc <perf_get_section_time>
 2012530:	1009883a 	mov	r4,r2
 2012534:	180b883a 	mov	r5,r3
 2012538:	e13ff615 	stw	r4,-40(fp)
 201253c:	e17ff715 	stw	r5,-36(fp)

      printf ("|%-15s|%5.3g|%11.5f|%15lld|%11u|\n%s",
 2012540:	e13ff617 	ldw	r4,-40(fp)
 2012544:	e17ff717 	ldw	r5,-36(fp)
 2012548:	20136a00 	call	20136a0 <__floatundidf>
 201254c:	100b883a 	mov	r5,r2
 2012550:	180d883a 	mov	r6,r3
 2012554:	2809883a 	mov	r4,r5
 2012558:	300b883a 	mov	r5,r6
 201255c:	000d883a 	mov	r6,zero
 2012560:	01d01674 	movhi	r7,16473
 2012564:	200ec700 	call	200ec70 <__muldf3>
 2012568:	1009883a 	mov	r4,r2
 201256c:	180b883a 	mov	r5,r3
 2012570:	2021883a 	mov	r16,r4
 2012574:	2823883a 	mov	r17,r5
 2012578:	e13ff817 	ldw	r4,-32(fp)
 201257c:	e17ff917 	ldw	r5,-28(fp)
 2012580:	20136a00 	call	20136a0 <__floatundidf>
 2012584:	100f883a 	mov	r7,r2
 2012588:	1811883a 	mov	r8,r3
 201258c:	8009883a 	mov	r4,r16
 2012590:	880b883a 	mov	r5,r17
 2012594:	380d883a 	mov	r6,r7
 2012598:	400f883a 	mov	r7,r8
 201259c:	200f0340 	call	200f034 <__divdf3>
 20125a0:	1009883a 	mov	r4,r2
 20125a4:	180b883a 	mov	r5,r3
 20125a8:	2025883a 	mov	r18,r4
 20125ac:	2827883a 	mov	r19,r5
 20125b0:	e13ff617 	ldw	r4,-40(fp)
 20125b4:	e17ff717 	ldw	r5,-36(fp)
 20125b8:	20136a00 	call	20136a0 <__floatundidf>
 20125bc:	1021883a 	mov	r16,r2
 20125c0:	1823883a 	mov	r17,r3
 20125c4:	e13ffe17 	ldw	r4,-8(fp)
 20125c8:	200f8000 	call	200f800 <__floatunsidf>
 20125cc:	100f883a 	mov	r7,r2
 20125d0:	1811883a 	mov	r8,r3
 20125d4:	8009883a 	mov	r4,r16
 20125d8:	880b883a 	mov	r5,r17
 20125dc:	380d883a 	mov	r6,r7
 20125e0:	400f883a 	mov	r7,r8
 20125e4:	200f0340 	call	200f034 <__divdf3>
 20125e8:	1009883a 	mov	r4,r2
 20125ec:	180b883a 	mov	r5,r3
 20125f0:	2021883a 	mov	r16,r4
 20125f4:	2823883a 	mov	r17,r5
 20125f8:	e13ffd17 	ldw	r4,-12(fp)
 20125fc:	e17ff417 	ldw	r5,-48(fp)
 2012600:	2011de00 	call	2011de0 <perf_get_num_starts>
 2012604:	1007883a 	mov	r3,r2
 2012608:	dc000015 	stw	r16,0(sp)
 201260c:	dc400115 	stw	r17,4(sp)
 2012610:	e0bff617 	ldw	r2,-40(fp)
 2012614:	d8800215 	stw	r2,8(sp)
 2012618:	e0bff717 	ldw	r2,-36(fp)
 201261c:	d8800315 	stw	r2,12(sp)
 2012620:	d8c00415 	stw	r3,16(sp)
 2012624:	e0bff317 	ldw	r2,-52(fp)
 2012628:	d8800515 	stw	r2,20(sp)
 201262c:	01008074 	movhi	r4,513
 2012630:	210fe504 	addi	r4,r4,16276
 2012634:	e17ff517 	ldw	r5,-44(fp)
 2012638:	900d883a 	mov	r6,r18
 201263c:	980f883a 	mov	r7,r19
 2012640:	2002ac40 	call	2002ac4 <printf>
              section_clocks,
              (unsigned int) perf_get_num_starts (perf_base, section_num),
              separator
              );

      section_name = va_arg(name_args, char*);
 2012644:	e0fffc17 	ldw	r3,-16(fp)
 2012648:	18800104 	addi	r2,r3,4
 201264c:	e0bffc15 	stw	r2,-16(fp)
 2012650:	1805883a 	mov	r2,r3
 2012654:	10800017 	ldw	r2,0(r2)
 2012658:	e0bff515 	stw	r2,-44(fp)
  printf ("--Performance Counter Report--\nTotal Time: %3G seconds  (%lld clock-cycles)\n%s%s%s",
          total_sec, total_clocks, separator, column_header, separator);

  section_name = va_arg(name_args, char*);

  for (section_num = 1; section_num <= num_sections; section_num++)
 201265c:	e0bff417 	ldw	r2,-48(fp)
 2012660:	10800044 	addi	r2,r2,1
 2012664:	e0bff415 	stw	r2,-48(fp)
 2012668:	e0fff417 	ldw	r3,-48(fp)
 201266c:	e0bfff17 	ldw	r2,-4(fp)
 2012670:	10ffac0e 	bge	r2,r3,2012524 <perf_print_formatted_report+0x11c>
      section_name = va_arg(name_args, char*);
    }

  va_end (name_args);

  return 0;
 2012674:	0005883a 	mov	r2,zero
}
 2012678:	e037883a 	mov	sp,fp
 201267c:	dfc00517 	ldw	ra,20(sp)
 2012680:	df000417 	ldw	fp,16(sp)
 2012684:	dcc00317 	ldw	r19,12(sp)
 2012688:	dc800217 	ldw	r18,8(sp)
 201268c:	dc400117 	ldw	r17,4(sp)
 2012690:	dc000017 	ldw	r16,0(sp)
 2012694:	dec00704 	addi	sp,sp,28
 2012698:	f800283a 	ret

0201269c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 201269c:	defff404 	addi	sp,sp,-48
 20126a0:	df000b15 	stw	fp,44(sp)
 20126a4:	df000b04 	addi	fp,sp,44
 20126a8:	e13ffb15 	stw	r4,-20(fp)
 20126ac:	e17ffc15 	stw	r5,-16(fp)
 20126b0:	e1bffd15 	stw	r6,-12(fp)
 20126b4:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 20126b8:	e03ff915 	stw	zero,-28(fp)
 20126bc:	00808074 	movhi	r2,513
 20126c0:	109d7504 	addi	r2,r2,30164
 20126c4:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 20126c8:	1005003a 	cmpeq	r2,r2,zero
 20126cc:	1000411e 	bne	r2,zero,20127d4 <alt_alarm_start+0x138>
  {
    if (alarm)
 20126d0:	e0bffb17 	ldw	r2,-20(fp)
 20126d4:	1005003a 	cmpeq	r2,r2,zero
 20126d8:	10003b1e 	bne	r2,zero,20127c8 <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
 20126dc:	e0fffb17 	ldw	r3,-20(fp)
 20126e0:	e0bffd17 	ldw	r2,-12(fp)
 20126e4:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
 20126e8:	e0fffb17 	ldw	r3,-20(fp)
 20126ec:	e0bffe17 	ldw	r2,-8(fp)
 20126f0:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 20126f4:	0005303a 	rdctl	r2,status
 20126f8:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 20126fc:	e0fff817 	ldw	r3,-32(fp)
 2012700:	00bfff84 	movi	r2,-2
 2012704:	1884703a 	and	r2,r3,r2
 2012708:	1001703a 	wrctl	status,r2
  
  return context;
 201270c:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 2012710:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 2012714:	00808074 	movhi	r2,513
 2012718:	109d7604 	addi	r2,r2,30168
 201271c:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 2012720:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 2012724:	e0fffc17 	ldw	r3,-16(fp)
 2012728:	e0bff917 	ldw	r2,-28(fp)
 201272c:	1885883a 	add	r2,r3,r2
 2012730:	10c00044 	addi	r3,r2,1
 2012734:	e0bffb17 	ldw	r2,-20(fp)
 2012738:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 201273c:	e0bffb17 	ldw	r2,-20(fp)
 2012740:	10c00217 	ldw	r3,8(r2)
 2012744:	e0bff917 	ldw	r2,-28(fp)
 2012748:	1880042e 	bgeu	r3,r2,201275c <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
 201274c:	e0fffb17 	ldw	r3,-20(fp)
 2012750:	00800044 	movi	r2,1
 2012754:	18800405 	stb	r2,16(r3)
 2012758:	00000206 	br	2012764 <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
 201275c:	e0bffb17 	ldw	r2,-20(fp)
 2012760:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 2012764:	e0fffb17 	ldw	r3,-20(fp)
 2012768:	00808074 	movhi	r2,513
 201276c:	1096aa04 	addi	r2,r2,23208
 2012770:	e0bff615 	stw	r2,-40(fp)
 2012774:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 2012778:	e0fff717 	ldw	r3,-36(fp)
 201277c:	e0bff617 	ldw	r2,-40(fp)
 2012780:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
 2012784:	e0bff617 	ldw	r2,-40(fp)
 2012788:	10c00017 	ldw	r3,0(r2)
 201278c:	e0bff717 	ldw	r2,-36(fp)
 2012790:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 2012794:	e0bff617 	ldw	r2,-40(fp)
 2012798:	10c00017 	ldw	r3,0(r2)
 201279c:	e0bff717 	ldw	r2,-36(fp)
 20127a0:	18800115 	stw	r2,4(r3)
  list->next           = entry;
 20127a4:	e0fff617 	ldw	r3,-40(fp)
 20127a8:	e0bff717 	ldw	r2,-36(fp)
 20127ac:	18800015 	stw	r2,0(r3)
 20127b0:	e0bffa17 	ldw	r2,-24(fp)
 20127b4:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 20127b8:	e0bff517 	ldw	r2,-44(fp)
 20127bc:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 20127c0:	e03fff15 	stw	zero,-4(fp)
 20127c4:	00000506 	br	20127dc <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
 20127c8:	00bffa84 	movi	r2,-22
 20127cc:	e0bfff15 	stw	r2,-4(fp)
 20127d0:	00000206 	br	20127dc <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
 20127d4:	00bfde84 	movi	r2,-134
 20127d8:	e0bfff15 	stw	r2,-4(fp)
 20127dc:	e0bfff17 	ldw	r2,-4(fp)
  }
}
 20127e0:	e037883a 	mov	sp,fp
 20127e4:	df000017 	ldw	fp,0(sp)
 20127e8:	dec00104 	addi	sp,sp,4
 20127ec:	f800283a 	ret

020127f0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 20127f0:	deffff04 	addi	sp,sp,-4
 20127f4:	df000015 	stw	fp,0(sp)
 20127f8:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 20127fc:	e037883a 	mov	sp,fp
 2012800:	df000017 	ldw	fp,0(sp)
 2012804:	dec00104 	addi	sp,sp,4
 2012808:	f800283a 	ret

0201280c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 201280c:	defff904 	addi	sp,sp,-28
 2012810:	dfc00615 	stw	ra,24(sp)
 2012814:	df000515 	stw	fp,20(sp)
 2012818:	df000504 	addi	fp,sp,20
 201281c:	e13ffd15 	stw	r4,-12(fp)
 2012820:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 2012824:	e0bffd17 	ldw	r2,-12(fp)
 2012828:	1005003a 	cmpeq	r2,r2,zero
 201282c:	1000041e 	bne	r2,zero,2012840 <alt_dev_llist_insert+0x34>
 2012830:	e0bffd17 	ldw	r2,-12(fp)
 2012834:	10800217 	ldw	r2,8(r2)
 2012838:	1004c03a 	cmpne	r2,r2,zero
 201283c:	1000071e 	bne	r2,zero,201285c <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
 2012840:	20128c00 	call	20128c0 <alt_get_errno>
 2012844:	1007883a 	mov	r3,r2
 2012848:	00800584 	movi	r2,22
 201284c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 2012850:	00bffa84 	movi	r2,-22
 2012854:	e0bfff15 	stw	r2,-4(fp)
 2012858:	00001306 	br	20128a8 <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 201285c:	e0fffd17 	ldw	r3,-12(fp)
 2012860:	e0bffe17 	ldw	r2,-8(fp)
 2012864:	e0bffb15 	stw	r2,-20(fp)
 2012868:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 201286c:	e0fffc17 	ldw	r3,-16(fp)
 2012870:	e0bffb17 	ldw	r2,-20(fp)
 2012874:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
 2012878:	e0bffb17 	ldw	r2,-20(fp)
 201287c:	10c00017 	ldw	r3,0(r2)
 2012880:	e0bffc17 	ldw	r2,-16(fp)
 2012884:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 2012888:	e0bffb17 	ldw	r2,-20(fp)
 201288c:	10c00017 	ldw	r3,0(r2)
 2012890:	e0bffc17 	ldw	r2,-16(fp)
 2012894:	18800115 	stw	r2,4(r3)
  list->next           = entry;
 2012898:	e0fffb17 	ldw	r3,-20(fp)
 201289c:	e0bffc17 	ldw	r2,-16(fp)
 20128a0:	18800015 	stw	r2,0(r3)

  return 0;  
 20128a4:	e03fff15 	stw	zero,-4(fp)
 20128a8:	e0bfff17 	ldw	r2,-4(fp)
}
 20128ac:	e037883a 	mov	sp,fp
 20128b0:	dfc00117 	ldw	ra,4(sp)
 20128b4:	df000017 	ldw	fp,0(sp)
 20128b8:	dec00204 	addi	sp,sp,8
 20128bc:	f800283a 	ret

020128c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 20128c0:	defffd04 	addi	sp,sp,-12
 20128c4:	dfc00215 	stw	ra,8(sp)
 20128c8:	df000115 	stw	fp,4(sp)
 20128cc:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 20128d0:	00808074 	movhi	r2,513
 20128d4:	10969504 	addi	r2,r2,23124
 20128d8:	10800017 	ldw	r2,0(r2)
 20128dc:	1005003a 	cmpeq	r2,r2,zero
 20128e0:	1000061e 	bne	r2,zero,20128fc <alt_get_errno+0x3c>
 20128e4:	00808074 	movhi	r2,513
 20128e8:	10969504 	addi	r2,r2,23124
 20128ec:	10800017 	ldw	r2,0(r2)
 20128f0:	103ee83a 	callr	r2
 20128f4:	e0bfff15 	stw	r2,-4(fp)
 20128f8:	00000306 	br	2012908 <alt_get_errno+0x48>
 20128fc:	00808074 	movhi	r2,513
 2012900:	109d6a04 	addi	r2,r2,30120
 2012904:	e0bfff15 	stw	r2,-4(fp)
 2012908:	e0bfff17 	ldw	r2,-4(fp)
}
 201290c:	e037883a 	mov	sp,fp
 2012910:	dfc00117 	ldw	ra,4(sp)
 2012914:	df000017 	ldw	fp,0(sp)
 2012918:	dec00204 	addi	sp,sp,8
 201291c:	f800283a 	ret

02012920 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 2012920:	defffd04 	addi	sp,sp,-12
 2012924:	dfc00215 	stw	ra,8(sp)
 2012928:	df000115 	stw	fp,4(sp)
 201292c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 2012930:	00bfff04 	movi	r2,-4
 2012934:	00c08074 	movhi	r3,513
 2012938:	18cde304 	addi	r3,r3,14220
 201293c:	1885883a 	add	r2,r3,r2
 2012940:	e0bfff15 	stw	r2,-4(fp)
 2012944:	00000606 	br	2012960 <_do_ctors+0x40>
        (*ctor) (); 
 2012948:	e0bfff17 	ldw	r2,-4(fp)
 201294c:	10800017 	ldw	r2,0(r2)
 2012950:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 2012954:	e0bfff17 	ldw	r2,-4(fp)
 2012958:	10bfff04 	addi	r2,r2,-4
 201295c:	e0bfff15 	stw	r2,-4(fp)
 2012960:	e0ffff17 	ldw	r3,-4(fp)
 2012964:	00808074 	movhi	r2,513
 2012968:	108de204 	addi	r2,r2,14216
 201296c:	18bff62e 	bgeu	r3,r2,2012948 <_do_ctors+0x28>
        (*ctor) (); 
}
 2012970:	e037883a 	mov	sp,fp
 2012974:	dfc00117 	ldw	ra,4(sp)
 2012978:	df000017 	ldw	fp,0(sp)
 201297c:	dec00204 	addi	sp,sp,8
 2012980:	f800283a 	ret

02012984 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 2012984:	defffd04 	addi	sp,sp,-12
 2012988:	dfc00215 	stw	ra,8(sp)
 201298c:	df000115 	stw	fp,4(sp)
 2012990:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 2012994:	00bfff04 	movi	r2,-4
 2012998:	00c08074 	movhi	r3,513
 201299c:	18cde304 	addi	r3,r3,14220
 20129a0:	1885883a 	add	r2,r3,r2
 20129a4:	e0bfff15 	stw	r2,-4(fp)
 20129a8:	00000606 	br	20129c4 <_do_dtors+0x40>
        (*dtor) (); 
 20129ac:	e0bfff17 	ldw	r2,-4(fp)
 20129b0:	10800017 	ldw	r2,0(r2)
 20129b4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 20129b8:	e0bfff17 	ldw	r2,-4(fp)
 20129bc:	10bfff04 	addi	r2,r2,-4
 20129c0:	e0bfff15 	stw	r2,-4(fp)
 20129c4:	e0ffff17 	ldw	r3,-4(fp)
 20129c8:	00808074 	movhi	r2,513
 20129cc:	108de304 	addi	r2,r2,14220
 20129d0:	18bff62e 	bgeu	r3,r2,20129ac <_do_dtors+0x28>
        (*dtor) (); 
}
 20129d4:	e037883a 	mov	sp,fp
 20129d8:	dfc00117 	ldw	ra,4(sp)
 20129dc:	df000017 	ldw	fp,0(sp)
 20129e0:	dec00204 	addi	sp,sp,8
 20129e4:	f800283a 	ret

020129e8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 20129e8:	defff904 	addi	sp,sp,-28
 20129ec:	dfc00615 	stw	ra,24(sp)
 20129f0:	df000515 	stw	fp,20(sp)
 20129f4:	df000504 	addi	fp,sp,20
 20129f8:	e13ffd15 	stw	r4,-12(fp)
 20129fc:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
 2012a00:	e0bffe17 	ldw	r2,-8(fp)
 2012a04:	10800017 	ldw	r2,0(r2)
 2012a08:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 2012a0c:	e13ffd17 	ldw	r4,-12(fp)
 2012a10:	20031240 	call	2003124 <strlen>
 2012a14:	10800044 	addi	r2,r2,1
 2012a18:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 2012a1c:	00000d06 	br	2012a54 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 2012a20:	e0bffc17 	ldw	r2,-16(fp)
 2012a24:	11000217 	ldw	r4,8(r2)
 2012a28:	e1bffb17 	ldw	r6,-20(fp)
 2012a2c:	e17ffd17 	ldw	r5,-12(fp)
 2012a30:	20133440 	call	2013344 <memcmp>
 2012a34:	1004c03a 	cmpne	r2,r2,zero
 2012a38:	1000031e 	bne	r2,zero,2012a48 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 2012a3c:	e0bffc17 	ldw	r2,-16(fp)
 2012a40:	e0bfff15 	stw	r2,-4(fp)
 2012a44:	00000706 	br	2012a64 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 2012a48:	e0bffc17 	ldw	r2,-16(fp)
 2012a4c:	10800017 	ldw	r2,0(r2)
 2012a50:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 2012a54:	e0fffe17 	ldw	r3,-8(fp)
 2012a58:	e0bffc17 	ldw	r2,-16(fp)
 2012a5c:	10fff01e 	bne	r2,r3,2012a20 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 2012a60:	e03fff15 	stw	zero,-4(fp)
 2012a64:	e0bfff17 	ldw	r2,-4(fp)
}
 2012a68:	e037883a 	mov	sp,fp
 2012a6c:	dfc00117 	ldw	ra,4(sp)
 2012a70:	df000017 	ldw	fp,0(sp)
 2012a74:	dec00204 	addi	sp,sp,8
 2012a78:	f800283a 	ret

02012a7c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 2012a7c:	defffa04 	addi	sp,sp,-24
 2012a80:	dfc00515 	stw	ra,20(sp)
 2012a84:	df000415 	stw	fp,16(sp)
 2012a88:	df000404 	addi	fp,sp,16
 2012a8c:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 2012a90:	00808074 	movhi	r2,513
 2012a94:	10969004 	addi	r2,r2,23104
 2012a98:	10800017 	ldw	r2,0(r2)
 2012a9c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 2012aa0:	00003306 	br	2012b70 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
 2012aa4:	e0bffd17 	ldw	r2,-12(fp)
 2012aa8:	11000217 	ldw	r4,8(r2)
 2012aac:	20031240 	call	2003124 <strlen>
 2012ab0:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
 2012ab4:	e0bffd17 	ldw	r2,-12(fp)
 2012ab8:	10c00217 	ldw	r3,8(r2)
 2012abc:	e0bffc17 	ldw	r2,-16(fp)
 2012ac0:	1885883a 	add	r2,r3,r2
 2012ac4:	10bfffc4 	addi	r2,r2,-1
 2012ac8:	10800003 	ldbu	r2,0(r2)
 2012acc:	10803fcc 	andi	r2,r2,255
 2012ad0:	1080201c 	xori	r2,r2,128
 2012ad4:	10bfe004 	addi	r2,r2,-128
 2012ad8:	10800bd8 	cmpnei	r2,r2,47
 2012adc:	1000031e 	bne	r2,zero,2012aec <alt_find_file+0x70>
    {
      len -= 1;
 2012ae0:	e0bffc17 	ldw	r2,-16(fp)
 2012ae4:	10bfffc4 	addi	r2,r2,-1
 2012ae8:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 2012aec:	e0bffc17 	ldw	r2,-16(fp)
 2012af0:	1007883a 	mov	r3,r2
 2012af4:	e0bffe17 	ldw	r2,-8(fp)
 2012af8:	1885883a 	add	r2,r3,r2
 2012afc:	10800003 	ldbu	r2,0(r2)
 2012b00:	10803fcc 	andi	r2,r2,255
 2012b04:	1080201c 	xori	r2,r2,128
 2012b08:	10bfe004 	addi	r2,r2,-128
 2012b0c:	10800be0 	cmpeqi	r2,r2,47
 2012b10:	10000a1e 	bne	r2,zero,2012b3c <alt_find_file+0xc0>
 2012b14:	e0bffc17 	ldw	r2,-16(fp)
 2012b18:	1007883a 	mov	r3,r2
 2012b1c:	e0bffe17 	ldw	r2,-8(fp)
 2012b20:	1885883a 	add	r2,r3,r2
 2012b24:	10800003 	ldbu	r2,0(r2)
 2012b28:	10803fcc 	andi	r2,r2,255
 2012b2c:	1080201c 	xori	r2,r2,128
 2012b30:	10bfe004 	addi	r2,r2,-128
 2012b34:	1004c03a 	cmpne	r2,r2,zero
 2012b38:	10000a1e 	bne	r2,zero,2012b64 <alt_find_file+0xe8>
 2012b3c:	e0bffd17 	ldw	r2,-12(fp)
 2012b40:	11000217 	ldw	r4,8(r2)
 2012b44:	e1bffc17 	ldw	r6,-16(fp)
 2012b48:	e17ffe17 	ldw	r5,-8(fp)
 2012b4c:	20133440 	call	2013344 <memcmp>
 2012b50:	1004c03a 	cmpne	r2,r2,zero
 2012b54:	1000031e 	bne	r2,zero,2012b64 <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 2012b58:	e0bffd17 	ldw	r2,-12(fp)
 2012b5c:	e0bfff15 	stw	r2,-4(fp)
 2012b60:	00000806 	br	2012b84 <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
 2012b64:	e0bffd17 	ldw	r2,-12(fp)
 2012b68:	10800017 	ldw	r2,0(r2)
 2012b6c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 2012b70:	00c08074 	movhi	r3,513
 2012b74:	18d69004 	addi	r3,r3,23104
 2012b78:	e0bffd17 	ldw	r2,-12(fp)
 2012b7c:	10ffc91e 	bne	r2,r3,2012aa4 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 2012b80:	e03fff15 	stw	zero,-4(fp)
 2012b84:	e0bfff17 	ldw	r2,-4(fp)
}
 2012b88:	e037883a 	mov	sp,fp
 2012b8c:	dfc00117 	ldw	ra,4(sp)
 2012b90:	df000017 	ldw	fp,0(sp)
 2012b94:	dec00204 	addi	sp,sp,8
 2012b98:	f800283a 	ret

02012b9c <alt_fs_reg>:
 * A return value of zero indicates success. A negative return value indicates
 * failure. 
 */
 
int alt_fs_reg (alt_dev* dev)
{
 2012b9c:	defffb04 	addi	sp,sp,-20
 2012ba0:	df000415 	stw	fp,16(sp)
 2012ba4:	df000404 	addi	fp,sp,16
 2012ba8:	e13ffe15 	stw	r4,-8(fp)
  /*
   * check that the device has a name.
   */

  if (!dev->name)
 2012bac:	e0bffe17 	ldw	r2,-8(fp)
 2012bb0:	10800217 	ldw	r2,8(r2)
 2012bb4:	1004c03a 	cmpne	r2,r2,zero
 2012bb8:	1000031e 	bne	r2,zero,2012bc8 <alt_fs_reg+0x2c>
  {
    return -ENODEV;
 2012bbc:	00bffb44 	movi	r2,-19
 2012bc0:	e0bfff15 	stw	r2,-4(fp)
 2012bc4:	00001406 	br	2012c18 <alt_fs_reg+0x7c>
  
  /*
   * register the file system.
   */

  alt_llist_insert(&alt_fs_list, &dev->llist);
 2012bc8:	e0fffe17 	ldw	r3,-8(fp)
 2012bcc:	00808074 	movhi	r2,513
 2012bd0:	10969004 	addi	r2,r2,23104
 2012bd4:	e0bffc15 	stw	r2,-16(fp)
 2012bd8:	e0fffd15 	stw	r3,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 2012bdc:	e0fffd17 	ldw	r3,-12(fp)
 2012be0:	e0bffc17 	ldw	r2,-16(fp)
 2012be4:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
 2012be8:	e0bffc17 	ldw	r2,-16(fp)
 2012bec:	10c00017 	ldw	r3,0(r2)
 2012bf0:	e0bffd17 	ldw	r2,-12(fp)
 2012bf4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 2012bf8:	e0bffc17 	ldw	r2,-16(fp)
 2012bfc:	10c00017 	ldw	r3,0(r2)
 2012c00:	e0bffd17 	ldw	r2,-12(fp)
 2012c04:	18800115 	stw	r2,4(r3)
  list->next           = entry;
 2012c08:	e0fffc17 	ldw	r3,-16(fp)
 2012c0c:	e0bffd17 	ldw	r2,-12(fp)
 2012c10:	18800015 	stw	r2,0(r3)

  return 0;
 2012c14:	e03fff15 	stw	zero,-4(fp)
 2012c18:	e0bfff17 	ldw	r2,-4(fp)
} 
 2012c1c:	e037883a 	mov	sp,fp
 2012c20:	df000017 	ldw	fp,0(sp)
 2012c24:	dec00104 	addi	sp,sp,4
 2012c28:	f800283a 	ret

02012c2c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 2012c2c:	defffa04 	addi	sp,sp,-24
 2012c30:	dfc00515 	stw	ra,20(sp)
 2012c34:	df000415 	stw	fp,16(sp)
 2012c38:	dc000315 	stw	r16,12(sp)
 2012c3c:	df000304 	addi	fp,sp,12
 2012c40:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 2012c44:	00bffa04 	movi	r2,-24
 2012c48:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 2012c4c:	e03ffe15 	stw	zero,-8(fp)
 2012c50:	00002006 	br	2012cd4 <alt_get_fd+0xa8>
  {
    if (!alt_fd_list[i].dev)
 2012c54:	e13ffe17 	ldw	r4,-8(fp)
 2012c58:	04008074 	movhi	r16,513
 2012c5c:	84120704 	addi	r16,r16,18460
 2012c60:	01400304 	movi	r5,12
 2012c64:	2000abc0 	call	2000abc <__mulsi3>
 2012c68:	1405883a 	add	r2,r2,r16
 2012c6c:	10800017 	ldw	r2,0(r2)
 2012c70:	1004c03a 	cmpne	r2,r2,zero
 2012c74:	1000141e 	bne	r2,zero,2012cc8 <alt_get_fd+0x9c>
    {
      alt_fd_list[i].dev = dev;
 2012c78:	e13ffe17 	ldw	r4,-8(fp)
 2012c7c:	04008074 	movhi	r16,513
 2012c80:	84120704 	addi	r16,r16,18460
 2012c84:	01400304 	movi	r5,12
 2012c88:	2000abc0 	call	2000abc <__mulsi3>
 2012c8c:	1407883a 	add	r3,r2,r16
 2012c90:	e0bfff17 	ldw	r2,-4(fp)
 2012c94:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
 2012c98:	00808074 	movhi	r2,513
 2012c9c:	10969404 	addi	r2,r2,23120
 2012ca0:	10c00017 	ldw	r3,0(r2)
 2012ca4:	e0bffe17 	ldw	r2,-8(fp)
 2012ca8:	1880040e 	bge	r3,r2,2012cbc <alt_get_fd+0x90>
      {
        alt_max_fd = i;
 2012cac:	00c08074 	movhi	r3,513
 2012cb0:	18d69404 	addi	r3,r3,23120
 2012cb4:	e0bffe17 	ldw	r2,-8(fp)
 2012cb8:	18800015 	stw	r2,0(r3)
      }
      rc = i;
 2012cbc:	e0bffe17 	ldw	r2,-8(fp)
 2012cc0:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 2012cc4:	00000606 	br	2012ce0 <alt_get_fd+0xb4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 2012cc8:	e0bffe17 	ldw	r2,-8(fp)
 2012ccc:	10800044 	addi	r2,r2,1
 2012cd0:	e0bffe15 	stw	r2,-8(fp)
 2012cd4:	e0bffe17 	ldw	r2,-8(fp)
 2012cd8:	10800810 	cmplti	r2,r2,32
 2012cdc:	103fdd1e 	bne	r2,zero,2012c54 <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 2012ce0:	e0bffd17 	ldw	r2,-12(fp)
}
 2012ce4:	e037883a 	mov	sp,fp
 2012ce8:	dfc00217 	ldw	ra,8(sp)
 2012cec:	df000117 	ldw	fp,4(sp)
 2012cf0:	dc000017 	ldw	r16,0(sp)
 2012cf4:	dec00304 	addi	sp,sp,12
 2012cf8:	f800283a 	ret

02012cfc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 2012cfc:	deffff04 	addi	sp,sp,-4
 2012d00:	df000015 	stw	fp,0(sp)
 2012d04:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 2012d08:	e037883a 	mov	sp,fp
 2012d0c:	df000017 	ldw	fp,0(sp)
 2012d10:	dec00104 	addi	sp,sp,4
 2012d14:	f800283a 	ret

02012d18 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 2012d18:	defff904 	addi	sp,sp,-28
 2012d1c:	dfc00615 	stw	ra,24(sp)
 2012d20:	df000515 	stw	fp,20(sp)
 2012d24:	df000504 	addi	fp,sp,20
 2012d28:	e13ffc15 	stw	r4,-16(fp)
 2012d2c:	e17ffd15 	stw	r5,-12(fp)
 2012d30:	e1bffe15 	stw	r6,-8(fp)
 2012d34:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 2012d38:	e0800217 	ldw	r2,8(fp)
 2012d3c:	d8800015 	stw	r2,0(sp)
 2012d40:	e13ffc17 	ldw	r4,-16(fp)
 2012d44:	e17ffd17 	ldw	r5,-12(fp)
 2012d48:	e1bffe17 	ldw	r6,-8(fp)
 2012d4c:	e1ffff17 	ldw	r7,-4(fp)
 2012d50:	2012eec0 	call	2012eec <alt_iic_isr_register>
}  
 2012d54:	e037883a 	mov	sp,fp
 2012d58:	dfc00117 	ldw	ra,4(sp)
 2012d5c:	df000017 	ldw	fp,0(sp)
 2012d60:	dec00204 	addi	sp,sp,8
 2012d64:	f800283a 	ret

02012d68 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 2012d68:	defff904 	addi	sp,sp,-28
 2012d6c:	df000615 	stw	fp,24(sp)
 2012d70:	df000604 	addi	fp,sp,24
 2012d74:	e13ffe15 	stw	r4,-8(fp)
 2012d78:	e17fff15 	stw	r5,-4(fp)
 2012d7c:	e0bfff17 	ldw	r2,-4(fp)
 2012d80:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2012d84:	0005303a 	rdctl	r2,status
 2012d88:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2012d8c:	e0fffb17 	ldw	r3,-20(fp)
 2012d90:	00bfff84 	movi	r2,-2
 2012d94:	1884703a 	and	r2,r3,r2
 2012d98:	1001703a 	wrctl	status,r2
  
  return context;
 2012d9c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 2012da0:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
 2012da4:	e0fffc17 	ldw	r3,-16(fp)
 2012da8:	00800044 	movi	r2,1
 2012dac:	10c4983a 	sll	r2,r2,r3
 2012db0:	1007883a 	mov	r3,r2
 2012db4:	00808074 	movhi	r2,513
 2012db8:	109d7404 	addi	r2,r2,30160
 2012dbc:	10800017 	ldw	r2,0(r2)
 2012dc0:	1886b03a 	or	r3,r3,r2
 2012dc4:	00808074 	movhi	r2,513
 2012dc8:	109d7404 	addi	r2,r2,30160
 2012dcc:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 2012dd0:	00808074 	movhi	r2,513
 2012dd4:	109d7404 	addi	r2,r2,30160
 2012dd8:	10800017 	ldw	r2,0(r2)
 2012ddc:	100170fa 	wrctl	ienable,r2
 2012de0:	e0bffd17 	ldw	r2,-12(fp)
 2012de4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2012de8:	e0bffa17 	ldw	r2,-24(fp)
 2012dec:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 2012df0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
 2012df4:	e037883a 	mov	sp,fp
 2012df8:	df000017 	ldw	fp,0(sp)
 2012dfc:	dec00104 	addi	sp,sp,4
 2012e00:	f800283a 	ret

02012e04 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 2012e04:	defff904 	addi	sp,sp,-28
 2012e08:	df000615 	stw	fp,24(sp)
 2012e0c:	df000604 	addi	fp,sp,24
 2012e10:	e13ffe15 	stw	r4,-8(fp)
 2012e14:	e17fff15 	stw	r5,-4(fp)
 2012e18:	e0bfff17 	ldw	r2,-4(fp)
 2012e1c:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2012e20:	0005303a 	rdctl	r2,status
 2012e24:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2012e28:	e0fffb17 	ldw	r3,-20(fp)
 2012e2c:	00bfff84 	movi	r2,-2
 2012e30:	1884703a 	and	r2,r3,r2
 2012e34:	1001703a 	wrctl	status,r2
  
  return context;
 2012e38:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 2012e3c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
 2012e40:	e0fffc17 	ldw	r3,-16(fp)
 2012e44:	00800044 	movi	r2,1
 2012e48:	10c4983a 	sll	r2,r2,r3
 2012e4c:	0084303a 	nor	r2,zero,r2
 2012e50:	1007883a 	mov	r3,r2
 2012e54:	00808074 	movhi	r2,513
 2012e58:	109d7404 	addi	r2,r2,30160
 2012e5c:	10800017 	ldw	r2,0(r2)
 2012e60:	1886703a 	and	r3,r3,r2
 2012e64:	00808074 	movhi	r2,513
 2012e68:	109d7404 	addi	r2,r2,30160
 2012e6c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 2012e70:	00808074 	movhi	r2,513
 2012e74:	109d7404 	addi	r2,r2,30160
 2012e78:	10800017 	ldw	r2,0(r2)
 2012e7c:	100170fa 	wrctl	ienable,r2
 2012e80:	e0bffd17 	ldw	r2,-12(fp)
 2012e84:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2012e88:	e0bffa17 	ldw	r2,-24(fp)
 2012e8c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 2012e90:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
 2012e94:	e037883a 	mov	sp,fp
 2012e98:	df000017 	ldw	fp,0(sp)
 2012e9c:	dec00104 	addi	sp,sp,4
 2012ea0:	f800283a 	ret

02012ea4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 2012ea4:	defffc04 	addi	sp,sp,-16
 2012ea8:	df000315 	stw	fp,12(sp)
 2012eac:	df000304 	addi	fp,sp,12
 2012eb0:	e13ffe15 	stw	r4,-8(fp)
 2012eb4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 2012eb8:	000530fa 	rdctl	r2,ienable
 2012ebc:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 2012ec0:	e0ffff17 	ldw	r3,-4(fp)
 2012ec4:	00800044 	movi	r2,1
 2012ec8:	10c4983a 	sll	r2,r2,r3
 2012ecc:	1007883a 	mov	r3,r2
 2012ed0:	e0bffd17 	ldw	r2,-12(fp)
 2012ed4:	1884703a 	and	r2,r3,r2
 2012ed8:	1004c03a 	cmpne	r2,r2,zero
}
 2012edc:	e037883a 	mov	sp,fp
 2012ee0:	df000017 	ldw	fp,0(sp)
 2012ee4:	dec00104 	addi	sp,sp,4
 2012ee8:	f800283a 	ret

02012eec <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 2012eec:	defff404 	addi	sp,sp,-48
 2012ef0:	dfc00b15 	stw	ra,44(sp)
 2012ef4:	df000a15 	stw	fp,40(sp)
 2012ef8:	df000a04 	addi	fp,sp,40
 2012efc:	e13ffb15 	stw	r4,-20(fp)
 2012f00:	e17ffc15 	stw	r5,-16(fp)
 2012f04:	e1bffd15 	stw	r6,-12(fp)
 2012f08:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
 2012f0c:	00bffa84 	movi	r2,-22
 2012f10:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 2012f14:	e0bffc17 	ldw	r2,-16(fp)
 2012f18:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 2012f1c:	e0bff917 	ldw	r2,-28(fp)
 2012f20:	10800808 	cmpgei	r2,r2,32
 2012f24:	1000291e 	bne	r2,zero,2012fcc <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2012f28:	0005303a 	rdctl	r2,status
 2012f2c:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2012f30:	e0fff717 	ldw	r3,-36(fp)
 2012f34:	00bfff84 	movi	r2,-2
 2012f38:	1884703a 	and	r2,r3,r2
 2012f3c:	1001703a 	wrctl	status,r2
  
  return context;
 2012f40:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 2012f44:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
 2012f48:	e0bff917 	ldw	r2,-28(fp)
 2012f4c:	00c08074 	movhi	r3,513
 2012f50:	18ddc104 	addi	r3,r3,30468
 2012f54:	100490fa 	slli	r2,r2,3
 2012f58:	10c7883a 	add	r3,r2,r3
 2012f5c:	e0bffd17 	ldw	r2,-12(fp)
 2012f60:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
 2012f64:	e0bff917 	ldw	r2,-28(fp)
 2012f68:	00c08074 	movhi	r3,513
 2012f6c:	18ddc104 	addi	r3,r3,30468
 2012f70:	100490fa 	slli	r2,r2,3
 2012f74:	10c5883a 	add	r2,r2,r3
 2012f78:	10c00104 	addi	r3,r2,4
 2012f7c:	e0bffe17 	ldw	r2,-8(fp)
 2012f80:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 2012f84:	e0bffd17 	ldw	r2,-12(fp)
 2012f88:	1005003a 	cmpeq	r2,r2,zero
 2012f8c:	1000051e 	bne	r2,zero,2012fa4 <alt_iic_isr_register+0xb8>
 2012f90:	e17ff917 	ldw	r5,-28(fp)
 2012f94:	e13ffb17 	ldw	r4,-20(fp)
 2012f98:	2012d680 	call	2012d68 <alt_ic_irq_enable>
 2012f9c:	e0bfff15 	stw	r2,-4(fp)
 2012fa0:	00000406 	br	2012fb4 <alt_iic_isr_register+0xc8>
 2012fa4:	e17ff917 	ldw	r5,-28(fp)
 2012fa8:	e13ffb17 	ldw	r4,-20(fp)
 2012fac:	2012e040 	call	2012e04 <alt_ic_irq_disable>
 2012fb0:	e0bfff15 	stw	r2,-4(fp)
 2012fb4:	e0bfff17 	ldw	r2,-4(fp)
 2012fb8:	e0bffa15 	stw	r2,-24(fp)
 2012fbc:	e0bff817 	ldw	r2,-32(fp)
 2012fc0:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2012fc4:	e0bff617 	ldw	r2,-40(fp)
 2012fc8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 2012fcc:	e0bffa17 	ldw	r2,-24(fp)
}
 2012fd0:	e037883a 	mov	sp,fp
 2012fd4:	dfc00117 	ldw	ra,4(sp)
 2012fd8:	df000017 	ldw	fp,0(sp)
 2012fdc:	dec00204 	addi	sp,sp,8
 2012fe0:	f800283a 	ret

02012fe4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 2012fe4:	defff804 	addi	sp,sp,-32
 2012fe8:	dfc00715 	stw	ra,28(sp)
 2012fec:	df000615 	stw	fp,24(sp)
 2012ff0:	dc000515 	stw	r16,20(sp)
 2012ff4:	df000504 	addi	fp,sp,20
 2012ff8:	e13ffc15 	stw	r4,-16(fp)
 2012ffc:	e17ffd15 	stw	r5,-12(fp)
 2013000:	e1bffe15 	stw	r6,-8(fp)
 2013004:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 2013008:	e13ffd17 	ldw	r4,-12(fp)
 201300c:	e17ffe17 	ldw	r5,-8(fp)
 2013010:	e1bfff17 	ldw	r6,-4(fp)
 2013014:	2010b3c0 	call	2010b3c <open>
 2013018:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 201301c:	e0bffb17 	ldw	r2,-20(fp)
 2013020:	1004803a 	cmplt	r2,r2,zero
 2013024:	10001f1e 	bne	r2,zero,20130a4 <alt_open_fd+0xc0>
  {
    fd->dev      = alt_fd_list[old].dev;
 2013028:	e13ffb17 	ldw	r4,-20(fp)
 201302c:	04008074 	movhi	r16,513
 2013030:	84120704 	addi	r16,r16,18460
 2013034:	01400304 	movi	r5,12
 2013038:	2000abc0 	call	2000abc <__mulsi3>
 201303c:	1405883a 	add	r2,r2,r16
 2013040:	10c00017 	ldw	r3,0(r2)
 2013044:	e0bffc17 	ldw	r2,-16(fp)
 2013048:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 201304c:	e13ffb17 	ldw	r4,-20(fp)
 2013050:	04008074 	movhi	r16,513
 2013054:	84120704 	addi	r16,r16,18460
 2013058:	01400304 	movi	r5,12
 201305c:	2000abc0 	call	2000abc <__mulsi3>
 2013060:	1405883a 	add	r2,r2,r16
 2013064:	10800104 	addi	r2,r2,4
 2013068:	10c00017 	ldw	r3,0(r2)
 201306c:	e0bffc17 	ldw	r2,-16(fp)
 2013070:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 2013074:	e13ffb17 	ldw	r4,-20(fp)
 2013078:	04008074 	movhi	r16,513
 201307c:	84120704 	addi	r16,r16,18460
 2013080:	01400304 	movi	r5,12
 2013084:	2000abc0 	call	2000abc <__mulsi3>
 2013088:	1405883a 	add	r2,r2,r16
 201308c:	10800204 	addi	r2,r2,8
 2013090:	10c00017 	ldw	r3,0(r2)
 2013094:	e0bffc17 	ldw	r2,-16(fp)
 2013098:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 201309c:	e13ffb17 	ldw	r4,-20(fp)
 20130a0:	2010eac0 	call	2010eac <alt_release_fd>
  }
} 
 20130a4:	e037883a 	mov	sp,fp
 20130a8:	dfc00217 	ldw	ra,8(sp)
 20130ac:	df000117 	ldw	fp,4(sp)
 20130b0:	dc000017 	ldw	r16,0(sp)
 20130b4:	dec00304 	addi	sp,sp,12
 20130b8:	f800283a 	ret

020130bc <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 20130bc:	defffb04 	addi	sp,sp,-20
 20130c0:	dfc00415 	stw	ra,16(sp)
 20130c4:	df000315 	stw	fp,12(sp)
 20130c8:	df000304 	addi	fp,sp,12
 20130cc:	e13ffd15 	stw	r4,-12(fp)
 20130d0:	e17ffe15 	stw	r5,-8(fp)
 20130d4:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 20130d8:	01008074 	movhi	r4,513
 20130dc:	21120a04 	addi	r4,r4,18472
 20130e0:	e17ffd17 	ldw	r5,-12(fp)
 20130e4:	01800044 	movi	r6,1
 20130e8:	01c07fc4 	movi	r7,511
 20130ec:	2012fe40 	call	2012fe4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 20130f0:	01008074 	movhi	r4,513
 20130f4:	21120704 	addi	r4,r4,18460
 20130f8:	e17ffe17 	ldw	r5,-8(fp)
 20130fc:	000d883a 	mov	r6,zero
 2013100:	01c07fc4 	movi	r7,511
 2013104:	2012fe40 	call	2012fe4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 2013108:	01008074 	movhi	r4,513
 201310c:	21120d04 	addi	r4,r4,18484
 2013110:	e17fff17 	ldw	r5,-4(fp)
 2013114:	01800044 	movi	r6,1
 2013118:	01c07fc4 	movi	r7,511
 201311c:	2012fe40 	call	2012fe4 <alt_open_fd>
}  
 2013120:	e037883a 	mov	sp,fp
 2013124:	dfc00117 	ldw	ra,4(sp)
 2013128:	df000017 	ldw	fp,0(sp)
 201312c:	dec00204 	addi	sp,sp,8
 2013130:	f800283a 	ret

02013134 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 2013134:	defffa04 	addi	sp,sp,-24
 2013138:	df000515 	stw	fp,20(sp)
 201313c:	df000504 	addi	fp,sp,20
 2013140:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2013144:	0005303a 	rdctl	r2,status
 2013148:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 201314c:	e0fffd17 	ldw	r3,-12(fp)
 2013150:	00bfff84 	movi	r2,-2
 2013154:	1884703a 	and	r2,r3,r2
 2013158:	1001703a 	wrctl	status,r2
  
  return context;
 201315c:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 2013160:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
 2013164:	e0bfff17 	ldw	r2,-4(fp)
 2013168:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 201316c:	e0bffc17 	ldw	r2,-16(fp)
 2013170:	10c00017 	ldw	r3,0(r2)
 2013174:	e0bffc17 	ldw	r2,-16(fp)
 2013178:	10800117 	ldw	r2,4(r2)
 201317c:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
 2013180:	e0bffc17 	ldw	r2,-16(fp)
 2013184:	10c00117 	ldw	r3,4(r2)
 2013188:	e0bffc17 	ldw	r2,-16(fp)
 201318c:	10800017 	ldw	r2,0(r2)
 2013190:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 2013194:	e0fffc17 	ldw	r3,-16(fp)
 2013198:	e0bffc17 	ldw	r2,-16(fp)
 201319c:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
 20131a0:	e0fffc17 	ldw	r3,-16(fp)
 20131a4:	e0bffc17 	ldw	r2,-16(fp)
 20131a8:	18800015 	stw	r2,0(r3)
 20131ac:	e0bffe17 	ldw	r2,-8(fp)
 20131b0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 20131b4:	e0bffb17 	ldw	r2,-20(fp)
 20131b8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 20131bc:	e037883a 	mov	sp,fp
 20131c0:	df000017 	ldw	fp,0(sp)
 20131c4:	dec00104 	addi	sp,sp,4
 20131c8:	f800283a 	ret

020131cc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 20131cc:	defffb04 	addi	sp,sp,-20
 20131d0:	dfc00415 	stw	ra,16(sp)
 20131d4:	df000315 	stw	fp,12(sp)
 20131d8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 20131dc:	d0a02117 	ldw	r2,-32636(gp)
 20131e0:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 20131e4:	d0a6ed17 	ldw	r2,-25676(gp)
 20131e8:	10800044 	addi	r2,r2,1
 20131ec:	d0a6ed15 	stw	r2,-25676(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 20131f0:	00003106 	br	20132b8 <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
 20131f4:	e0bffe17 	ldw	r2,-8(fp)
 20131f8:	10800017 	ldw	r2,0(r2)
 20131fc:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 2013200:	e0bffe17 	ldw	r2,-8(fp)
 2013204:	10800403 	ldbu	r2,16(r2)
 2013208:	10803fcc 	andi	r2,r2,255
 201320c:	1005003a 	cmpeq	r2,r2,zero
 2013210:	1000051e 	bne	r2,zero,2013228 <alt_tick+0x5c>
 2013214:	d0a6ed17 	ldw	r2,-25676(gp)
 2013218:	1004c03a 	cmpne	r2,r2,zero
 201321c:	1000021e 	bne	r2,zero,2013228 <alt_tick+0x5c>
    {
      alarm->rollover = 0;
 2013220:	e0bffe17 	ldw	r2,-8(fp)
 2013224:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 2013228:	e0bffe17 	ldw	r2,-8(fp)
 201322c:	10c00217 	ldw	r3,8(r2)
 2013230:	d0a6ed17 	ldw	r2,-25676(gp)
 2013234:	10c01e36 	bltu	r2,r3,20132b0 <alt_tick+0xe4>
 2013238:	e0bffe17 	ldw	r2,-8(fp)
 201323c:	10800403 	ldbu	r2,16(r2)
 2013240:	10803fcc 	andi	r2,r2,255
 2013244:	1004c03a 	cmpne	r2,r2,zero
 2013248:	1000191e 	bne	r2,zero,20132b0 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
 201324c:	e0bffe17 	ldw	r2,-8(fp)
 2013250:	10c00317 	ldw	r3,12(r2)
 2013254:	e0bffe17 	ldw	r2,-8(fp)
 2013258:	11000517 	ldw	r4,20(r2)
 201325c:	183ee83a 	callr	r3
 2013260:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 2013264:	e0bffd17 	ldw	r2,-12(fp)
 2013268:	1004c03a 	cmpne	r2,r2,zero
 201326c:	1000031e 	bne	r2,zero,201327c <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
 2013270:	e13ffe17 	ldw	r4,-8(fp)
 2013274:	20131340 	call	2013134 <alt_alarm_stop>
 2013278:	00000d06 	br	20132b0 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
 201327c:	e0bffe17 	ldw	r2,-8(fp)
 2013280:	10c00217 	ldw	r3,8(r2)
 2013284:	e0bffd17 	ldw	r2,-12(fp)
 2013288:	1887883a 	add	r3,r3,r2
 201328c:	e0bffe17 	ldw	r2,-8(fp)
 2013290:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 2013294:	e0bffe17 	ldw	r2,-8(fp)
 2013298:	10c00217 	ldw	r3,8(r2)
 201329c:	d0a6ed17 	ldw	r2,-25676(gp)
 20132a0:	1880032e 	bgeu	r3,r2,20132b0 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
 20132a4:	e0fffe17 	ldw	r3,-8(fp)
 20132a8:	00800044 	movi	r2,1
 20132ac:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
 20132b0:	e0bfff17 	ldw	r2,-4(fp)
 20132b4:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 20132b8:	d0e02104 	addi	r3,gp,-32636
 20132bc:	e0bffe17 	ldw	r2,-8(fp)
 20132c0:	10ffcc1e 	bne	r2,r3,20131f4 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
 20132c4:	e037883a 	mov	sp,fp
 20132c8:	dfc00117 	ldw	ra,4(sp)
 20132cc:	df000017 	ldw	fp,0(sp)
 20132d0:	dec00204 	addi	sp,sp,8
 20132d4:	f800283a 	ret

020132d8 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 20132d8:	deffff04 	addi	sp,sp,-4
 20132dc:	df000015 	stw	fp,0(sp)
 20132e0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 20132e4:	000170fa 	wrctl	ienable,zero
}
 20132e8:	e037883a 	mov	sp,fp
 20132ec:	df000017 	ldw	fp,0(sp)
 20132f0:	dec00104 	addi	sp,sp,4
 20132f4:	f800283a 	ret

020132f8 <atexit>:
 20132f8:	200b883a 	mov	r5,r4
 20132fc:	000d883a 	mov	r6,zero
 2013300:	0009883a 	mov	r4,zero
 2013304:	000f883a 	mov	r7,zero
 2013308:	20133b81 	jmpi	20133b8 <__register_exitproc>

0201330c <exit>:
 201330c:	defffe04 	addi	sp,sp,-8
 2013310:	000b883a 	mov	r5,zero
 2013314:	dc000015 	stw	r16,0(sp)
 2013318:	dfc00115 	stw	ra,4(sp)
 201331c:	2021883a 	mov	r16,r4
 2013320:	20134f00 	call	20134f0 <__call_exitprocs>
 2013324:	00808074 	movhi	r2,513
 2013328:	10968a04 	addi	r2,r2,23080
 201332c:	11000017 	ldw	r4,0(r2)
 2013330:	20800f17 	ldw	r2,60(r4)
 2013334:	10000126 	beq	r2,zero,201333c <exit+0x30>
 2013338:	103ee83a 	callr	r2
 201333c:	8009883a 	mov	r4,r16
 2013340:	20137680 	call	2013768 <_exit>

02013344 <memcmp>:
 2013344:	00c000c4 	movi	r3,3
 2013348:	1980032e 	bgeu	r3,r6,2013358 <memcmp+0x14>
 201334c:	2144b03a 	or	r2,r4,r5
 2013350:	10c4703a 	and	r2,r2,r3
 2013354:	10000f26 	beq	r2,zero,2013394 <memcmp+0x50>
 2013358:	31ffffc4 	addi	r7,r6,-1
 201335c:	3000061e 	bne	r6,zero,2013378 <memcmp+0x34>
 2013360:	00000a06 	br	201338c <memcmp+0x48>
 2013364:	39ffffc4 	addi	r7,r7,-1
 2013368:	00bfffc4 	movi	r2,-1
 201336c:	21000044 	addi	r4,r4,1
 2013370:	29400044 	addi	r5,r5,1
 2013374:	38800526 	beq	r7,r2,201338c <memcmp+0x48>
 2013378:	20c00003 	ldbu	r3,0(r4)
 201337c:	28800003 	ldbu	r2,0(r5)
 2013380:	18bff826 	beq	r3,r2,2013364 <memcmp+0x20>
 2013384:	1885c83a 	sub	r2,r3,r2
 2013388:	f800283a 	ret
 201338c:	0005883a 	mov	r2,zero
 2013390:	f800283a 	ret
 2013394:	180f883a 	mov	r7,r3
 2013398:	20c00017 	ldw	r3,0(r4)
 201339c:	28800017 	ldw	r2,0(r5)
 20133a0:	18bfed1e 	bne	r3,r2,2013358 <memcmp+0x14>
 20133a4:	31bfff04 	addi	r6,r6,-4
 20133a8:	21000104 	addi	r4,r4,4
 20133ac:	29400104 	addi	r5,r5,4
 20133b0:	39bff936 	bltu	r7,r6,2013398 <memcmp+0x54>
 20133b4:	003fe806 	br	2013358 <memcmp+0x14>

020133b8 <__register_exitproc>:
 20133b8:	defffa04 	addi	sp,sp,-24
 20133bc:	00808074 	movhi	r2,513
 20133c0:	10968a04 	addi	r2,r2,23080
 20133c4:	dc000015 	stw	r16,0(sp)
 20133c8:	14000017 	ldw	r16,0(r2)
 20133cc:	dd000415 	stw	r20,16(sp)
 20133d0:	2829883a 	mov	r20,r5
 20133d4:	81405217 	ldw	r5,328(r16)
 20133d8:	dcc00315 	stw	r19,12(sp)
 20133dc:	dc800215 	stw	r18,8(sp)
 20133e0:	dc400115 	stw	r17,4(sp)
 20133e4:	dfc00515 	stw	ra,20(sp)
 20133e8:	2023883a 	mov	r17,r4
 20133ec:	3027883a 	mov	r19,r6
 20133f0:	3825883a 	mov	r18,r7
 20133f4:	28002526 	beq	r5,zero,201348c <__register_exitproc+0xd4>
 20133f8:	29000117 	ldw	r4,4(r5)
 20133fc:	008007c4 	movi	r2,31
 2013400:	11002716 	blt	r2,r4,20134a0 <__register_exitproc+0xe8>
 2013404:	8800101e 	bne	r17,zero,2013448 <__register_exitproc+0x90>
 2013408:	2105883a 	add	r2,r4,r4
 201340c:	1085883a 	add	r2,r2,r2
 2013410:	20c00044 	addi	r3,r4,1
 2013414:	1145883a 	add	r2,r2,r5
 2013418:	0009883a 	mov	r4,zero
 201341c:	15000215 	stw	r20,8(r2)
 2013420:	28c00115 	stw	r3,4(r5)
 2013424:	2005883a 	mov	r2,r4
 2013428:	dfc00517 	ldw	ra,20(sp)
 201342c:	dd000417 	ldw	r20,16(sp)
 2013430:	dcc00317 	ldw	r19,12(sp)
 2013434:	dc800217 	ldw	r18,8(sp)
 2013438:	dc400117 	ldw	r17,4(sp)
 201343c:	dc000017 	ldw	r16,0(sp)
 2013440:	dec00604 	addi	sp,sp,24
 2013444:	f800283a 	ret
 2013448:	29802204 	addi	r6,r5,136
 201344c:	00800044 	movi	r2,1
 2013450:	110e983a 	sll	r7,r2,r4
 2013454:	30c04017 	ldw	r3,256(r6)
 2013458:	2105883a 	add	r2,r4,r4
 201345c:	1085883a 	add	r2,r2,r2
 2013460:	1185883a 	add	r2,r2,r6
 2013464:	19c6b03a 	or	r3,r3,r7
 2013468:	14802015 	stw	r18,128(r2)
 201346c:	14c00015 	stw	r19,0(r2)
 2013470:	00800084 	movi	r2,2
 2013474:	30c04015 	stw	r3,256(r6)
 2013478:	88bfe31e 	bne	r17,r2,2013408 <__register_exitproc+0x50>
 201347c:	30804117 	ldw	r2,260(r6)
 2013480:	11c4b03a 	or	r2,r2,r7
 2013484:	30804115 	stw	r2,260(r6)
 2013488:	003fdf06 	br	2013408 <__register_exitproc+0x50>
 201348c:	00808074 	movhi	r2,513
 2013490:	109e0104 	addi	r2,r2,30724
 2013494:	100b883a 	mov	r5,r2
 2013498:	80805215 	stw	r2,328(r16)
 201349c:	003fd606 	br	20133f8 <__register_exitproc+0x40>
 20134a0:	00808034 	movhi	r2,512
 20134a4:	10887004 	addi	r2,r2,8640
 20134a8:	1000021e 	bne	r2,zero,20134b4 <__register_exitproc+0xfc>
 20134ac:	013fffc4 	movi	r4,-1
 20134b0:	003fdc06 	br	2013424 <__register_exitproc+0x6c>
 20134b4:	01006404 	movi	r4,400
 20134b8:	103ee83a 	callr	r2
 20134bc:	1007883a 	mov	r3,r2
 20134c0:	103ffa26 	beq	r2,zero,20134ac <__register_exitproc+0xf4>
 20134c4:	80805217 	ldw	r2,328(r16)
 20134c8:	180b883a 	mov	r5,r3
 20134cc:	18000115 	stw	zero,4(r3)
 20134d0:	18800015 	stw	r2,0(r3)
 20134d4:	80c05215 	stw	r3,328(r16)
 20134d8:	18006215 	stw	zero,392(r3)
 20134dc:	18006315 	stw	zero,396(r3)
 20134e0:	0009883a 	mov	r4,zero
 20134e4:	883fc826 	beq	r17,zero,2013408 <__register_exitproc+0x50>
 20134e8:	003fd706 	br	2013448 <__register_exitproc+0x90>

020134ec <register_fini>:
 20134ec:	f800283a 	ret

020134f0 <__call_exitprocs>:
 20134f0:	00808074 	movhi	r2,513
 20134f4:	10968a04 	addi	r2,r2,23080
 20134f8:	10800017 	ldw	r2,0(r2)
 20134fc:	defff304 	addi	sp,sp,-52
 2013500:	df000b15 	stw	fp,44(sp)
 2013504:	d8800115 	stw	r2,4(sp)
 2013508:	00808034 	movhi	r2,512
 201350c:	10886b04 	addi	r2,r2,8620
 2013510:	1005003a 	cmpeq	r2,r2,zero
 2013514:	d8800215 	stw	r2,8(sp)
 2013518:	d8800117 	ldw	r2,4(sp)
 201351c:	dd400815 	stw	r21,32(sp)
 2013520:	dd000715 	stw	r20,28(sp)
 2013524:	10805204 	addi	r2,r2,328
 2013528:	dfc00c15 	stw	ra,48(sp)
 201352c:	ddc00a15 	stw	r23,40(sp)
 2013530:	dd800915 	stw	r22,36(sp)
 2013534:	dcc00615 	stw	r19,24(sp)
 2013538:	dc800515 	stw	r18,20(sp)
 201353c:	dc400415 	stw	r17,16(sp)
 2013540:	dc000315 	stw	r16,12(sp)
 2013544:	282b883a 	mov	r21,r5
 2013548:	2039883a 	mov	fp,r4
 201354c:	d8800015 	stw	r2,0(sp)
 2013550:	2829003a 	cmpeq	r20,r5,zero
 2013554:	d8800117 	ldw	r2,4(sp)
 2013558:	14405217 	ldw	r17,328(r2)
 201355c:	88001026 	beq	r17,zero,20135a0 <__call_exitprocs+0xb0>
 2013560:	ddc00017 	ldw	r23,0(sp)
 2013564:	88800117 	ldw	r2,4(r17)
 2013568:	8c802204 	addi	r18,r17,136
 201356c:	143fffc4 	addi	r16,r2,-1
 2013570:	80000916 	blt	r16,zero,2013598 <__call_exitprocs+0xa8>
 2013574:	05bfffc4 	movi	r22,-1
 2013578:	a000151e 	bne	r20,zero,20135d0 <__call_exitprocs+0xe0>
 201357c:	8409883a 	add	r4,r16,r16
 2013580:	2105883a 	add	r2,r4,r4
 2013584:	1485883a 	add	r2,r2,r18
 2013588:	10c02017 	ldw	r3,128(r2)
 201358c:	a8c01126 	beq	r21,r3,20135d4 <__call_exitprocs+0xe4>
 2013590:	843fffc4 	addi	r16,r16,-1
 2013594:	85bff81e 	bne	r16,r22,2013578 <__call_exitprocs+0x88>
 2013598:	d8800217 	ldw	r2,8(sp)
 201359c:	10003126 	beq	r2,zero,2013664 <__call_exitprocs+0x174>
 20135a0:	dfc00c17 	ldw	ra,48(sp)
 20135a4:	df000b17 	ldw	fp,44(sp)
 20135a8:	ddc00a17 	ldw	r23,40(sp)
 20135ac:	dd800917 	ldw	r22,36(sp)
 20135b0:	dd400817 	ldw	r21,32(sp)
 20135b4:	dd000717 	ldw	r20,28(sp)
 20135b8:	dcc00617 	ldw	r19,24(sp)
 20135bc:	dc800517 	ldw	r18,20(sp)
 20135c0:	dc400417 	ldw	r17,16(sp)
 20135c4:	dc000317 	ldw	r16,12(sp)
 20135c8:	dec00d04 	addi	sp,sp,52
 20135cc:	f800283a 	ret
 20135d0:	8409883a 	add	r4,r16,r16
 20135d4:	88c00117 	ldw	r3,4(r17)
 20135d8:	2105883a 	add	r2,r4,r4
 20135dc:	1445883a 	add	r2,r2,r17
 20135e0:	18ffffc4 	addi	r3,r3,-1
 20135e4:	11800217 	ldw	r6,8(r2)
 20135e8:	1c001526 	beq	r3,r16,2013640 <__call_exitprocs+0x150>
 20135ec:	10000215 	stw	zero,8(r2)
 20135f0:	303fe726 	beq	r6,zero,2013590 <__call_exitprocs+0xa0>
 20135f4:	00c00044 	movi	r3,1
 20135f8:	1c06983a 	sll	r3,r3,r16
 20135fc:	90804017 	ldw	r2,256(r18)
 2013600:	8cc00117 	ldw	r19,4(r17)
 2013604:	1884703a 	and	r2,r3,r2
 2013608:	10001426 	beq	r2,zero,201365c <__call_exitprocs+0x16c>
 201360c:	90804117 	ldw	r2,260(r18)
 2013610:	1884703a 	and	r2,r3,r2
 2013614:	10000c1e 	bne	r2,zero,2013648 <__call_exitprocs+0x158>
 2013618:	2105883a 	add	r2,r4,r4
 201361c:	1485883a 	add	r2,r2,r18
 2013620:	11400017 	ldw	r5,0(r2)
 2013624:	e009883a 	mov	r4,fp
 2013628:	303ee83a 	callr	r6
 201362c:	88800117 	ldw	r2,4(r17)
 2013630:	98bfc81e 	bne	r19,r2,2013554 <__call_exitprocs+0x64>
 2013634:	b8800017 	ldw	r2,0(r23)
 2013638:	147fd526 	beq	r2,r17,2013590 <__call_exitprocs+0xa0>
 201363c:	003fc506 	br	2013554 <__call_exitprocs+0x64>
 2013640:	8c000115 	stw	r16,4(r17)
 2013644:	003fea06 	br	20135f0 <__call_exitprocs+0x100>
 2013648:	2105883a 	add	r2,r4,r4
 201364c:	1485883a 	add	r2,r2,r18
 2013650:	11000017 	ldw	r4,0(r2)
 2013654:	303ee83a 	callr	r6
 2013658:	003ff406 	br	201362c <__call_exitprocs+0x13c>
 201365c:	303ee83a 	callr	r6
 2013660:	003ff206 	br	201362c <__call_exitprocs+0x13c>
 2013664:	88800117 	ldw	r2,4(r17)
 2013668:	1000081e 	bne	r2,zero,201368c <__call_exitprocs+0x19c>
 201366c:	89000017 	ldw	r4,0(r17)
 2013670:	20000726 	beq	r4,zero,2013690 <__call_exitprocs+0x1a0>
 2013674:	b9000015 	stw	r4,0(r23)
 2013678:	8809883a 	mov	r4,r17
 201367c:	20021ac0 	call	20021ac <free>
 2013680:	bc400017 	ldw	r17,0(r23)
 2013684:	883fb71e 	bne	r17,zero,2013564 <__call_exitprocs+0x74>
 2013688:	003fc506 	br	20135a0 <__call_exitprocs+0xb0>
 201368c:	89000017 	ldw	r4,0(r17)
 2013690:	882f883a 	mov	r23,r17
 2013694:	2023883a 	mov	r17,r4
 2013698:	883fb21e 	bne	r17,zero,2013564 <__call_exitprocs+0x74>
 201369c:	003fc006 	br	20135a0 <__call_exitprocs+0xb0>

020136a0 <__floatundidf>:
 20136a0:	defffb04 	addi	sp,sp,-20
 20136a4:	dc800215 	stw	r18,8(sp)
 20136a8:	2025883a 	mov	r18,r4
 20136ac:	2809883a 	mov	r4,r5
 20136b0:	dfc00415 	stw	ra,16(sp)
 20136b4:	dc400115 	stw	r17,4(sp)
 20136b8:	dc000015 	stw	r16,0(sp)
 20136bc:	dcc00315 	stw	r19,12(sp)
 20136c0:	200f8000 	call	200f800 <__floatunsidf>
 20136c4:	100d883a 	mov	r6,r2
 20136c8:	180f883a 	mov	r7,r3
 20136cc:	0005883a 	mov	r2,zero
 20136d0:	00d07c34 	movhi	r3,16880
 20136d4:	380b883a 	mov	r5,r7
 20136d8:	3009883a 	mov	r4,r6
 20136dc:	180f883a 	mov	r7,r3
 20136e0:	100d883a 	mov	r6,r2
 20136e4:	200ec700 	call	200ec70 <__muldf3>
 20136e8:	9009883a 	mov	r4,r18
 20136ec:	1021883a 	mov	r16,r2
 20136f0:	1823883a 	mov	r17,r3
 20136f4:	200f8000 	call	200f800 <__floatunsidf>
 20136f8:	880b883a 	mov	r5,r17
 20136fc:	8009883a 	mov	r4,r16
 2013700:	180f883a 	mov	r7,r3
 2013704:	100d883a 	mov	r6,r2
 2013708:	200ebfc0 	call	200ebfc <__adddf3>
 201370c:	dfc00417 	ldw	ra,16(sp)
 2013710:	dcc00317 	ldw	r19,12(sp)
 2013714:	dc800217 	ldw	r18,8(sp)
 2013718:	dc400117 	ldw	r17,4(sp)
 201371c:	dc000017 	ldw	r16,0(sp)
 2013720:	dec00504 	addi	sp,sp,20
 2013724:	f800283a 	ret

02013728 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
 2013728:	defffd04 	addi	sp,sp,-12
 201372c:	df000215 	stw	fp,8(sp)
 2013730:	df000204 	addi	fp,sp,8
 2013734:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
 2013738:	e0bfff17 	ldw	r2,-4(fp)
 201373c:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 2013740:	e0bffe17 	ldw	r2,-8(fp)
 2013744:	1005003a 	cmpeq	r2,r2,zero
 2013748:	1000021e 	bne	r2,zero,2013754 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
 201374c:	002af070 	cmpltui	zero,zero,43969
 2013750:	00000106 	br	2013758 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
 2013754:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
 2013758:	e037883a 	mov	sp,fp
 201375c:	df000017 	ldw	fp,0(sp)
 2013760:	dec00104 	addi	sp,sp,4
 2013764:	f800283a 	ret

02013768 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 2013768:	defffd04 	addi	sp,sp,-12
 201376c:	dfc00215 	stw	ra,8(sp)
 2013770:	df000115 	stw	fp,4(sp)
 2013774:	df000104 	addi	fp,sp,4
 2013778:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
 201377c:	e13fff17 	ldw	r4,-4(fp)
 2013780:	20137280 	call	2013728 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 2013784:	003fff06 	br	2013784 <_exit+0x1c>
 2013788:	020134ec 	andhi	r8,zero,1235
